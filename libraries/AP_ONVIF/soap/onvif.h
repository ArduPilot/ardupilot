// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* onvif.h
   Generated by wsdl2h 2.8.114 from http://www.onvif.org/onvif/ver10/device/wsdl/devicemgmt.wsdl http://www.onvif.org/onvif/ver10/media/wsdl/media.wsdl http://www.onvif.org/onvif/ver20/ptz/wsdl/ptz.wsdl and typemap.dat
   2021-06-23 15:17:02 GMT

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE.

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

/**

@page page_notes Notes

@note HINTS:
 - Run soapcpp2 on onvif.h to generate the SOAP/XML processing logic:
   Use soapcpp2 -I to specify paths for #import
   Use soapcpp2 -j to generate improved proxy and server classes.
   Use soapcpp2 -r to generate a report.
 - Edit 'typemap.dat' to control namespace bindings and type mappings:
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Run Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -c to generate pure C code.
 - Use wsdl2h -R to include the REST operations defined by the WSDLs.
 - Use wsdl2h -O3 or -O4 to optimize by removing unused schema components.
 - Use wsdl2h -d to enable DOM support for xsd:any and xsd:anyType.
 - Use wsdl2h -F to simulate struct-type derivation in C (also works in C++).
 - Use wsdl2h -f to generate flat C++ class hierarchy, removes type derivation.
 - Use wsdl2h -g to generate top-level root elements with readers and writers.
 - Use wsdl2h -U to map XML names to C++ Unicode identifiers instead of _xNNNN.
 - Use wsdl2h -u to disable the generation of unions.
 - Use wsdl2h -L to remove this @note and all other @note comments.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE GENERATED soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The wsdl2h tool and its generated software are released under the GPL.
This software is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt c++,w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * $SIZE typemap variable:                                                    *
 *   int                                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "xop.h"	// xop = <http://www.w3.org/2004/08/xop/include>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>
#import "wsse.h"
/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to 'typemap.dat' then rerun wsdl2h (use wsdl2h -t typemap.dat):

tds = "http://www.onvif.org/ver10/device/wsdl"
tt = "http://www.onvif.org/ver10/schema"
wsnt = "http://docs.oasis-open.org/wsn/b-2"
wsrfbf = "http://docs.oasis-open.org/wsrf/bf-2"
wstop = "http://docs.oasis-open.org/wsn/t-1"
trt = "http://www.onvif.org/ver10/media/wsdl"
tptz = "http://www.onvif.org/ver20/ptz/wsdl"

*/

#define SOAP_NAMESPACE_OF_tds	"http://www.onvif.org/ver10/device/wsdl"
//gsoap tds   schema namespace:	http://www.onvif.org/ver10/device/wsdl
//gsoap tds   schema elementForm:	qualified
//gsoap tds   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tt	"http://www.onvif.org/ver10/schema"
//gsoap tt    schema namespace:	http://www.onvif.org/ver10/schema
//gsoap tt    schema elementForm:	qualified
//gsoap tt    schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsnt	"http://docs.oasis-open.org/wsn/b-2"
//gsoap wsnt  schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap wsnt  schema elementForm:	qualified
//gsoap wsnt  schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wsrfbf	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap wsrfbf schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap wsrfbf schema elementForm:	qualified
//gsoap wsrfbf schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_wstop	"http://docs.oasis-open.org/wsn/t-1"
//gsoap wstop schema namespace:	http://docs.oasis-open.org/wsn/t-1
//gsoap wstop schema elementForm:	qualified
//gsoap wstop schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_trt	"http://www.onvif.org/ver10/media/wsdl"
//gsoap trt   schema namespace:	http://www.onvif.org/ver10/media/wsdl
//gsoap trt   schema elementForm:	qualified
//gsoap trt   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_tptz	"http://www.onvif.org/ver20/ptz/wsdl"
//gsoap tptz  schema namespace:	http://www.onvif.org/ver20/ptz/wsdl
//gsoap tptz  schema elementForm:	qualified
//gsoap tptz  schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD root type "xs:anyType".
///
/// @note Call virtual method soap_type() generated by soapcpp2 to check runtime type is SOAP_TYPE_xsd__anyType or a derived type.  Use option -P to remove this class.
class xsd__anyType
{ public:
    _XML __item;
    struct soap *soap;
};

/// Built-in type "SOAP-ENV:Envelope".
struct SOAP_ENV__Envelope { struct SOAP_ENV__Header *SOAP_ENV__Header; _XML SOAP_ENV__Body; };

/// Built-in type "xs:base64Binary".
class xsd__base64Binary
{ public:
    unsigned char *__ptr;
    int __size;
    char *id, *type, *options; // NOTE: non-NULL for DIME/MIME/MTOM XOP attachments only
};

/// Built-in type "xs:hexBinary".
class xsd__hexBinary
{ public:
    unsigned char *__ptr;
    int __size;
};

// Imported type ""http://www.w3.org/2005/08/addressing":EndpointReferenceType" defined by wsa5__EndpointReferenceType.

/// Primitive built-in type "xs:NCName".
typedef char* xsd__NCName;

/// Primitive built-in type "xs:anySimpleType".
typedef char* xsd__anySimpleType;

/// Primitive built-in type "xs:anyURI".
typedef char* xsd__anyURI;

/// Primitive built-in type "xs:duration".
typedef char* xsd__duration;

/// Primitive built-in type "xs:integer".
typedef char* xsd__integer;

/// Primitive built-in type "xs:nonNegativeInteger".
typedef char* xsd__nonNegativeInteger;

/// Primitive built-in type "xs:token".
typedef char* xsd__token;

// Imported element ""http://www.w3.org/2004/08/xop/include":Include" declared as _xop__Include.

/// Built-in attribute "xml:lang".
typedef char* _xml__lang;


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


class tds__Service;

class tds__DeviceServiceCapabilities;

class tds__NetworkCapabilities;

class tds__SecurityCapabilities;

class tds__SystemCapabilities;

class tds__MiscCapabilities;

class tds__UserCredential;

class tds__StorageConfigurationData;

class tds__StorageConfiguration;

class _tds__GetServices;

class _tds__GetServicesResponse;

class _tds__GetServiceCapabilities;

class _tds__GetServiceCapabilitiesResponse;

class _tds__GetDeviceInformation;

class _tds__GetDeviceInformationResponse;

class _tds__SetSystemDateAndTime;

class _tds__SetSystemDateAndTimeResponse;

class _tds__GetSystemDateAndTime;

class _tds__GetSystemDateAndTimeResponse;

class _tds__SetSystemFactoryDefault;

class _tds__SetSystemFactoryDefaultResponse;

class _tds__UpgradeSystemFirmware;

class _tds__UpgradeSystemFirmwareResponse;

class _tds__SystemReboot;

class _tds__SystemRebootResponse;

class _tds__RestoreSystem;

class _tds__RestoreSystemResponse;

class _tds__GetSystemBackup;

class _tds__GetSystemBackupResponse;

class _tds__GetSystemSupportInformation;

class _tds__GetSystemSupportInformationResponse;

class _tds__GetSystemLog;

class _tds__GetSystemLogResponse;

class _tds__GetScopes;

class _tds__GetScopesResponse;

class _tds__SetScopes;

class _tds__SetScopesResponse;

class _tds__AddScopes;

class _tds__AddScopesResponse;

class _tds__RemoveScopes;

class _tds__RemoveScopesResponse;

class _tds__GetDiscoveryMode;

class _tds__GetDiscoveryModeResponse;

class _tds__SetDiscoveryMode;

class _tds__SetDiscoveryModeResponse;

class _tds__GetRemoteDiscoveryMode;

class _tds__GetRemoteDiscoveryModeResponse;

class _tds__SetRemoteDiscoveryMode;

class _tds__SetRemoteDiscoveryModeResponse;

class _tds__GetDPAddresses;

class _tds__GetDPAddressesResponse;

class _tds__SetDPAddresses;

class _tds__SetDPAddressesResponse;

class _tds__GetEndpointReference;

class _tds__GetEndpointReferenceResponse;

class _tds__GetRemoteUser;

class _tds__GetRemoteUserResponse;

class _tds__SetRemoteUser;

class _tds__SetRemoteUserResponse;

class _tds__GetUsers;

class _tds__GetUsersResponse;

class _tds__CreateUsers;

class _tds__CreateUsersResponse;

class _tds__DeleteUsers;

class _tds__DeleteUsersResponse;

class _tds__SetUser;

class _tds__SetUserResponse;

class _tds__GetWsdlUrl;

class _tds__GetWsdlUrlResponse;

class _tds__GetCapabilities;

class _tds__GetCapabilitiesResponse;

class _tds__GetHostname;

class _tds__GetHostnameResponse;

class _tds__SetHostname;

class _tds__SetHostnameResponse;

class _tds__SetHostnameFromDHCP;

class _tds__SetHostnameFromDHCPResponse;

class _tds__GetDNS;

class _tds__GetDNSResponse;

class _tds__SetDNS;

class _tds__SetDNSResponse;

class _tds__GetNTP;

class _tds__GetNTPResponse;

class _tds__SetNTP;

class _tds__SetNTPResponse;

class _tds__GetDynamicDNS;

class _tds__GetDynamicDNSResponse;

class _tds__SetDynamicDNS;

class _tds__SetDynamicDNSResponse;

class _tds__GetNetworkInterfaces;

class _tds__GetNetworkInterfacesResponse;

class _tds__SetNetworkInterfaces;

class _tds__SetNetworkInterfacesResponse;

class _tds__GetNetworkProtocols;

class _tds__GetNetworkProtocolsResponse;

class _tds__SetNetworkProtocols;

class _tds__SetNetworkProtocolsResponse;

class _tds__GetNetworkDefaultGateway;

class _tds__GetNetworkDefaultGatewayResponse;

class _tds__SetNetworkDefaultGateway;

class _tds__SetNetworkDefaultGatewayResponse;

class _tds__GetZeroConfiguration;

class _tds__GetZeroConfigurationResponse;

class _tds__SetZeroConfiguration;

class _tds__SetZeroConfigurationResponse;

class _tds__GetIPAddressFilter;

class _tds__GetIPAddressFilterResponse;

class _tds__SetIPAddressFilter;

class _tds__SetIPAddressFilterResponse;

class _tds__AddIPAddressFilter;

class _tds__AddIPAddressFilterResponse;

class _tds__RemoveIPAddressFilter;

class _tds__RemoveIPAddressFilterResponse;

class _tds__GetAccessPolicy;

class _tds__GetAccessPolicyResponse;

class _tds__SetAccessPolicy;

class _tds__SetAccessPolicyResponse;

class _tds__CreateCertificate;

class _tds__CreateCertificateResponse;

class _tds__GetCertificates;

class _tds__GetCertificatesResponse;

class _tds__GetCertificatesStatus;

class _tds__GetCertificatesStatusResponse;

class _tds__SetCertificatesStatus;

class _tds__SetCertificatesStatusResponse;

class _tds__DeleteCertificates;

class _tds__DeleteCertificatesResponse;

class _tds__GetPkcs10Request;

class _tds__GetPkcs10RequestResponse;

class _tds__LoadCertificates;

class _tds__LoadCertificatesResponse;

class _tds__GetClientCertificateMode;

class _tds__GetClientCertificateModeResponse;

class _tds__SetClientCertificateMode;

class _tds__SetClientCertificateModeResponse;

class _tds__GetCACertificates;

class _tds__GetCACertificatesResponse;

class _tds__LoadCertificateWithPrivateKey;

class _tds__LoadCertificateWithPrivateKeyResponse;

class _tds__GetCertificateInformation;

class _tds__GetCertificateInformationResponse;

class _tds__LoadCACertificates;

class _tds__LoadCACertificatesResponse;

class _tds__CreateDot1XConfiguration;

class _tds__CreateDot1XConfigurationResponse;

class _tds__SetDot1XConfiguration;

class _tds__SetDot1XConfigurationResponse;

class _tds__GetDot1XConfiguration;

class _tds__GetDot1XConfigurationResponse;

class _tds__GetDot1XConfigurations;

class _tds__GetDot1XConfigurationsResponse;

class _tds__DeleteDot1XConfiguration;

class _tds__DeleteDot1XConfigurationResponse;

class _tds__GetRelayOutputs;

class _tds__GetRelayOutputsResponse;

class _tds__SetRelayOutputSettings;

class _tds__SetRelayOutputSettingsResponse;

class _tds__SetRelayOutputState;

class _tds__SetRelayOutputStateResponse;

class _tds__SendAuxiliaryCommand;

class _tds__SendAuxiliaryCommandResponse;

class _tds__GetDot11Capabilities;

class _tds__GetDot11CapabilitiesResponse;

class _tds__GetDot11Status;

class _tds__GetDot11StatusResponse;

class _tds__ScanAvailableDot11Networks;

class _tds__ScanAvailableDot11NetworksResponse;

class _tds__GetSystemUris;

class _tds__GetSystemUrisResponse;

class _tds__StartFirmwareUpgrade;

class _tds__StartFirmwareUpgradeResponse;

class _tds__StartSystemRestore;

class _tds__StartSystemRestoreResponse;

class _tds__GetStorageConfigurations;

class _tds__GetStorageConfigurationsResponse;

class _tds__CreateStorageConfiguration;

class _tds__CreateStorageConfigurationResponse;

class _tds__GetStorageConfiguration;

class _tds__GetStorageConfigurationResponse;

class _tds__SetStorageConfiguration;

class _tds__SetStorageConfigurationResponse;

class _tds__DeleteStorageConfiguration;

class _tds__DeleteStorageConfigurationResponse;

class _tds__GetGeoLocation;

class _tds__GetGeoLocationResponse;

class _tds__SetGeoLocation;

class _tds__SetGeoLocationResponse;

class _tds__DeleteGeoLocation;

class _tds__DeleteGeoLocationResponse;

class tt__DeviceEntity;

class tt__IntRectangle;

class tt__IntRectangleRange;

class tt__FloatRange;

class tt__DurationRange;

class tt__IntItems;

class tt__VideoSource;

class tt__VideoSourceExtension;

class tt__VideoSourceExtension2;

class tt__AudioSource;

class tt__Profile;

class tt__ProfileExtension;

class tt__ProfileExtension2;

class tt__ConfigurationEntity;

class tt__VideoSourceConfiguration;

class tt__VideoSourceConfigurationExtension;

class tt__VideoSourceConfigurationExtension2;

class tt__Rotate;

class tt__RotateExtension;

class tt__LensProjection;

class tt__LensOffset;

class tt__LensDescription;

class tt__VideoSourceConfigurationOptions;

class tt__VideoSourceConfigurationOptionsExtension;

class tt__VideoSourceConfigurationOptionsExtension2;

class tt__RotateOptions;

class tt__RotateOptionsExtension;

class tt__SceneOrientation;

class tt__VideoEncoderConfiguration;

class tt__VideoResolution;

class tt__VideoRateControl;

class tt__Mpeg4Configuration;

class tt__H264Configuration;

class tt__VideoEncoderConfigurationOptions;

class tt__VideoEncoderOptionsExtension;

class tt__VideoEncoderOptionsExtension2;

class tt__JpegOptions;

class tt__JpegOptions2;

class tt__Mpeg4Options;

class tt__Mpeg4Options2;

class tt__H264Options;

class tt__H264Options2;

class tt__AudioSourceConfiguration;

class tt__AudioSourceConfigurationOptions;

class tt__AudioSourceOptionsExtension;

class tt__AudioEncoderConfiguration;

class tt__AudioEncoderConfigurationOptions;

class tt__AudioEncoderConfigurationOption;

class tt__VideoAnalyticsConfiguration;

class tt__MetadataConfiguration;

class tt__MetadataConfigurationExtension;

class tt__PTZFilter;

class tt__EventSubscription;

class tt__MetadataConfigurationOptions;

class tt__MetadataConfigurationOptionsExtension;

class tt__MetadataConfigurationOptionsExtension2;

class tt__PTZStatusFilterOptions;

class tt__PTZStatusFilterOptionsExtension;

class tt__AudioOutput;

class tt__AudioOutputConfiguration;

class tt__AudioOutputConfigurationOptions;

class tt__AudioDecoderConfiguration;

class tt__AudioDecoderConfigurationOptions;

class tt__G711DecOptions;

class tt__AACDecOptions;

class tt__G726DecOptions;

class tt__AudioDecoderConfigurationOptionsExtension;

class tt__MulticastConfiguration;

class tt__StreamSetup;

class tt__Transport;

class tt__MediaUri;

class tt__Scope;

class tt__NetworkInterface;

class tt__NetworkInterfaceExtension;

class tt__Dot3Configuration;

class tt__NetworkInterfaceExtension2;

class tt__NetworkInterfaceLink;

class tt__NetworkInterfaceConnectionSetting;

class tt__NetworkInterfaceInfo;

class tt__IPv6NetworkInterface;

class tt__IPv4NetworkInterface;

class tt__IPv4Configuration;

class tt__IPv6Configuration;

class tt__IPv6ConfigurationExtension;

class tt__NetworkProtocol;

class tt__NetworkProtocolExtension;

class tt__NetworkHost;

class tt__NetworkHostExtension;

class tt__IPAddress;

class tt__PrefixedIPv4Address;

class tt__PrefixedIPv6Address;

class tt__HostnameInformation;

class tt__HostnameInformationExtension;

class tt__DNSInformation;

class tt__DNSInformationExtension;

class tt__NTPInformation;

class tt__NTPInformationExtension;

class tt__DynamicDNSInformation;

class tt__DynamicDNSInformationExtension;

class tt__NetworkInterfaceSetConfiguration;

class tt__NetworkInterfaceSetConfigurationExtension;

class tt__IPv6NetworkInterfaceSetConfiguration;

class tt__IPv4NetworkInterfaceSetConfiguration;

class tt__NetworkGateway;

class tt__NetworkZeroConfiguration;

class tt__NetworkZeroConfigurationExtension;

class tt__NetworkZeroConfigurationExtension2;

class tt__IPAddressFilter;

class tt__IPAddressFilterExtension;

class tt__Dot11Configuration;

class tt__Dot11SecurityConfiguration;

class tt__Dot11SecurityConfigurationExtension;

class tt__Dot11PSKSet;

class tt__Dot11PSKSetExtension;

class tt__NetworkInterfaceSetConfigurationExtension2;

class tt__Dot11Capabilities;

class tt__Dot11Status;

class tt__Dot11AvailableNetworks;

class tt__Dot11AvailableNetworksExtension;

class tt__Capabilities;

class tt__CapabilitiesExtension;

class tt__CapabilitiesExtension2;

class tt__AnalyticsCapabilities;

class tt__DeviceCapabilities;

class tt__DeviceCapabilitiesExtension;

class tt__EventCapabilities;

class tt__IOCapabilities;

class tt__IOCapabilitiesExtension;

class tt__IOCapabilitiesExtension2;

class tt__MediaCapabilities;

class tt__MediaCapabilitiesExtension;

class tt__RealTimeStreamingCapabilities;

class tt__RealTimeStreamingCapabilitiesExtension;

class tt__ProfileCapabilities;

class tt__NetworkCapabilities;

class tt__NetworkCapabilitiesExtension;

class tt__NetworkCapabilitiesExtension2;

class tt__SecurityCapabilities;

class tt__SecurityCapabilitiesExtension;

class tt__SecurityCapabilitiesExtension2;

class tt__SystemCapabilities;

class tt__SystemCapabilitiesExtension;

class tt__SystemCapabilitiesExtension2;

class tt__OnvifVersion;

class tt__ImagingCapabilities;

class tt__PTZCapabilities;

class tt__DeviceIOCapabilities;

class tt__DisplayCapabilities;

class tt__RecordingCapabilities;

class tt__SearchCapabilities;

class tt__ReplayCapabilities;

class tt__ReceiverCapabilities;

class tt__AnalyticsDeviceCapabilities;

class tt__AnalyticsDeviceExtension;

class tt__SystemLog;

class tt__SupportInformation;

class tt__BinaryData;

class tt__AttachmentData;

class tt__BackupFile;

class tt__SystemLogUriList;

class tt__SystemLogUri;

class tt__SystemDateTime;

class tt__SystemDateTimeExtension;

class tt__DateTime;

class tt__Date;

class tt__Time;

class tt__TimeZone;

class tt__RemoteUser;

class tt__User;

class tt__UserExtension;

class tt__Certificate;

class tt__CertificateStatus;

class tt__CertificateWithPrivateKey;

class tt__CertificateInformation;

class tt__CertificateUsage;

class tt__CertificateInformationExtension;

class tt__Dot1XConfiguration;

class tt__Dot1XConfigurationExtension;

class tt__EAPMethodConfiguration;

class tt__EapMethodExtension;

class tt__TLSConfiguration;

class tt__RelayOutputSettings;

class tt__RelayOutput;

class tt__PTZNode;

class tt__PTZNodeExtension;

class tt__PTZNodeExtension2;

class tt__PTZPresetTourSupported;

class tt__PTZPresetTourSupportedExtension;

class tt__PTZConfiguration;

class tt__PTZConfigurationExtension;

class tt__PTZConfigurationExtension2;

class tt__PTControlDirection;

class tt__PTControlDirectionExtension;

class tt__EFlip;

class tt__Reverse;

class tt__PTZConfigurationOptions;

class tt__PTZConfigurationOptions2;

class tt__PTControlDirectionOptions;

class tt__PTControlDirectionOptionsExtension;

class tt__EFlipOptions;

class tt__EFlipOptionsExtension;

class tt__ReverseOptions;

class tt__ReverseOptionsExtension;

class tt__PanTiltLimits;

class tt__ZoomLimits;

class tt__PTZSpaces;

class tt__PTZSpacesExtension;

class tt__Space2DDescription;

class tt__Space1DDescription;

class tt__PTZSpeed;

class tt__PTZPreset;

class tt__PresetTour;

class tt__PTZPresetTourExtension;

class tt__PTZPresetTourSpot;

class tt__PTZPresetTourSpotExtension;

class tt__PTZPresetTourPresetDetail;

class tt__PTZPresetTourTypeExtension;

class tt__PTZPresetTourStatus;

class tt__PTZPresetTourStatusExtension;

class tt__PTZPresetTourStartingCondition;

class tt__PTZPresetTourStartingConditionExtension;

class tt__PTZPresetTourOptions;

class tt__PTZPresetTourSpotOptions;

class tt__PTZPresetTourPresetDetailOptions;

class tt__PTZPresetTourPresetDetailOptionsExtension;

class tt__PTZPresetTourStartingConditionOptions;

class tt__PTZPresetTourStartingConditionOptionsExtension;

class tt__FocusConfiguration;

class tt__ImagingSettings;

class tt__ImagingSettingsExtension;

class tt__Exposure;

class tt__WideDynamicRange;

class tt__BacklightCompensation;

class tt__WhiteBalance;

class tt__ImagingSettings20;

class tt__ImagingSettingsExtension20;

class tt__ImagingSettingsExtension202;

class tt__ImagingSettingsExtension203;

class tt__ImagingSettingsExtension204;

class tt__ImageStabilization;

class tt__ImageStabilizationExtension;

class tt__IrCutFilterAutoAdjustment;

class tt__IrCutFilterAutoAdjustmentExtension;

class tt__WideDynamicRange20;

class tt__BacklightCompensation20;

class tt__Exposure20;

class tt__ToneCompensation;

class tt__ToneCompensationExtension;

class tt__Defogging;

class tt__DefoggingExtension;

class tt__NoiseReduction;

class tt__WhiteBalance20;

class tt__WhiteBalance20Extension;

class tt__FocusConfiguration20;

class tt__FocusConfiguration20Extension;

class tt__ItemList;

class tt__ItemListExtension;

class tt__AnalyticsEngineConfiguration;

class tt__AnalyticsEngineConfigurationExtension;

class tt__RuleEngineConfiguration;

class tt__RuleEngineConfigurationExtension;

class tt__Config;

class tt__DateTimeRange;

class tt__OSDReference;

class tt__OSDPosConfiguration;

class tt__OSDPosConfigurationExtension;

class tt__OSDColor;

class tt__OSDTextConfiguration;

class tt__OSDTextConfigurationExtension;

class tt__OSDImgConfiguration;

class tt__OSDImgConfigurationExtension;

class tt__ColorspaceRange;

class tt__ColorOptions;

class tt__OSDColorOptions;

class tt__OSDColorOptionsExtension;

class tt__OSDTextOptions;

class tt__OSDTextOptionsExtension;

class tt__OSDImgOptions;

class tt__OSDImgOptionsExtension;

class tt__OSDConfiguration;

class tt__OSDConfigurationExtension;

class tt__MaximumNumberOfOSDs;

class tt__OSDConfigurationOptions;

class tt__OSDConfigurationOptionsExtension;

class tt__IntRange;

class tt__Vector2D;

class tt__Vector1D;

class tt__PTZVector;

class tt__PTZStatus;

class tt__PTZMoveStatus;

class tt__Vector;

class tt__Rectangle;

class tt__Color;

class tt__GeoLocation;

class tt__GeoOrientation;

class tt__LocalLocation;

class tt__LocalOrientation;

class tt__LocationEntity;

class wsnt__FilterType;

class trt__Capabilities;

class trt__ProfileCapabilities;

class trt__StreamingCapabilities;

class trt__VideoSourceMode;

class trt__VideoSourceModeExtension;

class _trt__GetServiceCapabilities;

class _trt__GetServiceCapabilitiesResponse;

class _trt__GetVideoSources;

class _trt__GetVideoSourcesResponse;

class _trt__GetAudioSources;

class _trt__GetAudioSourcesResponse;

class _trt__GetAudioOutputs;

class _trt__GetAudioOutputsResponse;

class _trt__CreateProfile;

class _trt__CreateProfileResponse;

class _trt__GetProfile;

class _trt__GetProfileResponse;

class _trt__GetProfiles;

class _trt__GetProfilesResponse;

class _trt__AddVideoEncoderConfiguration;

class _trt__AddVideoEncoderConfigurationResponse;

class _trt__RemoveVideoEncoderConfiguration;

class _trt__RemoveVideoEncoderConfigurationResponse;

class _trt__AddVideoSourceConfiguration;

class _trt__AddVideoSourceConfigurationResponse;

class _trt__RemoveVideoSourceConfiguration;

class _trt__RemoveVideoSourceConfigurationResponse;

class _trt__AddAudioEncoderConfiguration;

class _trt__AddAudioEncoderConfigurationResponse;

class _trt__RemoveAudioEncoderConfiguration;

class _trt__RemoveAudioEncoderConfigurationResponse;

class _trt__AddAudioSourceConfiguration;

class _trt__AddAudioSourceConfigurationResponse;

class _trt__RemoveAudioSourceConfiguration;

class _trt__RemoveAudioSourceConfigurationResponse;

class _trt__AddPTZConfiguration;

class _trt__AddPTZConfigurationResponse;

class _trt__RemovePTZConfiguration;

class _trt__RemovePTZConfigurationResponse;

class _trt__AddVideoAnalyticsConfiguration;

class _trt__AddVideoAnalyticsConfigurationResponse;

class _trt__RemoveVideoAnalyticsConfiguration;

class _trt__RemoveVideoAnalyticsConfigurationResponse;

class _trt__AddMetadataConfiguration;

class _trt__AddMetadataConfigurationResponse;

class _trt__RemoveMetadataConfiguration;

class _trt__RemoveMetadataConfigurationResponse;

class _trt__AddAudioOutputConfiguration;

class _trt__AddAudioOutputConfigurationResponse;

class _trt__RemoveAudioOutputConfiguration;

class _trt__RemoveAudioOutputConfigurationResponse;

class _trt__AddAudioDecoderConfiguration;

class _trt__AddAudioDecoderConfigurationResponse;

class _trt__RemoveAudioDecoderConfiguration;

class _trt__RemoveAudioDecoderConfigurationResponse;

class _trt__DeleteProfile;

class _trt__DeleteProfileResponse;

class _trt__GetVideoEncoderConfigurations;

class _trt__GetVideoEncoderConfigurationsResponse;

class _trt__GetVideoSourceConfigurations;

class _trt__GetVideoSourceConfigurationsResponse;

class _trt__GetAudioEncoderConfigurations;

class _trt__GetAudioEncoderConfigurationsResponse;

class _trt__GetAudioSourceConfigurations;

class _trt__GetAudioSourceConfigurationsResponse;

class _trt__GetVideoAnalyticsConfigurations;

class _trt__GetVideoAnalyticsConfigurationsResponse;

class _trt__GetMetadataConfigurations;

class _trt__GetMetadataConfigurationsResponse;

class _trt__GetAudioOutputConfigurations;

class _trt__GetAudioOutputConfigurationsResponse;

class _trt__GetAudioDecoderConfigurations;

class _trt__GetAudioDecoderConfigurationsResponse;

class _trt__GetVideoSourceConfiguration;

class _trt__GetVideoSourceConfigurationResponse;

class _trt__GetVideoEncoderConfiguration;

class _trt__GetVideoEncoderConfigurationResponse;

class _trt__GetAudioSourceConfiguration;

class _trt__GetAudioSourceConfigurationResponse;

class _trt__GetAudioEncoderConfiguration;

class _trt__GetAudioEncoderConfigurationResponse;

class _trt__GetVideoAnalyticsConfiguration;

class _trt__GetVideoAnalyticsConfigurationResponse;

class _trt__GetMetadataConfiguration;

class _trt__GetMetadataConfigurationResponse;

class _trt__GetAudioOutputConfiguration;

class _trt__GetAudioOutputConfigurationResponse;

class _trt__GetAudioDecoderConfiguration;

class _trt__GetAudioDecoderConfigurationResponse;

class _trt__GetCompatibleVideoEncoderConfigurations;

class _trt__GetCompatibleVideoEncoderConfigurationsResponse;

class _trt__GetCompatibleVideoSourceConfigurations;

class _trt__GetCompatibleVideoSourceConfigurationsResponse;

class _trt__GetCompatibleAudioEncoderConfigurations;

class _trt__GetCompatibleAudioEncoderConfigurationsResponse;

class _trt__GetCompatibleAudioSourceConfigurations;

class _trt__GetCompatibleAudioSourceConfigurationsResponse;

class _trt__GetCompatibleVideoAnalyticsConfigurations;

class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse;

class _trt__GetCompatibleMetadataConfigurations;

class _trt__GetCompatibleMetadataConfigurationsResponse;

class _trt__GetCompatibleAudioOutputConfigurations;

class _trt__GetCompatibleAudioOutputConfigurationsResponse;

class _trt__GetCompatibleAudioDecoderConfigurations;

class _trt__GetCompatibleAudioDecoderConfigurationsResponse;

class _trt__SetVideoEncoderConfiguration;

class _trt__SetVideoEncoderConfigurationResponse;

class _trt__SetVideoSourceConfiguration;

class _trt__SetVideoSourceConfigurationResponse;

class _trt__SetAudioEncoderConfiguration;

class _trt__SetAudioEncoderConfigurationResponse;

class _trt__SetAudioSourceConfiguration;

class _trt__SetAudioSourceConfigurationResponse;

class _trt__SetVideoAnalyticsConfiguration;

class _trt__SetVideoAnalyticsConfigurationResponse;

class _trt__SetMetadataConfiguration;

class _trt__SetMetadataConfigurationResponse;

class _trt__SetAudioOutputConfiguration;

class _trt__SetAudioOutputConfigurationResponse;

class _trt__SetAudioDecoderConfiguration;

class _trt__SetAudioDecoderConfigurationResponse;

class _trt__GetVideoSourceConfigurationOptions;

class _trt__GetVideoSourceConfigurationOptionsResponse;

class _trt__GetVideoEncoderConfigurationOptions;

class _trt__GetVideoEncoderConfigurationOptionsResponse;

class _trt__GetAudioSourceConfigurationOptions;

class _trt__GetAudioSourceConfigurationOptionsResponse;

class _trt__GetAudioEncoderConfigurationOptions;

class _trt__GetAudioEncoderConfigurationOptionsResponse;

class _trt__GetMetadataConfigurationOptions;

class _trt__GetMetadataConfigurationOptionsResponse;

class _trt__GetAudioOutputConfigurationOptions;

class _trt__GetAudioOutputConfigurationOptionsResponse;

class _trt__GetAudioDecoderConfigurationOptions;

class _trt__GetAudioDecoderConfigurationOptionsResponse;

class _trt__GetGuaranteedNumberOfVideoEncoderInstances;

class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse;

class _trt__GetStreamUri;

class _trt__GetStreamUriResponse;

class _trt__StartMulticastStreaming;

class _trt__StartMulticastStreamingResponse;

class _trt__StopMulticastStreaming;

class _trt__StopMulticastStreamingResponse;

class _trt__SetSynchronizationPoint;

class _trt__SetSynchronizationPointResponse;

class _trt__GetSnapshotUri;

class _trt__GetSnapshotUriResponse;

class _trt__GetVideoSourceModes;

class _trt__GetVideoSourceModesResponse;

class _trt__SetVideoSourceMode;

class _trt__SetVideoSourceModeResponse;

class _trt__GetOSDs;

class _trt__GetOSDsResponse;

class _trt__GetOSD;

class _trt__GetOSDResponse;

class _trt__SetOSD;

class _trt__SetOSDResponse;

class _trt__GetOSDOptions;

class _trt__GetOSDOptionsResponse;

class _trt__CreateOSD;

class _trt__CreateOSDResponse;

class _trt__DeleteOSD;

class _trt__DeleteOSDResponse;

class tptz__Capabilities;

class _tptz__GetServiceCapabilities;

class _tptz__GetServiceCapabilitiesResponse;

class _tptz__GetNodes;

class _tptz__GetNodesResponse;

class _tptz__GetNode;

class _tptz__GetNodeResponse;

class _tptz__GetConfigurations;

class _tptz__GetConfigurationsResponse;

class _tptz__GetConfiguration;

class _tptz__GetConfigurationResponse;

class _tptz__SetConfiguration;

class _tptz__SetConfigurationResponse;

class _tptz__GetConfigurationOptions;

class _tptz__GetConfigurationOptionsResponse;

class _tptz__SendAuxiliaryCommand;

class _tptz__SendAuxiliaryCommandResponse;

class _tptz__GetPresets;

class _tptz__GetPresetsResponse;

class _tptz__SetPreset;

class _tptz__SetPresetResponse;

class _tptz__RemovePreset;

class _tptz__RemovePresetResponse;

class _tptz__GotoPreset;

class _tptz__GotoPresetResponse;

class _tptz__GetStatus;

class _tptz__GetStatusResponse;

class _tptz__GotoHomePosition;

class _tptz__GotoHomePositionResponse;

class _tptz__SetHomePosition;

class _tptz__SetHomePositionResponse;

class _tptz__ContinuousMove;

class _tptz__ContinuousMoveResponse;

class _tptz__RelativeMove;

class _tptz__RelativeMoveResponse;

class _tptz__AbsoluteMove;

class _tptz__AbsoluteMoveResponse;

class _tptz__GeoMove;

class _tptz__GeoMoveResponse;

class _tptz__Stop;

class _tptz__StopResponse;

class _tptz__GetPresetTours;

class _tptz__GetPresetToursResponse;

class _tptz__GetPresetTour;

class _tptz__GetPresetTourResponse;

class _tptz__GetPresetTourOptions;

class _tptz__GetPresetTourOptionsResponse;

class _tptz__CreatePresetTour;

class _tptz__CreatePresetTourResponse;

class _tptz__ModifyPresetTour;

class _tptz__ModifyPresetTourResponse;

class _tptz__OperatePresetTour;

class _tptz__OperatePresetTourResponse;

class _tptz__RemovePresetTour;

class _tptz__RemovePresetTourResponse;

class _tptz__GetCompatibleConfigurations;

class _tptz__GetCompatibleConfigurationsResponse;

class _tptz__MoveAndStartTracking;

class _tptz__MoveAndStartTrackingResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef char* tds__EAPMethodTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":IntAttrList is a simpleType containing a whitespace separated list of values of type xs:int.
///
typedef char* tt__IntAttrList;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":FloatAttrList is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":StringAttrList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef char* tt__StringAttrList;

/// @brief "http://www.onvif.org/ver10/schema":StringList is a simpleType containing a whitespace separated list of values of type xs:string.
///
typedef char* tt__StringList;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReferenceTokenList is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":EncodingTypes is a simpleType containing a whitespace separated list of values of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
///
typedef char* trt__EncodingTypes;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://www.onvif.org/ver10/device/wsdl":AutoGeoModes is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/device/wsdl":StorageType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":Name is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef char* tt__Name : 64;

/// @brief "http://www.onvif.org/ver10/schema":RotateMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RotateMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RotateMode
{
/// <PRE><BLOCKQUOTE>
///   Enable the Rotate feature. Degree of rotation is specified Degree parameter.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Disable the Rotate feature.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__ON,	///< xs:string value="ON"
/// <PRE><BLOCKQUOTE>
///   Rotate feature is automatically activated by the device.
/// </BLOCKQUOTE></PRE>
///
	tt__RotateMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":SceneOrientationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__SceneOrientationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SceneOrientationMode
{
	tt__SceneOrientationMode__MANUAL,	///< xs:string value="MANUAL"
	tt__SceneOrientationMode__AUTO,	///< xs:string value="AUTO"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SceneOrientationOption is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ViewModes is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoding is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__VideoEncoding__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__VideoEncoding
{
	tt__VideoEncoding__JPEG,	///< xs:string value="JPEG"
	tt__VideoEncoding__MPEG4,	///< xs:string value="MPEG4"
	tt__VideoEncoding__H264,	///< xs:string value="H264"
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Profile is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Mpeg4Profile__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Mpeg4Profile
{
	tt__Mpeg4Profile__SP,	///< xs:string value="SP"
	tt__Mpeg4Profile__ASP,	///< xs:string value="ASP"
};

/// @brief "http://www.onvif.org/ver10/schema":H264Profile is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__H264Profile__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__H264Profile
{
	tt__H264Profile__Baseline,	///< xs:string value="Baseline"
	tt__H264Profile__Main,	///< xs:string value="Main"
	tt__H264Profile__Extended,	///< xs:string value="Extended"
	tt__H264Profile__High,	///< xs:string value="High"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncodingMimeNames is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":VideoEncodingProfiles is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoding is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__AudioEncoding__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AudioEncoding
{
	tt__AudioEncoding__G711,	///< xs:string value="G711"
	tt__AudioEncoding__G726,	///< xs:string value="G726"
	tt__AudioEncoding__AAC,	///< xs:string value="AAC"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioEncodingMimeNames is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MetadataCompressionType is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":StreamType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__StreamType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__StreamType
{
	tt__StreamType__RTP_Unicast,	///< xs:string value="RTP-Unicast"
	tt__StreamType__RTP_Multicast,	///< xs:string value="RTP-Multicast"
};

/// @brief "http://www.onvif.org/ver10/schema":TransportProtocol is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__TransportProtocol__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__TransportProtocol
{
	tt__TransportProtocol__UDP,	///< xs:string value="UDP"
/// <PRE><BLOCKQUOTE>
///   This value is deprecated.
/// </BLOCKQUOTE></PRE>
///
	tt__TransportProtocol__TCP,	///< xs:string value="TCP"
	tt__TransportProtocol__RTSP,	///< xs:string value="RTSP"
	tt__TransportProtocol__HTTP,	///< xs:string value="HTTP"
};

/// @brief "http://www.onvif.org/ver10/schema":ScopeDefinition is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ScopeDefinition__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ScopeDefinition
{
	tt__ScopeDefinition__Fixed,	///< xs:string value="Fixed"
	tt__ScopeDefinition__Configurable,	///< xs:string value="Configurable"
};

/// @brief "http://www.onvif.org/ver10/schema":DiscoveryMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DiscoveryMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DiscoveryMode
{
	tt__DiscoveryMode__Discoverable,	///< xs:string value="Discoverable"
	tt__DiscoveryMode__NonDiscoverable,	///< xs:string value="NonDiscoverable"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority is a simpleType restriction of type xs:integer.
///
/// Value range is 0 to 31.
typedef xsd__integer tt__NetworkInterfaceConfigPriority /* from 0 (inclusive) @warning: could not determine if this type is numeric */ /* to 31 (inclusive) @warning: could not determine if this type is numeric */;

/// @brief "http://www.onvif.org/ver10/schema":Duplex is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Duplex__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Duplex
{
	tt__Duplex__Full,	///< xs:string value="Full"
	tt__Duplex__Half,	///< xs:string value="Half"
};

/// @brief "http://www.onvif.org/ver10/schema":IANA-IfTypes is a simpleType restriction of type xs:int.
///
/// <PRE><BLOCKQUOTE>
///   For valid numbers, please refer to http://www.iana.org/assignments/ianaiftype-mib.
/// </BLOCKQUOTE></PRE>
///
typedef int tt__IANA_IfTypes;

/// @brief "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPv6DHCPConfiguration__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPv6DHCPConfiguration
{
	tt__IPv6DHCPConfiguration__Auto,	///< xs:string value="Auto"
	tt__IPv6DHCPConfiguration__Stateful,	///< xs:string value="Stateful"
	tt__IPv6DHCPConfiguration__Stateless,	///< xs:string value="Stateless"
	tt__IPv6DHCPConfiguration__Off,	///< xs:string value="Off"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkProtocolType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkProtocolType
{
	tt__NetworkProtocolType__HTTP,	///< xs:string value="HTTP"
	tt__NetworkProtocolType__HTTPS,	///< xs:string value="HTTPS"
	tt__NetworkProtocolType__RTSP,	///< xs:string value="RTSP"
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__NetworkHostType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__NetworkHostType
{
	tt__NetworkHostType__IPv4,	///< xs:string value="IPv4"
	tt__NetworkHostType__IPv6,	///< xs:string value="IPv6"
	tt__NetworkHostType__DNS,	///< xs:string value="DNS"
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv4Address;

/// @brief "http://www.onvif.org/ver10/schema":IPv6Address is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__IPv6Address;

/// @brief "http://www.onvif.org/ver10/schema":HwAddress is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__HwAddress;

/// @brief "http://www.onvif.org/ver10/schema":IPType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPType
{
	tt__IPType__IPv4,	///< xs:string value="IPv4"
	tt__IPType__IPv6,	///< xs:string value="IPv6"
};

/// @brief "http://www.onvif.org/ver10/schema":DNSName is a simpleType restriction of type xs:token.
///
typedef xsd__token tt__DNSName;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Domain is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IPAddressFilterType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IPAddressFilterType
{
	tt__IPAddressFilterType__Allow,	///< xs:string value="Allow"
	tt__IPAddressFilterType__Deny,	///< xs:string value="Deny"
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__DynamicDNSType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__DynamicDNSType
{
	tt__DynamicDNSType__NoUpdate,	///< xs:string value="NoUpdate"
	tt__DynamicDNSType__ClientUpdates,	///< xs:string value="ClientUpdates"
	tt__DynamicDNSType__ServerUpdates,	///< xs:string value="ServerUpdates"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SSIDType is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 1 to 32.
typedef xsd__hexBinary tt__Dot11SSIDType 1 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11StationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11StationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11StationMode
{
	tt__Dot11StationMode__Ad_hoc,	///< xs:string value="Ad-hoc"
	tt__Dot11StationMode__Infrastructure,	///< xs:string value="Infrastructure"
	tt__Dot11StationMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SecurityMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SecurityMode
{
	tt__Dot11SecurityMode__None,	///< xs:string value="None"
	tt__Dot11SecurityMode__WEP,	///< xs:string value="WEP"
	tt__Dot11SecurityMode__PSK,	///< xs:string value="PSK"
	tt__Dot11SecurityMode__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11SecurityMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Cipher is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11Cipher__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11Cipher
{
	tt__Dot11Cipher__CCMP,	///< xs:string value="CCMP"
	tt__Dot11Cipher__TKIP,	///< xs:string value="TKIP"
	tt__Dot11Cipher__Any,	///< xs:string value="Any"
	tt__Dot11Cipher__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSK is a simpleType restriction of type xs:hexBinary.
///
/// Length of this content is 32.
typedef xsd__hexBinary tt__Dot11PSK 32 : 32;

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase is a simpleType restriction of type xs:string.
///
/// Content pattern is "[ -~]{8,63}".
typedef char* tt__Dot11PSKPassphrase "[ -~]{8,63}";

/// @brief "http://www.onvif.org/ver10/schema":Dot11SignalStrength is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11SignalStrength__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11SignalStrength
{
	tt__Dot11SignalStrength__None,	///< xs:string value="None"
	tt__Dot11SignalStrength__Very_x0020Bad,	///< xs:string value="Very Bad"
	tt__Dot11SignalStrength__Bad,	///< xs:string value="Bad"
	tt__Dot11SignalStrength__Good,	///< xs:string value="Good"
	tt__Dot11SignalStrength__Very_x0020Good,	///< xs:string value="Very Good"
	tt__Dot11SignalStrength__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AuthAndMangementSuite is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__Dot11AuthAndMangementSuite__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__Dot11AuthAndMangementSuite
{
	tt__Dot11AuthAndMangementSuite__None,	///< xs:string value="None"
	tt__Dot11AuthAndMangementSuite__Dot1X,	///< xs:string value="Dot1X"
	tt__Dot11AuthAndMangementSuite__PSK,	///< xs:string value="PSK"
	tt__Dot11AuthAndMangementSuite__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilityCategory is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__CapabilityCategory__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__CapabilityCategory
{
	tt__CapabilityCategory__All,	///< xs:string value="All"
	tt__CapabilityCategory__Analytics,	///< xs:string value="Analytics"
	tt__CapabilityCategory__Device,	///< xs:string value="Device"
	tt__CapabilityCategory__Events,	///< xs:string value="Events"
	tt__CapabilityCategory__Imaging,	///< xs:string value="Imaging"
	tt__CapabilityCategory__Media,	///< xs:string value="Media"
	tt__CapabilityCategory__PTZ,	///< xs:string value="PTZ"
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available system log modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__SystemLogType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SystemLogType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a system log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__System,	///< xs:string value="System"
/// <PRE><BLOCKQUOTE>
///   Indicates that a access log is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__SystemLogType__Access,	///< xs:string value="Access"
};

/// @brief "http://www.onvif.org/ver10/schema":FactoryDefaultType is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available factory default modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__FactoryDefaultType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__FactoryDefaultType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that a hard factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Hard,	///< xs:string value="Hard"
/// <PRE><BLOCKQUOTE>
///   Indicates that a soft factory default is requested.
/// </BLOCKQUOTE></PRE>
///
	tt__FactoryDefaultType__Soft,	///< xs:string value="Soft"
};

/// @brief "http://www.onvif.org/ver10/schema":SetDateTimeType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__SetDateTimeType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__SetDateTimeType
{
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set manually.
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__Manual,	///< xs:string value="Manual"
/// <PRE><BLOCKQUOTE>
///   Indicates that the date and time are set through NTP
/// </BLOCKQUOTE></PRE>
///
	tt__SetDateTimeType__NTP,	///< xs:string value="NTP"
};

/// @brief "http://www.onvif.org/ver10/schema":UserLevel is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__UserLevel__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__UserLevel
{
	tt__UserLevel__Administrator,	///< xs:string value="Administrator"
	tt__UserLevel__Operator,	///< xs:string value="Operator"
	tt__UserLevel__User,	///< xs:string value="User"
	tt__UserLevel__Anonymous,	///< xs:string value="Anonymous"
	tt__UserLevel__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayLogicalState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayLogicalState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayLogicalState
{
	tt__RelayLogicalState__active,	///< xs:string value="active"
	tt__RelayLogicalState__inactive,	///< xs:string value="inactive"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayIdleState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayIdleState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayIdleState
{
	tt__RelayIdleState__closed,	///< xs:string value="closed"
	tt__RelayIdleState__open,	///< xs:string value="open"
};

/// @brief "http://www.onvif.org/ver10/schema":RelayMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__RelayMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__RelayMode
{
	tt__RelayMode__Monostable,	///< xs:string value="Monostable"
	tt__RelayMode__Bistable,	///< xs:string value="Bistable"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DigitalIdleState is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":EFlipMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__EFlipMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__EFlipMode
{
	tt__EFlipMode__OFF,	///< xs:string value="OFF"
	tt__EFlipMode__ON,	///< xs:string value="ON"
	tt__EFlipMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ReverseMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ReverseMode
{
	tt__ReverseMode__OFF,	///< xs:string value="OFF"
	tt__ReverseMode__ON,	///< xs:string value="ON"
	tt__ReverseMode__AUTO,	///< xs:string value="AUTO"
	tt__ReverseMode__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":AuxiliaryData is a simpleType restriction of type xs:string.
///
/// Length of this content is 0 to 128.
typedef char* tt__AuxiliaryData : 128;

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourState is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourState__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourState
{
	tt__PTZPresetTourState__Idle,	///< xs:string value="Idle"
	tt__PTZPresetTourState__Touring,	///< xs:string value="Touring"
	tt__PTZPresetTourState__Paused,	///< xs:string value="Paused"
	tt__PTZPresetTourState__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourDirection is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourDirection__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourDirection
{
	tt__PTZPresetTourDirection__Forward,	///< xs:string value="Forward"
	tt__PTZPresetTourDirection__Backward,	///< xs:string value="Backward"
	tt__PTZPresetTourDirection__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOperation is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__PTZPresetTourOperation__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__PTZPresetTourOperation
{
	tt__PTZPresetTourOperation__Start,	///< xs:string value="Start"
	tt__PTZPresetTourOperation__Stop,	///< xs:string value="Stop"
	tt__PTZPresetTourOperation__Pause,	///< xs:string value="Pause"
	tt__PTZPresetTourOperation__Extended,	///< xs:string value="Extended"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":MoveAndTrackMethod is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AutoFocusMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__AutoFocusMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__AutoFocusMode
{
	tt__AutoFocusMode__AUTO,	///< xs:string value="AUTO"
	tt__AutoFocusMode__MANUAL,	///< xs:string value="MANUAL"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AFModes is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__WideDynamicMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__WideDynamicMode
{
	tt__WideDynamicMode__OFF,	///< xs:string value="OFF"
	tt__WideDynamicMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensationMode is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Enumeration describing the available backlight compenstation modes.
/// </BLOCKQUOTE></PRE>
///
/// @note The enum values are prefixed with "tt__BacklightCompensationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__BacklightCompensationMode
{
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is disabled.
/// </BLOCKQUOTE></PRE>
///
	tt__BacklightCompensationMode__OFF,	///< xs:string value="OFF"
/// <PRE><BLOCKQUOTE>
///   Backlight compensation is enabled.
/// </BLOCKQUOTE></PRE>
///
	tt__BacklightCompensationMode__ON,	///< xs:string value="ON"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposurePriority is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposurePriority__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ExposurePriority
{
	tt__ExposurePriority__LowNoise,	///< xs:string value="LowNoise"
	tt__ExposurePriority__FrameRate,	///< xs:string value="FrameRate"
};

/// @brief "http://www.onvif.org/ver10/schema":ExposureMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ExposureMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ExposureMode
{
	tt__ExposureMode__AUTO,	///< xs:string value="AUTO"
	tt__ExposureMode__MANUAL,	///< xs:string value="MANUAL"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Enabled is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalanceMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__WhiteBalanceMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__WhiteBalanceMode
{
	tt__WhiteBalanceMode__AUTO,	///< xs:string value="AUTO"
	tt__WhiteBalanceMode__MANUAL,	///< xs:string value="MANUAL"
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__IrCutFilterMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__IrCutFilterMode
{
	tt__IrCutFilterMode__ON,	///< xs:string value="ON"
	tt__IrCutFilterMode__OFF,	///< xs:string value="OFF"
	tt__IrCutFilterMode__AUTO,	///< xs:string value="AUTO"
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationMode is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__ImageStabilizationMode__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__ImageStabilizationMode
{
	tt__ImageStabilizationMode__OFF,	///< xs:string value="OFF"
	tt__ImageStabilizationMode__ON,	///< xs:string value="ON"
	tt__ImageStabilizationMode__AUTO,	///< xs:string value="AUTO"
	tt__ImageStabilizationMode__Extended,	///< xs:string value="Extended"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":IrCutFilterAutoBoundaryType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ToneCompensationMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":DefoggingMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ImageSendingType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":PropertyOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Direction is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverState is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":Description is a simpleType restriction of type xs:string.
///
typedef char* tt__Description;

// Optimization: simpleType "http://www.onvif.org/ver10/schema":XPathExpression is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":SearchState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingStatus is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TrackType is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobMode is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobState is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ModeOfOperation is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":AudioClassType is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":OSDType is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__OSDType__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__OSDType
{
	tt__OSDType__Text,	///< xs:string value="Text"
	tt__OSDType__Image,	///< xs:string value="Image"
	tt__OSDType__Extended,	///< xs:string value="Extended"
};

/// @brief "http://www.onvif.org/ver10/schema":ReferenceToken is a simpleType restriction of type xs:string.
///
/// <PRE><BLOCKQUOTE>
///   Unique identifier for a physical or logical resource.
///   Tokens should be assigned such that they are unique within a device. Tokens must be at least unique within its class.
///   Length up to 64 characters. Token may be extended by intermediate terminal with adding prefix to make it global unique.
///   The length should be within 36 characters for generating at local device. See "Remote Token" section in Resource Query specification.
/// </BLOCKQUOTE></PRE>
///
/// Length of this content is 0 to 64.
typedef char* tt__ReferenceToken : 64;

/// @brief "http://www.onvif.org/ver10/schema":MoveStatus is a simpleType restriction of type xs:string.
///
/// @note The enum values are prefixed with "tt__MoveStatus__" to prevent name clashes: use wsdl2h option -e to omit this prefix or use option -c++11 for scoped enumerations
enum tt__MoveStatus
{
	tt__MoveStatus__IDLE,	///< xs:string value="IDLE"
	tt__MoveStatus__MOVING,	///< xs:string value="MOVING"
	tt__MoveStatus__UNKNOWN,	///< xs:string value="UNKNOWN"
};

// Optimization: simpleType "http://www.onvif.org/ver10/schema":Entity is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":FullTopicExpression is not used and was removed

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":ConcreteTopicExpression is not used and was removed

// Optimization: simpleType "http://docs.oasis-open.org/wsn/t-1":SimpleTopicExpression is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

// Optimization: simpleType "http://www.onvif.org/ver10/schema":ReceiverReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":TrackReference is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":JobToken is not used and was removed

// Optimization: simpleType "http://www.onvif.org/ver10/schema":RecordingJobReference is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/device/wsdl":Service is a complexType.
///
/// @note class tds__Service operations:
/// - tds__Service* soap_new_tds__Service(soap*) allocate and default initialize
/// - tds__Service* soap_new_tds__Service(soap*, int num) allocate and default initialize an array
/// - tds__Service* soap_new_req_tds__Service(soap*, ...) allocate, set required members
/// - tds__Service* soap_new_set_tds__Service(soap*, ...) allocate, set all public members
/// - tds__Service::soap_default(soap*) default initialize members
/// - int soap_read_tds__Service(soap*, tds__Service*) deserialize from a stream
/// - int soap_write_tds__Service(soap*, tds__Service*) serialize to a stream
/// - tds__Service* tds__Service::soap_dup(soap*) returns deep copy of tds__Service, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__Service::soap_del() deep deletes tds__Service data members, use only after tds__Service::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__Service::soap_type() returns SOAP_TYPE_tds__Service or derived type identifier
class tds__Service
{ public:
/// <PRE><BLOCKQUOTE>
///   Namespace of the service being described. This parameter allows to match the service capabilities to the service. Note that only one set of capabilities is supported per namespace.
/// </BLOCKQUOTE></PRE>
///
/// Element "Namespace" of type xs:anyURI.
    xsd__anyURI                          Namespace                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The transport addresses where the service can be reached. The scheme and IP part shall match the one used in the request (i.e. the GetServices request).
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// @note class _tds__Service_Capabilities operations:
/// - _tds__Service_Capabilities* soap_new__tds__Service_Capabilities(soap*) allocate and default initialize
/// - _tds__Service_Capabilities* soap_new__tds__Service_Capabilities(soap*, int num) allocate and default initialize an array
/// - _tds__Service_Capabilities* soap_new_req__tds__Service_Capabilities(soap*, ...) allocate, set required members
/// - _tds__Service_Capabilities* soap_new_set__tds__Service_Capabilities(soap*, ...) allocate, set all public members
/// - _tds__Service_Capabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__Service_Capabilities(soap*, _tds__Service_Capabilities*) deserialize from a stream
/// - int soap_write__tds__Service_Capabilities(soap*, _tds__Service_Capabilities*) serialize to a stream
/// - _tds__Service_Capabilities* _tds__Service_Capabilities::soap_dup(soap*) returns deep copy of _tds__Service_Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__Service_Capabilities::soap_del() deep deletes _tds__Service_Capabilities data members, use only after _tds__Service_Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__Service_Capabilities::soap_type() returns SOAP_TYPE__tds__Service_Capabilities or derived type identifier
    class _tds__Service_Capabilities
    { public:
/// <any namespace="##any">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Capabilities                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The version of the service (not the ONVIF core spec version).
/// </BLOCKQUOTE></PRE>
///
/// Element "Version" of type "http://www.onvif.org/ver10/schema":OnvifVersion.
    tt__OnvifVersion*                    Version                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities is a complexType.
///
/// @note class tds__DeviceServiceCapabilities operations:
/// - tds__DeviceServiceCapabilities* soap_new_tds__DeviceServiceCapabilities(soap*) allocate and default initialize
/// - tds__DeviceServiceCapabilities* soap_new_tds__DeviceServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__DeviceServiceCapabilities* soap_new_req_tds__DeviceServiceCapabilities(soap*, ...) allocate, set required members
/// - tds__DeviceServiceCapabilities* soap_new_set_tds__DeviceServiceCapabilities(soap*, ...) allocate, set all public members
/// - tds__DeviceServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__DeviceServiceCapabilities(soap*, tds__DeviceServiceCapabilities*) deserialize from a stream
/// - int soap_write_tds__DeviceServiceCapabilities(soap*, tds__DeviceServiceCapabilities*) serialize to a stream
/// - tds__DeviceServiceCapabilities* tds__DeviceServiceCapabilities::soap_dup(soap*) returns deep copy of tds__DeviceServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__DeviceServiceCapabilities::soap_del() deep deletes tds__DeviceServiceCapabilities data members, use only after tds__DeviceServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__DeviceServiceCapabilities::soap_type() returns SOAP_TYPE_tds__DeviceServiceCapabilities or derived type identifier
class tds__DeviceServiceCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities.
    tds__NetworkCapabilities*            Network                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities.
    tds__SecurityCapabilities*           Security                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities.
    tds__SystemCapabilities*             System                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Capabilities that do not fit in any of the other categories.
/// </BLOCKQUOTE></PRE>
///
/// Element "Misc" of type "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities.
    tds__MiscCapabilities*               Misc                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":NetworkCapabilities is a complexType.
///
/// @note class tds__NetworkCapabilities operations:
/// - tds__NetworkCapabilities* soap_new_tds__NetworkCapabilities(soap*) allocate and default initialize
/// - tds__NetworkCapabilities* soap_new_tds__NetworkCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__NetworkCapabilities* soap_new_req_tds__NetworkCapabilities(soap*, ...) allocate, set required members
/// - tds__NetworkCapabilities* soap_new_set_tds__NetworkCapabilities(soap*, ...) allocate, set all public members
/// - tds__NetworkCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__NetworkCapabilities(soap*, tds__NetworkCapabilities*) deserialize from a stream
/// - int soap_write_tds__NetworkCapabilities(soap*, tds__NetworkCapabilities*) serialize to a stream
/// - tds__NetworkCapabilities* tds__NetworkCapabilities::soap_dup(soap*) returns deep copy of tds__NetworkCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__NetworkCapabilities::soap_del() deep deletes tds__NetworkCapabilities data members, use only after tds__NetworkCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__NetworkCapabilities::soap_type() returns SOAP_TYPE_tds__NetworkCapabilities or derived type identifier
class tds__NetworkCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for IP filtering.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPFilter" of type xs:boolean.
  @ bool*                                IPFilter                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for zeroconf.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ZeroConfiguration" of type xs:boolean.
  @ bool*                                ZeroConfiguration              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IPv6.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IPVersion6" of type xs:boolean.
  @ bool*                                IPVersion6                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for dynamic DNS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DynDNS" of type xs:boolean.
  @ bool*                                DynDNS                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.11 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot11Configuration" of type xs:boolean.
  @ bool*                                Dot11Configuration             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the maximum number of Dot1X configurations supported by the device
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1XConfigurations" of type xs:int.
  @ int*                                 Dot1XConfigurations            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of hostname from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HostnameFromDHCP" of type xs:boolean.
  @ bool*                                HostnameFromDHCP               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of NTP servers supported by the devices SetNTP command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NTP" of type xs:int.
  @ int*                                 NTP                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for Stateful IPv6 DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DHCPv6" of type xs:boolean.
  @ bool*                                DHCPv6                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SecurityCapabilities is a complexType.
///
/// @note class tds__SecurityCapabilities operations:
/// - tds__SecurityCapabilities* soap_new_tds__SecurityCapabilities(soap*) allocate and default initialize
/// - tds__SecurityCapabilities* soap_new_tds__SecurityCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__SecurityCapabilities* soap_new_req_tds__SecurityCapabilities(soap*, ...) allocate, set required members
/// - tds__SecurityCapabilities* soap_new_set_tds__SecurityCapabilities(soap*, ...) allocate, set all public members
/// - tds__SecurityCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__SecurityCapabilities(soap*, tds__SecurityCapabilities*) deserialize from a stream
/// - int soap_write_tds__SecurityCapabilities(soap*, tds__SecurityCapabilities*) serialize to a stream
/// - tds__SecurityCapabilities* tds__SecurityCapabilities::soap_dup(soap*) returns deep copy of tds__SecurityCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__SecurityCapabilities::soap_del() deep deletes tds__SecurityCapabilities data members, use only after tds__SecurityCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__SecurityCapabilities::soap_type() returns SOAP_TYPE_tds__SecurityCapabilities or derived type identifier
class tds__SecurityCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.0.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.0" of type xs:boolean.
  @ bool*                                TLS1_x002e0                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.1.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.1" of type xs:boolean.
  @ bool*                                TLS1_x002e1                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for TLS 1.2.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TLS1.2" of type xs:boolean.
  @ bool*                                TLS1_x002e2                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for onboard key generation.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OnboardKeyGeneration" of type xs:boolean.
  @ bool*                                OnboardKeyGeneration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for access policy configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AccessPolicyConfig" of type xs:boolean.
  @ bool*                                AccessPolicyConfig             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the ONVIF default access policy.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DefaultAccessPolicy" of type xs:boolean.
  @ bool*                                DefaultAccessPolicy            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for IEEE 802.1X configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Dot1X" of type xs:boolean.
  @ bool*                                Dot1X                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote user configuration. Used when accessing another device.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteUserHandling" of type xs:boolean.
  @ bool*                                RemoteUserHandling             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security X.509 token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "X.509Token" of type xs:boolean.
  @ bool*                                X_x002e509Token                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security SAML token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SAMLToken" of type xs:boolean.
  @ bool*                                SAMLToken                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Kerberos token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "KerberosToken" of type xs:boolean.
  @ bool*                                KerberosToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security Username token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "UsernameToken" of type xs:boolean.
  @ bool*                                UsernameToken                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS over HTTP digest authenticated communication layer.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpDigest" of type xs:boolean.
  @ bool*                                HttpDigest                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Security REL token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RELToken" of type xs:boolean.
  @ bool*                                RELToken                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SupportedEAPMethods" of type "http://www.onvif.org/ver10/device/wsdl":EAPMethodTypes.
  @ tds__EAPMethodTypes                  SupportedEAPMethods            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum number of users that the device supports.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUsers" of type xs:int.
  @ int*                                 MaxUsers                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the username by CreateUsers.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxUserNameLength" of type xs:int.
  @ int*                                 MaxUserNameLength              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Maximum number of characters supported for the password by CreateUsers and SetUser.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxPasswordLength" of type xs:int.
  @ int*                                 MaxPasswordLength              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemCapabilities is a complexType.
///
/// @note class tds__SystemCapabilities operations:
/// - tds__SystemCapabilities* soap_new_tds__SystemCapabilities(soap*) allocate and default initialize
/// - tds__SystemCapabilities* soap_new_tds__SystemCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__SystemCapabilities* soap_new_req_tds__SystemCapabilities(soap*, ...) allocate, set required members
/// - tds__SystemCapabilities* soap_new_set_tds__SystemCapabilities(soap*, ...) allocate, set all public members
/// - tds__SystemCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__SystemCapabilities(soap*, tds__SystemCapabilities*) deserialize from a stream
/// - int soap_write_tds__SystemCapabilities(soap*, tds__SystemCapabilities*) serialize to a stream
/// - tds__SystemCapabilities* tds__SystemCapabilities::soap_dup(soap*) returns deep copy of tds__SystemCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__SystemCapabilities::soap_del() deep deletes tds__SystemCapabilities data members, use only after tds__SystemCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__SystemCapabilities::soap_type() returns SOAP_TYPE_tds__SystemCapabilities or derived type identifier
class tds__SystemCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS Discovery resolve requests.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryResolve" of type xs:boolean.
  @ bool*                                DiscoveryResolve               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for WS-Discovery Bye.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "DiscoveryBye" of type xs:boolean.
  @ bool*                                DiscoveryBye                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for remote discovery.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RemoteDiscovery" of type xs:boolean.
  @ bool*                                RemoteDiscovery                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemBackup" of type xs:boolean.
  @ bool*                                SystemBackup                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SystemLogging" of type xs:boolean.
  @ bool*                                SystemLogging                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through MTOM.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FirmwareUpgrade" of type xs:boolean.
  @ bool*                                FirmwareUpgrade                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for firmware upgrade through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpFirmwareUpgrade" of type xs:boolean.
  @ bool*                                HttpFirmwareUpgrade            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for system backup through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemBackup" of type xs:boolean.
  @ bool*                                HttpSystemBackup               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieval of system logging through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSystemLogging" of type xs:boolean.
  @ bool*                                HttpSystemLogging              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for retrieving support information through HTTP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "HttpSupportInformation" of type xs:boolean.
  @ bool*                                HttpSupportInformation         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for storage configuration interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageConfiguration" of type xs:boolean.
  @ bool*                                StorageConfiguration           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates maximum number of storage configurations supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxStorageConfigurations" of type xs:int.
  @ int*                                 MaxStorageConfigurations       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If present signals support for geo location. The value signals the supported number of entries.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocationEntries" of type xs:int.
  @ int*                                 GeoLocationEntries             0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   List of supported automatic GeoLocation adjustment supported by the device. Valid items are defined by tds:AutoGeoMode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   AutoGeo                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Enumerates the supported StorageTypes, see tds:StorageType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StorageTypesSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   StorageTypesSupported          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":MiscCapabilities is a complexType.
///
/// @note class tds__MiscCapabilities operations:
/// - tds__MiscCapabilities* soap_new_tds__MiscCapabilities(soap*) allocate and default initialize
/// - tds__MiscCapabilities* soap_new_tds__MiscCapabilities(soap*, int num) allocate and default initialize an array
/// - tds__MiscCapabilities* soap_new_req_tds__MiscCapabilities(soap*, ...) allocate, set required members
/// - tds__MiscCapabilities* soap_new_set_tds__MiscCapabilities(soap*, ...) allocate, set all public members
/// - tds__MiscCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tds__MiscCapabilities(soap*, tds__MiscCapabilities*) deserialize from a stream
/// - int soap_write_tds__MiscCapabilities(soap*, tds__MiscCapabilities*) serialize to a stream
/// - tds__MiscCapabilities* tds__MiscCapabilities::soap_dup(soap*) returns deep copy of tds__MiscCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__MiscCapabilities::soap_del() deep deletes tds__MiscCapabilities data members, use only after tds__MiscCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__MiscCapabilities::soap_type() returns SOAP_TYPE_tds__MiscCapabilities or derived type identifier
class tds__MiscCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Lists of commands supported by SendAuxiliaryCommand.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AuxiliaryCommands" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   AuxiliaryCommands              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":UserCredential is a complexType.
///
/// @note class tds__UserCredential operations:
/// - tds__UserCredential* soap_new_tds__UserCredential(soap*) allocate and default initialize
/// - tds__UserCredential* soap_new_tds__UserCredential(soap*, int num) allocate and default initialize an array
/// - tds__UserCredential* soap_new_req_tds__UserCredential(soap*, ...) allocate, set required members
/// - tds__UserCredential* soap_new_set_tds__UserCredential(soap*, ...) allocate, set all public members
/// - tds__UserCredential::soap_default(soap*) default initialize members
/// - int soap_read_tds__UserCredential(soap*, tds__UserCredential*) deserialize from a stream
/// - int soap_write_tds__UserCredential(soap*, tds__UserCredential*) serialize to a stream
/// - tds__UserCredential* tds__UserCredential::soap_dup(soap*) returns deep copy of tds__UserCredential, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__UserCredential::soap_del() deep deletes tds__UserCredential data members, use only after tds__UserCredential::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__UserCredential::soap_type() returns SOAP_TYPE_tds__UserCredential or derived type identifier
class tds__UserCredential
{ public:
/// <PRE><BLOCKQUOTE>
///   User name
/// </BLOCKQUOTE></PRE>
///
/// Element "UserName" of type xs:string.
    char*                                UserName                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   optional password
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// @note class _tds__UserCredential_Extension operations:
/// - _tds__UserCredential_Extension* soap_new__tds__UserCredential_Extension(soap*) allocate and default initialize
/// - _tds__UserCredential_Extension* soap_new__tds__UserCredential_Extension(soap*, int num) allocate and default initialize an array
/// - _tds__UserCredential_Extension* soap_new_req__tds__UserCredential_Extension(soap*, ...) allocate, set required members
/// - _tds__UserCredential_Extension* soap_new_set__tds__UserCredential_Extension(soap*, ...) allocate, set all public members
/// - _tds__UserCredential_Extension::soap_default(soap*) default initialize members
/// - int soap_read__tds__UserCredential_Extension(soap*, _tds__UserCredential_Extension*) deserialize from a stream
/// - int soap_write__tds__UserCredential_Extension(soap*, _tds__UserCredential_Extension*) serialize to a stream
/// - _tds__UserCredential_Extension* _tds__UserCredential_Extension::soap_dup(soap*) returns deep copy of _tds__UserCredential_Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__UserCredential_Extension::soap_del() deep deletes _tds__UserCredential_Extension data members, use only after _tds__UserCredential_Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__UserCredential_Extension::soap_type() returns SOAP_TYPE__tds__UserCredential_Extension or derived type identifier
    class _tds__UserCredential_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData is a complexType.
///
/// @note class tds__StorageConfigurationData operations:
/// - tds__StorageConfigurationData* soap_new_tds__StorageConfigurationData(soap*) allocate and default initialize
/// - tds__StorageConfigurationData* soap_new_tds__StorageConfigurationData(soap*, int num) allocate and default initialize an array
/// - tds__StorageConfigurationData* soap_new_req_tds__StorageConfigurationData(soap*, ...) allocate, set required members
/// - tds__StorageConfigurationData* soap_new_set_tds__StorageConfigurationData(soap*, ...) allocate, set all public members
/// - tds__StorageConfigurationData::soap_default(soap*) default initialize members
/// - int soap_read_tds__StorageConfigurationData(soap*, tds__StorageConfigurationData*) deserialize from a stream
/// - int soap_write_tds__StorageConfigurationData(soap*, tds__StorageConfigurationData*) serialize to a stream
/// - tds__StorageConfigurationData* tds__StorageConfigurationData::soap_dup(soap*) returns deep copy of tds__StorageConfigurationData, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__StorageConfigurationData::soap_del() deep deletes tds__StorageConfigurationData data members, use only after tds__StorageConfigurationData::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__StorageConfigurationData::soap_type() returns SOAP_TYPE_tds__StorageConfigurationData or derived type identifier
class tds__StorageConfigurationData
{ public:
/// <PRE><BLOCKQUOTE>
///   local path
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalPath" of type xs:anyURI.
    xsd__anyURI                          LocalPath                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Storage server address
/// </BLOCKQUOTE></PRE>
///
/// Element "StorageUri" of type xs:anyURI.
    xsd__anyURI                          StorageUri                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User credential for the storage server
/// </BLOCKQUOTE></PRE>
///
/// Element "User" of type "http://www.onvif.org/ver10/device/wsdl":UserCredential.
    tds__UserCredential*                 User                           0;	///< Optional element.
/// @note class _tds__StorageConfigurationData_Extension operations:
/// - _tds__StorageConfigurationData_Extension* soap_new__tds__StorageConfigurationData_Extension(soap*) allocate and default initialize
/// - _tds__StorageConfigurationData_Extension* soap_new__tds__StorageConfigurationData_Extension(soap*, int num) allocate and default initialize an array
/// - _tds__StorageConfigurationData_Extension* soap_new_req__tds__StorageConfigurationData_Extension(soap*, ...) allocate, set required members
/// - _tds__StorageConfigurationData_Extension* soap_new_set__tds__StorageConfigurationData_Extension(soap*, ...) allocate, set all public members
/// - _tds__StorageConfigurationData_Extension::soap_default(soap*) default initialize members
/// - int soap_read__tds__StorageConfigurationData_Extension(soap*, _tds__StorageConfigurationData_Extension*) deserialize from a stream
/// - int soap_write__tds__StorageConfigurationData_Extension(soap*, _tds__StorageConfigurationData_Extension*) serialize to a stream
/// - _tds__StorageConfigurationData_Extension* _tds__StorageConfigurationData_Extension::soap_dup(soap*) returns deep copy of _tds__StorageConfigurationData_Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StorageConfigurationData_Extension::soap_del() deep deletes _tds__StorageConfigurationData_Extension data members, use only after _tds__StorageConfigurationData_Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StorageConfigurationData_Extension::soap_type() returns SOAP_TYPE__tds__StorageConfigurationData_Extension or derived type identifier
    class _tds__StorageConfigurationData_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   StorageType lists the acceptable values for type attribute
/// </BLOCKQUOTE></PRE>
///
/// Attribute "type" of type xs:string.
  @ char*                                type                           1;	///< Required attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServices
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServices is a complexType.
///
/// @note class _tds__GetServices operations:
/// - _tds__GetServices* soap_new__tds__GetServices(soap*) allocate and default initialize
/// - _tds__GetServices* soap_new__tds__GetServices(soap*, int num) allocate and default initialize an array
/// - _tds__GetServices* soap_new_req__tds__GetServices(soap*, ...) allocate, set required members
/// - _tds__GetServices* soap_new_set__tds__GetServices(soap*, ...) allocate, set all public members
/// - _tds__GetServices::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetServices(soap*, _tds__GetServices*) deserialize from a stream
/// - int soap_write__tds__GetServices(soap*, _tds__GetServices*) serialize to a stream
/// - _tds__GetServices* _tds__GetServices::soap_dup(soap*) returns deep copy of _tds__GetServices, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetServices::soap_del() deep deletes _tds__GetServices data members, use only after _tds__GetServices::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetServices::soap_type() returns SOAP_TYPE__tds__GetServices or derived type identifier
class _tds__GetServices
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the service capabilities (untyped) should be included in the response.
/// </BLOCKQUOTE></PRE>
///
/// Element "IncludeCapability" of type xs:boolean.
    bool                                 IncludeCapability              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServicesResponse is a complexType.
///
/// @note class _tds__GetServicesResponse operations:
/// - _tds__GetServicesResponse* soap_new__tds__GetServicesResponse(soap*) allocate and default initialize
/// - _tds__GetServicesResponse* soap_new__tds__GetServicesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetServicesResponse* soap_new_req__tds__GetServicesResponse(soap*, ...) allocate, set required members
/// - _tds__GetServicesResponse* soap_new_set__tds__GetServicesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetServicesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetServicesResponse(soap*, _tds__GetServicesResponse*) deserialize from a stream
/// - int soap_write__tds__GetServicesResponse(soap*, _tds__GetServicesResponse*) serialize to a stream
/// - _tds__GetServicesResponse* _tds__GetServicesResponse::soap_dup(soap*) returns deep copy of _tds__GetServicesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetServicesResponse::soap_del() deep deletes _tds__GetServicesResponse data members, use only after _tds__GetServicesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetServicesResponse::soap_type() returns SOAP_TYPE__tds__GetServicesResponse or derived type identifier
class _tds__GetServicesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Each Service element contains information about one service.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tds__Service* is 1..unbounded.
  $ int                                  __sizeService                  1;
/// Pointer to array tds__Service* of size 1..unbounded.
    tds__Service*                       *Service                        1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilities is a complexType.
///
/// @note class _tds__GetServiceCapabilities operations:
/// - _tds__GetServiceCapabilities* soap_new__tds__GetServiceCapabilities(soap*) allocate and default initialize
/// - _tds__GetServiceCapabilities* soap_new__tds__GetServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - _tds__GetServiceCapabilities* soap_new_req__tds__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - _tds__GetServiceCapabilities* soap_new_set__tds__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - _tds__GetServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetServiceCapabilities(soap*, _tds__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetServiceCapabilities(soap*, _tds__GetServiceCapabilities*) serialize to a stream
/// - _tds__GetServiceCapabilities* _tds__GetServiceCapabilities::soap_dup(soap*) returns deep copy of _tds__GetServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetServiceCapabilities::soap_del() deep deletes _tds__GetServiceCapabilities data members, use only after _tds__GetServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetServiceCapabilities::soap_type() returns SOAP_TYPE__tds__GetServiceCapabilities or derived type identifier
class _tds__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note class _tds__GetServiceCapabilitiesResponse operations:
/// - _tds__GetServiceCapabilitiesResponse* soap_new__tds__GetServiceCapabilitiesResponse(soap*) allocate and default initialize
/// - _tds__GetServiceCapabilitiesResponse* soap_new__tds__GetServiceCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetServiceCapabilitiesResponse* soap_new_req__tds__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tds__GetServiceCapabilitiesResponse* soap_new_set__tds__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetServiceCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetServiceCapabilitiesResponse(soap*, _tds__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetServiceCapabilitiesResponse(soap*, _tds__GetServiceCapabilitiesResponse*) serialize to a stream
/// - _tds__GetServiceCapabilitiesResponse* _tds__GetServiceCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tds__GetServiceCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetServiceCapabilitiesResponse::soap_del() deep deletes _tds__GetServiceCapabilitiesResponse data members, use only after _tds__GetServiceCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetServiceCapabilitiesResponse::soap_type() returns SOAP_TYPE__tds__GetServiceCapabilitiesResponse or derived type identifier
class _tds__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the device service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
    tds__DeviceServiceCapabilities*      Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformation is a complexType.
///
/// @note class _tds__GetDeviceInformation operations:
/// - _tds__GetDeviceInformation* soap_new__tds__GetDeviceInformation(soap*) allocate and default initialize
/// - _tds__GetDeviceInformation* soap_new__tds__GetDeviceInformation(soap*, int num) allocate and default initialize an array
/// - _tds__GetDeviceInformation* soap_new_req__tds__GetDeviceInformation(soap*, ...) allocate, set required members
/// - _tds__GetDeviceInformation* soap_new_set__tds__GetDeviceInformation(soap*, ...) allocate, set all public members
/// - _tds__GetDeviceInformation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDeviceInformation(soap*, _tds__GetDeviceInformation*) deserialize from a stream
/// - int soap_write__tds__GetDeviceInformation(soap*, _tds__GetDeviceInformation*) serialize to a stream
/// - _tds__GetDeviceInformation* _tds__GetDeviceInformation::soap_dup(soap*) returns deep copy of _tds__GetDeviceInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDeviceInformation::soap_del() deep deletes _tds__GetDeviceInformation data members, use only after _tds__GetDeviceInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDeviceInformation::soap_type() returns SOAP_TYPE__tds__GetDeviceInformation or derived type identifier
class _tds__GetDeviceInformation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDeviceInformationResponse is a complexType.
///
/// @note class _tds__GetDeviceInformationResponse operations:
/// - _tds__GetDeviceInformationResponse* soap_new__tds__GetDeviceInformationResponse(soap*) allocate and default initialize
/// - _tds__GetDeviceInformationResponse* soap_new__tds__GetDeviceInformationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDeviceInformationResponse* soap_new_req__tds__GetDeviceInformationResponse(soap*, ...) allocate, set required members
/// - _tds__GetDeviceInformationResponse* soap_new_set__tds__GetDeviceInformationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDeviceInformationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDeviceInformationResponse(soap*, _tds__GetDeviceInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDeviceInformationResponse(soap*, _tds__GetDeviceInformationResponse*) serialize to a stream
/// - _tds__GetDeviceInformationResponse* _tds__GetDeviceInformationResponse::soap_dup(soap*) returns deep copy of _tds__GetDeviceInformationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDeviceInformationResponse::soap_del() deep deletes _tds__GetDeviceInformationResponse data members, use only after _tds__GetDeviceInformationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDeviceInformationResponse::soap_type() returns SOAP_TYPE__tds__GetDeviceInformationResponse or derived type identifier
class _tds__GetDeviceInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The manufactor of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Manufacturer" of type xs:string.
    char*                                Manufacturer                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The device model.
/// </BLOCKQUOTE></PRE>
///
/// Element "Model" of type xs:string.
    char*                                Model                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The firmware version in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareVersion" of type xs:string.
    char*                                FirmwareVersion                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The serial number of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SerialNumber" of type xs:string.
    char*                                SerialNumber                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The hardware ID of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "HardwareId" of type xs:string.
    char*                                HardwareId                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTime is a complexType.
///
/// @note class _tds__SetSystemDateAndTime operations:
/// - _tds__SetSystemDateAndTime* soap_new__tds__SetSystemDateAndTime(soap*) allocate and default initialize
/// - _tds__SetSystemDateAndTime* soap_new__tds__SetSystemDateAndTime(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemDateAndTime* soap_new_req__tds__SetSystemDateAndTime(soap*, ...) allocate, set required members
/// - _tds__SetSystemDateAndTime* soap_new_set__tds__SetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - _tds__SetSystemDateAndTime::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTime(soap*, _tds__SetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTime(soap*, _tds__SetSystemDateAndTime*) serialize to a stream
/// - _tds__SetSystemDateAndTime* _tds__SetSystemDateAndTime::soap_dup(soap*) returns deep copy of _tds__SetSystemDateAndTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemDateAndTime::soap_del() deep deletes _tds__SetSystemDateAndTime data members, use only after _tds__SetSystemDateAndTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemDateAndTime::soap_type() returns SOAP_TYPE__tds__SetSystemDateAndTime or derived type identifier
class _tds__SetSystemDateAndTime
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines if the date and time is set via NTP or manually.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Automatically adjust Daylight savings if defined in TimeZone.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The time zone in POSIX 1003.1 format
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in UTC. If time is obtained via NTP, UTCDateTime has no meaning
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
/// @note class _tds__SetSystemDateAndTimeResponse operations:
/// - _tds__SetSystemDateAndTimeResponse* soap_new__tds__SetSystemDateAndTimeResponse(soap*) allocate and default initialize
/// - _tds__SetSystemDateAndTimeResponse* soap_new__tds__SetSystemDateAndTimeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemDateAndTimeResponse* soap_new_req__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - _tds__SetSystemDateAndTimeResponse* soap_new_set__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetSystemDateAndTimeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTimeResponse(soap*, _tds__SetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTimeResponse(soap*, _tds__SetSystemDateAndTimeResponse*) serialize to a stream
/// - _tds__SetSystemDateAndTimeResponse* _tds__SetSystemDateAndTimeResponse::soap_dup(soap*) returns deep copy of _tds__SetSystemDateAndTimeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemDateAndTimeResponse::soap_del() deep deletes _tds__SetSystemDateAndTimeResponse data members, use only after _tds__SetSystemDateAndTimeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemDateAndTimeResponse::soap_type() returns SOAP_TYPE__tds__SetSystemDateAndTimeResponse or derived type identifier
class _tds__SetSystemDateAndTimeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
/// @note class _tds__GetSystemDateAndTime operations:
/// - _tds__GetSystemDateAndTime* soap_new__tds__GetSystemDateAndTime(soap*) allocate and default initialize
/// - _tds__GetSystemDateAndTime* soap_new__tds__GetSystemDateAndTime(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemDateAndTime* soap_new_req__tds__GetSystemDateAndTime(soap*, ...) allocate, set required members
/// - _tds__GetSystemDateAndTime* soap_new_set__tds__GetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - _tds__GetSystemDateAndTime::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTime(soap*, _tds__GetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTime(soap*, _tds__GetSystemDateAndTime*) serialize to a stream
/// - _tds__GetSystemDateAndTime* _tds__GetSystemDateAndTime::soap_dup(soap*) returns deep copy of _tds__GetSystemDateAndTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemDateAndTime::soap_del() deep deletes _tds__GetSystemDateAndTime data members, use only after _tds__GetSystemDateAndTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemDateAndTime::soap_type() returns SOAP_TYPE__tds__GetSystemDateAndTime or derived type identifier
class _tds__GetSystemDateAndTime
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
/// @note class _tds__GetSystemDateAndTimeResponse operations:
/// - _tds__GetSystemDateAndTimeResponse* soap_new__tds__GetSystemDateAndTimeResponse(soap*) allocate and default initialize
/// - _tds__GetSystemDateAndTimeResponse* soap_new__tds__GetSystemDateAndTimeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemDateAndTimeResponse* soap_new_req__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemDateAndTimeResponse* soap_new_set__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemDateAndTimeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTimeResponse(soap*, _tds__GetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTimeResponse(soap*, _tds__GetSystemDateAndTimeResponse*) serialize to a stream
/// - _tds__GetSystemDateAndTimeResponse* _tds__GetSystemDateAndTimeResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemDateAndTimeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemDateAndTimeResponse::soap_del() deep deletes _tds__GetSystemDateAndTimeResponse data members, use only after _tds__GetSystemDateAndTimeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemDateAndTimeResponse::soap_type() returns SOAP_TYPE__tds__GetSystemDateAndTimeResponse or derived type identifier
class _tds__GetSystemDateAndTimeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemDateAndTime" of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    tt__SystemDateTime*                  SystemDateAndTime              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
/// @note class _tds__SetSystemFactoryDefault operations:
/// - _tds__SetSystemFactoryDefault* soap_new__tds__SetSystemFactoryDefault(soap*) allocate and default initialize
/// - _tds__SetSystemFactoryDefault* soap_new__tds__SetSystemFactoryDefault(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemFactoryDefault* soap_new_req__tds__SetSystemFactoryDefault(soap*, ...) allocate, set required members
/// - _tds__SetSystemFactoryDefault* soap_new_set__tds__SetSystemFactoryDefault(soap*, ...) allocate, set all public members
/// - _tds__SetSystemFactoryDefault::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefault(soap*, _tds__SetSystemFactoryDefault*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefault(soap*, _tds__SetSystemFactoryDefault*) serialize to a stream
/// - _tds__SetSystemFactoryDefault* _tds__SetSystemFactoryDefault::soap_dup(soap*) returns deep copy of _tds__SetSystemFactoryDefault, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemFactoryDefault::soap_del() deep deletes _tds__SetSystemFactoryDefault data members, use only after _tds__SetSystemFactoryDefault::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemFactoryDefault::soap_type() returns SOAP_TYPE__tds__SetSystemFactoryDefault or derived type identifier
class _tds__SetSystemFactoryDefault
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
///
/// Element "FactoryDefault" of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
/// @note class _tds__SetSystemFactoryDefaultResponse operations:
/// - _tds__SetSystemFactoryDefaultResponse* soap_new__tds__SetSystemFactoryDefaultResponse(soap*) allocate and default initialize
/// - _tds__SetSystemFactoryDefaultResponse* soap_new__tds__SetSystemFactoryDefaultResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemFactoryDefaultResponse* soap_new_req__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set required members
/// - _tds__SetSystemFactoryDefaultResponse* soap_new_set__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set all public members
/// - _tds__SetSystemFactoryDefaultResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefaultResponse(soap*, _tds__SetSystemFactoryDefaultResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefaultResponse(soap*, _tds__SetSystemFactoryDefaultResponse*) serialize to a stream
/// - _tds__SetSystemFactoryDefaultResponse* _tds__SetSystemFactoryDefaultResponse::soap_dup(soap*) returns deep copy of _tds__SetSystemFactoryDefaultResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemFactoryDefaultResponse::soap_del() deep deletes _tds__SetSystemFactoryDefaultResponse data members, use only after _tds__SetSystemFactoryDefaultResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemFactoryDefaultResponse::soap_type() returns SOAP_TYPE__tds__SetSystemFactoryDefaultResponse or derived type identifier
class _tds__SetSystemFactoryDefaultResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
/// @note class _tds__UpgradeSystemFirmware operations:
/// - _tds__UpgradeSystemFirmware* soap_new__tds__UpgradeSystemFirmware(soap*) allocate and default initialize
/// - _tds__UpgradeSystemFirmware* soap_new__tds__UpgradeSystemFirmware(soap*, int num) allocate and default initialize an array
/// - _tds__UpgradeSystemFirmware* soap_new_req__tds__UpgradeSystemFirmware(soap*, ...) allocate, set required members
/// - _tds__UpgradeSystemFirmware* soap_new_set__tds__UpgradeSystemFirmware(soap*, ...) allocate, set all public members
/// - _tds__UpgradeSystemFirmware::soap_default(soap*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmware(soap*, _tds__UpgradeSystemFirmware*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmware(soap*, _tds__UpgradeSystemFirmware*) serialize to a stream
/// - _tds__UpgradeSystemFirmware* _tds__UpgradeSystemFirmware::soap_dup(soap*) returns deep copy of _tds__UpgradeSystemFirmware, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__UpgradeSystemFirmware::soap_del() deep deletes _tds__UpgradeSystemFirmware data members, use only after _tds__UpgradeSystemFirmware::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__UpgradeSystemFirmware::soap_type() returns SOAP_TYPE__tds__UpgradeSystemFirmware or derived type identifier
class _tds__UpgradeSystemFirmware
{ public:
/// Element "Firmware" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Firmware                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
/// @note class _tds__UpgradeSystemFirmwareResponse operations:
/// - _tds__UpgradeSystemFirmwareResponse* soap_new__tds__UpgradeSystemFirmwareResponse(soap*) allocate and default initialize
/// - _tds__UpgradeSystemFirmwareResponse* soap_new__tds__UpgradeSystemFirmwareResponse(soap*, int num) allocate and default initialize an array
/// - _tds__UpgradeSystemFirmwareResponse* soap_new_req__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set required members
/// - _tds__UpgradeSystemFirmwareResponse* soap_new_set__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set all public members
/// - _tds__UpgradeSystemFirmwareResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmwareResponse(soap*, _tds__UpgradeSystemFirmwareResponse*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmwareResponse(soap*, _tds__UpgradeSystemFirmwareResponse*) serialize to a stream
/// - _tds__UpgradeSystemFirmwareResponse* _tds__UpgradeSystemFirmwareResponse::soap_dup(soap*) returns deep copy of _tds__UpgradeSystemFirmwareResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__UpgradeSystemFirmwareResponse::soap_del() deep deletes _tds__UpgradeSystemFirmwareResponse data members, use only after _tds__UpgradeSystemFirmwareResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__UpgradeSystemFirmwareResponse::soap_type() returns SOAP_TYPE__tds__UpgradeSystemFirmwareResponse or derived type identifier
class _tds__UpgradeSystemFirmwareResponse
{ public:
/// Element "Message" of type xs:string.
    char*                                Message                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
/// @note class _tds__SystemReboot operations:
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(soap*) allocate and default initialize
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(soap*, int num) allocate and default initialize an array
/// - _tds__SystemReboot* soap_new_req__tds__SystemReboot(soap*, ...) allocate, set required members
/// - _tds__SystemReboot* soap_new_set__tds__SystemReboot(soap*, ...) allocate, set all public members
/// - _tds__SystemReboot::soap_default(soap*) default initialize members
/// - int soap_read__tds__SystemReboot(soap*, _tds__SystemReboot*) deserialize from a stream
/// - int soap_write__tds__SystemReboot(soap*, _tds__SystemReboot*) serialize to a stream
/// - _tds__SystemReboot* _tds__SystemReboot::soap_dup(soap*) returns deep copy of _tds__SystemReboot, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SystemReboot::soap_del() deep deletes _tds__SystemReboot data members, use only after _tds__SystemReboot::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SystemReboot::soap_type() returns SOAP_TYPE__tds__SystemReboot or derived type identifier
class _tds__SystemReboot
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
/// @note class _tds__SystemRebootResponse operations:
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(soap*) allocate and default initialize
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SystemRebootResponse* soap_new_req__tds__SystemRebootResponse(soap*, ...) allocate, set required members
/// - _tds__SystemRebootResponse* soap_new_set__tds__SystemRebootResponse(soap*, ...) allocate, set all public members
/// - _tds__SystemRebootResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SystemRebootResponse(soap*, _tds__SystemRebootResponse*) deserialize from a stream
/// - int soap_write__tds__SystemRebootResponse(soap*, _tds__SystemRebootResponse*) serialize to a stream
/// - _tds__SystemRebootResponse* _tds__SystemRebootResponse::soap_dup(soap*) returns deep copy of _tds__SystemRebootResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SystemRebootResponse::soap_del() deep deletes _tds__SystemRebootResponse data members, use only after _tds__SystemRebootResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SystemRebootResponse::soap_type() returns SOAP_TYPE__tds__SystemRebootResponse or derived type identifier
class _tds__SystemRebootResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Message" of type xs:string.
    char*                                Message                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
/// @note class _tds__RestoreSystem operations:
/// - _tds__RestoreSystem* soap_new__tds__RestoreSystem(soap*) allocate and default initialize
/// - _tds__RestoreSystem* soap_new__tds__RestoreSystem(soap*, int num) allocate and default initialize an array
/// - _tds__RestoreSystem* soap_new_req__tds__RestoreSystem(soap*, ...) allocate, set required members
/// - _tds__RestoreSystem* soap_new_set__tds__RestoreSystem(soap*, ...) allocate, set all public members
/// - _tds__RestoreSystem::soap_default(soap*) default initialize members
/// - int soap_read__tds__RestoreSystem(soap*, _tds__RestoreSystem*) deserialize from a stream
/// - int soap_write__tds__RestoreSystem(soap*, _tds__RestoreSystem*) serialize to a stream
/// - _tds__RestoreSystem* _tds__RestoreSystem::soap_dup(soap*) returns deep copy of _tds__RestoreSystem, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RestoreSystem::soap_del() deep deletes _tds__RestoreSystem data members, use only after _tds__RestoreSystem::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RestoreSystem::soap_type() returns SOAP_TYPE__tds__RestoreSystem or derived type identifier
class _tds__RestoreSystem
{ public:
/// Size of array of tt__BackupFile* is 1..unbounded.
  $ int                                  __sizeBackupFiles              1;
/// Pointer to array tt__BackupFile* of size 1..unbounded.
    tt__BackupFile*                     *BackupFiles                    1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
/// @note class _tds__RestoreSystemResponse operations:
/// - _tds__RestoreSystemResponse* soap_new__tds__RestoreSystemResponse(soap*) allocate and default initialize
/// - _tds__RestoreSystemResponse* soap_new__tds__RestoreSystemResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RestoreSystemResponse* soap_new_req__tds__RestoreSystemResponse(soap*, ...) allocate, set required members
/// - _tds__RestoreSystemResponse* soap_new_set__tds__RestoreSystemResponse(soap*, ...) allocate, set all public members
/// - _tds__RestoreSystemResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RestoreSystemResponse(soap*, _tds__RestoreSystemResponse*) deserialize from a stream
/// - int soap_write__tds__RestoreSystemResponse(soap*, _tds__RestoreSystemResponse*) serialize to a stream
/// - _tds__RestoreSystemResponse* _tds__RestoreSystemResponse::soap_dup(soap*) returns deep copy of _tds__RestoreSystemResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RestoreSystemResponse::soap_del() deep deletes _tds__RestoreSystemResponse data members, use only after _tds__RestoreSystemResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RestoreSystemResponse::soap_type() returns SOAP_TYPE__tds__RestoreSystemResponse or derived type identifier
class _tds__RestoreSystemResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
/// @note class _tds__GetSystemBackup operations:
/// - _tds__GetSystemBackup* soap_new__tds__GetSystemBackup(soap*) allocate and default initialize
/// - _tds__GetSystemBackup* soap_new__tds__GetSystemBackup(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemBackup* soap_new_req__tds__GetSystemBackup(soap*, ...) allocate, set required members
/// - _tds__GetSystemBackup* soap_new_set__tds__GetSystemBackup(soap*, ...) allocate, set all public members
/// - _tds__GetSystemBackup::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemBackup(soap*, _tds__GetSystemBackup*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackup(soap*, _tds__GetSystemBackup*) serialize to a stream
/// - _tds__GetSystemBackup* _tds__GetSystemBackup::soap_dup(soap*) returns deep copy of _tds__GetSystemBackup, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemBackup::soap_del() deep deletes _tds__GetSystemBackup data members, use only after _tds__GetSystemBackup::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemBackup::soap_type() returns SOAP_TYPE__tds__GetSystemBackup or derived type identifier
class _tds__GetSystemBackup
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
/// @note class _tds__GetSystemBackupResponse operations:
/// - _tds__GetSystemBackupResponse* soap_new__tds__GetSystemBackupResponse(soap*) allocate and default initialize
/// - _tds__GetSystemBackupResponse* soap_new__tds__GetSystemBackupResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemBackupResponse* soap_new_req__tds__GetSystemBackupResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemBackupResponse* soap_new_set__tds__GetSystemBackupResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemBackupResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemBackupResponse(soap*, _tds__GetSystemBackupResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackupResponse(soap*, _tds__GetSystemBackupResponse*) serialize to a stream
/// - _tds__GetSystemBackupResponse* _tds__GetSystemBackupResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemBackupResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemBackupResponse::soap_del() deep deletes _tds__GetSystemBackupResponse data members, use only after _tds__GetSystemBackupResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemBackupResponse::soap_type() returns SOAP_TYPE__tds__GetSystemBackupResponse or derived type identifier
class _tds__GetSystemBackupResponse
{ public:
/// Size of array of tt__BackupFile* is 1..unbounded.
  $ int                                  __sizeBackupFiles              1;
/// Pointer to array tt__BackupFile* of size 1..unbounded.
    tt__BackupFile*                     *BackupFiles                    1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
/// @note class _tds__GetSystemSupportInformation operations:
/// - _tds__GetSystemSupportInformation* soap_new__tds__GetSystemSupportInformation(soap*) allocate and default initialize
/// - _tds__GetSystemSupportInformation* soap_new__tds__GetSystemSupportInformation(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemSupportInformation* soap_new_req__tds__GetSystemSupportInformation(soap*, ...) allocate, set required members
/// - _tds__GetSystemSupportInformation* soap_new_set__tds__GetSystemSupportInformation(soap*, ...) allocate, set all public members
/// - _tds__GetSystemSupportInformation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformation(soap*, _tds__GetSystemSupportInformation*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformation(soap*, _tds__GetSystemSupportInformation*) serialize to a stream
/// - _tds__GetSystemSupportInformation* _tds__GetSystemSupportInformation::soap_dup(soap*) returns deep copy of _tds__GetSystemSupportInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemSupportInformation::soap_del() deep deletes _tds__GetSystemSupportInformation data members, use only after _tds__GetSystemSupportInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemSupportInformation::soap_type() returns SOAP_TYPE__tds__GetSystemSupportInformation or derived type identifier
class _tds__GetSystemSupportInformation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
/// @note class _tds__GetSystemSupportInformationResponse operations:
/// - _tds__GetSystemSupportInformationResponse* soap_new__tds__GetSystemSupportInformationResponse(soap*) allocate and default initialize
/// - _tds__GetSystemSupportInformationResponse* soap_new__tds__GetSystemSupportInformationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemSupportInformationResponse* soap_new_req__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemSupportInformationResponse* soap_new_set__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemSupportInformationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformationResponse(soap*, _tds__GetSystemSupportInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformationResponse(soap*, _tds__GetSystemSupportInformationResponse*) serialize to a stream
/// - _tds__GetSystemSupportInformationResponse* _tds__GetSystemSupportInformationResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemSupportInformationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemSupportInformationResponse::soap_del() deep deletes _tds__GetSystemSupportInformationResponse data members, use only after _tds__GetSystemSupportInformationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemSupportInformationResponse::soap_type() returns SOAP_TYPE__tds__GetSystemSupportInformationResponse or derived type identifier
class _tds__GetSystemSupportInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportInformation" of type "http://www.onvif.org/ver10/schema":SupportInformation.
    tt__SupportInformation*              SupportInformation             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
/// @note class _tds__GetSystemLog operations:
/// - _tds__GetSystemLog* soap_new__tds__GetSystemLog(soap*) allocate and default initialize
/// - _tds__GetSystemLog* soap_new__tds__GetSystemLog(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemLog* soap_new_req__tds__GetSystemLog(soap*, ...) allocate, set required members
/// - _tds__GetSystemLog* soap_new_set__tds__GetSystemLog(soap*, ...) allocate, set all public members
/// - _tds__GetSystemLog::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemLog(soap*, _tds__GetSystemLog*) deserialize from a stream
/// - int soap_write__tds__GetSystemLog(soap*, _tds__GetSystemLog*) serialize to a stream
/// - _tds__GetSystemLog* _tds__GetSystemLog::soap_dup(soap*) returns deep copy of _tds__GetSystemLog, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemLog::soap_del() deep deletes _tds__GetSystemLog data members, use only after _tds__GetSystemLog::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemLog::soap_type() returns SOAP_TYPE__tds__GetSystemLog or derived type identifier
class _tds__GetSystemLog
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
///
/// Element "LogType" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
/// @note class _tds__GetSystemLogResponse operations:
/// - _tds__GetSystemLogResponse* soap_new__tds__GetSystemLogResponse(soap*) allocate and default initialize
/// - _tds__GetSystemLogResponse* soap_new__tds__GetSystemLogResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemLogResponse* soap_new_req__tds__GetSystemLogResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemLogResponse* soap_new_set__tds__GetSystemLogResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemLogResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemLogResponse(soap*, _tds__GetSystemLogResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemLogResponse(soap*, _tds__GetSystemLogResponse*) serialize to a stream
/// - _tds__GetSystemLogResponse* _tds__GetSystemLogResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemLogResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemLogResponse::soap_del() deep deletes _tds__GetSystemLogResponse data members, use only after _tds__GetSystemLogResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemLogResponse::soap_type() returns SOAP_TYPE__tds__GetSystemLogResponse or derived type identifier
class _tds__GetSystemLogResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLog" of type "http://www.onvif.org/ver10/schema":SystemLog.
    tt__SystemLog*                       SystemLog                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
/// @note class _tds__GetScopes operations:
/// - _tds__GetScopes* soap_new__tds__GetScopes(soap*) allocate and default initialize
/// - _tds__GetScopes* soap_new__tds__GetScopes(soap*, int num) allocate and default initialize an array
/// - _tds__GetScopes* soap_new_req__tds__GetScopes(soap*, ...) allocate, set required members
/// - _tds__GetScopes* soap_new_set__tds__GetScopes(soap*, ...) allocate, set all public members
/// - _tds__GetScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetScopes(soap*, _tds__GetScopes*) deserialize from a stream
/// - int soap_write__tds__GetScopes(soap*, _tds__GetScopes*) serialize to a stream
/// - _tds__GetScopes* _tds__GetScopes::soap_dup(soap*) returns deep copy of _tds__GetScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetScopes::soap_del() deep deletes _tds__GetScopes data members, use only after _tds__GetScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetScopes::soap_type() returns SOAP_TYPE__tds__GetScopes or derived type identifier
class _tds__GetScopes
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
/// @note class _tds__GetScopesResponse operations:
/// - _tds__GetScopesResponse* soap_new__tds__GetScopesResponse(soap*) allocate and default initialize
/// - _tds__GetScopesResponse* soap_new__tds__GetScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetScopesResponse* soap_new_req__tds__GetScopesResponse(soap*, ...) allocate, set required members
/// - _tds__GetScopesResponse* soap_new_set__tds__GetScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetScopesResponse(soap*, _tds__GetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__GetScopesResponse(soap*, _tds__GetScopesResponse*) serialize to a stream
/// - _tds__GetScopesResponse* _tds__GetScopesResponse::soap_dup(soap*) returns deep copy of _tds__GetScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetScopesResponse::soap_del() deep deletes _tds__GetScopesResponse data members, use only after _tds__GetScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetScopesResponse::soap_type() returns SOAP_TYPE__tds__GetScopesResponse or derived type identifier
class _tds__GetScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Scope* is 1..unbounded.
  $ int                                  __sizeScopes                   1;
/// Pointer to array tt__Scope* of size 1..unbounded.
    tt__Scope*                          *Scopes                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
/// @note class _tds__SetScopes operations:
/// - _tds__SetScopes* soap_new__tds__SetScopes(soap*) allocate and default initialize
/// - _tds__SetScopes* soap_new__tds__SetScopes(soap*, int num) allocate and default initialize an array
/// - _tds__SetScopes* soap_new_req__tds__SetScopes(soap*, ...) allocate, set required members
/// - _tds__SetScopes* soap_new_set__tds__SetScopes(soap*, ...) allocate, set all public members
/// - _tds__SetScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetScopes(soap*, _tds__SetScopes*) deserialize from a stream
/// - int soap_write__tds__SetScopes(soap*, _tds__SetScopes*) serialize to a stream
/// - _tds__SetScopes* _tds__SetScopes::soap_dup(soap*) returns deep copy of _tds__SetScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetScopes::soap_del() deep deletes _tds__SetScopes data members, use only after _tds__SetScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetScopes::soap_type() returns SOAP_TYPE__tds__SetScopes or derived type identifier
class _tds__SetScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 1..unbounded.
  $ int                                  __sizeScopes                   1;
/// Pointer to array xsd__anyURI of size 1..unbounded.
    xsd__anyURI                         *Scopes                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
/// @note class _tds__SetScopesResponse operations:
/// - _tds__SetScopesResponse* soap_new__tds__SetScopesResponse(soap*) allocate and default initialize
/// - _tds__SetScopesResponse* soap_new__tds__SetScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetScopesResponse* soap_new_req__tds__SetScopesResponse(soap*, ...) allocate, set required members
/// - _tds__SetScopesResponse* soap_new_set__tds__SetScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetScopesResponse(soap*, _tds__SetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__SetScopesResponse(soap*, _tds__SetScopesResponse*) serialize to a stream
/// - _tds__SetScopesResponse* _tds__SetScopesResponse::soap_dup(soap*) returns deep copy of _tds__SetScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetScopesResponse::soap_del() deep deletes _tds__SetScopesResponse data members, use only after _tds__SetScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetScopesResponse::soap_type() returns SOAP_TYPE__tds__SetScopesResponse or derived type identifier
class _tds__SetScopesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
/// @note class _tds__AddScopes operations:
/// - _tds__AddScopes* soap_new__tds__AddScopes(soap*) allocate and default initialize
/// - _tds__AddScopes* soap_new__tds__AddScopes(soap*, int num) allocate and default initialize an array
/// - _tds__AddScopes* soap_new_req__tds__AddScopes(soap*, ...) allocate, set required members
/// - _tds__AddScopes* soap_new_set__tds__AddScopes(soap*, ...) allocate, set all public members
/// - _tds__AddScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddScopes(soap*, _tds__AddScopes*) deserialize from a stream
/// - int soap_write__tds__AddScopes(soap*, _tds__AddScopes*) serialize to a stream
/// - _tds__AddScopes* _tds__AddScopes::soap_dup(soap*) returns deep copy of _tds__AddScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddScopes::soap_del() deep deletes _tds__AddScopes data members, use only after _tds__AddScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddScopes::soap_type() returns SOAP_TYPE__tds__AddScopes or derived type identifier
class _tds__AddScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 1..unbounded.
  $ int                                  __sizeScopeItem                1;
/// Pointer to array xsd__anyURI of size 1..unbounded.
    xsd__anyURI                         *ScopeItem                      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
/// @note class _tds__AddScopesResponse operations:
/// - _tds__AddScopesResponse* soap_new__tds__AddScopesResponse(soap*) allocate and default initialize
/// - _tds__AddScopesResponse* soap_new__tds__AddScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__AddScopesResponse* soap_new_req__tds__AddScopesResponse(soap*, ...) allocate, set required members
/// - _tds__AddScopesResponse* soap_new_set__tds__AddScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__AddScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddScopesResponse(soap*, _tds__AddScopesResponse*) deserialize from a stream
/// - int soap_write__tds__AddScopesResponse(soap*, _tds__AddScopesResponse*) serialize to a stream
/// - _tds__AddScopesResponse* _tds__AddScopesResponse::soap_dup(soap*) returns deep copy of _tds__AddScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddScopesResponse::soap_del() deep deletes _tds__AddScopesResponse data members, use only after _tds__AddScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddScopesResponse::soap_type() returns SOAP_TYPE__tds__AddScopesResponse or derived type identifier
class _tds__AddScopesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
/// @note class _tds__RemoveScopes operations:
/// - _tds__RemoveScopes* soap_new__tds__RemoveScopes(soap*) allocate and default initialize
/// - _tds__RemoveScopes* soap_new__tds__RemoveScopes(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveScopes* soap_new_req__tds__RemoveScopes(soap*, ...) allocate, set required members
/// - _tds__RemoveScopes* soap_new_set__tds__RemoveScopes(soap*, ...) allocate, set all public members
/// - _tds__RemoveScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveScopes(soap*, _tds__RemoveScopes*) deserialize from a stream
/// - int soap_write__tds__RemoveScopes(soap*, _tds__RemoveScopes*) serialize to a stream
/// - _tds__RemoveScopes* _tds__RemoveScopes::soap_dup(soap*) returns deep copy of _tds__RemoveScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveScopes::soap_del() deep deletes _tds__RemoveScopes data members, use only after _tds__RemoveScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveScopes::soap_type() returns SOAP_TYPE__tds__RemoveScopes or derived type identifier
class _tds__RemoveScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 1..unbounded.
  $ int                                  __sizeScopeItem                1;
/// Pointer to array xsd__anyURI of size 1..unbounded.
    xsd__anyURI                         *ScopeItem                      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
/// @note class _tds__RemoveScopesResponse operations:
/// - _tds__RemoveScopesResponse* soap_new__tds__RemoveScopesResponse(soap*) allocate and default initialize
/// - _tds__RemoveScopesResponse* soap_new__tds__RemoveScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveScopesResponse* soap_new_req__tds__RemoveScopesResponse(soap*, ...) allocate, set required members
/// - _tds__RemoveScopesResponse* soap_new_set__tds__RemoveScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__RemoveScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveScopesResponse(soap*, _tds__RemoveScopesResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveScopesResponse(soap*, _tds__RemoveScopesResponse*) serialize to a stream
/// - _tds__RemoveScopesResponse* _tds__RemoveScopesResponse::soap_dup(soap*) returns deep copy of _tds__RemoveScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveScopesResponse::soap_del() deep deletes _tds__RemoveScopesResponse data members, use only after _tds__RemoveScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveScopesResponse::soap_type() returns SOAP_TYPE__tds__RemoveScopesResponse or derived type identifier
class _tds__RemoveScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 0..unbounded.
  $ int                                  __sizeScopeItem                0;
/// Pointer to array xsd__anyURI of size 0..unbounded.
    xsd__anyURI                         *ScopeItem                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
/// @note class _tds__GetDiscoveryMode operations:
/// - _tds__GetDiscoveryMode* soap_new__tds__GetDiscoveryMode(soap*) allocate and default initialize
/// - _tds__GetDiscoveryMode* soap_new__tds__GetDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetDiscoveryMode* soap_new_req__tds__GetDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__GetDiscoveryMode* soap_new_set__tds__GetDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__GetDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDiscoveryMode(soap*, _tds__GetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryMode(soap*, _tds__GetDiscoveryMode*) serialize to a stream
/// - _tds__GetDiscoveryMode* _tds__GetDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__GetDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDiscoveryMode::soap_del() deep deletes _tds__GetDiscoveryMode data members, use only after _tds__GetDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDiscoveryMode::soap_type() returns SOAP_TYPE__tds__GetDiscoveryMode or derived type identifier
class _tds__GetDiscoveryMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
/// @note class _tds__GetDiscoveryModeResponse operations:
/// - _tds__GetDiscoveryModeResponse* soap_new__tds__GetDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__GetDiscoveryModeResponse* soap_new__tds__GetDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDiscoveryModeResponse* soap_new_req__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetDiscoveryModeResponse* soap_new_set__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDiscoveryModeResponse(soap*, _tds__GetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryModeResponse(soap*, _tds__GetDiscoveryModeResponse*) serialize to a stream
/// - _tds__GetDiscoveryModeResponse* _tds__GetDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__GetDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDiscoveryModeResponse::soap_del() deep deletes _tds__GetDiscoveryModeResponse data members, use only after _tds__GetDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__GetDiscoveryModeResponse or derived type identifier
class _tds__GetDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
/// @note class _tds__SetDiscoveryMode operations:
/// - _tds__SetDiscoveryMode* soap_new__tds__SetDiscoveryMode(soap*) allocate and default initialize
/// - _tds__SetDiscoveryMode* soap_new__tds__SetDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetDiscoveryMode* soap_new_req__tds__SetDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__SetDiscoveryMode* soap_new_set__tds__SetDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__SetDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDiscoveryMode(soap*, _tds__SetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryMode(soap*, _tds__SetDiscoveryMode*) serialize to a stream
/// - _tds__SetDiscoveryMode* _tds__SetDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__SetDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDiscoveryMode::soap_del() deep deletes _tds__SetDiscoveryMode data members, use only after _tds__SetDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDiscoveryMode::soap_type() returns SOAP_TYPE__tds__SetDiscoveryMode or derived type identifier
class _tds__SetDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
/// @note class _tds__SetDiscoveryModeResponse operations:
/// - _tds__SetDiscoveryModeResponse* soap_new__tds__SetDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__SetDiscoveryModeResponse* soap_new__tds__SetDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDiscoveryModeResponse* soap_new_req__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetDiscoveryModeResponse* soap_new_set__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDiscoveryModeResponse(soap*, _tds__SetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryModeResponse(soap*, _tds__SetDiscoveryModeResponse*) serialize to a stream
/// - _tds__SetDiscoveryModeResponse* _tds__SetDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__SetDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDiscoveryModeResponse::soap_del() deep deletes _tds__SetDiscoveryModeResponse data members, use only after _tds__SetDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__SetDiscoveryModeResponse or derived type identifier
class _tds__SetDiscoveryModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
/// @note class _tds__GetRemoteDiscoveryMode operations:
/// - _tds__GetRemoteDiscoveryMode* soap_new__tds__GetRemoteDiscoveryMode(soap*) allocate and default initialize
/// - _tds__GetRemoteDiscoveryMode* soap_new__tds__GetRemoteDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteDiscoveryMode* soap_new_req__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__GetRemoteDiscoveryMode* soap_new_set__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryMode(soap*, _tds__GetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryMode(soap*, _tds__GetRemoteDiscoveryMode*) serialize to a stream
/// - _tds__GetRemoteDiscoveryMode* _tds__GetRemoteDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__GetRemoteDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteDiscoveryMode::soap_del() deep deletes _tds__GetRemoteDiscoveryMode data members, use only after _tds__GetRemoteDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteDiscoveryMode::soap_type() returns SOAP_TYPE__tds__GetRemoteDiscoveryMode or derived type identifier
class _tds__GetRemoteDiscoveryMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
/// @note class _tds__GetRemoteDiscoveryModeResponse operations:
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new__tds__GetRemoteDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new__tds__GetRemoteDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new_req__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new_set__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryModeResponse(soap*, _tds__GetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryModeResponse(soap*, _tds__GetRemoteDiscoveryModeResponse*) serialize to a stream
/// - _tds__GetRemoteDiscoveryModeResponse* _tds__GetRemoteDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__GetRemoteDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteDiscoveryModeResponse::soap_del() deep deletes _tds__GetRemoteDiscoveryModeResponse data members, use only after _tds__GetRemoteDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__GetRemoteDiscoveryModeResponse or derived type identifier
class _tds__GetRemoteDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
/// @note class _tds__SetRemoteDiscoveryMode operations:
/// - _tds__SetRemoteDiscoveryMode* soap_new__tds__SetRemoteDiscoveryMode(soap*) allocate and default initialize
/// - _tds__SetRemoteDiscoveryMode* soap_new__tds__SetRemoteDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteDiscoveryMode* soap_new_req__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__SetRemoteDiscoveryMode* soap_new_set__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryMode(soap*, _tds__SetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryMode(soap*, _tds__SetRemoteDiscoveryMode*) serialize to a stream
/// - _tds__SetRemoteDiscoveryMode* _tds__SetRemoteDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__SetRemoteDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteDiscoveryMode::soap_del() deep deletes _tds__SetRemoteDiscoveryMode data members, use only after _tds__SetRemoteDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteDiscoveryMode::soap_type() returns SOAP_TYPE__tds__SetRemoteDiscoveryMode or derived type identifier
class _tds__SetRemoteDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
/// @note class _tds__SetRemoteDiscoveryModeResponse operations:
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new__tds__SetRemoteDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new__tds__SetRemoteDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new_req__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new_set__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryModeResponse(soap*, _tds__SetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryModeResponse(soap*, _tds__SetRemoteDiscoveryModeResponse*) serialize to a stream
/// - _tds__SetRemoteDiscoveryModeResponse* _tds__SetRemoteDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__SetRemoteDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteDiscoveryModeResponse::soap_del() deep deletes _tds__SetRemoteDiscoveryModeResponse data members, use only after _tds__SetRemoteDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__SetRemoteDiscoveryModeResponse or derived type identifier
class _tds__SetRemoteDiscoveryModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
/// @note class _tds__GetDPAddresses operations:
/// - _tds__GetDPAddresses* soap_new__tds__GetDPAddresses(soap*) allocate and default initialize
/// - _tds__GetDPAddresses* soap_new__tds__GetDPAddresses(soap*, int num) allocate and default initialize an array
/// - _tds__GetDPAddresses* soap_new_req__tds__GetDPAddresses(soap*, ...) allocate, set required members
/// - _tds__GetDPAddresses* soap_new_set__tds__GetDPAddresses(soap*, ...) allocate, set all public members
/// - _tds__GetDPAddresses::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDPAddresses(soap*, _tds__GetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__GetDPAddresses(soap*, _tds__GetDPAddresses*) serialize to a stream
/// - _tds__GetDPAddresses* _tds__GetDPAddresses::soap_dup(soap*) returns deep copy of _tds__GetDPAddresses, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDPAddresses::soap_del() deep deletes _tds__GetDPAddresses data members, use only after _tds__GetDPAddresses::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDPAddresses::soap_type() returns SOAP_TYPE__tds__GetDPAddresses or derived type identifier
class _tds__GetDPAddresses
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
/// @note class _tds__GetDPAddressesResponse operations:
/// - _tds__GetDPAddressesResponse* soap_new__tds__GetDPAddressesResponse(soap*) allocate and default initialize
/// - _tds__GetDPAddressesResponse* soap_new__tds__GetDPAddressesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDPAddressesResponse* soap_new_req__tds__GetDPAddressesResponse(soap*, ...) allocate, set required members
/// - _tds__GetDPAddressesResponse* soap_new_set__tds__GetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDPAddressesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDPAddressesResponse(soap*, _tds__GetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDPAddressesResponse(soap*, _tds__GetDPAddressesResponse*) serialize to a stream
/// - _tds__GetDPAddressesResponse* _tds__GetDPAddressesResponse::soap_dup(soap*) returns deep copy of _tds__GetDPAddressesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDPAddressesResponse::soap_del() deep deletes _tds__GetDPAddressesResponse data members, use only after _tds__GetDPAddressesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDPAddressesResponse::soap_type() returns SOAP_TYPE__tds__GetDPAddressesResponse or derived type identifier
class _tds__GetDPAddressesResponse
{ public:
/// Size of array of tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeDPAddress                0;
/// Pointer to array tt__NetworkHost* of size 0..unbounded.
    tt__NetworkHost*                    *DPAddress                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
/// @note class _tds__SetDPAddresses operations:
/// - _tds__SetDPAddresses* soap_new__tds__SetDPAddresses(soap*) allocate and default initialize
/// - _tds__SetDPAddresses* soap_new__tds__SetDPAddresses(soap*, int num) allocate and default initialize an array
/// - _tds__SetDPAddresses* soap_new_req__tds__SetDPAddresses(soap*, ...) allocate, set required members
/// - _tds__SetDPAddresses* soap_new_set__tds__SetDPAddresses(soap*, ...) allocate, set all public members
/// - _tds__SetDPAddresses::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDPAddresses(soap*, _tds__SetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__SetDPAddresses(soap*, _tds__SetDPAddresses*) serialize to a stream
/// - _tds__SetDPAddresses* _tds__SetDPAddresses::soap_dup(soap*) returns deep copy of _tds__SetDPAddresses, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDPAddresses::soap_del() deep deletes _tds__SetDPAddresses data members, use only after _tds__SetDPAddresses::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDPAddresses::soap_type() returns SOAP_TYPE__tds__SetDPAddresses or derived type identifier
class _tds__SetDPAddresses
{ public:
/// Size of array of tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeDPAddress                0;
/// Pointer to array tt__NetworkHost* of size 0..unbounded.
    tt__NetworkHost*                    *DPAddress                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
/// @note class _tds__SetDPAddressesResponse operations:
/// - _tds__SetDPAddressesResponse* soap_new__tds__SetDPAddressesResponse(soap*) allocate and default initialize
/// - _tds__SetDPAddressesResponse* soap_new__tds__SetDPAddressesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDPAddressesResponse* soap_new_req__tds__SetDPAddressesResponse(soap*, ...) allocate, set required members
/// - _tds__SetDPAddressesResponse* soap_new_set__tds__SetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDPAddressesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDPAddressesResponse(soap*, _tds__SetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__SetDPAddressesResponse(soap*, _tds__SetDPAddressesResponse*) serialize to a stream
/// - _tds__SetDPAddressesResponse* _tds__SetDPAddressesResponse::soap_dup(soap*) returns deep copy of _tds__SetDPAddressesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDPAddressesResponse::soap_del() deep deletes _tds__SetDPAddressesResponse data members, use only after _tds__SetDPAddressesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDPAddressesResponse::soap_type() returns SOAP_TYPE__tds__SetDPAddressesResponse or derived type identifier
class _tds__SetDPAddressesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
/// @note class _tds__GetEndpointReference operations:
/// - _tds__GetEndpointReference* soap_new__tds__GetEndpointReference(soap*) allocate and default initialize
/// - _tds__GetEndpointReference* soap_new__tds__GetEndpointReference(soap*, int num) allocate and default initialize an array
/// - _tds__GetEndpointReference* soap_new_req__tds__GetEndpointReference(soap*, ...) allocate, set required members
/// - _tds__GetEndpointReference* soap_new_set__tds__GetEndpointReference(soap*, ...) allocate, set all public members
/// - _tds__GetEndpointReference::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetEndpointReference(soap*, _tds__GetEndpointReference*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReference(soap*, _tds__GetEndpointReference*) serialize to a stream
/// - _tds__GetEndpointReference* _tds__GetEndpointReference::soap_dup(soap*) returns deep copy of _tds__GetEndpointReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetEndpointReference::soap_del() deep deletes _tds__GetEndpointReference data members, use only after _tds__GetEndpointReference::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetEndpointReference::soap_type() returns SOAP_TYPE__tds__GetEndpointReference or derived type identifier
class _tds__GetEndpointReference
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
/// @note class _tds__GetEndpointReferenceResponse operations:
/// - _tds__GetEndpointReferenceResponse* soap_new__tds__GetEndpointReferenceResponse(soap*) allocate and default initialize
/// - _tds__GetEndpointReferenceResponse* soap_new__tds__GetEndpointReferenceResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetEndpointReferenceResponse* soap_new_req__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set required members
/// - _tds__GetEndpointReferenceResponse* soap_new_set__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set all public members
/// - _tds__GetEndpointReferenceResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetEndpointReferenceResponse(soap*, _tds__GetEndpointReferenceResponse*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReferenceResponse(soap*, _tds__GetEndpointReferenceResponse*) serialize to a stream
/// - _tds__GetEndpointReferenceResponse* _tds__GetEndpointReferenceResponse::soap_dup(soap*) returns deep copy of _tds__GetEndpointReferenceResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetEndpointReferenceResponse::soap_del() deep deletes _tds__GetEndpointReferenceResponse data members, use only after _tds__GetEndpointReferenceResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetEndpointReferenceResponse::soap_type() returns SOAP_TYPE__tds__GetEndpointReferenceResponse or derived type identifier
class _tds__GetEndpointReferenceResponse
{ public:
/// Element "GUID" of type xs:string.
    char*                                GUID                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
/// @note class _tds__GetRemoteUser operations:
/// - _tds__GetRemoteUser* soap_new__tds__GetRemoteUser(soap*) allocate and default initialize
/// - _tds__GetRemoteUser* soap_new__tds__GetRemoteUser(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteUser* soap_new_req__tds__GetRemoteUser(soap*, ...) allocate, set required members
/// - _tds__GetRemoteUser* soap_new_set__tds__GetRemoteUser(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteUser(soap*, _tds__GetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUser(soap*, _tds__GetRemoteUser*) serialize to a stream
/// - _tds__GetRemoteUser* _tds__GetRemoteUser::soap_dup(soap*) returns deep copy of _tds__GetRemoteUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteUser::soap_del() deep deletes _tds__GetRemoteUser data members, use only after _tds__GetRemoteUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteUser::soap_type() returns SOAP_TYPE__tds__GetRemoteUser or derived type identifier
class _tds__GetRemoteUser
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
/// @note class _tds__GetRemoteUserResponse operations:
/// - _tds__GetRemoteUserResponse* soap_new__tds__GetRemoteUserResponse(soap*) allocate and default initialize
/// - _tds__GetRemoteUserResponse* soap_new__tds__GetRemoteUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteUserResponse* soap_new_req__tds__GetRemoteUserResponse(soap*, ...) allocate, set required members
/// - _tds__GetRemoteUserResponse* soap_new_set__tds__GetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteUserResponse(soap*, _tds__GetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUserResponse(soap*, _tds__GetRemoteUserResponse*) serialize to a stream
/// - _tds__GetRemoteUserResponse* _tds__GetRemoteUserResponse::soap_dup(soap*) returns deep copy of _tds__GetRemoteUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteUserResponse::soap_del() deep deletes _tds__GetRemoteUserResponse data members, use only after _tds__GetRemoteUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteUserResponse::soap_type() returns SOAP_TYPE__tds__GetRemoteUserResponse or derived type identifier
class _tds__GetRemoteUserResponse
{ public:
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
/// @note class _tds__SetRemoteUser operations:
/// - _tds__SetRemoteUser* soap_new__tds__SetRemoteUser(soap*) allocate and default initialize
/// - _tds__SetRemoteUser* soap_new__tds__SetRemoteUser(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteUser* soap_new_req__tds__SetRemoteUser(soap*, ...) allocate, set required members
/// - _tds__SetRemoteUser* soap_new_set__tds__SetRemoteUser(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteUser(soap*, _tds__SetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUser(soap*, _tds__SetRemoteUser*) serialize to a stream
/// - _tds__SetRemoteUser* _tds__SetRemoteUser::soap_dup(soap*) returns deep copy of _tds__SetRemoteUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteUser::soap_del() deep deletes _tds__SetRemoteUser data members, use only after _tds__SetRemoteUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteUser::soap_type() returns SOAP_TYPE__tds__SetRemoteUser or derived type identifier
class _tds__SetRemoteUser
{ public:
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
/// @note class _tds__SetRemoteUserResponse operations:
/// - _tds__SetRemoteUserResponse* soap_new__tds__SetRemoteUserResponse(soap*) allocate and default initialize
/// - _tds__SetRemoteUserResponse* soap_new__tds__SetRemoteUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteUserResponse* soap_new_req__tds__SetRemoteUserResponse(soap*, ...) allocate, set required members
/// - _tds__SetRemoteUserResponse* soap_new_set__tds__SetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteUserResponse(soap*, _tds__SetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUserResponse(soap*, _tds__SetRemoteUserResponse*) serialize to a stream
/// - _tds__SetRemoteUserResponse* _tds__SetRemoteUserResponse::soap_dup(soap*) returns deep copy of _tds__SetRemoteUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteUserResponse::soap_del() deep deletes _tds__SetRemoteUserResponse data members, use only after _tds__SetRemoteUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteUserResponse::soap_type() returns SOAP_TYPE__tds__SetRemoteUserResponse or derived type identifier
class _tds__SetRemoteUserResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
/// @note class _tds__GetUsers operations:
/// - _tds__GetUsers* soap_new__tds__GetUsers(soap*) allocate and default initialize
/// - _tds__GetUsers* soap_new__tds__GetUsers(soap*, int num) allocate and default initialize an array
/// - _tds__GetUsers* soap_new_req__tds__GetUsers(soap*, ...) allocate, set required members
/// - _tds__GetUsers* soap_new_set__tds__GetUsers(soap*, ...) allocate, set all public members
/// - _tds__GetUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetUsers(soap*, _tds__GetUsers*) deserialize from a stream
/// - int soap_write__tds__GetUsers(soap*, _tds__GetUsers*) serialize to a stream
/// - _tds__GetUsers* _tds__GetUsers::soap_dup(soap*) returns deep copy of _tds__GetUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetUsers::soap_del() deep deletes _tds__GetUsers data members, use only after _tds__GetUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetUsers::soap_type() returns SOAP_TYPE__tds__GetUsers or derived type identifier
class _tds__GetUsers
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
/// @note class _tds__GetUsersResponse operations:
/// - _tds__GetUsersResponse* soap_new__tds__GetUsersResponse(soap*) allocate and default initialize
/// - _tds__GetUsersResponse* soap_new__tds__GetUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetUsersResponse* soap_new_req__tds__GetUsersResponse(soap*, ...) allocate, set required members
/// - _tds__GetUsersResponse* soap_new_set__tds__GetUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__GetUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetUsersResponse(soap*, _tds__GetUsersResponse*) deserialize from a stream
/// - int soap_write__tds__GetUsersResponse(soap*, _tds__GetUsersResponse*) serialize to a stream
/// - _tds__GetUsersResponse* _tds__GetUsersResponse::soap_dup(soap*) returns deep copy of _tds__GetUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetUsersResponse::soap_del() deep deletes _tds__GetUsersResponse data members, use only after _tds__GetUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetUsersResponse::soap_type() returns SOAP_TYPE__tds__GetUsersResponse or derived type identifier
class _tds__GetUsersResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__User* is 0..unbounded.
  $ int                                  __sizeUser                     0;
/// Pointer to array tt__User* of size 0..unbounded.
    tt__User*                           *User                           0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
/// @note class _tds__CreateUsers operations:
/// - _tds__CreateUsers* soap_new__tds__CreateUsers(soap*) allocate and default initialize
/// - _tds__CreateUsers* soap_new__tds__CreateUsers(soap*, int num) allocate and default initialize an array
/// - _tds__CreateUsers* soap_new_req__tds__CreateUsers(soap*, ...) allocate, set required members
/// - _tds__CreateUsers* soap_new_set__tds__CreateUsers(soap*, ...) allocate, set all public members
/// - _tds__CreateUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateUsers(soap*, _tds__CreateUsers*) deserialize from a stream
/// - int soap_write__tds__CreateUsers(soap*, _tds__CreateUsers*) serialize to a stream
/// - _tds__CreateUsers* _tds__CreateUsers::soap_dup(soap*) returns deep copy of _tds__CreateUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateUsers::soap_del() deep deletes _tds__CreateUsers data members, use only after _tds__CreateUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateUsers::soap_type() returns SOAP_TYPE__tds__CreateUsers or derived type identifier
class _tds__CreateUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__User* is 1..unbounded.
  $ int                                  __sizeUser                     1;
/// Pointer to array tt__User* of size 1..unbounded.
    tt__User*                           *User                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
/// @note class _tds__CreateUsersResponse operations:
/// - _tds__CreateUsersResponse* soap_new__tds__CreateUsersResponse(soap*) allocate and default initialize
/// - _tds__CreateUsersResponse* soap_new__tds__CreateUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateUsersResponse* soap_new_req__tds__CreateUsersResponse(soap*, ...) allocate, set required members
/// - _tds__CreateUsersResponse* soap_new_set__tds__CreateUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateUsersResponse(soap*, _tds__CreateUsersResponse*) deserialize from a stream
/// - int soap_write__tds__CreateUsersResponse(soap*, _tds__CreateUsersResponse*) serialize to a stream
/// - _tds__CreateUsersResponse* _tds__CreateUsersResponse::soap_dup(soap*) returns deep copy of _tds__CreateUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateUsersResponse::soap_del() deep deletes _tds__CreateUsersResponse data members, use only after _tds__CreateUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateUsersResponse::soap_type() returns SOAP_TYPE__tds__CreateUsersResponse or derived type identifier
class _tds__CreateUsersResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
/// @note class _tds__DeleteUsers operations:
/// - _tds__DeleteUsers* soap_new__tds__DeleteUsers(soap*) allocate and default initialize
/// - _tds__DeleteUsers* soap_new__tds__DeleteUsers(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteUsers* soap_new_req__tds__DeleteUsers(soap*, ...) allocate, set required members
/// - _tds__DeleteUsers* soap_new_set__tds__DeleteUsers(soap*, ...) allocate, set all public members
/// - _tds__DeleteUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteUsers(soap*, _tds__DeleteUsers*) deserialize from a stream
/// - int soap_write__tds__DeleteUsers(soap*, _tds__DeleteUsers*) serialize to a stream
/// - _tds__DeleteUsers* _tds__DeleteUsers::soap_dup(soap*) returns deep copy of _tds__DeleteUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteUsers::soap_del() deep deletes _tds__DeleteUsers data members, use only after _tds__DeleteUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteUsers::soap_type() returns SOAP_TYPE__tds__DeleteUsers or derived type identifier
class _tds__DeleteUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char* is 1..unbounded.
  $ int                                  __sizeUsername                 1;
/// Pointer to array char* of size 1..unbounded.
    char*                               *Username                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
/// @note class _tds__DeleteUsersResponse operations:
/// - _tds__DeleteUsersResponse* soap_new__tds__DeleteUsersResponse(soap*) allocate and default initialize
/// - _tds__DeleteUsersResponse* soap_new__tds__DeleteUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteUsersResponse* soap_new_req__tds__DeleteUsersResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteUsersResponse* soap_new_set__tds__DeleteUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteUsersResponse(soap*, _tds__DeleteUsersResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteUsersResponse(soap*, _tds__DeleteUsersResponse*) serialize to a stream
/// - _tds__DeleteUsersResponse* _tds__DeleteUsersResponse::soap_dup(soap*) returns deep copy of _tds__DeleteUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteUsersResponse::soap_del() deep deletes _tds__DeleteUsersResponse data members, use only after _tds__DeleteUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteUsersResponse::soap_type() returns SOAP_TYPE__tds__DeleteUsersResponse or derived type identifier
class _tds__DeleteUsersResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
/// @note class _tds__SetUser operations:
/// - _tds__SetUser* soap_new__tds__SetUser(soap*) allocate and default initialize
/// - _tds__SetUser* soap_new__tds__SetUser(soap*, int num) allocate and default initialize an array
/// - _tds__SetUser* soap_new_req__tds__SetUser(soap*, ...) allocate, set required members
/// - _tds__SetUser* soap_new_set__tds__SetUser(soap*, ...) allocate, set all public members
/// - _tds__SetUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetUser(soap*, _tds__SetUser*) deserialize from a stream
/// - int soap_write__tds__SetUser(soap*, _tds__SetUser*) serialize to a stream
/// - _tds__SetUser* _tds__SetUser::soap_dup(soap*) returns deep copy of _tds__SetUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetUser::soap_del() deep deletes _tds__SetUser data members, use only after _tds__SetUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetUser::soap_type() returns SOAP_TYPE__tds__SetUser or derived type identifier
class _tds__SetUser
{ public:
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__User* is 1..unbounded.
  $ int                                  __sizeUser                     1;
/// Pointer to array tt__User* of size 1..unbounded.
    tt__User*                           *User                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
/// @note class _tds__SetUserResponse operations:
/// - _tds__SetUserResponse* soap_new__tds__SetUserResponse(soap*) allocate and default initialize
/// - _tds__SetUserResponse* soap_new__tds__SetUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetUserResponse* soap_new_req__tds__SetUserResponse(soap*, ...) allocate, set required members
/// - _tds__SetUserResponse* soap_new_set__tds__SetUserResponse(soap*, ...) allocate, set all public members
/// - _tds__SetUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetUserResponse(soap*, _tds__SetUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetUserResponse(soap*, _tds__SetUserResponse*) serialize to a stream
/// - _tds__SetUserResponse* _tds__SetUserResponse::soap_dup(soap*) returns deep copy of _tds__SetUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetUserResponse::soap_del() deep deletes _tds__SetUserResponse data members, use only after _tds__SetUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetUserResponse::soap_type() returns SOAP_TYPE__tds__SetUserResponse or derived type identifier
class _tds__SetUserResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
/// @note class _tds__GetWsdlUrl operations:
/// - _tds__GetWsdlUrl* soap_new__tds__GetWsdlUrl(soap*) allocate and default initialize
/// - _tds__GetWsdlUrl* soap_new__tds__GetWsdlUrl(soap*, int num) allocate and default initialize an array
/// - _tds__GetWsdlUrl* soap_new_req__tds__GetWsdlUrl(soap*, ...) allocate, set required members
/// - _tds__GetWsdlUrl* soap_new_set__tds__GetWsdlUrl(soap*, ...) allocate, set all public members
/// - _tds__GetWsdlUrl::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetWsdlUrl(soap*, _tds__GetWsdlUrl*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrl(soap*, _tds__GetWsdlUrl*) serialize to a stream
/// - _tds__GetWsdlUrl* _tds__GetWsdlUrl::soap_dup(soap*) returns deep copy of _tds__GetWsdlUrl, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetWsdlUrl::soap_del() deep deletes _tds__GetWsdlUrl data members, use only after _tds__GetWsdlUrl::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetWsdlUrl::soap_type() returns SOAP_TYPE__tds__GetWsdlUrl or derived type identifier
class _tds__GetWsdlUrl
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
/// @note class _tds__GetWsdlUrlResponse operations:
/// - _tds__GetWsdlUrlResponse* soap_new__tds__GetWsdlUrlResponse(soap*) allocate and default initialize
/// - _tds__GetWsdlUrlResponse* soap_new__tds__GetWsdlUrlResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetWsdlUrlResponse* soap_new_req__tds__GetWsdlUrlResponse(soap*, ...) allocate, set required members
/// - _tds__GetWsdlUrlResponse* soap_new_set__tds__GetWsdlUrlResponse(soap*, ...) allocate, set all public members
/// - _tds__GetWsdlUrlResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetWsdlUrlResponse(soap*, _tds__GetWsdlUrlResponse*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrlResponse(soap*, _tds__GetWsdlUrlResponse*) serialize to a stream
/// - _tds__GetWsdlUrlResponse* _tds__GetWsdlUrlResponse::soap_dup(soap*) returns deep copy of _tds__GetWsdlUrlResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetWsdlUrlResponse::soap_del() deep deletes _tds__GetWsdlUrlResponse data members, use only after _tds__GetWsdlUrlResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetWsdlUrlResponse::soap_type() returns SOAP_TYPE__tds__GetWsdlUrlResponse or derived type identifier
class _tds__GetWsdlUrlResponse
{ public:
/// Element "WsdlUrl" of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
/// @note class _tds__GetCapabilities operations:
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(soap*) allocate and default initialize
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(soap*, int num) allocate and default initialize an array
/// - _tds__GetCapabilities* soap_new_req__tds__GetCapabilities(soap*, ...) allocate, set required members
/// - _tds__GetCapabilities* soap_new_set__tds__GetCapabilities(soap*, ...) allocate, set all public members
/// - _tds__GetCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCapabilities(soap*, _tds__GetCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetCapabilities(soap*, _tds__GetCapabilities*) serialize to a stream
/// - _tds__GetCapabilities* _tds__GetCapabilities::soap_dup(soap*) returns deep copy of _tds__GetCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCapabilities::soap_del() deep deletes _tds__GetCapabilities data members, use only after _tds__GetCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCapabilities::soap_type() returns SOAP_TYPE__tds__GetCapabilities or derived type identifier
class _tds__GetCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__CapabilityCategory is 0..unbounded.
  $ int                                  __sizeCategory                 0;
/// Pointer to array enum tt__CapabilityCategory of size 0..unbounded.
    enum tt__CapabilityCategory         *Category                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
/// @note class _tds__GetCapabilitiesResponse operations:
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(soap*) allocate and default initialize
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCapabilitiesResponse* soap_new_req__tds__GetCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCapabilitiesResponse* soap_new_set__tds__GetCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCapabilitiesResponse(soap*, _tds__GetCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCapabilitiesResponse(soap*, _tds__GetCapabilitiesResponse*) serialize to a stream
/// - _tds__GetCapabilitiesResponse* _tds__GetCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tds__GetCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCapabilitiesResponse::soap_del() deep deletes _tds__GetCapabilitiesResponse data members, use only after _tds__GetCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCapabilitiesResponse::soap_type() returns SOAP_TYPE__tds__GetCapabilitiesResponse or derived type identifier
class _tds__GetCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Capabilities.
    tt__Capabilities*                    Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
/// @note class _tds__GetHostname operations:
/// - _tds__GetHostname* soap_new__tds__GetHostname(soap*) allocate and default initialize
/// - _tds__GetHostname* soap_new__tds__GetHostname(soap*, int num) allocate and default initialize an array
/// - _tds__GetHostname* soap_new_req__tds__GetHostname(soap*, ...) allocate, set required members
/// - _tds__GetHostname* soap_new_set__tds__GetHostname(soap*, ...) allocate, set all public members
/// - _tds__GetHostname::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetHostname(soap*, _tds__GetHostname*) deserialize from a stream
/// - int soap_write__tds__GetHostname(soap*, _tds__GetHostname*) serialize to a stream
/// - _tds__GetHostname* _tds__GetHostname::soap_dup(soap*) returns deep copy of _tds__GetHostname, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetHostname::soap_del() deep deletes _tds__GetHostname data members, use only after _tds__GetHostname::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetHostname::soap_type() returns SOAP_TYPE__tds__GetHostname or derived type identifier
class _tds__GetHostname
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
/// @note class _tds__GetHostnameResponse operations:
/// - _tds__GetHostnameResponse* soap_new__tds__GetHostnameResponse(soap*) allocate and default initialize
/// - _tds__GetHostnameResponse* soap_new__tds__GetHostnameResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetHostnameResponse* soap_new_req__tds__GetHostnameResponse(soap*, ...) allocate, set required members
/// - _tds__GetHostnameResponse* soap_new_set__tds__GetHostnameResponse(soap*, ...) allocate, set all public members
/// - _tds__GetHostnameResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetHostnameResponse(soap*, _tds__GetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__GetHostnameResponse(soap*, _tds__GetHostnameResponse*) serialize to a stream
/// - _tds__GetHostnameResponse* _tds__GetHostnameResponse::soap_dup(soap*) returns deep copy of _tds__GetHostnameResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetHostnameResponse::soap_del() deep deletes _tds__GetHostnameResponse data members, use only after _tds__GetHostnameResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetHostnameResponse::soap_type() returns SOAP_TYPE__tds__GetHostnameResponse or derived type identifier
class _tds__GetHostnameResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
///
/// Element "HostnameInformation" of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    tt__HostnameInformation*             HostnameInformation            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
/// @note class _tds__SetHostname operations:
/// - _tds__SetHostname* soap_new__tds__SetHostname(soap*) allocate and default initialize
/// - _tds__SetHostname* soap_new__tds__SetHostname(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostname* soap_new_req__tds__SetHostname(soap*, ...) allocate, set required members
/// - _tds__SetHostname* soap_new_set__tds__SetHostname(soap*, ...) allocate, set all public members
/// - _tds__SetHostname::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostname(soap*, _tds__SetHostname*) deserialize from a stream
/// - int soap_write__tds__SetHostname(soap*, _tds__SetHostname*) serialize to a stream
/// - _tds__SetHostname* _tds__SetHostname::soap_dup(soap*) returns deep copy of _tds__SetHostname, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostname::soap_del() deep deletes _tds__SetHostname data members, use only after _tds__SetHostname::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostname::soap_type() returns SOAP_TYPE__tds__SetHostname or derived type identifier
class _tds__SetHostname
{ public:
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
/// @note class _tds__SetHostnameResponse operations:
/// - _tds__SetHostnameResponse* soap_new__tds__SetHostnameResponse(soap*) allocate and default initialize
/// - _tds__SetHostnameResponse* soap_new__tds__SetHostnameResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameResponse* soap_new_req__tds__SetHostnameResponse(soap*, ...) allocate, set required members
/// - _tds__SetHostnameResponse* soap_new_set__tds__SetHostnameResponse(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameResponse(soap*, _tds__SetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameResponse(soap*, _tds__SetHostnameResponse*) serialize to a stream
/// - _tds__SetHostnameResponse* _tds__SetHostnameResponse::soap_dup(soap*) returns deep copy of _tds__SetHostnameResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameResponse::soap_del() deep deletes _tds__SetHostnameResponse data members, use only after _tds__SetHostnameResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameResponse::soap_type() returns SOAP_TYPE__tds__SetHostnameResponse or derived type identifier
class _tds__SetHostnameResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
/// @note class _tds__SetHostnameFromDHCP operations:
/// - _tds__SetHostnameFromDHCP* soap_new__tds__SetHostnameFromDHCP(soap*) allocate and default initialize
/// - _tds__SetHostnameFromDHCP* soap_new__tds__SetHostnameFromDHCP(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameFromDHCP* soap_new_req__tds__SetHostnameFromDHCP(soap*, ...) allocate, set required members
/// - _tds__SetHostnameFromDHCP* soap_new_set__tds__SetHostnameFromDHCP(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameFromDHCP::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCP(soap*, _tds__SetHostnameFromDHCP*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCP(soap*, _tds__SetHostnameFromDHCP*) serialize to a stream
/// - _tds__SetHostnameFromDHCP* _tds__SetHostnameFromDHCP::soap_dup(soap*) returns deep copy of _tds__SetHostnameFromDHCP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameFromDHCP::soap_del() deep deletes _tds__SetHostnameFromDHCP data members, use only after _tds__SetHostnameFromDHCP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameFromDHCP::soap_type() returns SOAP_TYPE__tds__SetHostnameFromDHCP or derived type identifier
class _tds__SetHostnameFromDHCP
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
/// @note class _tds__SetHostnameFromDHCPResponse operations:
/// - _tds__SetHostnameFromDHCPResponse* soap_new__tds__SetHostnameFromDHCPResponse(soap*) allocate and default initialize
/// - _tds__SetHostnameFromDHCPResponse* soap_new__tds__SetHostnameFromDHCPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameFromDHCPResponse* soap_new_req__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set required members
/// - _tds__SetHostnameFromDHCPResponse* soap_new_set__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameFromDHCPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCPResponse(soap*, _tds__SetHostnameFromDHCPResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCPResponse(soap*, _tds__SetHostnameFromDHCPResponse*) serialize to a stream
/// - _tds__SetHostnameFromDHCPResponse* _tds__SetHostnameFromDHCPResponse::soap_dup(soap*) returns deep copy of _tds__SetHostnameFromDHCPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameFromDHCPResponse::soap_del() deep deletes _tds__SetHostnameFromDHCPResponse data members, use only after _tds__SetHostnameFromDHCPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameFromDHCPResponse::soap_type() returns SOAP_TYPE__tds__SetHostnameFromDHCPResponse or derived type identifier
class _tds__SetHostnameFromDHCPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
/// @note class _tds__GetDNS operations:
/// - _tds__GetDNS* soap_new__tds__GetDNS(soap*) allocate and default initialize
/// - _tds__GetDNS* soap_new__tds__GetDNS(soap*, int num) allocate and default initialize an array
/// - _tds__GetDNS* soap_new_req__tds__GetDNS(soap*, ...) allocate, set required members
/// - _tds__GetDNS* soap_new_set__tds__GetDNS(soap*, ...) allocate, set all public members
/// - _tds__GetDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDNS(soap*, _tds__GetDNS*) deserialize from a stream
/// - int soap_write__tds__GetDNS(soap*, _tds__GetDNS*) serialize to a stream
/// - _tds__GetDNS* _tds__GetDNS::soap_dup(soap*) returns deep copy of _tds__GetDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDNS::soap_del() deep deletes _tds__GetDNS data members, use only after _tds__GetDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDNS::soap_type() returns SOAP_TYPE__tds__GetDNS or derived type identifier
class _tds__GetDNS
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
/// @note class _tds__GetDNSResponse operations:
/// - _tds__GetDNSResponse* soap_new__tds__GetDNSResponse(soap*) allocate and default initialize
/// - _tds__GetDNSResponse* soap_new__tds__GetDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDNSResponse* soap_new_req__tds__GetDNSResponse(soap*, ...) allocate, set required members
/// - _tds__GetDNSResponse* soap_new_set__tds__GetDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDNSResponse(soap*, _tds__GetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDNSResponse(soap*, _tds__GetDNSResponse*) serialize to a stream
/// - _tds__GetDNSResponse* _tds__GetDNSResponse::soap_dup(soap*) returns deep copy of _tds__GetDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDNSResponse::soap_del() deep deletes _tds__GetDNSResponse data members, use only after _tds__GetDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDNSResponse::soap_type() returns SOAP_TYPE__tds__GetDNSResponse or derived type identifier
class _tds__GetDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSInformation" of type "http://www.onvif.org/ver10/schema":DNSInformation.
    tt__DNSInformation*                  DNSInformation                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
/// @note class _tds__SetDNS operations:
/// - _tds__SetDNS* soap_new__tds__SetDNS(soap*) allocate and default initialize
/// - _tds__SetDNS* soap_new__tds__SetDNS(soap*, int num) allocate and default initialize an array
/// - _tds__SetDNS* soap_new_req__tds__SetDNS(soap*, ...) allocate, set required members
/// - _tds__SetDNS* soap_new_set__tds__SetDNS(soap*, ...) allocate, set all public members
/// - _tds__SetDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDNS(soap*, _tds__SetDNS*) deserialize from a stream
/// - int soap_write__tds__SetDNS(soap*, _tds__SetDNS*) serialize to a stream
/// - _tds__SetDNS* _tds__SetDNS::soap_dup(soap*) returns deep copy of _tds__SetDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDNS::soap_del() deep deletes _tds__SetDNS data members, use only after _tds__SetDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDNS::soap_type() returns SOAP_TYPE__tds__SetDNS or derived type identifier
class _tds__SetDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token is 0..unbounded.
  $ int                                  __sizeSearchDomain             0;
/// Pointer to array xsd__token of size 0..unbounded.
    xsd__token                          *SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSManual                0;
/// Pointer to array tt__IPAddress* of size 0..unbounded.
    tt__IPAddress*                      *DNSManual                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
/// @note class _tds__SetDNSResponse operations:
/// - _tds__SetDNSResponse* soap_new__tds__SetDNSResponse(soap*) allocate and default initialize
/// - _tds__SetDNSResponse* soap_new__tds__SetDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDNSResponse* soap_new_req__tds__SetDNSResponse(soap*, ...) allocate, set required members
/// - _tds__SetDNSResponse* soap_new_set__tds__SetDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDNSResponse(soap*, _tds__SetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDNSResponse(soap*, _tds__SetDNSResponse*) serialize to a stream
/// - _tds__SetDNSResponse* _tds__SetDNSResponse::soap_dup(soap*) returns deep copy of _tds__SetDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDNSResponse::soap_del() deep deletes _tds__SetDNSResponse data members, use only after _tds__SetDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDNSResponse::soap_type() returns SOAP_TYPE__tds__SetDNSResponse or derived type identifier
class _tds__SetDNSResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
/// @note class _tds__GetNTP operations:
/// - _tds__GetNTP* soap_new__tds__GetNTP(soap*) allocate and default initialize
/// - _tds__GetNTP* soap_new__tds__GetNTP(soap*, int num) allocate and default initialize an array
/// - _tds__GetNTP* soap_new_req__tds__GetNTP(soap*, ...) allocate, set required members
/// - _tds__GetNTP* soap_new_set__tds__GetNTP(soap*, ...) allocate, set all public members
/// - _tds__GetNTP::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNTP(soap*, _tds__GetNTP*) deserialize from a stream
/// - int soap_write__tds__GetNTP(soap*, _tds__GetNTP*) serialize to a stream
/// - _tds__GetNTP* _tds__GetNTP::soap_dup(soap*) returns deep copy of _tds__GetNTP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNTP::soap_del() deep deletes _tds__GetNTP data members, use only after _tds__GetNTP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNTP::soap_type() returns SOAP_TYPE__tds__GetNTP or derived type identifier
class _tds__GetNTP
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
/// @note class _tds__GetNTPResponse operations:
/// - _tds__GetNTPResponse* soap_new__tds__GetNTPResponse(soap*) allocate and default initialize
/// - _tds__GetNTPResponse* soap_new__tds__GetNTPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNTPResponse* soap_new_req__tds__GetNTPResponse(soap*, ...) allocate, set required members
/// - _tds__GetNTPResponse* soap_new_set__tds__GetNTPResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNTPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNTPResponse(soap*, _tds__GetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__GetNTPResponse(soap*, _tds__GetNTPResponse*) serialize to a stream
/// - _tds__GetNTPResponse* _tds__GetNTPResponse::soap_dup(soap*) returns deep copy of _tds__GetNTPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNTPResponse::soap_del() deep deletes _tds__GetNTPResponse data members, use only after _tds__GetNTPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNTPResponse::soap_type() returns SOAP_TYPE__tds__GetNTPResponse or derived type identifier
class _tds__GetNTPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
///
/// Element "NTPInformation" of type "http://www.onvif.org/ver10/schema":NTPInformation.
    tt__NTPInformation*                  NTPInformation                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
/// @note class _tds__SetNTP operations:
/// - _tds__SetNTP* soap_new__tds__SetNTP(soap*) allocate and default initialize
/// - _tds__SetNTP* soap_new__tds__SetNTP(soap*, int num) allocate and default initialize an array
/// - _tds__SetNTP* soap_new_req__tds__SetNTP(soap*, ...) allocate, set required members
/// - _tds__SetNTP* soap_new_set__tds__SetNTP(soap*, ...) allocate, set all public members
/// - _tds__SetNTP::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNTP(soap*, _tds__SetNTP*) deserialize from a stream
/// - int soap_write__tds__SetNTP(soap*, _tds__SetNTP*) serialize to a stream
/// - _tds__SetNTP* _tds__SetNTP::soap_dup(soap*) returns deep copy of _tds__SetNTP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNTP::soap_del() deep deletes _tds__SetNTP data members, use only after _tds__SetNTP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNTP::soap_type() returns SOAP_TYPE__tds__SetNTP or derived type identifier
class _tds__SetNTP
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPManual                0;
/// Pointer to array tt__NetworkHost* of size 0..unbounded.
    tt__NetworkHost*                    *NTPManual                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
/// @note class _tds__SetNTPResponse operations:
/// - _tds__SetNTPResponse* soap_new__tds__SetNTPResponse(soap*) allocate and default initialize
/// - _tds__SetNTPResponse* soap_new__tds__SetNTPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNTPResponse* soap_new_req__tds__SetNTPResponse(soap*, ...) allocate, set required members
/// - _tds__SetNTPResponse* soap_new_set__tds__SetNTPResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNTPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNTPResponse(soap*, _tds__SetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__SetNTPResponse(soap*, _tds__SetNTPResponse*) serialize to a stream
/// - _tds__SetNTPResponse* _tds__SetNTPResponse::soap_dup(soap*) returns deep copy of _tds__SetNTPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNTPResponse::soap_del() deep deletes _tds__SetNTPResponse data members, use only after _tds__SetNTPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNTPResponse::soap_type() returns SOAP_TYPE__tds__SetNTPResponse or derived type identifier
class _tds__SetNTPResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
/// @note class _tds__GetDynamicDNS operations:
/// - _tds__GetDynamicDNS* soap_new__tds__GetDynamicDNS(soap*) allocate and default initialize
/// - _tds__GetDynamicDNS* soap_new__tds__GetDynamicDNS(soap*, int num) allocate and default initialize an array
/// - _tds__GetDynamicDNS* soap_new_req__tds__GetDynamicDNS(soap*, ...) allocate, set required members
/// - _tds__GetDynamicDNS* soap_new_set__tds__GetDynamicDNS(soap*, ...) allocate, set all public members
/// - _tds__GetDynamicDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDynamicDNS(soap*, _tds__GetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNS(soap*, _tds__GetDynamicDNS*) serialize to a stream
/// - _tds__GetDynamicDNS* _tds__GetDynamicDNS::soap_dup(soap*) returns deep copy of _tds__GetDynamicDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDynamicDNS::soap_del() deep deletes _tds__GetDynamicDNS data members, use only after _tds__GetDynamicDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDynamicDNS::soap_type() returns SOAP_TYPE__tds__GetDynamicDNS or derived type identifier
class _tds__GetDynamicDNS
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
/// @note class _tds__GetDynamicDNSResponse operations:
/// - _tds__GetDynamicDNSResponse* soap_new__tds__GetDynamicDNSResponse(soap*) allocate and default initialize
/// - _tds__GetDynamicDNSResponse* soap_new__tds__GetDynamicDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDynamicDNSResponse* soap_new_req__tds__GetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - _tds__GetDynamicDNSResponse* soap_new_set__tds__GetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDynamicDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDynamicDNSResponse(soap*, _tds__GetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNSResponse(soap*, _tds__GetDynamicDNSResponse*) serialize to a stream
/// - _tds__GetDynamicDNSResponse* _tds__GetDynamicDNSResponse::soap_dup(soap*) returns deep copy of _tds__GetDynamicDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDynamicDNSResponse::soap_del() deep deletes _tds__GetDynamicDNSResponse data members, use only after _tds__GetDynamicDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDynamicDNSResponse::soap_type() returns SOAP_TYPE__tds__GetDynamicDNSResponse or derived type identifier
class _tds__GetDynamicDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynamicDNSInformation" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    tt__DynamicDNSInformation*           DynamicDNSInformation          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
/// @note class _tds__SetDynamicDNS operations:
/// - _tds__SetDynamicDNS* soap_new__tds__SetDynamicDNS(soap*) allocate and default initialize
/// - _tds__SetDynamicDNS* soap_new__tds__SetDynamicDNS(soap*, int num) allocate and default initialize an array
/// - _tds__SetDynamicDNS* soap_new_req__tds__SetDynamicDNS(soap*, ...) allocate, set required members
/// - _tds__SetDynamicDNS* soap_new_set__tds__SetDynamicDNS(soap*, ...) allocate, set all public members
/// - _tds__SetDynamicDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDynamicDNS(soap*, _tds__SetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNS(soap*, _tds__SetDynamicDNS*) serialize to a stream
/// - _tds__SetDynamicDNS* _tds__SetDynamicDNS::soap_dup(soap*) returns deep copy of _tds__SetDynamicDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDynamicDNS::soap_del() deep deletes _tds__SetDynamicDNS data members, use only after _tds__SetDynamicDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDynamicDNS::soap_type() returns SOAP_TYPE__tds__SetDynamicDNS or derived type identifier
class _tds__SetDynamicDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration                        TTL                            0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
/// @note class _tds__SetDynamicDNSResponse operations:
/// - _tds__SetDynamicDNSResponse* soap_new__tds__SetDynamicDNSResponse(soap*) allocate and default initialize
/// - _tds__SetDynamicDNSResponse* soap_new__tds__SetDynamicDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDynamicDNSResponse* soap_new_req__tds__SetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - _tds__SetDynamicDNSResponse* soap_new_set__tds__SetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDynamicDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDynamicDNSResponse(soap*, _tds__SetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNSResponse(soap*, _tds__SetDynamicDNSResponse*) serialize to a stream
/// - _tds__SetDynamicDNSResponse* _tds__SetDynamicDNSResponse::soap_dup(soap*) returns deep copy of _tds__SetDynamicDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDynamicDNSResponse::soap_del() deep deletes _tds__SetDynamicDNSResponse data members, use only after _tds__SetDynamicDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDynamicDNSResponse::soap_type() returns SOAP_TYPE__tds__SetDynamicDNSResponse or derived type identifier
class _tds__SetDynamicDNSResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
/// @note class _tds__GetNetworkInterfaces operations:
/// - _tds__GetNetworkInterfaces* soap_new__tds__GetNetworkInterfaces(soap*) allocate and default initialize
/// - _tds__GetNetworkInterfaces* soap_new__tds__GetNetworkInterfaces(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkInterfaces* soap_new_req__tds__GetNetworkInterfaces(soap*, ...) allocate, set required members
/// - _tds__GetNetworkInterfaces* soap_new_set__tds__GetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkInterfaces::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkInterfaces(soap*, _tds__GetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfaces(soap*, _tds__GetNetworkInterfaces*) serialize to a stream
/// - _tds__GetNetworkInterfaces* _tds__GetNetworkInterfaces::soap_dup(soap*) returns deep copy of _tds__GetNetworkInterfaces, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkInterfaces::soap_del() deep deletes _tds__GetNetworkInterfaces data members, use only after _tds__GetNetworkInterfaces::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkInterfaces::soap_type() returns SOAP_TYPE__tds__GetNetworkInterfaces or derived type identifier
class _tds__GetNetworkInterfaces
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
/// @note class _tds__GetNetworkInterfacesResponse operations:
/// - _tds__GetNetworkInterfacesResponse* soap_new__tds__GetNetworkInterfacesResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkInterfacesResponse* soap_new__tds__GetNetworkInterfacesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkInterfacesResponse* soap_new_req__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkInterfacesResponse* soap_new_set__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkInterfacesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkInterfacesResponse(soap*, _tds__GetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfacesResponse(soap*, _tds__GetNetworkInterfacesResponse*) serialize to a stream
/// - _tds__GetNetworkInterfacesResponse* _tds__GetNetworkInterfacesResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkInterfacesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkInterfacesResponse::soap_del() deep deletes _tds__GetNetworkInterfacesResponse data members, use only after _tds__GetNetworkInterfacesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkInterfacesResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkInterfacesResponse or derived type identifier
class _tds__GetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkInterface* is 1..unbounded.
  $ int                                  __sizeNetworkInterfaces        1;
/// Pointer to array tt__NetworkInterface* of size 1..unbounded.
    tt__NetworkInterface*               *NetworkInterfaces              1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
/// @note class _tds__SetNetworkInterfaces operations:
/// - _tds__SetNetworkInterfaces* soap_new__tds__SetNetworkInterfaces(soap*) allocate and default initialize
/// - _tds__SetNetworkInterfaces* soap_new__tds__SetNetworkInterfaces(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkInterfaces* soap_new_req__tds__SetNetworkInterfaces(soap*, ...) allocate, set required members
/// - _tds__SetNetworkInterfaces* soap_new_set__tds__SetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkInterfaces::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkInterfaces(soap*, _tds__SetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfaces(soap*, _tds__SetNetworkInterfaces*) serialize to a stream
/// - _tds__SetNetworkInterfaces* _tds__SetNetworkInterfaces::soap_dup(soap*) returns deep copy of _tds__SetNetworkInterfaces, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkInterfaces::soap_del() deep deletes _tds__SetNetworkInterfaces data members, use only after _tds__SetNetworkInterfaces::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkInterfaces::soap_type() returns SOAP_TYPE__tds__SetNetworkInterfaces or derived type identifier
class _tds__SetNetworkInterfaces
{ public:
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkInterface" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
/// @note class _tds__SetNetworkInterfacesResponse operations:
/// - _tds__SetNetworkInterfacesResponse* soap_new__tds__SetNetworkInterfacesResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkInterfacesResponse* soap_new__tds__SetNetworkInterfacesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkInterfacesResponse* soap_new_req__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkInterfacesResponse* soap_new_set__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkInterfacesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkInterfacesResponse(soap*, _tds__SetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfacesResponse(soap*, _tds__SetNetworkInterfacesResponse*) serialize to a stream
/// - _tds__SetNetworkInterfacesResponse* _tds__SetNetworkInterfacesResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkInterfacesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkInterfacesResponse::soap_del() deep deletes _tds__SetNetworkInterfacesResponse data members, use only after _tds__SetNetworkInterfacesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkInterfacesResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkInterfacesResponse or derived type identifier
class _tds__SetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
/// @note class _tds__GetNetworkProtocols operations:
/// - _tds__GetNetworkProtocols* soap_new__tds__GetNetworkProtocols(soap*) allocate and default initialize
/// - _tds__GetNetworkProtocols* soap_new__tds__GetNetworkProtocols(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkProtocols* soap_new_req__tds__GetNetworkProtocols(soap*, ...) allocate, set required members
/// - _tds__GetNetworkProtocols* soap_new_set__tds__GetNetworkProtocols(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkProtocols::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkProtocols(soap*, _tds__GetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocols(soap*, _tds__GetNetworkProtocols*) serialize to a stream
/// - _tds__GetNetworkProtocols* _tds__GetNetworkProtocols::soap_dup(soap*) returns deep copy of _tds__GetNetworkProtocols, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkProtocols::soap_del() deep deletes _tds__GetNetworkProtocols data members, use only after _tds__GetNetworkProtocols::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkProtocols::soap_type() returns SOAP_TYPE__tds__GetNetworkProtocols or derived type identifier
class _tds__GetNetworkProtocols
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
/// @note class _tds__GetNetworkProtocolsResponse operations:
/// - _tds__GetNetworkProtocolsResponse* soap_new__tds__GetNetworkProtocolsResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkProtocolsResponse* soap_new__tds__GetNetworkProtocolsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkProtocolsResponse* soap_new_req__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkProtocolsResponse* soap_new_set__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkProtocolsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkProtocolsResponse(soap*, _tds__GetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocolsResponse(soap*, _tds__GetNetworkProtocolsResponse*) serialize to a stream
/// - _tds__GetNetworkProtocolsResponse* _tds__GetNetworkProtocolsResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkProtocolsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkProtocolsResponse::soap_del() deep deletes _tds__GetNetworkProtocolsResponse data members, use only after _tds__GetNetworkProtocolsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkProtocolsResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkProtocolsResponse or derived type identifier
class _tds__GetNetworkProtocolsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkProtocol* is 0..unbounded.
  $ int                                  __sizeNetworkProtocols         0;
/// Pointer to array tt__NetworkProtocol* of size 0..unbounded.
    tt__NetworkProtocol*                *NetworkProtocols               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
/// @note class _tds__SetNetworkProtocols operations:
/// - _tds__SetNetworkProtocols* soap_new__tds__SetNetworkProtocols(soap*) allocate and default initialize
/// - _tds__SetNetworkProtocols* soap_new__tds__SetNetworkProtocols(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkProtocols* soap_new_req__tds__SetNetworkProtocols(soap*, ...) allocate, set required members
/// - _tds__SetNetworkProtocols* soap_new_set__tds__SetNetworkProtocols(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkProtocols::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkProtocols(soap*, _tds__SetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocols(soap*, _tds__SetNetworkProtocols*) serialize to a stream
/// - _tds__SetNetworkProtocols* _tds__SetNetworkProtocols::soap_dup(soap*) returns deep copy of _tds__SetNetworkProtocols, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkProtocols::soap_del() deep deletes _tds__SetNetworkProtocols data members, use only after _tds__SetNetworkProtocols::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkProtocols::soap_type() returns SOAP_TYPE__tds__SetNetworkProtocols or derived type identifier
class _tds__SetNetworkProtocols
{ public:
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkProtocol* is 1..unbounded.
  $ int                                  __sizeNetworkProtocols         1;
/// Pointer to array tt__NetworkProtocol* of size 1..unbounded.
    tt__NetworkProtocol*                *NetworkProtocols               1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
/// @note class _tds__SetNetworkProtocolsResponse operations:
/// - _tds__SetNetworkProtocolsResponse* soap_new__tds__SetNetworkProtocolsResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkProtocolsResponse* soap_new__tds__SetNetworkProtocolsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkProtocolsResponse* soap_new_req__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkProtocolsResponse* soap_new_set__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkProtocolsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkProtocolsResponse(soap*, _tds__SetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocolsResponse(soap*, _tds__SetNetworkProtocolsResponse*) serialize to a stream
/// - _tds__SetNetworkProtocolsResponse* _tds__SetNetworkProtocolsResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkProtocolsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkProtocolsResponse::soap_del() deep deletes _tds__SetNetworkProtocolsResponse data members, use only after _tds__SetNetworkProtocolsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkProtocolsResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkProtocolsResponse or derived type identifier
class _tds__SetNetworkProtocolsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
/// @note class _tds__GetNetworkDefaultGateway operations:
/// - _tds__GetNetworkDefaultGateway* soap_new__tds__GetNetworkDefaultGateway(soap*) allocate and default initialize
/// - _tds__GetNetworkDefaultGateway* soap_new__tds__GetNetworkDefaultGateway(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkDefaultGateway* soap_new_req__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - _tds__GetNetworkDefaultGateway* soap_new_set__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkDefaultGateway::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGateway(soap*, _tds__GetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGateway(soap*, _tds__GetNetworkDefaultGateway*) serialize to a stream
/// - _tds__GetNetworkDefaultGateway* _tds__GetNetworkDefaultGateway::soap_dup(soap*) returns deep copy of _tds__GetNetworkDefaultGateway, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkDefaultGateway::soap_del() deep deletes _tds__GetNetworkDefaultGateway data members, use only after _tds__GetNetworkDefaultGateway::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkDefaultGateway::soap_type() returns SOAP_TYPE__tds__GetNetworkDefaultGateway or derived type identifier
class _tds__GetNetworkDefaultGateway
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
/// @note class _tds__GetNetworkDefaultGatewayResponse operations:
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new__tds__GetNetworkDefaultGatewayResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new__tds__GetNetworkDefaultGatewayResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new_req__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new_set__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkDefaultGatewayResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGatewayResponse(soap*, _tds__GetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGatewayResponse(soap*, _tds__GetNetworkDefaultGatewayResponse*) serialize to a stream
/// - _tds__GetNetworkDefaultGatewayResponse* _tds__GetNetworkDefaultGatewayResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkDefaultGatewayResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkDefaultGatewayResponse::soap_del() deep deletes _tds__GetNetworkDefaultGatewayResponse data members, use only after _tds__GetNetworkDefaultGatewayResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkDefaultGatewayResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkDefaultGatewayResponse or derived type identifier
class _tds__GetNetworkDefaultGatewayResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkGateway" of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    tt__NetworkGateway*                  NetworkGateway                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
/// @note class _tds__SetNetworkDefaultGateway operations:
/// - _tds__SetNetworkDefaultGateway* soap_new__tds__SetNetworkDefaultGateway(soap*) allocate and default initialize
/// - _tds__SetNetworkDefaultGateway* soap_new__tds__SetNetworkDefaultGateway(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkDefaultGateway* soap_new_req__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - _tds__SetNetworkDefaultGateway* soap_new_set__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkDefaultGateway::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGateway(soap*, _tds__SetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGateway(soap*, _tds__SetNetworkDefaultGateway*) serialize to a stream
/// - _tds__SetNetworkDefaultGateway* _tds__SetNetworkDefaultGateway::soap_dup(soap*) returns deep copy of _tds__SetNetworkDefaultGateway, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkDefaultGateway::soap_del() deep deletes _tds__SetNetworkDefaultGateway data members, use only after _tds__SetNetworkDefaultGateway::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkDefaultGateway::soap_type() returns SOAP_TYPE__tds__SetNetworkDefaultGateway or derived type identifier
class _tds__SetNetworkDefaultGateway
{ public:
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Pointer to array tt__IPv4Address of size 0..unbounded.
    tt__IPv4Address                     *IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv6Address is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Pointer to array tt__IPv6Address of size 0..unbounded.
    tt__IPv6Address                     *IPv6Address                    0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
/// @note class _tds__SetNetworkDefaultGatewayResponse operations:
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new__tds__SetNetworkDefaultGatewayResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new__tds__SetNetworkDefaultGatewayResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new_req__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new_set__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkDefaultGatewayResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGatewayResponse(soap*, _tds__SetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGatewayResponse(soap*, _tds__SetNetworkDefaultGatewayResponse*) serialize to a stream
/// - _tds__SetNetworkDefaultGatewayResponse* _tds__SetNetworkDefaultGatewayResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkDefaultGatewayResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkDefaultGatewayResponse::soap_del() deep deletes _tds__SetNetworkDefaultGatewayResponse data members, use only after _tds__SetNetworkDefaultGatewayResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkDefaultGatewayResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkDefaultGatewayResponse or derived type identifier
class _tds__SetNetworkDefaultGatewayResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
/// @note class _tds__GetZeroConfiguration operations:
/// - _tds__GetZeroConfiguration* soap_new__tds__GetZeroConfiguration(soap*) allocate and default initialize
/// - _tds__GetZeroConfiguration* soap_new__tds__GetZeroConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetZeroConfiguration* soap_new_req__tds__GetZeroConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetZeroConfiguration* soap_new_set__tds__GetZeroConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetZeroConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetZeroConfiguration(soap*, _tds__GetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfiguration(soap*, _tds__GetZeroConfiguration*) serialize to a stream
/// - _tds__GetZeroConfiguration* _tds__GetZeroConfiguration::soap_dup(soap*) returns deep copy of _tds__GetZeroConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetZeroConfiguration::soap_del() deep deletes _tds__GetZeroConfiguration data members, use only after _tds__GetZeroConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetZeroConfiguration::soap_type() returns SOAP_TYPE__tds__GetZeroConfiguration or derived type identifier
class _tds__GetZeroConfiguration
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
/// @note class _tds__GetZeroConfigurationResponse operations:
/// - _tds__GetZeroConfigurationResponse* soap_new__tds__GetZeroConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetZeroConfigurationResponse* soap_new__tds__GetZeroConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetZeroConfigurationResponse* soap_new_req__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetZeroConfigurationResponse* soap_new_set__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetZeroConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetZeroConfigurationResponse(soap*, _tds__GetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfigurationResponse(soap*, _tds__GetZeroConfigurationResponse*) serialize to a stream
/// - _tds__GetZeroConfigurationResponse* _tds__GetZeroConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetZeroConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetZeroConfigurationResponse::soap_del() deep deletes _tds__GetZeroConfigurationResponse data members, use only after _tds__GetZeroConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetZeroConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetZeroConfigurationResponse or derived type identifier
class _tds__GetZeroConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    tt__NetworkZeroConfiguration*        ZeroConfiguration              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
/// @note class _tds__SetZeroConfiguration operations:
/// - _tds__SetZeroConfiguration* soap_new__tds__SetZeroConfiguration(soap*) allocate and default initialize
/// - _tds__SetZeroConfiguration* soap_new__tds__SetZeroConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetZeroConfiguration* soap_new_req__tds__SetZeroConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetZeroConfiguration* soap_new_set__tds__SetZeroConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetZeroConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetZeroConfiguration(soap*, _tds__SetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfiguration(soap*, _tds__SetZeroConfiguration*) serialize to a stream
/// - _tds__SetZeroConfiguration* _tds__SetZeroConfiguration::soap_dup(soap*) returns deep copy of _tds__SetZeroConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetZeroConfiguration::soap_del() deep deletes _tds__SetZeroConfiguration data members, use only after _tds__SetZeroConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetZeroConfiguration::soap_type() returns SOAP_TYPE__tds__SetZeroConfiguration or derived type identifier
class _tds__SetZeroConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
/// @note class _tds__SetZeroConfigurationResponse operations:
/// - _tds__SetZeroConfigurationResponse* soap_new__tds__SetZeroConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetZeroConfigurationResponse* soap_new__tds__SetZeroConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetZeroConfigurationResponse* soap_new_req__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetZeroConfigurationResponse* soap_new_set__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetZeroConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetZeroConfigurationResponse(soap*, _tds__SetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfigurationResponse(soap*, _tds__SetZeroConfigurationResponse*) serialize to a stream
/// - _tds__SetZeroConfigurationResponse* _tds__SetZeroConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetZeroConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetZeroConfigurationResponse::soap_del() deep deletes _tds__SetZeroConfigurationResponse data members, use only after _tds__SetZeroConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetZeroConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetZeroConfigurationResponse or derived type identifier
class _tds__SetZeroConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
/// @note class _tds__GetIPAddressFilter operations:
/// - _tds__GetIPAddressFilter* soap_new__tds__GetIPAddressFilter(soap*) allocate and default initialize
/// - _tds__GetIPAddressFilter* soap_new__tds__GetIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__GetIPAddressFilter* soap_new_req__tds__GetIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__GetIPAddressFilter* soap_new_set__tds__GetIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__GetIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetIPAddressFilter(soap*, _tds__GetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilter(soap*, _tds__GetIPAddressFilter*) serialize to a stream
/// - _tds__GetIPAddressFilter* _tds__GetIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__GetIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetIPAddressFilter::soap_del() deep deletes _tds__GetIPAddressFilter data members, use only after _tds__GetIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetIPAddressFilter::soap_type() returns SOAP_TYPE__tds__GetIPAddressFilter or derived type identifier
class _tds__GetIPAddressFilter
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
/// @note class _tds__GetIPAddressFilterResponse operations:
/// - _tds__GetIPAddressFilterResponse* soap_new__tds__GetIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__GetIPAddressFilterResponse* soap_new__tds__GetIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetIPAddressFilterResponse* soap_new_req__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__GetIPAddressFilterResponse* soap_new_set__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__GetIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetIPAddressFilterResponse(soap*, _tds__GetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilterResponse(soap*, _tds__GetIPAddressFilterResponse*) serialize to a stream
/// - _tds__GetIPAddressFilterResponse* _tds__GetIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__GetIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetIPAddressFilterResponse::soap_del() deep deletes _tds__GetIPAddressFilterResponse data members, use only after _tds__GetIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__GetIPAddressFilterResponse or derived type identifier
class _tds__GetIPAddressFilterResponse
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
/// @note class _tds__SetIPAddressFilter operations:
/// - _tds__SetIPAddressFilter* soap_new__tds__SetIPAddressFilter(soap*) allocate and default initialize
/// - _tds__SetIPAddressFilter* soap_new__tds__SetIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__SetIPAddressFilter* soap_new_req__tds__SetIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__SetIPAddressFilter* soap_new_set__tds__SetIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__SetIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetIPAddressFilter(soap*, _tds__SetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilter(soap*, _tds__SetIPAddressFilter*) serialize to a stream
/// - _tds__SetIPAddressFilter* _tds__SetIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__SetIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetIPAddressFilter::soap_del() deep deletes _tds__SetIPAddressFilter data members, use only after _tds__SetIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetIPAddressFilter::soap_type() returns SOAP_TYPE__tds__SetIPAddressFilter or derived type identifier
class _tds__SetIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
/// @note class _tds__SetIPAddressFilterResponse operations:
/// - _tds__SetIPAddressFilterResponse* soap_new__tds__SetIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__SetIPAddressFilterResponse* soap_new__tds__SetIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetIPAddressFilterResponse* soap_new_req__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__SetIPAddressFilterResponse* soap_new_set__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__SetIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetIPAddressFilterResponse(soap*, _tds__SetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilterResponse(soap*, _tds__SetIPAddressFilterResponse*) serialize to a stream
/// - _tds__SetIPAddressFilterResponse* _tds__SetIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__SetIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetIPAddressFilterResponse::soap_del() deep deletes _tds__SetIPAddressFilterResponse data members, use only after _tds__SetIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__SetIPAddressFilterResponse or derived type identifier
class _tds__SetIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
/// @note class _tds__AddIPAddressFilter operations:
/// - _tds__AddIPAddressFilter* soap_new__tds__AddIPAddressFilter(soap*) allocate and default initialize
/// - _tds__AddIPAddressFilter* soap_new__tds__AddIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__AddIPAddressFilter* soap_new_req__tds__AddIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__AddIPAddressFilter* soap_new_set__tds__AddIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__AddIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddIPAddressFilter(soap*, _tds__AddIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilter(soap*, _tds__AddIPAddressFilter*) serialize to a stream
/// - _tds__AddIPAddressFilter* _tds__AddIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__AddIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddIPAddressFilter::soap_del() deep deletes _tds__AddIPAddressFilter data members, use only after _tds__AddIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddIPAddressFilter::soap_type() returns SOAP_TYPE__tds__AddIPAddressFilter or derived type identifier
class _tds__AddIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
/// @note class _tds__AddIPAddressFilterResponse operations:
/// - _tds__AddIPAddressFilterResponse* soap_new__tds__AddIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__AddIPAddressFilterResponse* soap_new__tds__AddIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__AddIPAddressFilterResponse* soap_new_req__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__AddIPAddressFilterResponse* soap_new_set__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__AddIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddIPAddressFilterResponse(soap*, _tds__AddIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilterResponse(soap*, _tds__AddIPAddressFilterResponse*) serialize to a stream
/// - _tds__AddIPAddressFilterResponse* _tds__AddIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__AddIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddIPAddressFilterResponse::soap_del() deep deletes _tds__AddIPAddressFilterResponse data members, use only after _tds__AddIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__AddIPAddressFilterResponse or derived type identifier
class _tds__AddIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
/// @note class _tds__RemoveIPAddressFilter operations:
/// - _tds__RemoveIPAddressFilter* soap_new__tds__RemoveIPAddressFilter(soap*) allocate and default initialize
/// - _tds__RemoveIPAddressFilter* soap_new__tds__RemoveIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveIPAddressFilter* soap_new_req__tds__RemoveIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__RemoveIPAddressFilter* soap_new_set__tds__RemoveIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__RemoveIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilter(soap*, _tds__RemoveIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilter(soap*, _tds__RemoveIPAddressFilter*) serialize to a stream
/// - _tds__RemoveIPAddressFilter* _tds__RemoveIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__RemoveIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveIPAddressFilter::soap_del() deep deletes _tds__RemoveIPAddressFilter data members, use only after _tds__RemoveIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveIPAddressFilter::soap_type() returns SOAP_TYPE__tds__RemoveIPAddressFilter or derived type identifier
class _tds__RemoveIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
/// @note class _tds__RemoveIPAddressFilterResponse operations:
/// - _tds__RemoveIPAddressFilterResponse* soap_new__tds__RemoveIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__RemoveIPAddressFilterResponse* soap_new__tds__RemoveIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveIPAddressFilterResponse* soap_new_req__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__RemoveIPAddressFilterResponse* soap_new_set__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__RemoveIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilterResponse(soap*, _tds__RemoveIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilterResponse(soap*, _tds__RemoveIPAddressFilterResponse*) serialize to a stream
/// - _tds__RemoveIPAddressFilterResponse* _tds__RemoveIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__RemoveIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveIPAddressFilterResponse::soap_del() deep deletes _tds__RemoveIPAddressFilterResponse data members, use only after _tds__RemoveIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__RemoveIPAddressFilterResponse or derived type identifier
class _tds__RemoveIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
/// @note class _tds__GetAccessPolicy operations:
/// - _tds__GetAccessPolicy* soap_new__tds__GetAccessPolicy(soap*) allocate and default initialize
/// - _tds__GetAccessPolicy* soap_new__tds__GetAccessPolicy(soap*, int num) allocate and default initialize an array
/// - _tds__GetAccessPolicy* soap_new_req__tds__GetAccessPolicy(soap*, ...) allocate, set required members
/// - _tds__GetAccessPolicy* soap_new_set__tds__GetAccessPolicy(soap*, ...) allocate, set all public members
/// - _tds__GetAccessPolicy::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAccessPolicy(soap*, _tds__GetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicy(soap*, _tds__GetAccessPolicy*) serialize to a stream
/// - _tds__GetAccessPolicy* _tds__GetAccessPolicy::soap_dup(soap*) returns deep copy of _tds__GetAccessPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAccessPolicy::soap_del() deep deletes _tds__GetAccessPolicy data members, use only after _tds__GetAccessPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAccessPolicy::soap_type() returns SOAP_TYPE__tds__GetAccessPolicy or derived type identifier
class _tds__GetAccessPolicy
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
/// @note class _tds__GetAccessPolicyResponse operations:
/// - _tds__GetAccessPolicyResponse* soap_new__tds__GetAccessPolicyResponse(soap*) allocate and default initialize
/// - _tds__GetAccessPolicyResponse* soap_new__tds__GetAccessPolicyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetAccessPolicyResponse* soap_new_req__tds__GetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - _tds__GetAccessPolicyResponse* soap_new_set__tds__GetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - _tds__GetAccessPolicyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAccessPolicyResponse(soap*, _tds__GetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicyResponse(soap*, _tds__GetAccessPolicyResponse*) serialize to a stream
/// - _tds__GetAccessPolicyResponse* _tds__GetAccessPolicyResponse::soap_dup(soap*) returns deep copy of _tds__GetAccessPolicyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAccessPolicyResponse::soap_del() deep deletes _tds__GetAccessPolicyResponse data members, use only after _tds__GetAccessPolicyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAccessPolicyResponse::soap_type() returns SOAP_TYPE__tds__GetAccessPolicyResponse or derived type identifier
class _tds__GetAccessPolicyResponse
{ public:
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
/// @note class _tds__SetAccessPolicy operations:
/// - _tds__SetAccessPolicy* soap_new__tds__SetAccessPolicy(soap*) allocate and default initialize
/// - _tds__SetAccessPolicy* soap_new__tds__SetAccessPolicy(soap*, int num) allocate and default initialize an array
/// - _tds__SetAccessPolicy* soap_new_req__tds__SetAccessPolicy(soap*, ...) allocate, set required members
/// - _tds__SetAccessPolicy* soap_new_set__tds__SetAccessPolicy(soap*, ...) allocate, set all public members
/// - _tds__SetAccessPolicy::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetAccessPolicy(soap*, _tds__SetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicy(soap*, _tds__SetAccessPolicy*) serialize to a stream
/// - _tds__SetAccessPolicy* _tds__SetAccessPolicy::soap_dup(soap*) returns deep copy of _tds__SetAccessPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetAccessPolicy::soap_del() deep deletes _tds__SetAccessPolicy data members, use only after _tds__SetAccessPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetAccessPolicy::soap_type() returns SOAP_TYPE__tds__SetAccessPolicy or derived type identifier
class _tds__SetAccessPolicy
{ public:
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
/// @note class _tds__SetAccessPolicyResponse operations:
/// - _tds__SetAccessPolicyResponse* soap_new__tds__SetAccessPolicyResponse(soap*) allocate and default initialize
/// - _tds__SetAccessPolicyResponse* soap_new__tds__SetAccessPolicyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetAccessPolicyResponse* soap_new_req__tds__SetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - _tds__SetAccessPolicyResponse* soap_new_set__tds__SetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - _tds__SetAccessPolicyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetAccessPolicyResponse(soap*, _tds__SetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicyResponse(soap*, _tds__SetAccessPolicyResponse*) serialize to a stream
/// - _tds__SetAccessPolicyResponse* _tds__SetAccessPolicyResponse::soap_dup(soap*) returns deep copy of _tds__SetAccessPolicyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetAccessPolicyResponse::soap_del() deep deletes _tds__SetAccessPolicyResponse data members, use only after _tds__SetAccessPolicyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetAccessPolicyResponse::soap_type() returns SOAP_TYPE__tds__SetAccessPolicyResponse or derived type identifier
class _tds__SetAccessPolicyResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
/// @note class _tds__CreateCertificate operations:
/// - _tds__CreateCertificate* soap_new__tds__CreateCertificate(soap*) allocate and default initialize
/// - _tds__CreateCertificate* soap_new__tds__CreateCertificate(soap*, int num) allocate and default initialize an array
/// - _tds__CreateCertificate* soap_new_req__tds__CreateCertificate(soap*, ...) allocate, set required members
/// - _tds__CreateCertificate* soap_new_set__tds__CreateCertificate(soap*, ...) allocate, set all public members
/// - _tds__CreateCertificate::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateCertificate(soap*, _tds__CreateCertificate*) deserialize from a stream
/// - int soap_write__tds__CreateCertificate(soap*, _tds__CreateCertificate*) serialize to a stream
/// - _tds__CreateCertificate* _tds__CreateCertificate::soap_dup(soap*) returns deep copy of _tds__CreateCertificate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateCertificate::soap_del() deep deletes _tds__CreateCertificate data members, use only after _tds__CreateCertificate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateCertificate::soap_type() returns SOAP_TYPE__tds__CreateCertificate or derived type identifier
class _tds__CreateCertificate
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotBefore" of type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotAfter" of type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
/// @note class _tds__CreateCertificateResponse operations:
/// - _tds__CreateCertificateResponse* soap_new__tds__CreateCertificateResponse(soap*) allocate and default initialize
/// - _tds__CreateCertificateResponse* soap_new__tds__CreateCertificateResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateCertificateResponse* soap_new_req__tds__CreateCertificateResponse(soap*, ...) allocate, set required members
/// - _tds__CreateCertificateResponse* soap_new_set__tds__CreateCertificateResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateCertificateResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateCertificateResponse(soap*, _tds__CreateCertificateResponse*) deserialize from a stream
/// - int soap_write__tds__CreateCertificateResponse(soap*, _tds__CreateCertificateResponse*) serialize to a stream
/// - _tds__CreateCertificateResponse* _tds__CreateCertificateResponse::soap_dup(soap*) returns deep copy of _tds__CreateCertificateResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateCertificateResponse::soap_del() deep deletes _tds__CreateCertificateResponse data members, use only after _tds__CreateCertificateResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateCertificateResponse::soap_type() returns SOAP_TYPE__tds__CreateCertificateResponse or derived type identifier
class _tds__CreateCertificateResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "NvtCertificate" of type "http://www.onvif.org/ver10/schema":Certificate.
    tt__Certificate*                     NvtCertificate                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
/// @note class _tds__GetCertificates operations:
/// - _tds__GetCertificates* soap_new__tds__GetCertificates(soap*) allocate and default initialize
/// - _tds__GetCertificates* soap_new__tds__GetCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificates* soap_new_req__tds__GetCertificates(soap*, ...) allocate, set required members
/// - _tds__GetCertificates* soap_new_set__tds__GetCertificates(soap*, ...) allocate, set all public members
/// - _tds__GetCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificates(soap*, _tds__GetCertificates*) deserialize from a stream
/// - int soap_write__tds__GetCertificates(soap*, _tds__GetCertificates*) serialize to a stream
/// - _tds__GetCertificates* _tds__GetCertificates::soap_dup(soap*) returns deep copy of _tds__GetCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificates::soap_del() deep deletes _tds__GetCertificates data members, use only after _tds__GetCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificates::soap_type() returns SOAP_TYPE__tds__GetCertificates or derived type identifier
class _tds__GetCertificates
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
/// @note class _tds__GetCertificatesResponse operations:
/// - _tds__GetCertificatesResponse* soap_new__tds__GetCertificatesResponse(soap*) allocate and default initialize
/// - _tds__GetCertificatesResponse* soap_new__tds__GetCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesResponse* soap_new_req__tds__GetCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesResponse* soap_new_set__tds__GetCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesResponse(soap*, _tds__GetCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesResponse(soap*, _tds__GetCertificatesResponse*) serialize to a stream
/// - _tds__GetCertificatesResponse* _tds__GetCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesResponse::soap_del() deep deletes _tds__GetCertificatesResponse data members, use only after _tds__GetCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesResponse::soap_type() returns SOAP_TYPE__tds__GetCertificatesResponse or derived type identifier
class _tds__GetCertificatesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Certificate* is 0..unbounded.
  $ int                                  __sizeNvtCertificate           0;
/// Pointer to array tt__Certificate* of size 0..unbounded.
    tt__Certificate*                    *NvtCertificate                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
/// @note class _tds__GetCertificatesStatus operations:
/// - _tds__GetCertificatesStatus* soap_new__tds__GetCertificatesStatus(soap*) allocate and default initialize
/// - _tds__GetCertificatesStatus* soap_new__tds__GetCertificatesStatus(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesStatus* soap_new_req__tds__GetCertificatesStatus(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesStatus* soap_new_set__tds__GetCertificatesStatus(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesStatus::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesStatus(soap*, _tds__GetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatus(soap*, _tds__GetCertificatesStatus*) serialize to a stream
/// - _tds__GetCertificatesStatus* _tds__GetCertificatesStatus::soap_dup(soap*) returns deep copy of _tds__GetCertificatesStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesStatus::soap_del() deep deletes _tds__GetCertificatesStatus data members, use only after _tds__GetCertificatesStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesStatus::soap_type() returns SOAP_TYPE__tds__GetCertificatesStatus or derived type identifier
class _tds__GetCertificatesStatus
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
/// @note class _tds__GetCertificatesStatusResponse operations:
/// - _tds__GetCertificatesStatusResponse* soap_new__tds__GetCertificatesStatusResponse(soap*) allocate and default initialize
/// - _tds__GetCertificatesStatusResponse* soap_new__tds__GetCertificatesStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesStatusResponse* soap_new_req__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesStatusResponse* soap_new_set__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesStatusResponse(soap*, _tds__GetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatusResponse(soap*, _tds__GetCertificatesStatusResponse*) serialize to a stream
/// - _tds__GetCertificatesStatusResponse* _tds__GetCertificatesStatusResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificatesStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesStatusResponse::soap_del() deep deletes _tds__GetCertificatesStatusResponse data members, use only after _tds__GetCertificatesStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesStatusResponse::soap_type() returns SOAP_TYPE__tds__GetCertificatesStatusResponse or derived type identifier
class _tds__GetCertificatesStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__CertificateStatus* is 0..unbounded.
  $ int                                  __sizeCertificateStatus        0;
/// Pointer to array tt__CertificateStatus* of size 0..unbounded.
    tt__CertificateStatus*              *CertificateStatus              0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
/// @note class _tds__SetCertificatesStatus operations:
/// - _tds__SetCertificatesStatus* soap_new__tds__SetCertificatesStatus(soap*) allocate and default initialize
/// - _tds__SetCertificatesStatus* soap_new__tds__SetCertificatesStatus(soap*, int num) allocate and default initialize an array
/// - _tds__SetCertificatesStatus* soap_new_req__tds__SetCertificatesStatus(soap*, ...) allocate, set required members
/// - _tds__SetCertificatesStatus* soap_new_set__tds__SetCertificatesStatus(soap*, ...) allocate, set all public members
/// - _tds__SetCertificatesStatus::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetCertificatesStatus(soap*, _tds__SetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatus(soap*, _tds__SetCertificatesStatus*) serialize to a stream
/// - _tds__SetCertificatesStatus* _tds__SetCertificatesStatus::soap_dup(soap*) returns deep copy of _tds__SetCertificatesStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetCertificatesStatus::soap_del() deep deletes _tds__SetCertificatesStatus data members, use only after _tds__SetCertificatesStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetCertificatesStatus::soap_type() returns SOAP_TYPE__tds__SetCertificatesStatus or derived type identifier
class _tds__SetCertificatesStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__CertificateStatus* is 0..unbounded.
  $ int                                  __sizeCertificateStatus        0;
/// Pointer to array tt__CertificateStatus* of size 0..unbounded.
    tt__CertificateStatus*              *CertificateStatus              0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
/// @note class _tds__SetCertificatesStatusResponse operations:
/// - _tds__SetCertificatesStatusResponse* soap_new__tds__SetCertificatesStatusResponse(soap*) allocate and default initialize
/// - _tds__SetCertificatesStatusResponse* soap_new__tds__SetCertificatesStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetCertificatesStatusResponse* soap_new_req__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - _tds__SetCertificatesStatusResponse* soap_new_set__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - _tds__SetCertificatesStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetCertificatesStatusResponse(soap*, _tds__SetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatusResponse(soap*, _tds__SetCertificatesStatusResponse*) serialize to a stream
/// - _tds__SetCertificatesStatusResponse* _tds__SetCertificatesStatusResponse::soap_dup(soap*) returns deep copy of _tds__SetCertificatesStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetCertificatesStatusResponse::soap_del() deep deletes _tds__SetCertificatesStatusResponse data members, use only after _tds__SetCertificatesStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetCertificatesStatusResponse::soap_type() returns SOAP_TYPE__tds__SetCertificatesStatusResponse or derived type identifier
class _tds__SetCertificatesStatusResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
/// @note class _tds__DeleteCertificates operations:
/// - _tds__DeleteCertificates* soap_new__tds__DeleteCertificates(soap*) allocate and default initialize
/// - _tds__DeleteCertificates* soap_new__tds__DeleteCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteCertificates* soap_new_req__tds__DeleteCertificates(soap*, ...) allocate, set required members
/// - _tds__DeleteCertificates* soap_new_set__tds__DeleteCertificates(soap*, ...) allocate, set all public members
/// - _tds__DeleteCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteCertificates(soap*, _tds__DeleteCertificates*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificates(soap*, _tds__DeleteCertificates*) serialize to a stream
/// - _tds__DeleteCertificates* _tds__DeleteCertificates::soap_dup(soap*) returns deep copy of _tds__DeleteCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteCertificates::soap_del() deep deletes _tds__DeleteCertificates data members, use only after _tds__DeleteCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteCertificates::soap_type() returns SOAP_TYPE__tds__DeleteCertificates or derived type identifier
class _tds__DeleteCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token is 1..unbounded.
  $ int                                  __sizeCertificateID            1;
/// Pointer to array xsd__token of size 1..unbounded.
    xsd__token                          *CertificateID                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
/// @note class _tds__DeleteCertificatesResponse operations:
/// - _tds__DeleteCertificatesResponse* soap_new__tds__DeleteCertificatesResponse(soap*) allocate and default initialize
/// - _tds__DeleteCertificatesResponse* soap_new__tds__DeleteCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteCertificatesResponse* soap_new_req__tds__DeleteCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteCertificatesResponse* soap_new_set__tds__DeleteCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteCertificatesResponse(soap*, _tds__DeleteCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificatesResponse(soap*, _tds__DeleteCertificatesResponse*) serialize to a stream
/// - _tds__DeleteCertificatesResponse* _tds__DeleteCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__DeleteCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteCertificatesResponse::soap_del() deep deletes _tds__DeleteCertificatesResponse data members, use only after _tds__DeleteCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteCertificatesResponse::soap_type() returns SOAP_TYPE__tds__DeleteCertificatesResponse or derived type identifier
class _tds__DeleteCertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
/// @note class _tds__GetPkcs10Request operations:
/// - _tds__GetPkcs10Request* soap_new__tds__GetPkcs10Request(soap*) allocate and default initialize
/// - _tds__GetPkcs10Request* soap_new__tds__GetPkcs10Request(soap*, int num) allocate and default initialize an array
/// - _tds__GetPkcs10Request* soap_new_req__tds__GetPkcs10Request(soap*, ...) allocate, set required members
/// - _tds__GetPkcs10Request* soap_new_set__tds__GetPkcs10Request(soap*, ...) allocate, set all public members
/// - _tds__GetPkcs10Request::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPkcs10Request(soap*, _tds__GetPkcs10Request*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10Request(soap*, _tds__GetPkcs10Request*) serialize to a stream
/// - _tds__GetPkcs10Request* _tds__GetPkcs10Request::soap_dup(soap*) returns deep copy of _tds__GetPkcs10Request, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPkcs10Request::soap_del() deep deletes _tds__GetPkcs10Request data members, use only after _tds__GetPkcs10Request::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPkcs10Request::soap_type() returns SOAP_TYPE__tds__GetPkcs10Request or derived type identifier
class _tds__GetPkcs10Request
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Attributes" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Attributes                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
/// @note class _tds__GetPkcs10RequestResponse operations:
/// - _tds__GetPkcs10RequestResponse* soap_new__tds__GetPkcs10RequestResponse(soap*) allocate and default initialize
/// - _tds__GetPkcs10RequestResponse* soap_new__tds__GetPkcs10RequestResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetPkcs10RequestResponse* soap_new_req__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set required members
/// - _tds__GetPkcs10RequestResponse* soap_new_set__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set all public members
/// - _tds__GetPkcs10RequestResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPkcs10RequestResponse(soap*, _tds__GetPkcs10RequestResponse*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10RequestResponse(soap*, _tds__GetPkcs10RequestResponse*) serialize to a stream
/// - _tds__GetPkcs10RequestResponse* _tds__GetPkcs10RequestResponse::soap_dup(soap*) returns deep copy of _tds__GetPkcs10RequestResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPkcs10RequestResponse::soap_del() deep deletes _tds__GetPkcs10RequestResponse data members, use only after _tds__GetPkcs10RequestResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPkcs10RequestResponse::soap_type() returns SOAP_TYPE__tds__GetPkcs10RequestResponse or derived type identifier
class _tds__GetPkcs10RequestResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Pkcs10Request" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Pkcs10Request                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
/// @note class _tds__LoadCertificates operations:
/// - _tds__LoadCertificates* soap_new__tds__LoadCertificates(soap*) allocate and default initialize
/// - _tds__LoadCertificates* soap_new__tds__LoadCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificates* soap_new_req__tds__LoadCertificates(soap*, ...) allocate, set required members
/// - _tds__LoadCertificates* soap_new_set__tds__LoadCertificates(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificates(soap*, _tds__LoadCertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCertificates(soap*, _tds__LoadCertificates*) serialize to a stream
/// - _tds__LoadCertificates* _tds__LoadCertificates::soap_dup(soap*) returns deep copy of _tds__LoadCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificates::soap_del() deep deletes _tds__LoadCertificates data members, use only after _tds__LoadCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificates::soap_type() returns SOAP_TYPE__tds__LoadCertificates or derived type identifier
class _tds__LoadCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Certificate* is 1..unbounded.
  $ int                                  __sizeNVTCertificate           1;
/// Pointer to array tt__Certificate* of size 1..unbounded.
    tt__Certificate*                    *NVTCertificate                 1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
/// @note class _tds__LoadCertificatesResponse operations:
/// - _tds__LoadCertificatesResponse* soap_new__tds__LoadCertificatesResponse(soap*) allocate and default initialize
/// - _tds__LoadCertificatesResponse* soap_new__tds__LoadCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificatesResponse* soap_new_req__tds__LoadCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCertificatesResponse* soap_new_set__tds__LoadCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificatesResponse(soap*, _tds__LoadCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificatesResponse(soap*, _tds__LoadCertificatesResponse*) serialize to a stream
/// - _tds__LoadCertificatesResponse* _tds__LoadCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__LoadCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificatesResponse::soap_del() deep deletes _tds__LoadCertificatesResponse data members, use only after _tds__LoadCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificatesResponse::soap_type() returns SOAP_TYPE__tds__LoadCertificatesResponse or derived type identifier
class _tds__LoadCertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
/// @note class _tds__GetClientCertificateMode operations:
/// - _tds__GetClientCertificateMode* soap_new__tds__GetClientCertificateMode(soap*) allocate and default initialize
/// - _tds__GetClientCertificateMode* soap_new__tds__GetClientCertificateMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetClientCertificateMode* soap_new_req__tds__GetClientCertificateMode(soap*, ...) allocate, set required members
/// - _tds__GetClientCertificateMode* soap_new_set__tds__GetClientCertificateMode(soap*, ...) allocate, set all public members
/// - _tds__GetClientCertificateMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetClientCertificateMode(soap*, _tds__GetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateMode(soap*, _tds__GetClientCertificateMode*) serialize to a stream
/// - _tds__GetClientCertificateMode* _tds__GetClientCertificateMode::soap_dup(soap*) returns deep copy of _tds__GetClientCertificateMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetClientCertificateMode::soap_del() deep deletes _tds__GetClientCertificateMode data members, use only after _tds__GetClientCertificateMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetClientCertificateMode::soap_type() returns SOAP_TYPE__tds__GetClientCertificateMode or derived type identifier
class _tds__GetClientCertificateMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
/// @note class _tds__GetClientCertificateModeResponse operations:
/// - _tds__GetClientCertificateModeResponse* soap_new__tds__GetClientCertificateModeResponse(soap*) allocate and default initialize
/// - _tds__GetClientCertificateModeResponse* soap_new__tds__GetClientCertificateModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetClientCertificateModeResponse* soap_new_req__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetClientCertificateModeResponse* soap_new_set__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetClientCertificateModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetClientCertificateModeResponse(soap*, _tds__GetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateModeResponse(soap*, _tds__GetClientCertificateModeResponse*) serialize to a stream
/// - _tds__GetClientCertificateModeResponse* _tds__GetClientCertificateModeResponse::soap_dup(soap*) returns deep copy of _tds__GetClientCertificateModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetClientCertificateModeResponse::soap_del() deep deletes _tds__GetClientCertificateModeResponse data members, use only after _tds__GetClientCertificateModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetClientCertificateModeResponse::soap_type() returns SOAP_TYPE__tds__GetClientCertificateModeResponse or derived type identifier
class _tds__GetClientCertificateModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
/// @note class _tds__SetClientCertificateMode operations:
/// - _tds__SetClientCertificateMode* soap_new__tds__SetClientCertificateMode(soap*) allocate and default initialize
/// - _tds__SetClientCertificateMode* soap_new__tds__SetClientCertificateMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetClientCertificateMode* soap_new_req__tds__SetClientCertificateMode(soap*, ...) allocate, set required members
/// - _tds__SetClientCertificateMode* soap_new_set__tds__SetClientCertificateMode(soap*, ...) allocate, set all public members
/// - _tds__SetClientCertificateMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetClientCertificateMode(soap*, _tds__SetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateMode(soap*, _tds__SetClientCertificateMode*) serialize to a stream
/// - _tds__SetClientCertificateMode* _tds__SetClientCertificateMode::soap_dup(soap*) returns deep copy of _tds__SetClientCertificateMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetClientCertificateMode::soap_del() deep deletes _tds__SetClientCertificateMode data members, use only after _tds__SetClientCertificateMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetClientCertificateMode::soap_type() returns SOAP_TYPE__tds__SetClientCertificateMode or derived type identifier
class _tds__SetClientCertificateMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
/// @note class _tds__SetClientCertificateModeResponse operations:
/// - _tds__SetClientCertificateModeResponse* soap_new__tds__SetClientCertificateModeResponse(soap*) allocate and default initialize
/// - _tds__SetClientCertificateModeResponse* soap_new__tds__SetClientCertificateModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetClientCertificateModeResponse* soap_new_req__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetClientCertificateModeResponse* soap_new_set__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetClientCertificateModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetClientCertificateModeResponse(soap*, _tds__SetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateModeResponse(soap*, _tds__SetClientCertificateModeResponse*) serialize to a stream
/// - _tds__SetClientCertificateModeResponse* _tds__SetClientCertificateModeResponse::soap_dup(soap*) returns deep copy of _tds__SetClientCertificateModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetClientCertificateModeResponse::soap_del() deep deletes _tds__SetClientCertificateModeResponse data members, use only after _tds__SetClientCertificateModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetClientCertificateModeResponse::soap_type() returns SOAP_TYPE__tds__SetClientCertificateModeResponse or derived type identifier
class _tds__SetClientCertificateModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
/// @note class _tds__GetCACertificates operations:
/// - _tds__GetCACertificates* soap_new__tds__GetCACertificates(soap*) allocate and default initialize
/// - _tds__GetCACertificates* soap_new__tds__GetCACertificates(soap*, int num) allocate and default initialize an array
/// - _tds__GetCACertificates* soap_new_req__tds__GetCACertificates(soap*, ...) allocate, set required members
/// - _tds__GetCACertificates* soap_new_set__tds__GetCACertificates(soap*, ...) allocate, set all public members
/// - _tds__GetCACertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCACertificates(soap*, _tds__GetCACertificates*) deserialize from a stream
/// - int soap_write__tds__GetCACertificates(soap*, _tds__GetCACertificates*) serialize to a stream
/// - _tds__GetCACertificates* _tds__GetCACertificates::soap_dup(soap*) returns deep copy of _tds__GetCACertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCACertificates::soap_del() deep deletes _tds__GetCACertificates data members, use only after _tds__GetCACertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCACertificates::soap_type() returns SOAP_TYPE__tds__GetCACertificates or derived type identifier
class _tds__GetCACertificates
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
/// @note class _tds__GetCACertificatesResponse operations:
/// - _tds__GetCACertificatesResponse* soap_new__tds__GetCACertificatesResponse(soap*) allocate and default initialize
/// - _tds__GetCACertificatesResponse* soap_new__tds__GetCACertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCACertificatesResponse* soap_new_req__tds__GetCACertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCACertificatesResponse* soap_new_set__tds__GetCACertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCACertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCACertificatesResponse(soap*, _tds__GetCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCACertificatesResponse(soap*, _tds__GetCACertificatesResponse*) serialize to a stream
/// - _tds__GetCACertificatesResponse* _tds__GetCACertificatesResponse::soap_dup(soap*) returns deep copy of _tds__GetCACertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCACertificatesResponse::soap_del() deep deletes _tds__GetCACertificatesResponse data members, use only after _tds__GetCACertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCACertificatesResponse::soap_type() returns SOAP_TYPE__tds__GetCACertificatesResponse or derived type identifier
class _tds__GetCACertificatesResponse
{ public:
/// Size of array of tt__Certificate* is 0..unbounded.
  $ int                                  __sizeCACertificate            0;
/// Pointer to array tt__Certificate* of size 0..unbounded.
    tt__Certificate*                    *CACertificate                  0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
/// @note class _tds__LoadCertificateWithPrivateKey operations:
/// - _tds__LoadCertificateWithPrivateKey* soap_new__tds__LoadCertificateWithPrivateKey(soap*) allocate and default initialize
/// - _tds__LoadCertificateWithPrivateKey* soap_new__tds__LoadCertificateWithPrivateKey(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificateWithPrivateKey* soap_new_req__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - _tds__LoadCertificateWithPrivateKey* soap_new_set__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificateWithPrivateKey::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKey(soap*, _tds__LoadCertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKey(soap*, _tds__LoadCertificateWithPrivateKey*) serialize to a stream
/// - _tds__LoadCertificateWithPrivateKey* _tds__LoadCertificateWithPrivateKey::soap_dup(soap*) returns deep copy of _tds__LoadCertificateWithPrivateKey, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificateWithPrivateKey::soap_del() deep deletes _tds__LoadCertificateWithPrivateKey data members, use only after _tds__LoadCertificateWithPrivateKey::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificateWithPrivateKey::soap_type() returns SOAP_TYPE__tds__LoadCertificateWithPrivateKey or derived type identifier
class _tds__LoadCertificateWithPrivateKey
{ public:
/// Size of array of tt__CertificateWithPrivateKey* is 1..unbounded.
  $ int                                  __sizeCertificateWithPrivateKey 1;
/// Pointer to array tt__CertificateWithPrivateKey* of size 1..unbounded.
    tt__CertificateWithPrivateKey*      *CertificateWithPrivateKey      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
/// @note class _tds__LoadCertificateWithPrivateKeyResponse operations:
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*) allocate and default initialize
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new_req__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new_set__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificateWithPrivateKeyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKeyResponse(soap*, _tds__LoadCertificateWithPrivateKeyResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKeyResponse(soap*, _tds__LoadCertificateWithPrivateKeyResponse*) serialize to a stream
/// - _tds__LoadCertificateWithPrivateKeyResponse* _tds__LoadCertificateWithPrivateKeyResponse::soap_dup(soap*) returns deep copy of _tds__LoadCertificateWithPrivateKeyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificateWithPrivateKeyResponse::soap_del() deep deletes _tds__LoadCertificateWithPrivateKeyResponse data members, use only after _tds__LoadCertificateWithPrivateKeyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificateWithPrivateKeyResponse::soap_type() returns SOAP_TYPE__tds__LoadCertificateWithPrivateKeyResponse or derived type identifier
class _tds__LoadCertificateWithPrivateKeyResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
/// @note class _tds__GetCertificateInformation operations:
/// - _tds__GetCertificateInformation* soap_new__tds__GetCertificateInformation(soap*) allocate and default initialize
/// - _tds__GetCertificateInformation* soap_new__tds__GetCertificateInformation(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificateInformation* soap_new_req__tds__GetCertificateInformation(soap*, ...) allocate, set required members
/// - _tds__GetCertificateInformation* soap_new_set__tds__GetCertificateInformation(soap*, ...) allocate, set all public members
/// - _tds__GetCertificateInformation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificateInformation(soap*, _tds__GetCertificateInformation*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformation(soap*, _tds__GetCertificateInformation*) serialize to a stream
/// - _tds__GetCertificateInformation* _tds__GetCertificateInformation::soap_dup(soap*) returns deep copy of _tds__GetCertificateInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificateInformation::soap_del() deep deletes _tds__GetCertificateInformation data members, use only after _tds__GetCertificateInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificateInformation::soap_type() returns SOAP_TYPE__tds__GetCertificateInformation or derived type identifier
class _tds__GetCertificateInformation
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
/// @note class _tds__GetCertificateInformationResponse operations:
/// - _tds__GetCertificateInformationResponse* soap_new__tds__GetCertificateInformationResponse(soap*) allocate and default initialize
/// - _tds__GetCertificateInformationResponse* soap_new__tds__GetCertificateInformationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificateInformationResponse* soap_new_req__tds__GetCertificateInformationResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificateInformationResponse* soap_new_set__tds__GetCertificateInformationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificateInformationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificateInformationResponse(soap*, _tds__GetCertificateInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformationResponse(soap*, _tds__GetCertificateInformationResponse*) serialize to a stream
/// - _tds__GetCertificateInformationResponse* _tds__GetCertificateInformationResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificateInformationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificateInformationResponse::soap_del() deep deletes _tds__GetCertificateInformationResponse data members, use only after _tds__GetCertificateInformationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificateInformationResponse::soap_type() returns SOAP_TYPE__tds__GetCertificateInformationResponse or derived type identifier
class _tds__GetCertificateInformationResponse
{ public:
/// Element "CertificateInformation" of type "http://www.onvif.org/ver10/schema":CertificateInformation.
    tt__CertificateInformation*          CertificateInformation         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
/// @note class _tds__LoadCACertificates operations:
/// - _tds__LoadCACertificates* soap_new__tds__LoadCACertificates(soap*) allocate and default initialize
/// - _tds__LoadCACertificates* soap_new__tds__LoadCACertificates(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCACertificates* soap_new_req__tds__LoadCACertificates(soap*, ...) allocate, set required members
/// - _tds__LoadCACertificates* soap_new_set__tds__LoadCACertificates(soap*, ...) allocate, set all public members
/// - _tds__LoadCACertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCACertificates(soap*, _tds__LoadCACertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificates(soap*, _tds__LoadCACertificates*) serialize to a stream
/// - _tds__LoadCACertificates* _tds__LoadCACertificates::soap_dup(soap*) returns deep copy of _tds__LoadCACertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCACertificates::soap_del() deep deletes _tds__LoadCACertificates data members, use only after _tds__LoadCACertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCACertificates::soap_type() returns SOAP_TYPE__tds__LoadCACertificates or derived type identifier
class _tds__LoadCACertificates
{ public:
/// Size of array of tt__Certificate* is 1..unbounded.
  $ int                                  __sizeCACertificate            1;
/// Pointer to array tt__Certificate* of size 1..unbounded.
    tt__Certificate*                    *CACertificate                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
/// @note class _tds__LoadCACertificatesResponse operations:
/// - _tds__LoadCACertificatesResponse* soap_new__tds__LoadCACertificatesResponse(soap*) allocate and default initialize
/// - _tds__LoadCACertificatesResponse* soap_new__tds__LoadCACertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCACertificatesResponse* soap_new_req__tds__LoadCACertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCACertificatesResponse* soap_new_set__tds__LoadCACertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCACertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCACertificatesResponse(soap*, _tds__LoadCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificatesResponse(soap*, _tds__LoadCACertificatesResponse*) serialize to a stream
/// - _tds__LoadCACertificatesResponse* _tds__LoadCACertificatesResponse::soap_dup(soap*) returns deep copy of _tds__LoadCACertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCACertificatesResponse::soap_del() deep deletes _tds__LoadCACertificatesResponse data members, use only after _tds__LoadCACertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCACertificatesResponse::soap_type() returns SOAP_TYPE__tds__LoadCACertificatesResponse or derived type identifier
class _tds__LoadCACertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
/// @note class _tds__CreateDot1XConfiguration operations:
/// - _tds__CreateDot1XConfiguration* soap_new__tds__CreateDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__CreateDot1XConfiguration* soap_new__tds__CreateDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__CreateDot1XConfiguration* soap_new_req__tds__CreateDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__CreateDot1XConfiguration* soap_new_set__tds__CreateDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__CreateDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateDot1XConfiguration(soap*, _tds__CreateDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfiguration(soap*, _tds__CreateDot1XConfiguration*) serialize to a stream
/// - _tds__CreateDot1XConfiguration* _tds__CreateDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__CreateDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateDot1XConfiguration::soap_del() deep deletes _tds__CreateDot1XConfiguration data members, use only after _tds__CreateDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__CreateDot1XConfiguration or derived type identifier
class _tds__CreateDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__CreateDot1XConfigurationResponse operations:
/// - _tds__CreateDot1XConfigurationResponse* soap_new__tds__CreateDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__CreateDot1XConfigurationResponse* soap_new__tds__CreateDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateDot1XConfigurationResponse* soap_new_req__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__CreateDot1XConfigurationResponse* soap_new_set__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateDot1XConfigurationResponse(soap*, _tds__CreateDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfigurationResponse(soap*, _tds__CreateDot1XConfigurationResponse*) serialize to a stream
/// - _tds__CreateDot1XConfigurationResponse* _tds__CreateDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__CreateDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateDot1XConfigurationResponse::soap_del() deep deletes _tds__CreateDot1XConfigurationResponse data members, use only after _tds__CreateDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__CreateDot1XConfigurationResponse or derived type identifier
class _tds__CreateDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
/// @note class _tds__SetDot1XConfiguration operations:
/// - _tds__SetDot1XConfiguration* soap_new__tds__SetDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__SetDot1XConfiguration* soap_new__tds__SetDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetDot1XConfiguration* soap_new_req__tds__SetDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetDot1XConfiguration* soap_new_set__tds__SetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDot1XConfiguration(soap*, _tds__SetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfiguration(soap*, _tds__SetDot1XConfiguration*) serialize to a stream
/// - _tds__SetDot1XConfiguration* _tds__SetDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__SetDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDot1XConfiguration::soap_del() deep deletes _tds__SetDot1XConfiguration data members, use only after _tds__SetDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__SetDot1XConfiguration or derived type identifier
class _tds__SetDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__SetDot1XConfigurationResponse operations:
/// - _tds__SetDot1XConfigurationResponse* soap_new__tds__SetDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetDot1XConfigurationResponse* soap_new__tds__SetDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDot1XConfigurationResponse* soap_new_req__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetDot1XConfigurationResponse* soap_new_set__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDot1XConfigurationResponse(soap*, _tds__SetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfigurationResponse(soap*, _tds__SetDot1XConfigurationResponse*) serialize to a stream
/// - _tds__SetDot1XConfigurationResponse* _tds__SetDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDot1XConfigurationResponse::soap_del() deep deletes _tds__SetDot1XConfigurationResponse data members, use only after _tds__SetDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetDot1XConfigurationResponse or derived type identifier
class _tds__SetDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
/// @note class _tds__GetDot1XConfiguration operations:
/// - _tds__GetDot1XConfiguration* soap_new__tds__GetDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__GetDot1XConfiguration* soap_new__tds__GetDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfiguration* soap_new_req__tds__GetDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfiguration* soap_new_set__tds__GetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfiguration(soap*, _tds__GetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfiguration(soap*, _tds__GetDot1XConfiguration*) serialize to a stream
/// - _tds__GetDot1XConfiguration* _tds__GetDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfiguration::soap_del() deep deletes _tds__GetDot1XConfiguration data members, use only after _tds__GetDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__GetDot1XConfiguration or derived type identifier
class _tds__GetDot1XConfiguration
{ public:
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__GetDot1XConfigurationResponse operations:
/// - _tds__GetDot1XConfigurationResponse* soap_new__tds__GetDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurationResponse* soap_new__tds__GetDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurationResponse* soap_new_req__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurationResponse* soap_new_set__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationResponse(soap*, _tds__GetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationResponse(soap*, _tds__GetDot1XConfigurationResponse*) serialize to a stream
/// - _tds__GetDot1XConfigurationResponse* _tds__GetDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurationResponse::soap_del() deep deletes _tds__GetDot1XConfigurationResponse data members, use only after _tds__GetDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurationResponse or derived type identifier
class _tds__GetDot1XConfigurationResponse
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
/// @note class _tds__GetDot1XConfigurations operations:
/// - _tds__GetDot1XConfigurations* soap_new__tds__GetDot1XConfigurations(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurations* soap_new__tds__GetDot1XConfigurations(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurations* soap_new_req__tds__GetDot1XConfigurations(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurations* soap_new_set__tds__GetDot1XConfigurations(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurations(soap*, _tds__GetDot1XConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurations(soap*, _tds__GetDot1XConfigurations*) serialize to a stream
/// - _tds__GetDot1XConfigurations* _tds__GetDot1XConfigurations::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurations::soap_del() deep deletes _tds__GetDot1XConfigurations data members, use only after _tds__GetDot1XConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurations::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurations or derived type identifier
class _tds__GetDot1XConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
/// @note class _tds__GetDot1XConfigurationsResponse operations:
/// - _tds__GetDot1XConfigurationsResponse* soap_new__tds__GetDot1XConfigurationsResponse(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurationsResponse* soap_new__tds__GetDot1XConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurationsResponse* soap_new_req__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurationsResponse* soap_new_set__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationsResponse(soap*, _tds__GetDot1XConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationsResponse(soap*, _tds__GetDot1XConfigurationsResponse*) serialize to a stream
/// - _tds__GetDot1XConfigurationsResponse* _tds__GetDot1XConfigurationsResponse::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurationsResponse::soap_del() deep deletes _tds__GetDot1XConfigurationsResponse data members, use only after _tds__GetDot1XConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurationsResponse::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurationsResponse or derived type identifier
class _tds__GetDot1XConfigurationsResponse
{ public:
/// Size of array of tt__Dot1XConfiguration* is 0..unbounded.
  $ int                                  __sizeDot1XConfiguration       0;
/// Pointer to array tt__Dot1XConfiguration* of size 0..unbounded.
    tt__Dot1XConfiguration*             *Dot1XConfiguration             0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
/// @note class _tds__DeleteDot1XConfiguration operations:
/// - _tds__DeleteDot1XConfiguration* soap_new__tds__DeleteDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__DeleteDot1XConfiguration* soap_new__tds__DeleteDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteDot1XConfiguration* soap_new_req__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__DeleteDot1XConfiguration* soap_new_set__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__DeleteDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfiguration(soap*, _tds__DeleteDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfiguration(soap*, _tds__DeleteDot1XConfiguration*) serialize to a stream
/// - _tds__DeleteDot1XConfiguration* _tds__DeleteDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__DeleteDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteDot1XConfiguration::soap_del() deep deletes _tds__DeleteDot1XConfiguration data members, use only after _tds__DeleteDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__DeleteDot1XConfiguration or derived type identifier
class _tds__DeleteDot1XConfiguration
{ public:
/// Size of array of tt__ReferenceToken is 0..unbounded.
  $ int                                  __sizeDot1XConfigurationToken  0;
/// Pointer to array tt__ReferenceToken of size 0..unbounded.
    tt__ReferenceToken                  *Dot1XConfigurationToken        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__DeleteDot1XConfigurationResponse operations:
/// - _tds__DeleteDot1XConfigurationResponse* soap_new__tds__DeleteDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__DeleteDot1XConfigurationResponse* soap_new__tds__DeleteDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteDot1XConfigurationResponse* soap_new_req__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteDot1XConfigurationResponse* soap_new_set__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfigurationResponse(soap*, _tds__DeleteDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfigurationResponse(soap*, _tds__DeleteDot1XConfigurationResponse*) serialize to a stream
/// - _tds__DeleteDot1XConfigurationResponse* _tds__DeleteDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteDot1XConfigurationResponse::soap_del() deep deletes _tds__DeleteDot1XConfigurationResponse data members, use only after _tds__DeleteDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__DeleteDot1XConfigurationResponse or derived type identifier
class _tds__DeleteDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
/// @note class _tds__GetRelayOutputs operations:
/// - _tds__GetRelayOutputs* soap_new__tds__GetRelayOutputs(soap*) allocate and default initialize
/// - _tds__GetRelayOutputs* soap_new__tds__GetRelayOutputs(soap*, int num) allocate and default initialize an array
/// - _tds__GetRelayOutputs* soap_new_req__tds__GetRelayOutputs(soap*, ...) allocate, set required members
/// - _tds__GetRelayOutputs* soap_new_set__tds__GetRelayOutputs(soap*, ...) allocate, set all public members
/// - _tds__GetRelayOutputs::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRelayOutputs(soap*, _tds__GetRelayOutputs*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputs(soap*, _tds__GetRelayOutputs*) serialize to a stream
/// - _tds__GetRelayOutputs* _tds__GetRelayOutputs::soap_dup(soap*) returns deep copy of _tds__GetRelayOutputs, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRelayOutputs::soap_del() deep deletes _tds__GetRelayOutputs data members, use only after _tds__GetRelayOutputs::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRelayOutputs::soap_type() returns SOAP_TYPE__tds__GetRelayOutputs or derived type identifier
class _tds__GetRelayOutputs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
/// @note class _tds__GetRelayOutputsResponse operations:
/// - _tds__GetRelayOutputsResponse* soap_new__tds__GetRelayOutputsResponse(soap*) allocate and default initialize
/// - _tds__GetRelayOutputsResponse* soap_new__tds__GetRelayOutputsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRelayOutputsResponse* soap_new_req__tds__GetRelayOutputsResponse(soap*, ...) allocate, set required members
/// - _tds__GetRelayOutputsResponse* soap_new_set__tds__GetRelayOutputsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRelayOutputsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRelayOutputsResponse(soap*, _tds__GetRelayOutputsResponse*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputsResponse(soap*, _tds__GetRelayOutputsResponse*) serialize to a stream
/// - _tds__GetRelayOutputsResponse* _tds__GetRelayOutputsResponse::soap_dup(soap*) returns deep copy of _tds__GetRelayOutputsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRelayOutputsResponse::soap_del() deep deletes _tds__GetRelayOutputsResponse data members, use only after _tds__GetRelayOutputsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRelayOutputsResponse::soap_type() returns SOAP_TYPE__tds__GetRelayOutputsResponse or derived type identifier
class _tds__GetRelayOutputsResponse
{ public:
/// Size of array of tt__RelayOutput* is 0..unbounded.
  $ int                                  __sizeRelayOutputs             0;
/// Pointer to array tt__RelayOutput* of size 0..unbounded.
    tt__RelayOutput*                    *RelayOutputs                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
/// @note class _tds__SetRelayOutputSettings operations:
/// - _tds__SetRelayOutputSettings* soap_new__tds__SetRelayOutputSettings(soap*) allocate and default initialize
/// - _tds__SetRelayOutputSettings* soap_new__tds__SetRelayOutputSettings(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputSettings* soap_new_req__tds__SetRelayOutputSettings(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputSettings* soap_new_set__tds__SetRelayOutputSettings(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputSettings::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettings(soap*, _tds__SetRelayOutputSettings*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettings(soap*, _tds__SetRelayOutputSettings*) serialize to a stream
/// - _tds__SetRelayOutputSettings* _tds__SetRelayOutputSettings::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputSettings, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputSettings::soap_del() deep deletes _tds__SetRelayOutputSettings data members, use only after _tds__SetRelayOutputSettings::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputSettings::soap_type() returns SOAP_TYPE__tds__SetRelayOutputSettings or derived type identifier
class _tds__SetRelayOutputSettings
{ public:
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
/// @note class _tds__SetRelayOutputSettingsResponse operations:
/// - _tds__SetRelayOutputSettingsResponse* soap_new__tds__SetRelayOutputSettingsResponse(soap*) allocate and default initialize
/// - _tds__SetRelayOutputSettingsResponse* soap_new__tds__SetRelayOutputSettingsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputSettingsResponse* soap_new_req__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputSettingsResponse* soap_new_set__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputSettingsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettingsResponse(soap*, _tds__SetRelayOutputSettingsResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettingsResponse(soap*, _tds__SetRelayOutputSettingsResponse*) serialize to a stream
/// - _tds__SetRelayOutputSettingsResponse* _tds__SetRelayOutputSettingsResponse::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputSettingsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputSettingsResponse::soap_del() deep deletes _tds__SetRelayOutputSettingsResponse data members, use only after _tds__SetRelayOutputSettingsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputSettingsResponse::soap_type() returns SOAP_TYPE__tds__SetRelayOutputSettingsResponse or derived type identifier
class _tds__SetRelayOutputSettingsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
/// @note class _tds__SetRelayOutputState operations:
/// - _tds__SetRelayOutputState* soap_new__tds__SetRelayOutputState(soap*) allocate and default initialize
/// - _tds__SetRelayOutputState* soap_new__tds__SetRelayOutputState(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputState* soap_new_req__tds__SetRelayOutputState(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputState* soap_new_set__tds__SetRelayOutputState(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputState::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputState(soap*, _tds__SetRelayOutputState*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputState(soap*, _tds__SetRelayOutputState*) serialize to a stream
/// - _tds__SetRelayOutputState* _tds__SetRelayOutputState::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputState, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputState::soap_del() deep deletes _tds__SetRelayOutputState data members, use only after _tds__SetRelayOutputState::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputState::soap_type() returns SOAP_TYPE__tds__SetRelayOutputState or derived type identifier
class _tds__SetRelayOutputState
{ public:
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
/// @note class _tds__SetRelayOutputStateResponse operations:
/// - _tds__SetRelayOutputStateResponse* soap_new__tds__SetRelayOutputStateResponse(soap*) allocate and default initialize
/// - _tds__SetRelayOutputStateResponse* soap_new__tds__SetRelayOutputStateResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputStateResponse* soap_new_req__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputStateResponse* soap_new_set__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputStateResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputStateResponse(soap*, _tds__SetRelayOutputStateResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputStateResponse(soap*, _tds__SetRelayOutputStateResponse*) serialize to a stream
/// - _tds__SetRelayOutputStateResponse* _tds__SetRelayOutputStateResponse::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputStateResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputStateResponse::soap_del() deep deletes _tds__SetRelayOutputStateResponse data members, use only after _tds__SetRelayOutputStateResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputStateResponse::soap_type() returns SOAP_TYPE__tds__SetRelayOutputStateResponse or derived type identifier
class _tds__SetRelayOutputStateResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note class _tds__SendAuxiliaryCommand operations:
/// - _tds__SendAuxiliaryCommand* soap_new__tds__SendAuxiliaryCommand(soap*) allocate and default initialize
/// - _tds__SendAuxiliaryCommand* soap_new__tds__SendAuxiliaryCommand(soap*, int num) allocate and default initialize an array
/// - _tds__SendAuxiliaryCommand* soap_new_req__tds__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - _tds__SendAuxiliaryCommand* soap_new_set__tds__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - _tds__SendAuxiliaryCommand::soap_default(soap*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommand(soap*, _tds__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommand(soap*, _tds__SendAuxiliaryCommand*) serialize to a stream
/// - _tds__SendAuxiliaryCommand* _tds__SendAuxiliaryCommand::soap_dup(soap*) returns deep copy of _tds__SendAuxiliaryCommand, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SendAuxiliaryCommand::soap_del() deep deletes _tds__SendAuxiliaryCommand data members, use only after _tds__SendAuxiliaryCommand::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SendAuxiliaryCommand::soap_type() returns SOAP_TYPE__tds__SendAuxiliaryCommand or derived type identifier
class _tds__SendAuxiliaryCommand
{ public:
/// Element "AuxiliaryCommand" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note class _tds__SendAuxiliaryCommandResponse operations:
/// - _tds__SendAuxiliaryCommandResponse* soap_new__tds__SendAuxiliaryCommandResponse(soap*) allocate and default initialize
/// - _tds__SendAuxiliaryCommandResponse* soap_new__tds__SendAuxiliaryCommandResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SendAuxiliaryCommandResponse* soap_new_req__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - _tds__SendAuxiliaryCommandResponse* soap_new_set__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - _tds__SendAuxiliaryCommandResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommandResponse(soap*, _tds__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommandResponse(soap*, _tds__SendAuxiliaryCommandResponse*) serialize to a stream
/// - _tds__SendAuxiliaryCommandResponse* _tds__SendAuxiliaryCommandResponse::soap_dup(soap*) returns deep copy of _tds__SendAuxiliaryCommandResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SendAuxiliaryCommandResponse::soap_del() deep deletes _tds__SendAuxiliaryCommandResponse data members, use only after _tds__SendAuxiliaryCommandResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SendAuxiliaryCommandResponse::soap_type() returns SOAP_TYPE__tds__SendAuxiliaryCommandResponse or derived type identifier
class _tds__SendAuxiliaryCommandResponse
{ public:
/// Element "AuxiliaryCommandResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommandResponse       0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
/// @note class _tds__GetDot11Capabilities operations:
/// - _tds__GetDot11Capabilities* soap_new__tds__GetDot11Capabilities(soap*) allocate and default initialize
/// - _tds__GetDot11Capabilities* soap_new__tds__GetDot11Capabilities(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11Capabilities* soap_new_req__tds__GetDot11Capabilities(soap*, ...) allocate, set required members
/// - _tds__GetDot11Capabilities* soap_new_set__tds__GetDot11Capabilities(soap*, ...) allocate, set all public members
/// - _tds__GetDot11Capabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11Capabilities(soap*, _tds__GetDot11Capabilities*) deserialize from a stream
/// - int soap_write__tds__GetDot11Capabilities(soap*, _tds__GetDot11Capabilities*) serialize to a stream
/// - _tds__GetDot11Capabilities* _tds__GetDot11Capabilities::soap_dup(soap*) returns deep copy of _tds__GetDot11Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11Capabilities::soap_del() deep deletes _tds__GetDot11Capabilities data members, use only after _tds__GetDot11Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11Capabilities::soap_type() returns SOAP_TYPE__tds__GetDot11Capabilities or derived type identifier
class _tds__GetDot11Capabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
/// @note class _tds__GetDot11CapabilitiesResponse operations:
/// - _tds__GetDot11CapabilitiesResponse* soap_new__tds__GetDot11CapabilitiesResponse(soap*) allocate and default initialize
/// - _tds__GetDot11CapabilitiesResponse* soap_new__tds__GetDot11CapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11CapabilitiesResponse* soap_new_req__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot11CapabilitiesResponse* soap_new_set__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot11CapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11CapabilitiesResponse(soap*, _tds__GetDot11CapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11CapabilitiesResponse(soap*, _tds__GetDot11CapabilitiesResponse*) serialize to a stream
/// - _tds__GetDot11CapabilitiesResponse* _tds__GetDot11CapabilitiesResponse::soap_dup(soap*) returns deep copy of _tds__GetDot11CapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11CapabilitiesResponse::soap_del() deep deletes _tds__GetDot11CapabilitiesResponse data members, use only after _tds__GetDot11CapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11CapabilitiesResponse::soap_type() returns SOAP_TYPE__tds__GetDot11CapabilitiesResponse or derived type identifier
class _tds__GetDot11CapabilitiesResponse
{ public:
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    tt__Dot11Capabilities*               Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
/// @note class _tds__GetDot11Status operations:
/// - _tds__GetDot11Status* soap_new__tds__GetDot11Status(soap*) allocate and default initialize
/// - _tds__GetDot11Status* soap_new__tds__GetDot11Status(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11Status* soap_new_req__tds__GetDot11Status(soap*, ...) allocate, set required members
/// - _tds__GetDot11Status* soap_new_set__tds__GetDot11Status(soap*, ...) allocate, set all public members
/// - _tds__GetDot11Status::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11Status(soap*, _tds__GetDot11Status*) deserialize from a stream
/// - int soap_write__tds__GetDot11Status(soap*, _tds__GetDot11Status*) serialize to a stream
/// - _tds__GetDot11Status* _tds__GetDot11Status::soap_dup(soap*) returns deep copy of _tds__GetDot11Status, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11Status::soap_del() deep deletes _tds__GetDot11Status data members, use only after _tds__GetDot11Status::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11Status::soap_type() returns SOAP_TYPE__tds__GetDot11Status or derived type identifier
class _tds__GetDot11Status
{ public:
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
/// @note class _tds__GetDot11StatusResponse operations:
/// - _tds__GetDot11StatusResponse* soap_new__tds__GetDot11StatusResponse(soap*) allocate and default initialize
/// - _tds__GetDot11StatusResponse* soap_new__tds__GetDot11StatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11StatusResponse* soap_new_req__tds__GetDot11StatusResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot11StatusResponse* soap_new_set__tds__GetDot11StatusResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot11StatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11StatusResponse(soap*, _tds__GetDot11StatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11StatusResponse(soap*, _tds__GetDot11StatusResponse*) serialize to a stream
/// - _tds__GetDot11StatusResponse* _tds__GetDot11StatusResponse::soap_dup(soap*) returns deep copy of _tds__GetDot11StatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11StatusResponse::soap_del() deep deletes _tds__GetDot11StatusResponse data members, use only after _tds__GetDot11StatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11StatusResponse::soap_type() returns SOAP_TYPE__tds__GetDot11StatusResponse or derived type identifier
class _tds__GetDot11StatusResponse
{ public:
/// Element "Status" of type "http://www.onvif.org/ver10/schema":Dot11Status.
    tt__Dot11Status*                     Status                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
/// @note class _tds__ScanAvailableDot11Networks operations:
/// - _tds__ScanAvailableDot11Networks* soap_new__tds__ScanAvailableDot11Networks(soap*) allocate and default initialize
/// - _tds__ScanAvailableDot11Networks* soap_new__tds__ScanAvailableDot11Networks(soap*, int num) allocate and default initialize an array
/// - _tds__ScanAvailableDot11Networks* soap_new_req__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set required members
/// - _tds__ScanAvailableDot11Networks* soap_new_set__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set all public members
/// - _tds__ScanAvailableDot11Networks::soap_default(soap*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11Networks(soap*, _tds__ScanAvailableDot11Networks*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11Networks(soap*, _tds__ScanAvailableDot11Networks*) serialize to a stream
/// - _tds__ScanAvailableDot11Networks* _tds__ScanAvailableDot11Networks::soap_dup(soap*) returns deep copy of _tds__ScanAvailableDot11Networks, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__ScanAvailableDot11Networks::soap_del() deep deletes _tds__ScanAvailableDot11Networks data members, use only after _tds__ScanAvailableDot11Networks::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__ScanAvailableDot11Networks::soap_type() returns SOAP_TYPE__tds__ScanAvailableDot11Networks or derived type identifier
class _tds__ScanAvailableDot11Networks
{ public:
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
/// @note class _tds__ScanAvailableDot11NetworksResponse operations:
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new__tds__ScanAvailableDot11NetworksResponse(soap*) allocate and default initialize
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new__tds__ScanAvailableDot11NetworksResponse(soap*, int num) allocate and default initialize an array
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new_req__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set required members
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new_set__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set all public members
/// - _tds__ScanAvailableDot11NetworksResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11NetworksResponse(soap*, _tds__ScanAvailableDot11NetworksResponse*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11NetworksResponse(soap*, _tds__ScanAvailableDot11NetworksResponse*) serialize to a stream
/// - _tds__ScanAvailableDot11NetworksResponse* _tds__ScanAvailableDot11NetworksResponse::soap_dup(soap*) returns deep copy of _tds__ScanAvailableDot11NetworksResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__ScanAvailableDot11NetworksResponse::soap_del() deep deletes _tds__ScanAvailableDot11NetworksResponse data members, use only after _tds__ScanAvailableDot11NetworksResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__ScanAvailableDot11NetworksResponse::soap_type() returns SOAP_TYPE__tds__ScanAvailableDot11NetworksResponse or derived type identifier
class _tds__ScanAvailableDot11NetworksResponse
{ public:
/// Size of array of tt__Dot11AvailableNetworks* is 0..unbounded.
  $ int                                  __sizeNetworks                 0;
/// Pointer to array tt__Dot11AvailableNetworks* of size 0..unbounded.
    tt__Dot11AvailableNetworks*         *Networks                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
/// @note class _tds__GetSystemUris operations:
/// - _tds__GetSystemUris* soap_new__tds__GetSystemUris(soap*) allocate and default initialize
/// - _tds__GetSystemUris* soap_new__tds__GetSystemUris(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUris* soap_new_req__tds__GetSystemUris(soap*, ...) allocate, set required members
/// - _tds__GetSystemUris* soap_new_set__tds__GetSystemUris(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUris::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUris(soap*, _tds__GetSystemUris*) deserialize from a stream
/// - int soap_write__tds__GetSystemUris(soap*, _tds__GetSystemUris*) serialize to a stream
/// - _tds__GetSystemUris* _tds__GetSystemUris::soap_dup(soap*) returns deep copy of _tds__GetSystemUris, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUris::soap_del() deep deletes _tds__GetSystemUris data members, use only after _tds__GetSystemUris::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUris::soap_type() returns SOAP_TYPE__tds__GetSystemUris or derived type identifier
class _tds__GetSystemUris
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
/// @note class _tds__GetSystemUrisResponse operations:
/// - _tds__GetSystemUrisResponse* soap_new__tds__GetSystemUrisResponse(soap*) allocate and default initialize
/// - _tds__GetSystemUrisResponse* soap_new__tds__GetSystemUrisResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUrisResponse* soap_new_req__tds__GetSystemUrisResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemUrisResponse* soap_new_set__tds__GetSystemUrisResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUrisResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse(soap*, _tds__GetSystemUrisResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse(soap*, _tds__GetSystemUrisResponse*) serialize to a stream
/// - _tds__GetSystemUrisResponse* _tds__GetSystemUrisResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemUrisResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUrisResponse::soap_del() deep deletes _tds__GetSystemUrisResponse data members, use only after _tds__GetSystemUrisResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUrisResponse::soap_type() returns SOAP_TYPE__tds__GetSystemUrisResponse or derived type identifier
class _tds__GetSystemUrisResponse
{ public:
/// Element "SystemLogUris" of type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    tt__SystemLogUriList*                SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of type xs:anyURI.
    xsd__anyURI                          SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of type xs:anyURI.
    xsd__anyURI                          SystemBackupUri                0;	///< Optional element.
/// @note class _tds__GetSystemUrisResponse_Extension operations:
/// - _tds__GetSystemUrisResponse_Extension* soap_new__tds__GetSystemUrisResponse_Extension(soap*) allocate and default initialize
/// - _tds__GetSystemUrisResponse_Extension* soap_new__tds__GetSystemUrisResponse_Extension(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUrisResponse_Extension* soap_new_req__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set required members
/// - _tds__GetSystemUrisResponse_Extension* soap_new_set__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUrisResponse_Extension::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse_Extension(soap*, _tds__GetSystemUrisResponse_Extension*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse_Extension(soap*, _tds__GetSystemUrisResponse_Extension*) serialize to a stream
/// - _tds__GetSystemUrisResponse_Extension* _tds__GetSystemUrisResponse_Extension::soap_dup(soap*) returns deep copy of _tds__GetSystemUrisResponse_Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUrisResponse_Extension::soap_del() deep deletes _tds__GetSystemUrisResponse_Extension data members, use only after _tds__GetSystemUrisResponse_Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUrisResponse_Extension::soap_type() returns SOAP_TYPE__tds__GetSystemUrisResponse_Extension or derived type identifier
    class _tds__GetSystemUrisResponse_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
/// @note class _tds__StartFirmwareUpgrade operations:
/// - _tds__StartFirmwareUpgrade* soap_new__tds__StartFirmwareUpgrade(soap*) allocate and default initialize
/// - _tds__StartFirmwareUpgrade* soap_new__tds__StartFirmwareUpgrade(soap*, int num) allocate and default initialize an array
/// - _tds__StartFirmwareUpgrade* soap_new_req__tds__StartFirmwareUpgrade(soap*, ...) allocate, set required members
/// - _tds__StartFirmwareUpgrade* soap_new_set__tds__StartFirmwareUpgrade(soap*, ...) allocate, set all public members
/// - _tds__StartFirmwareUpgrade::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgrade(soap*, _tds__StartFirmwareUpgrade*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgrade(soap*, _tds__StartFirmwareUpgrade*) serialize to a stream
/// - _tds__StartFirmwareUpgrade* _tds__StartFirmwareUpgrade::soap_dup(soap*) returns deep copy of _tds__StartFirmwareUpgrade, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartFirmwareUpgrade::soap_del() deep deletes _tds__StartFirmwareUpgrade data members, use only after _tds__StartFirmwareUpgrade::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartFirmwareUpgrade::soap_type() returns SOAP_TYPE__tds__StartFirmwareUpgrade or derived type identifier
class _tds__StartFirmwareUpgrade
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
/// @note class _tds__StartFirmwareUpgradeResponse operations:
/// - _tds__StartFirmwareUpgradeResponse* soap_new__tds__StartFirmwareUpgradeResponse(soap*) allocate and default initialize
/// - _tds__StartFirmwareUpgradeResponse* soap_new__tds__StartFirmwareUpgradeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__StartFirmwareUpgradeResponse* soap_new_req__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set required members
/// - _tds__StartFirmwareUpgradeResponse* soap_new_set__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set all public members
/// - _tds__StartFirmwareUpgradeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgradeResponse(soap*, _tds__StartFirmwareUpgradeResponse*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgradeResponse(soap*, _tds__StartFirmwareUpgradeResponse*) serialize to a stream
/// - _tds__StartFirmwareUpgradeResponse* _tds__StartFirmwareUpgradeResponse::soap_dup(soap*) returns deep copy of _tds__StartFirmwareUpgradeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartFirmwareUpgradeResponse::soap_del() deep deletes _tds__StartFirmwareUpgradeResponse data members, use only after _tds__StartFirmwareUpgradeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartFirmwareUpgradeResponse::soap_type() returns SOAP_TYPE__tds__StartFirmwareUpgradeResponse or derived type identifier
class _tds__StartFirmwareUpgradeResponse
{ public:
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
/// @note class _tds__StartSystemRestore operations:
/// - _tds__StartSystemRestore* soap_new__tds__StartSystemRestore(soap*) allocate and default initialize
/// - _tds__StartSystemRestore* soap_new__tds__StartSystemRestore(soap*, int num) allocate and default initialize an array
/// - _tds__StartSystemRestore* soap_new_req__tds__StartSystemRestore(soap*, ...) allocate, set required members
/// - _tds__StartSystemRestore* soap_new_set__tds__StartSystemRestore(soap*, ...) allocate, set all public members
/// - _tds__StartSystemRestore::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartSystemRestore(soap*, _tds__StartSystemRestore*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestore(soap*, _tds__StartSystemRestore*) serialize to a stream
/// - _tds__StartSystemRestore* _tds__StartSystemRestore::soap_dup(soap*) returns deep copy of _tds__StartSystemRestore, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartSystemRestore::soap_del() deep deletes _tds__StartSystemRestore data members, use only after _tds__StartSystemRestore::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartSystemRestore::soap_type() returns SOAP_TYPE__tds__StartSystemRestore or derived type identifier
class _tds__StartSystemRestore
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
/// @note class _tds__StartSystemRestoreResponse operations:
/// - _tds__StartSystemRestoreResponse* soap_new__tds__StartSystemRestoreResponse(soap*) allocate and default initialize
/// - _tds__StartSystemRestoreResponse* soap_new__tds__StartSystemRestoreResponse(soap*, int num) allocate and default initialize an array
/// - _tds__StartSystemRestoreResponse* soap_new_req__tds__StartSystemRestoreResponse(soap*, ...) allocate, set required members
/// - _tds__StartSystemRestoreResponse* soap_new_set__tds__StartSystemRestoreResponse(soap*, ...) allocate, set all public members
/// - _tds__StartSystemRestoreResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartSystemRestoreResponse(soap*, _tds__StartSystemRestoreResponse*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestoreResponse(soap*, _tds__StartSystemRestoreResponse*) serialize to a stream
/// - _tds__StartSystemRestoreResponse* _tds__StartSystemRestoreResponse::soap_dup(soap*) returns deep copy of _tds__StartSystemRestoreResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartSystemRestoreResponse::soap_del() deep deletes _tds__StartSystemRestoreResponse data members, use only after _tds__StartSystemRestoreResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartSystemRestoreResponse::soap_type() returns SOAP_TYPE__tds__StartSystemRestoreResponse or derived type identifier
class _tds__StartSystemRestoreResponse
{ public:
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
///
/// @note class _tds__GetStorageConfigurations operations:
/// - _tds__GetStorageConfigurations* soap_new__tds__GetStorageConfigurations(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurations* soap_new__tds__GetStorageConfigurations(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurations* soap_new_req__tds__GetStorageConfigurations(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurations* soap_new_set__tds__GetStorageConfigurations(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurations(soap*, _tds__GetStorageConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurations(soap*, _tds__GetStorageConfigurations*) serialize to a stream
/// - _tds__GetStorageConfigurations* _tds__GetStorageConfigurations::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurations::soap_del() deep deletes _tds__GetStorageConfigurations data members, use only after _tds__GetStorageConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurations::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurations or derived type identifier
class _tds__GetStorageConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
///
/// @note class _tds__GetStorageConfigurationsResponse operations:
/// - _tds__GetStorageConfigurationsResponse* soap_new__tds__GetStorageConfigurationsResponse(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurationsResponse* soap_new__tds__GetStorageConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurationsResponse* soap_new_req__tds__GetStorageConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurationsResponse* soap_new_set__tds__GetStorageConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationsResponse(soap*, _tds__GetStorageConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurationsResponse(soap*, _tds__GetStorageConfigurationsResponse*) serialize to a stream
/// - _tds__GetStorageConfigurationsResponse* _tds__GetStorageConfigurationsResponse::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurationsResponse::soap_del() deep deletes _tds__GetStorageConfigurationsResponse data members, use only after _tds__GetStorageConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurationsResponse::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurationsResponse or derived type identifier
class _tds__GetStorageConfigurationsResponse
{ public:
/// Size of array of tds__StorageConfiguration* is 0..unbounded.
  $ int                                  __sizeStorageConfigurations    0;
/// Pointer to array tds__StorageConfiguration* of size 0..unbounded.
    tds__StorageConfiguration*          *StorageConfigurations          0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
///
/// @note class _tds__CreateStorageConfiguration operations:
/// - _tds__CreateStorageConfiguration* soap_new__tds__CreateStorageConfiguration(soap*) allocate and default initialize
/// - _tds__CreateStorageConfiguration* soap_new__tds__CreateStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__CreateStorageConfiguration* soap_new_req__tds__CreateStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__CreateStorageConfiguration* soap_new_set__tds__CreateStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__CreateStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateStorageConfiguration(soap*, _tds__CreateStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateStorageConfiguration(soap*, _tds__CreateStorageConfiguration*) serialize to a stream
/// - _tds__CreateStorageConfiguration* _tds__CreateStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__CreateStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateStorageConfiguration::soap_del() deep deletes _tds__CreateStorageConfiguration data members, use only after _tds__CreateStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateStorageConfiguration::soap_type() returns SOAP_TYPE__tds__CreateStorageConfiguration or derived type identifier
class _tds__CreateStorageConfiguration
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
///
/// @note class _tds__CreateStorageConfigurationResponse operations:
/// - _tds__CreateStorageConfigurationResponse* soap_new__tds__CreateStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__CreateStorageConfigurationResponse* soap_new__tds__CreateStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateStorageConfigurationResponse* soap_new_req__tds__CreateStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__CreateStorageConfigurationResponse* soap_new_set__tds__CreateStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateStorageConfigurationResponse(soap*, _tds__CreateStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateStorageConfigurationResponse(soap*, _tds__CreateStorageConfigurationResponse*) serialize to a stream
/// - _tds__CreateStorageConfigurationResponse* _tds__CreateStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__CreateStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateStorageConfigurationResponse::soap_del() deep deletes _tds__CreateStorageConfigurationResponse data members, use only after _tds__CreateStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__CreateStorageConfigurationResponse or derived type identifier
class _tds__CreateStorageConfigurationResponse
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
///
/// @note class _tds__GetStorageConfiguration operations:
/// - _tds__GetStorageConfiguration* soap_new__tds__GetStorageConfiguration(soap*) allocate and default initialize
/// - _tds__GetStorageConfiguration* soap_new__tds__GetStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfiguration* soap_new_req__tds__GetStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfiguration* soap_new_set__tds__GetStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfiguration(soap*, _tds__GetStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfiguration(soap*, _tds__GetStorageConfiguration*) serialize to a stream
/// - _tds__GetStorageConfiguration* _tds__GetStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__GetStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfiguration::soap_del() deep deletes _tds__GetStorageConfiguration data members, use only after _tds__GetStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfiguration::soap_type() returns SOAP_TYPE__tds__GetStorageConfiguration or derived type identifier
class _tds__GetStorageConfiguration
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
///
/// @note class _tds__GetStorageConfigurationResponse operations:
/// - _tds__GetStorageConfigurationResponse* soap_new__tds__GetStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurationResponse* soap_new__tds__GetStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurationResponse* soap_new_req__tds__GetStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurationResponse* soap_new_set__tds__GetStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationResponse(soap*, _tds__GetStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurationResponse(soap*, _tds__GetStorageConfigurationResponse*) serialize to a stream
/// - _tds__GetStorageConfigurationResponse* _tds__GetStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurationResponse::soap_del() deep deletes _tds__GetStorageConfigurationResponse data members, use only after _tds__GetStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurationResponse or derived type identifier
class _tds__GetStorageConfigurationResponse
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
///
/// @note class _tds__SetStorageConfiguration operations:
/// - _tds__SetStorageConfiguration* soap_new__tds__SetStorageConfiguration(soap*) allocate and default initialize
/// - _tds__SetStorageConfiguration* soap_new__tds__SetStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetStorageConfiguration* soap_new_req__tds__SetStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetStorageConfiguration* soap_new_set__tds__SetStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetStorageConfiguration(soap*, _tds__SetStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetStorageConfiguration(soap*, _tds__SetStorageConfiguration*) serialize to a stream
/// - _tds__SetStorageConfiguration* _tds__SetStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__SetStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetStorageConfiguration::soap_del() deep deletes _tds__SetStorageConfiguration data members, use only after _tds__SetStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetStorageConfiguration::soap_type() returns SOAP_TYPE__tds__SetStorageConfiguration or derived type identifier
class _tds__SetStorageConfiguration
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
///
/// @note class _tds__SetStorageConfigurationResponse operations:
/// - _tds__SetStorageConfigurationResponse* soap_new__tds__SetStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetStorageConfigurationResponse* soap_new__tds__SetStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetStorageConfigurationResponse* soap_new_req__tds__SetStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetStorageConfigurationResponse* soap_new_set__tds__SetStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetStorageConfigurationResponse(soap*, _tds__SetStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetStorageConfigurationResponse(soap*, _tds__SetStorageConfigurationResponse*) serialize to a stream
/// - _tds__SetStorageConfigurationResponse* _tds__SetStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetStorageConfigurationResponse::soap_del() deep deletes _tds__SetStorageConfigurationResponse data members, use only after _tds__SetStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetStorageConfigurationResponse or derived type identifier
class _tds__SetStorageConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
///
/// @note class _tds__DeleteStorageConfiguration operations:
/// - _tds__DeleteStorageConfiguration* soap_new__tds__DeleteStorageConfiguration(soap*) allocate and default initialize
/// - _tds__DeleteStorageConfiguration* soap_new__tds__DeleteStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteStorageConfiguration* soap_new_req__tds__DeleteStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__DeleteStorageConfiguration* soap_new_set__tds__DeleteStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__DeleteStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteStorageConfiguration(soap*, _tds__DeleteStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteStorageConfiguration(soap*, _tds__DeleteStorageConfiguration*) serialize to a stream
/// - _tds__DeleteStorageConfiguration* _tds__DeleteStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__DeleteStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteStorageConfiguration::soap_del() deep deletes _tds__DeleteStorageConfiguration data members, use only after _tds__DeleteStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteStorageConfiguration::soap_type() returns SOAP_TYPE__tds__DeleteStorageConfiguration or derived type identifier
class _tds__DeleteStorageConfiguration
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
///
/// @note class _tds__DeleteStorageConfigurationResponse operations:
/// - _tds__DeleteStorageConfigurationResponse* soap_new__tds__DeleteStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__DeleteStorageConfigurationResponse* soap_new__tds__DeleteStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteStorageConfigurationResponse* soap_new_req__tds__DeleteStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteStorageConfigurationResponse* soap_new_set__tds__DeleteStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteStorageConfigurationResponse(soap*, _tds__DeleteStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteStorageConfigurationResponse(soap*, _tds__DeleteStorageConfigurationResponse*) serialize to a stream
/// - _tds__DeleteStorageConfigurationResponse* _tds__DeleteStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteStorageConfigurationResponse::soap_del() deep deletes _tds__DeleteStorageConfigurationResponse data members, use only after _tds__DeleteStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__DeleteStorageConfigurationResponse or derived type identifier
class _tds__DeleteStorageConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation is a complexType.
///
/// @note class _tds__GetGeoLocation operations:
/// - _tds__GetGeoLocation* soap_new__tds__GetGeoLocation(soap*) allocate and default initialize
/// - _tds__GetGeoLocation* soap_new__tds__GetGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__GetGeoLocation* soap_new_req__tds__GetGeoLocation(soap*, ...) allocate, set required members
/// - _tds__GetGeoLocation* soap_new_set__tds__GetGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__GetGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetGeoLocation(soap*, _tds__GetGeoLocation*) deserialize from a stream
/// - int soap_write__tds__GetGeoLocation(soap*, _tds__GetGeoLocation*) serialize to a stream
/// - _tds__GetGeoLocation* _tds__GetGeoLocation::soap_dup(soap*) returns deep copy of _tds__GetGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetGeoLocation::soap_del() deep deletes _tds__GetGeoLocation data members, use only after _tds__GetGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetGeoLocation::soap_type() returns SOAP_TYPE__tds__GetGeoLocation or derived type identifier
class _tds__GetGeoLocation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse is a complexType.
///
/// @note class _tds__GetGeoLocationResponse operations:
/// - _tds__GetGeoLocationResponse* soap_new__tds__GetGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__GetGeoLocationResponse* soap_new__tds__GetGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetGeoLocationResponse* soap_new_req__tds__GetGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__GetGeoLocationResponse* soap_new_set__tds__GetGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetGeoLocationResponse(soap*, _tds__GetGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__GetGeoLocationResponse(soap*, _tds__GetGeoLocationResponse*) serialize to a stream
/// - _tds__GetGeoLocationResponse* _tds__GetGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__GetGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetGeoLocationResponse::soap_del() deep deletes _tds__GetGeoLocationResponse data members, use only after _tds__GetGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__GetGeoLocationResponse or derived type identifier
class _tds__GetGeoLocationResponse
{ public:
/// Size of array of tt__LocationEntity* is 0..unbounded.
  $ int                                  __sizeLocation                 0;
/// Pointer to array tt__LocationEntity* of size 0..unbounded.
    tt__LocationEntity*                 *Location                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation is a complexType.
///
/// @note class _tds__SetGeoLocation operations:
/// - _tds__SetGeoLocation* soap_new__tds__SetGeoLocation(soap*) allocate and default initialize
/// - _tds__SetGeoLocation* soap_new__tds__SetGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__SetGeoLocation* soap_new_req__tds__SetGeoLocation(soap*, ...) allocate, set required members
/// - _tds__SetGeoLocation* soap_new_set__tds__SetGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__SetGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetGeoLocation(soap*, _tds__SetGeoLocation*) deserialize from a stream
/// - int soap_write__tds__SetGeoLocation(soap*, _tds__SetGeoLocation*) serialize to a stream
/// - _tds__SetGeoLocation* _tds__SetGeoLocation::soap_dup(soap*) returns deep copy of _tds__SetGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetGeoLocation::soap_del() deep deletes _tds__SetGeoLocation data members, use only after _tds__SetGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetGeoLocation::soap_type() returns SOAP_TYPE__tds__SetGeoLocation or derived type identifier
class _tds__SetGeoLocation
{ public:
/// Size of array of tt__LocationEntity* is 1..unbounded.
  $ int                                  __sizeLocation                 1;
/// Pointer to array tt__LocationEntity* of size 1..unbounded.
    tt__LocationEntity*                 *Location                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse is a complexType.
///
/// @note class _tds__SetGeoLocationResponse operations:
/// - _tds__SetGeoLocationResponse* soap_new__tds__SetGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__SetGeoLocationResponse* soap_new__tds__SetGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetGeoLocationResponse* soap_new_req__tds__SetGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__SetGeoLocationResponse* soap_new_set__tds__SetGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetGeoLocationResponse(soap*, _tds__SetGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__SetGeoLocationResponse(soap*, _tds__SetGeoLocationResponse*) serialize to a stream
/// - _tds__SetGeoLocationResponse* _tds__SetGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__SetGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetGeoLocationResponse::soap_del() deep deletes _tds__SetGeoLocationResponse data members, use only after _tds__SetGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__SetGeoLocationResponse or derived type identifier
class _tds__SetGeoLocationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation is a complexType.
///
/// @note class _tds__DeleteGeoLocation operations:
/// - _tds__DeleteGeoLocation* soap_new__tds__DeleteGeoLocation(soap*) allocate and default initialize
/// - _tds__DeleteGeoLocation* soap_new__tds__DeleteGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteGeoLocation* soap_new_req__tds__DeleteGeoLocation(soap*, ...) allocate, set required members
/// - _tds__DeleteGeoLocation* soap_new_set__tds__DeleteGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__DeleteGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteGeoLocation(soap*, _tds__DeleteGeoLocation*) deserialize from a stream
/// - int soap_write__tds__DeleteGeoLocation(soap*, _tds__DeleteGeoLocation*) serialize to a stream
/// - _tds__DeleteGeoLocation* _tds__DeleteGeoLocation::soap_dup(soap*) returns deep copy of _tds__DeleteGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteGeoLocation::soap_del() deep deletes _tds__DeleteGeoLocation data members, use only after _tds__DeleteGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteGeoLocation::soap_type() returns SOAP_TYPE__tds__DeleteGeoLocation or derived type identifier
class _tds__DeleteGeoLocation
{ public:
/// Size of array of tt__LocationEntity* is 1..unbounded.
  $ int                                  __sizeLocation                 1;
/// Pointer to array tt__LocationEntity* of size 1..unbounded.
    tt__LocationEntity*                 *Location                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse is a complexType.
///
/// @note class _tds__DeleteGeoLocationResponse operations:
/// - _tds__DeleteGeoLocationResponse* soap_new__tds__DeleteGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__DeleteGeoLocationResponse* soap_new__tds__DeleteGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteGeoLocationResponse* soap_new_req__tds__DeleteGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteGeoLocationResponse* soap_new_set__tds__DeleteGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteGeoLocationResponse(soap*, _tds__DeleteGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteGeoLocationResponse(soap*, _tds__DeleteGeoLocationResponse*) serialize to a stream
/// - _tds__DeleteGeoLocationResponse* _tds__DeleteGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteGeoLocationResponse::soap_del() deep deletes _tds__DeleteGeoLocationResponse data members, use only after _tds__DeleteGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__DeleteGeoLocationResponse or derived type identifier
class _tds__DeleteGeoLocationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSource as tt__VideoSource
/// - "http://www.onvif.org/ver10/schema":AudioSource as tt__AudioSource
/// - "http://www.onvif.org/ver10/schema":VideoOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioOutput as tt__AudioOutput
/// - "http://www.onvif.org/ver10/schema":NetworkInterface as tt__NetworkInterface
/// - "http://www.onvif.org/ver10/schema":RelayOutput as tt__RelayOutput
/// - "http://www.onvif.org/ver10/schema":DigitalInput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":PTZNode as tt__PTZNode
/// - "http://www.onvif.org/ver10/schema":OSDConfiguration as tt__OSDConfiguration
/// - "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration as tds__StorageConfiguration
///
/// @note class tt__DeviceEntity operations:
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(soap*) allocate and default initialize
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(soap*, int num) allocate and default initialize an array
/// - tt__DeviceEntity* soap_new_req_tt__DeviceEntity(soap*, ...) allocate, set required members
/// - tt__DeviceEntity* soap_new_set_tt__DeviceEntity(soap*, ...) allocate, set all public members
/// - tt__DeviceEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceEntity(soap*, tt__DeviceEntity*) deserialize from a stream
/// - int soap_write_tt__DeviceEntity(soap*, tt__DeviceEntity*) serialize to a stream
/// - tt__DeviceEntity* tt__DeviceEntity::soap_dup(soap*) returns deep copy of tt__DeviceEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceEntity::soap_del() deep deletes tt__DeviceEntity data members, use only after tt__DeviceEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceEntity::soap_type() returns SOAP_TYPE_tt__DeviceEntity or derived type identifier
class tt__DeviceEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntRectangle operations:
/// - tt__IntRectangle* soap_new_tt__IntRectangle(soap*) allocate and default initialize
/// - tt__IntRectangle* soap_new_tt__IntRectangle(soap*, int num) allocate and default initialize an array
/// - tt__IntRectangle* soap_new_req_tt__IntRectangle(soap*, ...) allocate, set required members
/// - tt__IntRectangle* soap_new_set_tt__IntRectangle(soap*, ...) allocate, set all public members
/// - tt__IntRectangle::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntRectangle(soap*, tt__IntRectangle*) deserialize from a stream
/// - int soap_write_tt__IntRectangle(soap*, tt__IntRectangle*) serialize to a stream
/// - tt__IntRectangle* tt__IntRectangle::soap_dup(soap*) returns deep copy of tt__IntRectangle, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntRectangle::soap_del() deep deletes tt__IntRectangle data members, use only after tt__IntRectangle::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntRectangle::soap_type() returns SOAP_TYPE_tt__IntRectangle or derived type identifier
class tt__IntRectangle
{ public:
/// Attribute "x" of type xs:int.
  @ int                                  x                              1;	///< Required attribute.
/// Attribute "y" of type xs:int.
  @ int                                  y                              1;	///< Required attribute.
/// Attribute "width" of type xs:int.
  @ int                                  width                          1;	///< Required attribute.
/// Attribute "height" of type xs:int.
  @ int                                  height                         1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntRectangleRange operations:
/// - tt__IntRectangleRange* soap_new_tt__IntRectangleRange(soap*) allocate and default initialize
/// - tt__IntRectangleRange* soap_new_tt__IntRectangleRange(soap*, int num) allocate and default initialize an array
/// - tt__IntRectangleRange* soap_new_req_tt__IntRectangleRange(soap*, ...) allocate, set required members
/// - tt__IntRectangleRange* soap_new_set_tt__IntRectangleRange(soap*, ...) allocate, set all public members
/// - tt__IntRectangleRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) deserialize from a stream
/// - int soap_write_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) serialize to a stream
/// - tt__IntRectangleRange* tt__IntRectangleRange::soap_dup(soap*) returns deep copy of tt__IntRectangleRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntRectangleRange::soap_del() deep deletes tt__IntRectangleRange data members, use only after tt__IntRectangleRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntRectangleRange::soap_type() returns SOAP_TYPE_tt__IntRectangleRange or derived type identifier
class tt__IntRectangleRange
{ public:
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
///
/// Element "WidthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
///
/// Element "HeightRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        HeightRange                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__FloatRange operations:
/// - tt__FloatRange* soap_new_tt__FloatRange(soap*) allocate and default initialize
/// - tt__FloatRange* soap_new_tt__FloatRange(soap*, int num) allocate and default initialize an array
/// - tt__FloatRange* soap_new_req_tt__FloatRange(soap*, ...) allocate, set required members
/// - tt__FloatRange* soap_new_set_tt__FloatRange(soap*, ...) allocate, set all public members
/// - tt__FloatRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__FloatRange(soap*, tt__FloatRange*) deserialize from a stream
/// - int soap_write_tt__FloatRange(soap*, tt__FloatRange*) serialize to a stream
/// - tt__FloatRange* tt__FloatRange::soap_dup(soap*) returns deep copy of tt__FloatRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__FloatRange::soap_del() deep deletes tt__FloatRange data members, use only after tt__FloatRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__FloatRange::soap_type() returns SOAP_TYPE_tt__FloatRange or derived type identifier
class tt__FloatRange
{ public:
/// Element "Min" of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of type xs:float.
    float                                Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__DurationRange operations:
/// - tt__DurationRange* soap_new_tt__DurationRange(soap*) allocate and default initialize
/// - tt__DurationRange* soap_new_tt__DurationRange(soap*, int num) allocate and default initialize an array
/// - tt__DurationRange* soap_new_req_tt__DurationRange(soap*, ...) allocate, set required members
/// - tt__DurationRange* soap_new_set_tt__DurationRange(soap*, ...) allocate, set all public members
/// - tt__DurationRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__DurationRange(soap*, tt__DurationRange*) deserialize from a stream
/// - int soap_write_tt__DurationRange(soap*, tt__DurationRange*) serialize to a stream
/// - tt__DurationRange* tt__DurationRange::soap_dup(soap*) returns deep copy of tt__DurationRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DurationRange::soap_del() deep deletes tt__DurationRange data members, use only after tt__DurationRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DurationRange::soap_type() returns SOAP_TYPE_tt__DurationRange or derived type identifier
class tt__DurationRange
{ public:
/// Element "Min" of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntItems is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntItems operations:
/// - tt__IntItems* soap_new_tt__IntItems(soap*) allocate and default initialize
/// - tt__IntItems* soap_new_tt__IntItems(soap*, int num) allocate and default initialize an array
/// - tt__IntItems* soap_new_req_tt__IntItems(soap*, ...) allocate, set required members
/// - tt__IntItems* soap_new_set_tt__IntItems(soap*, ...) allocate, set all public members
/// - tt__IntItems::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntItems(soap*, tt__IntItems*) deserialize from a stream
/// - int soap_write_tt__IntItems(soap*, tt__IntItems*) serialize to a stream
/// - tt__IntItems* tt__IntItems::soap_dup(soap*) returns deep copy of tt__IntItems, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntItems::soap_del() deep deletes tt__IntItems data members, use only after tt__IntItems::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntItems::soap_type() returns SOAP_TYPE_tt__IntItems or derived type identifier
class tt__IntItems
{ public:
/// Size of array of int is 0..unbounded.
  $ int                                  __sizeItems                    0;
/// Pointer to array int of size 0..unbounded.
    int                                 *Items                          0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":FloatItems is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnyHolder is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
///
/// @note class tt__VideoSourceExtension operations:
/// - tt__VideoSourceExtension* soap_new_tt__VideoSourceExtension(soap*) allocate and default initialize
/// - tt__VideoSourceExtension* soap_new_tt__VideoSourceExtension(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceExtension* soap_new_req_tt__VideoSourceExtension(soap*, ...) allocate, set required members
/// - tt__VideoSourceExtension* soap_new_set_tt__VideoSourceExtension(soap*, ...) allocate, set all public members
/// - tt__VideoSourceExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) serialize to a stream
/// - tt__VideoSourceExtension* tt__VideoSourceExtension::soap_dup(soap*) returns deep copy of tt__VideoSourceExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceExtension::soap_del() deep deletes tt__VideoSourceExtension data members, use only after tt__VideoSourceExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceExtension::soap_type() returns SOAP_TYPE_tt__VideoSourceExtension or derived type identifier
class tt__VideoSourceExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               Imaging                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    tt__VideoSourceExtension2*           Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
///
/// @note class tt__VideoSourceExtension2 operations:
/// - tt__VideoSourceExtension2* soap_new_tt__VideoSourceExtension2(soap*) allocate and default initialize
/// - tt__VideoSourceExtension2* soap_new_tt__VideoSourceExtension2(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceExtension2* soap_new_req_tt__VideoSourceExtension2(soap*, ...) allocate, set required members
/// - tt__VideoSourceExtension2* soap_new_set_tt__VideoSourceExtension2(soap*, ...) allocate, set all public members
/// - tt__VideoSourceExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) serialize to a stream
/// - tt__VideoSourceExtension2* tt__VideoSourceExtension2::soap_dup(soap*) returns deep copy of tt__VideoSourceExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceExtension2::soap_del() deep deletes tt__VideoSourceExtension2 data members, use only after tt__VideoSourceExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceExtension2::soap_type() returns SOAP_TYPE_tt__VideoSourceExtension2 or derived type identifier
class tt__VideoSourceExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__Profile operations:
/// - tt__Profile* soap_new_tt__Profile(soap*) allocate and default initialize
/// - tt__Profile* soap_new_tt__Profile(soap*, int num) allocate and default initialize an array
/// - tt__Profile* soap_new_req_tt__Profile(soap*, ...) allocate, set required members
/// - tt__Profile* soap_new_set_tt__Profile(soap*, ...) allocate, set all public members
/// - tt__Profile::soap_default(soap*) default initialize members
/// - int soap_read_tt__Profile(soap*, tt__Profile*) deserialize from a stream
/// - int soap_write_tt__Profile(soap*, tt__Profile*) serialize to a stream
/// - tt__Profile* tt__Profile::soap_dup(soap*) returns deep copy of tt__Profile, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Profile::soap_del() deep deletes tt__Profile data members, use only after tt__Profile::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Profile::soap_type() returns SOAP_TYPE_tt__Profile or derived type identifier
class tt__Profile
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfiguration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        VideoSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceConfiguration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        AudioSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the video analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoAnalyticsConfiguration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataConfiguration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           MetadataConfiguration          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extensions defined in ONVIF 2.0
/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    tt__ProfileExtension*                Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "fixed" of type xs:boolean.
  @ bool*                                fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
///
/// @note class tt__ProfileExtension operations:
/// - tt__ProfileExtension* soap_new_tt__ProfileExtension(soap*) allocate and default initialize
/// - tt__ProfileExtension* soap_new_tt__ProfileExtension(soap*, int num) allocate and default initialize an array
/// - tt__ProfileExtension* soap_new_req_tt__ProfileExtension(soap*, ...) allocate, set required members
/// - tt__ProfileExtension* soap_new_set_tt__ProfileExtension(soap*, ...) allocate, set all public members
/// - tt__ProfileExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__ProfileExtension(soap*, tt__ProfileExtension*) deserialize from a stream
/// - int soap_write_tt__ProfileExtension(soap*, tt__ProfileExtension*) serialize to a stream
/// - tt__ProfileExtension* tt__ProfileExtension::soap_dup(soap*) returns deep copy of tt__ProfileExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ProfileExtension::soap_del() deep deletes tt__ProfileExtension data members, use only after tt__ProfileExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ProfileExtension::soap_type() returns SOAP_TYPE_tt__ProfileExtension or derived type identifier
class tt__ProfileExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputConfiguration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        AudioOutputConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioDecoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       AudioDecoderConfiguration      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    tt__ProfileExtension2*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
///
/// @note class tt__ProfileExtension2 operations:
/// - tt__ProfileExtension2* soap_new_tt__ProfileExtension2(soap*) allocate and default initialize
/// - tt__ProfileExtension2* soap_new_tt__ProfileExtension2(soap*, int num) allocate and default initialize an array
/// - tt__ProfileExtension2* soap_new_req_tt__ProfileExtension2(soap*, ...) allocate, set required members
/// - tt__ProfileExtension2* soap_new_set_tt__ProfileExtension2(soap*, ...) allocate, set all public members
/// - tt__ProfileExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) deserialize from a stream
/// - int soap_write_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) serialize to a stream
/// - tt__ProfileExtension2* tt__ProfileExtension2::soap_dup(soap*) returns deep copy of tt__ProfileExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ProfileExtension2::soap_del() deep deletes tt__ProfileExtension2 data members, use only after tt__ProfileExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ProfileExtension2::soap_type() returns SOAP_TYPE_tt__ProfileExtension2 or derived type identifier
class tt__ProfileExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSourceConfiguration as tt__VideoSourceConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration as tt__VideoEncoderConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioSourceConfiguration as tt__AudioSourceConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration as tt__AudioEncoderConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration as tt__VideoAnalyticsConfiguration
/// - "http://www.onvif.org/ver10/schema":MetadataConfiguration as tt__MetadataConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoOutputConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioOutputConfiguration as tt__AudioOutputConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration as tt__AudioDecoderConfiguration
/// - "http://www.onvif.org/ver10/schema":PTZConfiguration as tt__PTZConfiguration
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngine (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineInput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineControl (not used and removed, retain with option -Ow4)
///
/// @note class tt__ConfigurationEntity operations:
/// - tt__ConfigurationEntity* soap_new_tt__ConfigurationEntity(soap*) allocate and default initialize
/// - tt__ConfigurationEntity* soap_new_tt__ConfigurationEntity(soap*, int num) allocate and default initialize an array
/// - tt__ConfigurationEntity* soap_new_req_tt__ConfigurationEntity(soap*, ...) allocate, set required members
/// - tt__ConfigurationEntity* soap_new_set_tt__ConfigurationEntity(soap*, ...) allocate, set all public members
/// - tt__ConfigurationEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) deserialize from a stream
/// - int soap_write_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) serialize to a stream
/// - tt__ConfigurationEntity* tt__ConfigurationEntity::soap_dup(soap*) returns deep copy of tt__ConfigurationEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ConfigurationEntity::soap_del() deep deletes tt__ConfigurationEntity data members, use only after tt__ConfigurationEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ConfigurationEntity::soap_type() returns SOAP_TYPE_tt__ConfigurationEntity or derived type identifier
class tt__ConfigurationEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
///
/// @note class tt__VideoSourceConfigurationExtension operations:
/// - tt__VideoSourceConfigurationExtension* soap_new_tt__VideoSourceConfigurationExtension(soap*) allocate and default initialize
/// - tt__VideoSourceConfigurationExtension* soap_new_tt__VideoSourceConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfigurationExtension* soap_new_req_tt__VideoSourceConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfigurationExtension* soap_new_set_tt__VideoSourceConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) serialize to a stream
/// - tt__VideoSourceConfigurationExtension* tt__VideoSourceConfigurationExtension::soap_dup(soap*) returns deep copy of tt__VideoSourceConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfigurationExtension::soap_del() deep deletes tt__VideoSourceConfigurationExtension data members, use only after tt__VideoSourceConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfigurationExtension::soap_type() returns SOAP_TYPE_tt__VideoSourceConfigurationExtension or derived type identifier
class tt__VideoSourceConfigurationExtension
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rotation of captured image.
///   What resolutions a device supports shall be unaffected by the Rotate parameters.<br/>
///   If a device is configured with Rotate=AUTO, the device shall take control over the Degree parameter and automatically update it so that a client can query current rotation.<br/>
///   The device shall automatically apply the same rotation to its pan/tilt control direction depending on the following condition: if Reverse=AUTO in PTControlDirection or if the device doesnt support Reverse in PTControlDirection
/// </BLOCKQUOTE></PRE>
///
/// Element "Rotate" of type "http://www.onvif.org/ver10/schema":Rotate.
    tt__Rotate*                          Rotate                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
///
/// @note class tt__VideoSourceConfigurationExtension2 operations:
/// - tt__VideoSourceConfigurationExtension2* soap_new_tt__VideoSourceConfigurationExtension2(soap*) allocate and default initialize
/// - tt__VideoSourceConfigurationExtension2* soap_new_tt__VideoSourceConfigurationExtension2(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfigurationExtension2* soap_new_req_tt__VideoSourceConfigurationExtension2(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfigurationExtension2* soap_new_set_tt__VideoSourceConfigurationExtension2(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfigurationExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) serialize to a stream
/// - tt__VideoSourceConfigurationExtension2* tt__VideoSourceConfigurationExtension2::soap_dup(soap*) returns deep copy of tt__VideoSourceConfigurationExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfigurationExtension2::soap_del() deep deletes tt__VideoSourceConfigurationExtension2 data members, use only after tt__VideoSourceConfigurationExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfigurationExtension2::soap_type() returns SOAP_TYPE_tt__VideoSourceConfigurationExtension2 or derived type identifier
class tt__VideoSourceConfigurationExtension2
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element describing the geometric lens distortion. Multiple instances for future variable lens support.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__LensDescription* is 0..unbounded.
  $ int                                  __sizeLensDescription          0;
/// Pointer to array tt__LensDescription* of size 0..unbounded.
    tt__LensDescription*                *LensDescription                0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional element describing the scene orientation in the cameras field of view.
/// </BLOCKQUOTE></PRE>
///
/// Element "SceneOrientation" of type "http://www.onvif.org/ver10/schema":SceneOrientation.
    tt__SceneOrientation*                SceneOrientation               0;	///< Optional element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Rotate is a complexType.
///
/// @note class tt__Rotate operations:
/// - tt__Rotate* soap_new_tt__Rotate(soap*) allocate and default initialize
/// - tt__Rotate* soap_new_tt__Rotate(soap*, int num) allocate and default initialize an array
/// - tt__Rotate* soap_new_req_tt__Rotate(soap*, ...) allocate, set required members
/// - tt__Rotate* soap_new_set_tt__Rotate(soap*, ...) allocate, set all public members
/// - tt__Rotate::soap_default(soap*) default initialize members
/// - int soap_read_tt__Rotate(soap*, tt__Rotate*) deserialize from a stream
/// - int soap_write_tt__Rotate(soap*, tt__Rotate*) serialize to a stream
/// - tt__Rotate* tt__Rotate::soap_dup(soap*) returns deep copy of tt__Rotate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Rotate::soap_del() deep deletes tt__Rotate data members, use only after tt__Rotate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Rotate::soap_type() returns SOAP_TYPE_tt__Rotate or derived type identifier
class tt__Rotate
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Rotation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Degree" of type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RotateExtension.
    tt__RotateExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
///
/// @note class tt__RotateExtension operations:
/// - tt__RotateExtension* soap_new_tt__RotateExtension(soap*) allocate and default initialize
/// - tt__RotateExtension* soap_new_tt__RotateExtension(soap*, int num) allocate and default initialize an array
/// - tt__RotateExtension* soap_new_req_tt__RotateExtension(soap*, ...) allocate, set required members
/// - tt__RotateExtension* soap_new_set_tt__RotateExtension(soap*, ...) allocate, set all public members
/// - tt__RotateExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__RotateExtension(soap*, tt__RotateExtension*) deserialize from a stream
/// - int soap_write_tt__RotateExtension(soap*, tt__RotateExtension*) serialize to a stream
/// - tt__RotateExtension* tt__RotateExtension::soap_dup(soap*) returns deep copy of tt__RotateExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RotateExtension::soap_del() deep deletes tt__RotateExtension data members, use only after tt__RotateExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RotateExtension::soap_type() returns SOAP_TYPE_tt__RotateExtension or derived type identifier
class tt__RotateExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LensProjection is a complexType.
///
/// @note class tt__LensProjection operations:
/// - tt__LensProjection* soap_new_tt__LensProjection(soap*) allocate and default initialize
/// - tt__LensProjection* soap_new_tt__LensProjection(soap*, int num) allocate and default initialize an array
/// - tt__LensProjection* soap_new_req_tt__LensProjection(soap*, ...) allocate, set required members
/// - tt__LensProjection* soap_new_set_tt__LensProjection(soap*, ...) allocate, set all public members
/// - tt__LensProjection::soap_default(soap*) default initialize members
/// - int soap_read_tt__LensProjection(soap*, tt__LensProjection*) deserialize from a stream
/// - int soap_write_tt__LensProjection(soap*, tt__LensProjection*) serialize to a stream
/// - tt__LensProjection* tt__LensProjection::soap_dup(soap*) returns deep copy of tt__LensProjection, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LensProjection::soap_del() deep deletes tt__LensProjection data members, use only after tt__LensProjection::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LensProjection::soap_type() returns SOAP_TYPE_tt__LensProjection or derived type identifier
class tt__LensProjection
{ public:
/// <PRE><BLOCKQUOTE>
///   Angle of incidence.
/// </BLOCKQUOTE></PRE>
///
/// Element "Angle" of type xs:float.
    float                                Angle                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Mapping radius as a consequence of the emergent angle.
/// </BLOCKQUOTE></PRE>
///
/// Element "Radius" of type xs:float.
    float                                Radius                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional ray absorption at the given angle due to vignetting. A value of one means no absorption.
/// </BLOCKQUOTE></PRE>
///
/// Element "Transmittance" of type xs:float.
    float*                               Transmittance                  0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LensOffset is a complexType.
///
/// @note class tt__LensOffset operations:
/// - tt__LensOffset* soap_new_tt__LensOffset(soap*) allocate and default initialize
/// - tt__LensOffset* soap_new_tt__LensOffset(soap*, int num) allocate and default initialize an array
/// - tt__LensOffset* soap_new_req_tt__LensOffset(soap*, ...) allocate, set required members
/// - tt__LensOffset* soap_new_set_tt__LensOffset(soap*, ...) allocate, set all public members
/// - tt__LensOffset::soap_default(soap*) default initialize members
/// - int soap_read_tt__LensOffset(soap*, tt__LensOffset*) deserialize from a stream
/// - int soap_write_tt__LensOffset(soap*, tt__LensOffset*) serialize to a stream
/// - tt__LensOffset* tt__LensOffset::soap_dup(soap*) returns deep copy of tt__LensOffset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LensOffset::soap_del() deep deletes tt__LensOffset data members, use only after tt__LensOffset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LensOffset::soap_type() returns SOAP_TYPE_tt__LensOffset or derived type identifier
class tt__LensOffset
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional horizontal offset of the lens center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional vertical offset of the lens center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LensDescription is a complexType.
///
/// @note class tt__LensDescription operations:
/// - tt__LensDescription* soap_new_tt__LensDescription(soap*) allocate and default initialize
/// - tt__LensDescription* soap_new_tt__LensDescription(soap*, int num) allocate and default initialize an array
/// - tt__LensDescription* soap_new_req_tt__LensDescription(soap*, ...) allocate, set required members
/// - tt__LensDescription* soap_new_set_tt__LensDescription(soap*, ...) allocate, set all public members
/// - tt__LensDescription::soap_default(soap*) default initialize members
/// - int soap_read_tt__LensDescription(soap*, tt__LensDescription*) deserialize from a stream
/// - int soap_write_tt__LensDescription(soap*, tt__LensDescription*) serialize to a stream
/// - tt__LensDescription* tt__LensDescription::soap_dup(soap*) returns deep copy of tt__LensDescription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LensDescription::soap_del() deep deletes tt__LensDescription data members, use only after tt__LensDescription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LensDescription::soap_type() returns SOAP_TYPE_tt__LensDescription or derived type identifier
class tt__LensDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   Offset of the lens center to the imager center in normalized coordinates.
/// </BLOCKQUOTE></PRE>
///
/// Element "Offset" of type "http://www.onvif.org/ver10/schema":LensOffset.
    tt__LensOffset*                      Offset                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Radial description of the projection characteristics. The resulting curve is defined by the B-Spline interpolation over the given elements. The element for Radius zero shall not be provided. The projection points shall be ordered with ascending Radius. Items outside the last projection Radius shall be assumed to be invisible (black).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__LensProjection* is 1..unbounded.
  $ int                                  __sizeProjection               1;
/// Pointer to array tt__LensProjection* of size 1..unbounded.
    tt__LensProjection*                 *Projection                     1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Compensation of the x coordinate needed for the ONVIF normalized coordinate system.
/// </BLOCKQUOTE></PRE>
///
/// Element "XFactor" of type xs:float.
    float                                XFactor                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional focal length of the optical system.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FocalLength" of type xs:float.
  @ float*                               FocalLength                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions is a complexType.
///
/// @note class tt__VideoSourceConfigurationOptions operations:
/// - tt__VideoSourceConfigurationOptions* soap_new_tt__VideoSourceConfigurationOptions(soap*) allocate and default initialize
/// - tt__VideoSourceConfigurationOptions* soap_new_tt__VideoSourceConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfigurationOptions* soap_new_req_tt__VideoSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfigurationOptions* soap_new_set_tt__VideoSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationOptions(soap*, tt__VideoSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptions(soap*, tt__VideoSourceConfigurationOptions*) serialize to a stream
/// - tt__VideoSourceConfigurationOptions* tt__VideoSourceConfigurationOptions::soap_dup(soap*) returns deep copy of tt__VideoSourceConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfigurationOptions::soap_del() deep deletes tt__VideoSourceConfigurationOptions data members, use only after tt__VideoSourceConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfigurationOptions::soap_type() returns SOAP_TYPE_tt__VideoSourceConfigurationOptions or derived type identifier
class tt__VideoSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported range for the capturing area.
///   Device that does not support cropped streaming shall express BoundsRange option as mentioned below
///   BoundsRange->XRange and BoundsRange->YRange with same Min/Max values HeightRange and WidthRange Min/Max values same as VideoSource Height and Width Limits.
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundsRange" of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
    tt__IntRectangleRange*               BoundsRange                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of physical inputs.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken is 1..unbounded.
  $ int                                  __sizeVideoSourceTokensAvailable 1;
/// Pointer to array tt__ReferenceToken of size 1..unbounded.
    tt__ReferenceToken                  *VideoSourceTokensAvailable     1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension.
    tt__VideoSourceConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumNumberOfProfiles" of type xs:int.
  @ int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension is a complexType.
///
/// @note class tt__VideoSourceConfigurationOptionsExtension operations:
/// - tt__VideoSourceConfigurationOptionsExtension* soap_new_tt__VideoSourceConfigurationOptionsExtension(soap*) allocate and default initialize
/// - tt__VideoSourceConfigurationOptionsExtension* soap_new_tt__VideoSourceConfigurationOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfigurationOptionsExtension* soap_new_req_tt__VideoSourceConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfigurationOptionsExtension* soap_new_set_tt__VideoSourceConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfigurationOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension(soap*, tt__VideoSourceConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension(soap*, tt__VideoSourceConfigurationOptionsExtension*) serialize to a stream
/// - tt__VideoSourceConfigurationOptionsExtension* tt__VideoSourceConfigurationOptionsExtension::soap_dup(soap*) returns deep copy of tt__VideoSourceConfigurationOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfigurationOptionsExtension::soap_del() deep deletes tt__VideoSourceConfigurationOptionsExtension data members, use only after tt__VideoSourceConfigurationOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfigurationOptionsExtension::soap_type() returns SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension or derived type identifier
class tt__VideoSourceConfigurationOptionsExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Options of parameters for Rotation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Rotate" of type "http://www.onvif.org/ver10/schema":RotateOptions.
    tt__RotateOptions*                   Rotate                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2.
    tt__VideoSourceConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptionsExtension2 is a complexType.
///
/// @note class tt__VideoSourceConfigurationOptionsExtension2 operations:
/// - tt__VideoSourceConfigurationOptionsExtension2* soap_new_tt__VideoSourceConfigurationOptionsExtension2(soap*) allocate and default initialize
/// - tt__VideoSourceConfigurationOptionsExtension2* soap_new_tt__VideoSourceConfigurationOptionsExtension2(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfigurationOptionsExtension2* soap_new_req_tt__VideoSourceConfigurationOptionsExtension2(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfigurationOptionsExtension2* soap_new_set_tt__VideoSourceConfigurationOptionsExtension2(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfigurationOptionsExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationOptionsExtension2(soap*, tt__VideoSourceConfigurationOptionsExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationOptionsExtension2(soap*, tt__VideoSourceConfigurationOptionsExtension2*) serialize to a stream
/// - tt__VideoSourceConfigurationOptionsExtension2* tt__VideoSourceConfigurationOptionsExtension2::soap_dup(soap*) returns deep copy of tt__VideoSourceConfigurationOptionsExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfigurationOptionsExtension2::soap_del() deep deletes tt__VideoSourceConfigurationOptionsExtension2 data members, use only after tt__VideoSourceConfigurationOptionsExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfigurationOptionsExtension2::soap_type() returns SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension2 or derived type identifier
class tt__VideoSourceConfigurationOptionsExtension2
{ public:
/// <PRE><BLOCKQUOTE>
///   Scene orientation modes supported by the device for this configuration.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__SceneOrientationMode is 0..unbounded.
  $ int                                  __sizeSceneOrientationMode     0;
/// Pointer to array enum tt__SceneOrientationMode of size 0..unbounded.
    enum tt__SceneOrientationMode       *SceneOrientationMode           0;	///< Multiple elements.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptions is a complexType.
///
/// @note class tt__RotateOptions operations:
/// - tt__RotateOptions* soap_new_tt__RotateOptions(soap*) allocate and default initialize
/// - tt__RotateOptions* soap_new_tt__RotateOptions(soap*, int num) allocate and default initialize an array
/// - tt__RotateOptions* soap_new_req_tt__RotateOptions(soap*, ...) allocate, set required members
/// - tt__RotateOptions* soap_new_set_tt__RotateOptions(soap*, ...) allocate, set all public members
/// - tt__RotateOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__RotateOptions(soap*, tt__RotateOptions*) deserialize from a stream
/// - int soap_write_tt__RotateOptions(soap*, tt__RotateOptions*) serialize to a stream
/// - tt__RotateOptions* tt__RotateOptions::soap_dup(soap*) returns deep copy of tt__RotateOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RotateOptions::soap_del() deep deletes tt__RotateOptions data members, use only after tt__RotateOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RotateOptions::soap_type() returns SOAP_TYPE_tt__RotateOptions or derived type identifier
class tt__RotateOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options of Rotate mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__RotateMode is 1..unbounded.
  $ int                                  __sizeMode                     1;
/// Pointer to array enum tt__RotateMode of size 1..unbounded.
    enum tt__RotateMode                 *Mode                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported degree value for rotation.
/// </BLOCKQUOTE></PRE>
///
/// Element "DegreeList" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        DegreeList                     0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RotateOptionsExtension.
    tt__RotateOptionsExtension*          Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   After setting the rotation, if a device starts to reboot this value is true.
///   If a device can handle rotation setting without rebooting this value is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Reboot" of type xs:boolean.
  @ bool*                                Reboot                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RotateOptionsExtension is a complexType.
///
/// @note class tt__RotateOptionsExtension operations:
/// - tt__RotateOptionsExtension* soap_new_tt__RotateOptionsExtension(soap*) allocate and default initialize
/// - tt__RotateOptionsExtension* soap_new_tt__RotateOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__RotateOptionsExtension* soap_new_req_tt__RotateOptionsExtension(soap*, ...) allocate, set required members
/// - tt__RotateOptionsExtension* soap_new_set_tt__RotateOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__RotateOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__RotateOptionsExtension(soap*, tt__RotateOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__RotateOptionsExtension(soap*, tt__RotateOptionsExtension*) serialize to a stream
/// - tt__RotateOptionsExtension* tt__RotateOptionsExtension::soap_dup(soap*) returns deep copy of tt__RotateOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RotateOptionsExtension::soap_del() deep deletes tt__RotateOptionsExtension data members, use only after tt__RotateOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RotateOptionsExtension::soap_type() returns SOAP_TYPE_tt__RotateOptionsExtension or derived type identifier
class tt__RotateOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SceneOrientation is a complexType.
///
/// @note class tt__SceneOrientation operations:
/// - tt__SceneOrientation* soap_new_tt__SceneOrientation(soap*) allocate and default initialize
/// - tt__SceneOrientation* soap_new_tt__SceneOrientation(soap*, int num) allocate and default initialize an array
/// - tt__SceneOrientation* soap_new_req_tt__SceneOrientation(soap*, ...) allocate, set required members
/// - tt__SceneOrientation* soap_new_set_tt__SceneOrientation(soap*, ...) allocate, set all public members
/// - tt__SceneOrientation::soap_default(soap*) default initialize members
/// - int soap_read_tt__SceneOrientation(soap*, tt__SceneOrientation*) deserialize from a stream
/// - int soap_write_tt__SceneOrientation(soap*, tt__SceneOrientation*) serialize to a stream
/// - tt__SceneOrientation* tt__SceneOrientation::soap_dup(soap*) returns deep copy of tt__SceneOrientation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SceneOrientation::soap_del() deep deletes tt__SceneOrientation data members, use only after tt__SceneOrientation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SceneOrientation::soap_type() returns SOAP_TYPE_tt__SceneOrientation or derived type identifier
class tt__SceneOrientation
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to assign the way the camera determines the scene orientation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":SceneOrientationMode.
    enum tt__SceneOrientationMode        Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Assigned or determined scene orientation based on the Mode. When assigning the Mode to AUTO, this field is optional and will be ignored by the device. When assigning the Mode to MANUAL, this field is required and the device will return an InvalidArgs fault if missing.
/// </BLOCKQUOTE></PRE>
///
/// Element "Orientation" of type xs:string.
    char*                                Orientation                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoResolution is a complexType.
///
/// @note class tt__VideoResolution operations:
/// - tt__VideoResolution* soap_new_tt__VideoResolution(soap*) allocate and default initialize
/// - tt__VideoResolution* soap_new_tt__VideoResolution(soap*, int num) allocate and default initialize an array
/// - tt__VideoResolution* soap_new_req_tt__VideoResolution(soap*, ...) allocate, set required members
/// - tt__VideoResolution* soap_new_set_tt__VideoResolution(soap*, ...) allocate, set all public members
/// - tt__VideoResolution::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoResolution(soap*, tt__VideoResolution*) deserialize from a stream
/// - int soap_write_tt__VideoResolution(soap*, tt__VideoResolution*) serialize to a stream
/// - tt__VideoResolution* tt__VideoResolution::soap_dup(soap*) returns deep copy of tt__VideoResolution, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoResolution::soap_del() deep deletes tt__VideoResolution data members, use only after tt__VideoResolution::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoResolution::soap_type() returns SOAP_TYPE_tt__VideoResolution or derived type identifier
class tt__VideoResolution
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of the columns of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Width" of type xs:int.
    int                                  Width                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of the lines of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Height" of type xs:int.
    int                                  Height                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoRateControl is a complexType.
///
/// @note class tt__VideoRateControl operations:
/// - tt__VideoRateControl* soap_new_tt__VideoRateControl(soap*) allocate and default initialize
/// - tt__VideoRateControl* soap_new_tt__VideoRateControl(soap*, int num) allocate and default initialize an array
/// - tt__VideoRateControl* soap_new_req_tt__VideoRateControl(soap*, ...) allocate, set required members
/// - tt__VideoRateControl* soap_new_set_tt__VideoRateControl(soap*, ...) allocate, set all public members
/// - tt__VideoRateControl::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoRateControl(soap*, tt__VideoRateControl*) deserialize from a stream
/// - int soap_write_tt__VideoRateControl(soap*, tt__VideoRateControl*) serialize to a stream
/// - tt__VideoRateControl* tt__VideoRateControl::soap_dup(soap*) returns deep copy of tt__VideoRateControl, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoRateControl::soap_del() deep deletes tt__VideoRateControl data members, use only after tt__VideoRateControl::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoRateControl::soap_type() returns SOAP_TYPE_tt__VideoRateControl or derived type identifier
class tt__VideoRateControl
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum output framerate in fps. If an EncodingInterval is provided the resulting encoded framerate will be reduced by the given factor.
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateLimit" of type xs:int.
    int                                  FrameRateLimit                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Interval at which images are encoded and transmitted. (A value of 1 means that every frame is encoded, a value of 2 means that every 2nd frame is encoded ...)
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingInterval" of type xs:int.
    int                                  EncodingInterval               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the maximum output bitrate in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateLimit" of type xs:int.
    int                                  BitrateLimit                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Configuration is a complexType.
///
/// @note class tt__Mpeg4Configuration operations:
/// - tt__Mpeg4Configuration* soap_new_tt__Mpeg4Configuration(soap*) allocate and default initialize
/// - tt__Mpeg4Configuration* soap_new_tt__Mpeg4Configuration(soap*, int num) allocate and default initialize an array
/// - tt__Mpeg4Configuration* soap_new_req_tt__Mpeg4Configuration(soap*, ...) allocate, set required members
/// - tt__Mpeg4Configuration* soap_new_set_tt__Mpeg4Configuration(soap*, ...) allocate, set all public members
/// - tt__Mpeg4Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Mpeg4Configuration(soap*, tt__Mpeg4Configuration*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Configuration(soap*, tt__Mpeg4Configuration*) serialize to a stream
/// - tt__Mpeg4Configuration* tt__Mpeg4Configuration::soap_dup(soap*) returns deep copy of tt__Mpeg4Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Mpeg4Configuration::soap_del() deep deletes tt__Mpeg4Configuration data members, use only after tt__Mpeg4Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Mpeg4Configuration::soap_type() returns SOAP_TYPE_tt__Mpeg4Configuration or derived type identifier
class tt__Mpeg4Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   Determines the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLength" of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the Mpeg4 profile, either simple profile (SP) or advanced simple profile (ASP)
/// </BLOCKQUOTE></PRE>
///
/// Element "Mpeg4Profile" of type "http://www.onvif.org/ver10/schema":Mpeg4Profile.
    enum tt__Mpeg4Profile                Mpeg4Profile                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":H264Configuration is a complexType.
///
/// @note class tt__H264Configuration operations:
/// - tt__H264Configuration* soap_new_tt__H264Configuration(soap*) allocate and default initialize
/// - tt__H264Configuration* soap_new_tt__H264Configuration(soap*, int num) allocate and default initialize an array
/// - tt__H264Configuration* soap_new_req_tt__H264Configuration(soap*, ...) allocate, set required members
/// - tt__H264Configuration* soap_new_set_tt__H264Configuration(soap*, ...) allocate, set all public members
/// - tt__H264Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__H264Configuration(soap*, tt__H264Configuration*) deserialize from a stream
/// - int soap_write_tt__H264Configuration(soap*, tt__H264Configuration*) serialize to a stream
/// - tt__H264Configuration* tt__H264Configuration::soap_dup(soap*) returns deep copy of tt__H264Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__H264Configuration::soap_del() deep deletes tt__H264Configuration data members, use only after tt__H264Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__H264Configuration::soap_type() returns SOAP_TYPE_tt__H264Configuration or derived type identifier
class tt__H264Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   Group of Video frames length. Determines typically the interval in which the I-Frames will be coded. An entry of 1 indicates I-Frames are continuously generated. An entry of 2 indicates that every 2nd image is an I-Frame, and 3 only every 3rd frame, etc. The frames in between are coded as P or B Frames.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLength" of type xs:int.
    int                                  GovLength                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   the H.264 profile, either baseline, main, extended or high
/// </BLOCKQUOTE></PRE>
///
/// Element "H264Profile" of type "http://www.onvif.org/ver10/schema":H264Profile.
    enum tt__H264Profile                 H264Profile                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions is a complexType.
///
/// @note class tt__VideoEncoderConfigurationOptions operations:
/// - tt__VideoEncoderConfigurationOptions* soap_new_tt__VideoEncoderConfigurationOptions(soap*) allocate and default initialize
/// - tt__VideoEncoderConfigurationOptions* soap_new_tt__VideoEncoderConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__VideoEncoderConfigurationOptions* soap_new_req_tt__VideoEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__VideoEncoderConfigurationOptions* soap_new_set_tt__VideoEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__VideoEncoderConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoEncoderConfigurationOptions(soap*, tt__VideoEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderConfigurationOptions(soap*, tt__VideoEncoderConfigurationOptions*) serialize to a stream
/// - tt__VideoEncoderConfigurationOptions* tt__VideoEncoderConfigurationOptions::soap_dup(soap*) returns deep copy of tt__VideoEncoderConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoEncoderConfigurationOptions::soap_del() deep deletes tt__VideoEncoderConfigurationOptions data members, use only after tt__VideoEncoderConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoEncoderConfigurationOptions::soap_type() returns SOAP_TYPE_tt__VideoEncoderConfigurationOptions or derived type identifier
class tt__VideoEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Range of the quality values. A high value means higher quality.
/// </BLOCKQUOTE></PRE>
///
/// Element "QualityRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        QualityRange                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type "http://www.onvif.org/ver10/schema":JpegOptions.
    tt__JpegOptions*                     JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
    tt__Mpeg4Options*                    MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges (See also Extension element).
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Options.
    tt__H264Options*                     H264                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension.
    tt__VideoEncoderOptionsExtension*    Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the GuaranteedFrameRate attribute on the VideoEncoderConfiguration element.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRateSupported" of type xs:boolean.
  @ bool*                                GuaranteedFrameRateSupported   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension is a complexType.
///
/// @note class tt__VideoEncoderOptionsExtension operations:
/// - tt__VideoEncoderOptionsExtension* soap_new_tt__VideoEncoderOptionsExtension(soap*) allocate and default initialize
/// - tt__VideoEncoderOptionsExtension* soap_new_tt__VideoEncoderOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__VideoEncoderOptionsExtension* soap_new_req_tt__VideoEncoderOptionsExtension(soap*, ...) allocate, set required members
/// - tt__VideoEncoderOptionsExtension* soap_new_set_tt__VideoEncoderOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__VideoEncoderOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoEncoderOptionsExtension(soap*, tt__VideoEncoderOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderOptionsExtension(soap*, tt__VideoEncoderOptionsExtension*) serialize to a stream
/// - tt__VideoEncoderOptionsExtension* tt__VideoEncoderOptionsExtension::soap_dup(soap*) returns deep copy of tt__VideoEncoderOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoEncoderOptionsExtension::soap_del() deep deletes tt__VideoEncoderOptionsExtension data members, use only after tt__VideoEncoderOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoEncoderOptionsExtension::soap_type() returns SOAP_TYPE_tt__VideoEncoderOptionsExtension or derived type identifier
class tt__VideoEncoderOptionsExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional JPEG encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type "http://www.onvif.org/ver10/schema":JpegOptions2.
    tt__JpegOptions2*                    JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional MPEG-4 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Options2.
    tt__Mpeg4Options2*                   MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional H.264 encoder settings ranges.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Options2.
    tt__H264Options2*                    H264                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2.
    tt__VideoEncoderOptionsExtension2*   Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderOptionsExtension2 is a complexType.
///
/// @note class tt__VideoEncoderOptionsExtension2 operations:
/// - tt__VideoEncoderOptionsExtension2* soap_new_tt__VideoEncoderOptionsExtension2(soap*) allocate and default initialize
/// - tt__VideoEncoderOptionsExtension2* soap_new_tt__VideoEncoderOptionsExtension2(soap*, int num) allocate and default initialize an array
/// - tt__VideoEncoderOptionsExtension2* soap_new_req_tt__VideoEncoderOptionsExtension2(soap*, ...) allocate, set required members
/// - tt__VideoEncoderOptionsExtension2* soap_new_set_tt__VideoEncoderOptionsExtension2(soap*, ...) allocate, set all public members
/// - tt__VideoEncoderOptionsExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoEncoderOptionsExtension2(soap*, tt__VideoEncoderOptionsExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderOptionsExtension2(soap*, tt__VideoEncoderOptionsExtension2*) serialize to a stream
/// - tt__VideoEncoderOptionsExtension2* tt__VideoEncoderOptionsExtension2::soap_dup(soap*) returns deep copy of tt__VideoEncoderOptionsExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoEncoderOptionsExtension2::soap_del() deep deletes tt__VideoEncoderOptionsExtension2 data members, use only after tt__VideoEncoderOptionsExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoEncoderOptionsExtension2::soap_type() returns SOAP_TYPE_tt__VideoEncoderOptionsExtension2 or derived type identifier
class tt__VideoEncoderOptionsExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":JpegOptions2 as tt__JpegOptions2
///
/// @note class tt__JpegOptions operations:
/// - tt__JpegOptions* soap_new_tt__JpegOptions(soap*) allocate and default initialize
/// - tt__JpegOptions* soap_new_tt__JpegOptions(soap*, int num) allocate and default initialize an array
/// - tt__JpegOptions* soap_new_req_tt__JpegOptions(soap*, ...) allocate, set required members
/// - tt__JpegOptions* soap_new_set_tt__JpegOptions(soap*, ...) allocate, set all public members
/// - tt__JpegOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__JpegOptions(soap*, tt__JpegOptions*) deserialize from a stream
/// - int soap_write_tt__JpegOptions(soap*, tt__JpegOptions*) serialize to a stream
/// - tt__JpegOptions* tt__JpegOptions::soap_dup(soap*) returns deep copy of tt__JpegOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__JpegOptions::soap_del() deep deletes tt__JpegOptions data members, use only after tt__JpegOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__JpegOptions::soap_type() returns SOAP_TYPE_tt__JpegOptions or derived type identifier
class tt__JpegOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":Mpeg4Options2 as tt__Mpeg4Options2
///
/// @note class tt__Mpeg4Options operations:
/// - tt__Mpeg4Options* soap_new_tt__Mpeg4Options(soap*) allocate and default initialize
/// - tt__Mpeg4Options* soap_new_tt__Mpeg4Options(soap*, int num) allocate and default initialize an array
/// - tt__Mpeg4Options* soap_new_req_tt__Mpeg4Options(soap*, ...) allocate, set required members
/// - tt__Mpeg4Options* soap_new_set_tt__Mpeg4Options(soap*, ...) allocate, set all public members
/// - tt__Mpeg4Options::soap_default(soap*) default initialize members
/// - int soap_read_tt__Mpeg4Options(soap*, tt__Mpeg4Options*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Options(soap*, tt__Mpeg4Options*) serialize to a stream
/// - tt__Mpeg4Options* tt__Mpeg4Options::soap_dup(soap*) returns deep copy of tt__Mpeg4Options, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Mpeg4Options::soap_del() deep deletes tt__Mpeg4Options data members, use only after tt__Mpeg4Options::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Mpeg4Options::soap_type() returns SOAP_TYPE_tt__Mpeg4Options or derived type identifier
class tt__Mpeg4Options
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Mpeg4Profile is 1..unbounded.
  $ int                                  __sizeMpeg4ProfilesSupported   1;
/// Pointer to array enum tt__Mpeg4Profile of size 1..unbounded.
    enum tt__Mpeg4Profile               *Mpeg4ProfilesSupported         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":H264Options2 as tt__H264Options2
///
/// @note class tt__H264Options operations:
/// - tt__H264Options* soap_new_tt__H264Options(soap*) allocate and default initialize
/// - tt__H264Options* soap_new_tt__H264Options(soap*, int num) allocate and default initialize an array
/// - tt__H264Options* soap_new_req_tt__H264Options(soap*, ...) allocate, set required members
/// - tt__H264Options* soap_new_set_tt__H264Options(soap*, ...) allocate, set all public members
/// - tt__H264Options::soap_default(soap*) default initialize members
/// - int soap_read_tt__H264Options(soap*, tt__H264Options*) deserialize from a stream
/// - int soap_write_tt__H264Options(soap*, tt__H264Options*) serialize to a stream
/// - tt__H264Options* tt__H264Options::soap_dup(soap*) returns deep copy of tt__H264Options, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__H264Options::soap_del() deep deletes tt__H264Options data members, use only after tt__H264Options::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__H264Options::soap_type() returns SOAP_TYPE_tt__H264Options or derived type identifier
class tt__H264Options
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__H264Profile is 1..unbounded.
  $ int                                  __sizeH264ProfilesSupported    1;
/// Pointer to array enum tt__H264Profile of size 1..unbounded.
    enum tt__H264Profile                *H264ProfilesSupported          1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoResolution2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoRateControl2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2ConfigurationOptions is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions is a complexType.
///
/// @note class tt__AudioSourceConfigurationOptions operations:
/// - tt__AudioSourceConfigurationOptions* soap_new_tt__AudioSourceConfigurationOptions(soap*) allocate and default initialize
/// - tt__AudioSourceConfigurationOptions* soap_new_tt__AudioSourceConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__AudioSourceConfigurationOptions* soap_new_req_tt__AudioSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__AudioSourceConfigurationOptions* soap_new_set_tt__AudioSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__AudioSourceConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioSourceConfigurationOptions(soap*, tt__AudioSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioSourceConfigurationOptions(soap*, tt__AudioSourceConfigurationOptions*) serialize to a stream
/// - tt__AudioSourceConfigurationOptions* tt__AudioSourceConfigurationOptions::soap_dup(soap*) returns deep copy of tt__AudioSourceConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioSourceConfigurationOptions::soap_del() deep deletes tt__AudioSourceConfigurationOptions data members, use only after tt__AudioSourceConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioSourceConfigurationOptions::soap_type() returns SOAP_TYPE_tt__AudioSourceConfigurationOptions or derived type identifier
class tt__AudioSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Tokens of the audio source the configuration can be used for.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken is 1..unbounded.
  $ int                                  __sizeInputTokensAvailable     1;
/// Pointer to array tt__ReferenceToken of size 1..unbounded.
    tt__ReferenceToken                  *InputTokensAvailable           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension.
    tt__AudioSourceOptionsExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceOptionsExtension is a complexType.
///
/// @note class tt__AudioSourceOptionsExtension operations:
/// - tt__AudioSourceOptionsExtension* soap_new_tt__AudioSourceOptionsExtension(soap*) allocate and default initialize
/// - tt__AudioSourceOptionsExtension* soap_new_tt__AudioSourceOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__AudioSourceOptionsExtension* soap_new_req_tt__AudioSourceOptionsExtension(soap*, ...) allocate, set required members
/// - tt__AudioSourceOptionsExtension* soap_new_set_tt__AudioSourceOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__AudioSourceOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioSourceOptionsExtension(soap*, tt__AudioSourceOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__AudioSourceOptionsExtension(soap*, tt__AudioSourceOptionsExtension*) serialize to a stream
/// - tt__AudioSourceOptionsExtension* tt__AudioSourceOptionsExtension::soap_dup(soap*) returns deep copy of tt__AudioSourceOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioSourceOptionsExtension::soap_del() deep deletes tt__AudioSourceOptionsExtension data members, use only after tt__AudioSourceOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioSourceOptionsExtension::soap_type() returns SOAP_TYPE_tt__AudioSourceOptionsExtension or derived type identifier
class tt__AudioSourceOptionsExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions is a complexType.
///
/// @note class tt__AudioEncoderConfigurationOptions operations:
/// - tt__AudioEncoderConfigurationOptions* soap_new_tt__AudioEncoderConfigurationOptions(soap*) allocate and default initialize
/// - tt__AudioEncoderConfigurationOptions* soap_new_tt__AudioEncoderConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__AudioEncoderConfigurationOptions* soap_new_req_tt__AudioEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__AudioEncoderConfigurationOptions* soap_new_set_tt__AudioEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__AudioEncoderConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioEncoderConfigurationOptions(soap*, tt__AudioEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfigurationOptions(soap*, tt__AudioEncoderConfigurationOptions*) serialize to a stream
/// - tt__AudioEncoderConfigurationOptions* tt__AudioEncoderConfigurationOptions::soap_dup(soap*) returns deep copy of tt__AudioEncoderConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioEncoderConfigurationOptions::soap_del() deep deletes tt__AudioEncoderConfigurationOptions data members, use only after tt__AudioEncoderConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioEncoderConfigurationOptions::soap_type() returns SOAP_TYPE_tt__AudioEncoderConfigurationOptions or derived type identifier
class tt__AudioEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   list of supported AudioEncoderConfigurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioEncoderConfigurationOption* is 0..unbounded.
  $ int                                  __sizeOptions                  0;
/// Pointer to array tt__AudioEncoderConfigurationOption* of size 0..unbounded.
    tt__AudioEncoderConfigurationOption* *Options                        0;	///< Multiple elements.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOption is a complexType.
///
/// @note class tt__AudioEncoderConfigurationOption operations:
/// - tt__AudioEncoderConfigurationOption* soap_new_tt__AudioEncoderConfigurationOption(soap*) allocate and default initialize
/// - tt__AudioEncoderConfigurationOption* soap_new_tt__AudioEncoderConfigurationOption(soap*, int num) allocate and default initialize an array
/// - tt__AudioEncoderConfigurationOption* soap_new_req_tt__AudioEncoderConfigurationOption(soap*, ...) allocate, set required members
/// - tt__AudioEncoderConfigurationOption* soap_new_set_tt__AudioEncoderConfigurationOption(soap*, ...) allocate, set all public members
/// - tt__AudioEncoderConfigurationOption::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioEncoderConfigurationOption(soap*, tt__AudioEncoderConfigurationOption*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfigurationOption(soap*, tt__AudioEncoderConfigurationOption*) serialize to a stream
/// - tt__AudioEncoderConfigurationOption* tt__AudioEncoderConfigurationOption::soap_dup(soap*) returns deep copy of tt__AudioEncoderConfigurationOption, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioEncoderConfigurationOption::soap_del() deep deletes tt__AudioEncoderConfigurationOption data members, use only after tt__AudioEncoderConfigurationOption::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioEncoderConfigurationOption::soap_type() returns SOAP_TYPE_tt__AudioEncoderConfigurationOption or derived type identifier
class tt__AudioEncoderConfigurationOption
{ public:
/// <PRE><BLOCKQUOTE>
///   The enoding used for audio data (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        BitrateList                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported Sample Rates in kHz for the specified Encoding
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateList" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateList                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2ConfigurationOptions is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension is a complexType.
///
/// @note class tt__MetadataConfigurationExtension operations:
/// - tt__MetadataConfigurationExtension* soap_new_tt__MetadataConfigurationExtension(soap*) allocate and default initialize
/// - tt__MetadataConfigurationExtension* soap_new_tt__MetadataConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__MetadataConfigurationExtension* soap_new_req_tt__MetadataConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__MetadataConfigurationExtension* soap_new_set_tt__MetadataConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__MetadataConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__MetadataConfigurationExtension(soap*, tt__MetadataConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationExtension(soap*, tt__MetadataConfigurationExtension*) serialize to a stream
/// - tt__MetadataConfigurationExtension* tt__MetadataConfigurationExtension::soap_dup(soap*) returns deep copy of tt__MetadataConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MetadataConfigurationExtension::soap_del() deep deletes tt__MetadataConfigurationExtension data members, use only after tt__MetadataConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MetadataConfigurationExtension::soap_type() returns SOAP_TYPE_tt__MetadataConfigurationExtension or derived type identifier
class tt__MetadataConfigurationExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZFilter is a complexType.
///
/// @note class tt__PTZFilter operations:
/// - tt__PTZFilter* soap_new_tt__PTZFilter(soap*) allocate and default initialize
/// - tt__PTZFilter* soap_new_tt__PTZFilter(soap*, int num) allocate and default initialize an array
/// - tt__PTZFilter* soap_new_req_tt__PTZFilter(soap*, ...) allocate, set required members
/// - tt__PTZFilter* soap_new_set_tt__PTZFilter(soap*, ...) allocate, set all public members
/// - tt__PTZFilter::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZFilter(soap*, tt__PTZFilter*) deserialize from a stream
/// - int soap_write_tt__PTZFilter(soap*, tt__PTZFilter*) serialize to a stream
/// - tt__PTZFilter* tt__PTZFilter::soap_dup(soap*) returns deep copy of tt__PTZFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZFilter::soap_del() deep deletes tt__PTZFilter data members, use only after tt__PTZFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZFilter::soap_type() returns SOAP_TYPE_tt__PTZFilter or derived type identifier
class tt__PTZFilter
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ status (IDLE, MOVING or UNKNOWN)
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the metadata stream shall contain the PTZ position
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type xs:boolean.
    bool                                 Position                       1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EventSubscription is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Subcription handling in the same way as base notification subscription.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__EventSubscription operations:
/// - tt__EventSubscription* soap_new_tt__EventSubscription(soap*) allocate and default initialize
/// - tt__EventSubscription* soap_new_tt__EventSubscription(soap*, int num) allocate and default initialize an array
/// - tt__EventSubscription* soap_new_req_tt__EventSubscription(soap*, ...) allocate, set required members
/// - tt__EventSubscription* soap_new_set_tt__EventSubscription(soap*, ...) allocate, set all public members
/// - tt__EventSubscription::soap_default(soap*) default initialize members
/// - int soap_read_tt__EventSubscription(soap*, tt__EventSubscription*) deserialize from a stream
/// - int soap_write_tt__EventSubscription(soap*, tt__EventSubscription*) serialize to a stream
/// - tt__EventSubscription* tt__EventSubscription::soap_dup(soap*) returns deep copy of tt__EventSubscription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EventSubscription::soap_del() deep deletes tt__EventSubscription data members, use only after tt__EventSubscription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EventSubscription::soap_type() returns SOAP_TYPE_tt__EventSubscription or derived type identifier
class tt__EventSubscription
{ public:
/// Element "Filter" of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    wsnt__FilterType*                    Filter                         0;	///< Optional element.
/// @note class _tt__EventSubscription_SubscriptionPolicy operations:
/// - _tt__EventSubscription_SubscriptionPolicy* soap_new__tt__EventSubscription_SubscriptionPolicy(soap*) allocate and default initialize
/// - _tt__EventSubscription_SubscriptionPolicy* soap_new__tt__EventSubscription_SubscriptionPolicy(soap*, int num) allocate and default initialize an array
/// - _tt__EventSubscription_SubscriptionPolicy* soap_new_req__tt__EventSubscription_SubscriptionPolicy(soap*, ...) allocate, set required members
/// - _tt__EventSubscription_SubscriptionPolicy* soap_new_set__tt__EventSubscription_SubscriptionPolicy(soap*, ...) allocate, set all public members
/// - _tt__EventSubscription_SubscriptionPolicy::soap_default(soap*) default initialize members
/// - int soap_read__tt__EventSubscription_SubscriptionPolicy(soap*, _tt__EventSubscription_SubscriptionPolicy*) deserialize from a stream
/// - int soap_write__tt__EventSubscription_SubscriptionPolicy(soap*, _tt__EventSubscription_SubscriptionPolicy*) serialize to a stream
/// - _tt__EventSubscription_SubscriptionPolicy* _tt__EventSubscription_SubscriptionPolicy::soap_dup(soap*) returns deep copy of _tt__EventSubscription_SubscriptionPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tt__EventSubscription_SubscriptionPolicy::soap_del() deep deletes _tt__EventSubscription_SubscriptionPolicy data members, use only after _tt__EventSubscription_SubscriptionPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tt__EventSubscription_SubscriptionPolicy::soap_type() returns SOAP_TYPE__tt__EventSubscription_SubscriptionPolicy or derived type identifier
    class _tt__EventSubscription_SubscriptionPolicy
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions is a complexType.
///
/// @note class tt__MetadataConfigurationOptions operations:
/// - tt__MetadataConfigurationOptions* soap_new_tt__MetadataConfigurationOptions(soap*) allocate and default initialize
/// - tt__MetadataConfigurationOptions* soap_new_tt__MetadataConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__MetadataConfigurationOptions* soap_new_req_tt__MetadataConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__MetadataConfigurationOptions* soap_new_set_tt__MetadataConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__MetadataConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__MetadataConfigurationOptions(soap*, tt__MetadataConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationOptions(soap*, tt__MetadataConfigurationOptions*) serialize to a stream
/// - tt__MetadataConfigurationOptions* tt__MetadataConfigurationOptions::soap_dup(soap*) returns deep copy of tt__MetadataConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MetadataConfigurationOptions::soap_del() deep deletes tt__MetadataConfigurationOptions data members, use only after tt__MetadataConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MetadataConfigurationOptions::soap_type() returns SOAP_TYPE_tt__MetadataConfigurationOptions or derived type identifier
class tt__MetadataConfigurationOptions
{ public:
/// Element "PTZStatusFilterOptions" of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions.
    tt__PTZStatusFilterOptions*          PTZStatusFilterOptions         1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension.
    tt__MetadataConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the Geo Located positions of each target.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocation" of type xs:boolean.
  @ bool*                                GeoLocation                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   A device signalling support for content filtering shall support expressions with the provided expression size.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxContentFilterSize" of type xs:int.
  @ int*                                 MaxContentFilterSize           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension is a complexType.
///
/// @note class tt__MetadataConfigurationOptionsExtension operations:
/// - tt__MetadataConfigurationOptionsExtension* soap_new_tt__MetadataConfigurationOptionsExtension(soap*) allocate and default initialize
/// - tt__MetadataConfigurationOptionsExtension* soap_new_tt__MetadataConfigurationOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__MetadataConfigurationOptionsExtension* soap_new_req_tt__MetadataConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - tt__MetadataConfigurationOptionsExtension* soap_new_set_tt__MetadataConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__MetadataConfigurationOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__MetadataConfigurationOptionsExtension(soap*, tt__MetadataConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationOptionsExtension(soap*, tt__MetadataConfigurationOptionsExtension*) serialize to a stream
/// - tt__MetadataConfigurationOptionsExtension* tt__MetadataConfigurationOptionsExtension::soap_dup(soap*) returns deep copy of tt__MetadataConfigurationOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MetadataConfigurationOptionsExtension::soap_del() deep deletes tt__MetadataConfigurationOptionsExtension data members, use only after tt__MetadataConfigurationOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MetadataConfigurationOptionsExtension::soap_type() returns SOAP_TYPE_tt__MetadataConfigurationOptionsExtension or derived type identifier
class tt__MetadataConfigurationOptionsExtension
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported metadata compression type. Its options shall be chosen from tt:MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char* is 0..unbounded.
  $ int                                  __sizeCompressionType          0;
/// Pointer to array char* of size 0..unbounded.
    char*                               *CompressionType                0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2.
    tt__MetadataConfigurationOptionsExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfigurationOptionsExtension2 is a complexType.
///
/// @note class tt__MetadataConfigurationOptionsExtension2 operations:
/// - tt__MetadataConfigurationOptionsExtension2* soap_new_tt__MetadataConfigurationOptionsExtension2(soap*) allocate and default initialize
/// - tt__MetadataConfigurationOptionsExtension2* soap_new_tt__MetadataConfigurationOptionsExtension2(soap*, int num) allocate and default initialize an array
/// - tt__MetadataConfigurationOptionsExtension2* soap_new_req_tt__MetadataConfigurationOptionsExtension2(soap*, ...) allocate, set required members
/// - tt__MetadataConfigurationOptionsExtension2* soap_new_set_tt__MetadataConfigurationOptionsExtension2(soap*, ...) allocate, set all public members
/// - tt__MetadataConfigurationOptionsExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__MetadataConfigurationOptionsExtension2(soap*, tt__MetadataConfigurationOptionsExtension2*) deserialize from a stream
/// - int soap_write_tt__MetadataConfigurationOptionsExtension2(soap*, tt__MetadataConfigurationOptionsExtension2*) serialize to a stream
/// - tt__MetadataConfigurationOptionsExtension2* tt__MetadataConfigurationOptionsExtension2::soap_dup(soap*) returns deep copy of tt__MetadataConfigurationOptionsExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MetadataConfigurationOptionsExtension2::soap_del() deep deletes tt__MetadataConfigurationOptionsExtension2 data members, use only after tt__MetadataConfigurationOptionsExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MetadataConfigurationOptionsExtension2::soap_type() returns SOAP_TYPE_tt__MetadataConfigurationOptionsExtension2 or derived type identifier
class tt__MetadataConfigurationOptionsExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptions is a complexType.
///
/// @note class tt__PTZStatusFilterOptions operations:
/// - tt__PTZStatusFilterOptions* soap_new_tt__PTZStatusFilterOptions(soap*) allocate and default initialize
/// - tt__PTZStatusFilterOptions* soap_new_tt__PTZStatusFilterOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZStatusFilterOptions* soap_new_req_tt__PTZStatusFilterOptions(soap*, ...) allocate, set required members
/// - tt__PTZStatusFilterOptions* soap_new_set_tt__PTZStatusFilterOptions(soap*, ...) allocate, set all public members
/// - tt__PTZStatusFilterOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZStatusFilterOptions(soap*, tt__PTZStatusFilterOptions*) deserialize from a stream
/// - int soap_write_tt__PTZStatusFilterOptions(soap*, tt__PTZStatusFilterOptions*) serialize to a stream
/// - tt__PTZStatusFilterOptions* tt__PTZStatusFilterOptions::soap_dup(soap*) returns deep copy of tt__PTZStatusFilterOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZStatusFilterOptions::soap_del() deep deletes tt__PTZStatusFilterOptions data members, use only after tt__PTZStatusFilterOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZStatusFilterOptions::soap_type() returns SOAP_TYPE_tt__PTZStatusFilterOptions or derived type identifier
class tt__PTZStatusFilterOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream pan or tilt status information.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltStatusSupported" of type xs:boolean.
    bool                                 PanTiltStatusSupported         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom status inforamtion.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomStatusSupported" of type xs:boolean.
    bool                                 ZoomStatusSupported            1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream the pan or tilt position.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltPositionSupported" of type xs:boolean.
    bool*                                PanTiltPositionSupported       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   True if the device is able to stream zoom position information.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomPositionSupported" of type xs:boolean.
    bool*                                ZoomPositionSupported          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension.
    tt__PTZStatusFilterOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatusFilterOptionsExtension is a complexType.
///
/// @note class tt__PTZStatusFilterOptionsExtension operations:
/// - tt__PTZStatusFilterOptionsExtension* soap_new_tt__PTZStatusFilterOptionsExtension(soap*) allocate and default initialize
/// - tt__PTZStatusFilterOptionsExtension* soap_new_tt__PTZStatusFilterOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZStatusFilterOptionsExtension* soap_new_req_tt__PTZStatusFilterOptionsExtension(soap*, ...) allocate, set required members
/// - tt__PTZStatusFilterOptionsExtension* soap_new_set_tt__PTZStatusFilterOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__PTZStatusFilterOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZStatusFilterOptionsExtension(soap*, tt__PTZStatusFilterOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZStatusFilterOptionsExtension(soap*, tt__PTZStatusFilterOptionsExtension*) serialize to a stream
/// - tt__PTZStatusFilterOptionsExtension* tt__PTZStatusFilterOptionsExtension::soap_dup(soap*) returns deep copy of tt__PTZStatusFilterOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZStatusFilterOptionsExtension::soap_del() deep deletes tt__PTZStatusFilterOptionsExtension data members, use only after tt__PTZStatusFilterOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZStatusFilterOptionsExtension::soap_type() returns SOAP_TYPE_tt__PTZStatusFilterOptionsExtension or derived type identifier
class tt__PTZStatusFilterOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":H264DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":JpegDecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Mpeg4DecOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoDecoderConfigurationOptionsExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions is a complexType.
///
/// @note class tt__AudioOutputConfigurationOptions operations:
/// - tt__AudioOutputConfigurationOptions* soap_new_tt__AudioOutputConfigurationOptions(soap*) allocate and default initialize
/// - tt__AudioOutputConfigurationOptions* soap_new_tt__AudioOutputConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__AudioOutputConfigurationOptions* soap_new_req_tt__AudioOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__AudioOutputConfigurationOptions* soap_new_set_tt__AudioOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__AudioOutputConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioOutputConfigurationOptions(soap*, tt__AudioOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioOutputConfigurationOptions(soap*, tt__AudioOutputConfigurationOptions*) serialize to a stream
/// - tt__AudioOutputConfigurationOptions* tt__AudioOutputConfigurationOptions::soap_dup(soap*) returns deep copy of tt__AudioOutputConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioOutputConfigurationOptions::soap_del() deep deletes tt__AudioOutputConfigurationOptions data members, use only after tt__AudioOutputConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioOutputConfigurationOptions::soap_type() returns SOAP_TYPE_tt__AudioOutputConfigurationOptions or derived type identifier
class tt__AudioOutputConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Tokens of the physical Audio outputs (typically one).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken is 1..unbounded.
  $ int                                  __sizeOutputTokensAvailable    1;
/// Pointer to array tt__ReferenceToken of size 1..unbounded.
    tt__ReferenceToken                  *OutputTokensAvailable          1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An <b>audio</b> channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 0..unbounded.
  $ int                                  __sizeSendPrimacyOptions       0;
/// Pointer to array xsd__anyURI of size 0..unbounded.
    xsd__anyURI                         *SendPrimacyOptions             0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Minimum and maximum level range supported for this Output.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputLevelRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        OutputLevelRange               1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions is a complexType.
///
/// @note class tt__AudioDecoderConfigurationOptions operations:
/// - tt__AudioDecoderConfigurationOptions* soap_new_tt__AudioDecoderConfigurationOptions(soap*) allocate and default initialize
/// - tt__AudioDecoderConfigurationOptions* soap_new_tt__AudioDecoderConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__AudioDecoderConfigurationOptions* soap_new_req_tt__AudioDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__AudioDecoderConfigurationOptions* soap_new_set_tt__AudioDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__AudioDecoderConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioDecoderConfigurationOptions(soap*, tt__AudioDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfigurationOptions(soap*, tt__AudioDecoderConfigurationOptions*) serialize to a stream
/// - tt__AudioDecoderConfigurationOptions* tt__AudioDecoderConfigurationOptions::soap_dup(soap*) returns deep copy of tt__AudioDecoderConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioDecoderConfigurationOptions::soap_del() deep deletes tt__AudioDecoderConfigurationOptions data members, use only after tt__AudioDecoderConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioDecoderConfigurationOptions::soap_type() returns SOAP_TYPE_tt__AudioDecoderConfigurationOptions or derived type identifier
class tt__AudioDecoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode AAC encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "AACDecOptions" of type "http://www.onvif.org/ver10/schema":AACDecOptions.
    tt__AACDecOptions*                   AACDecOptions                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G711 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "G711DecOptions" of type "http://www.onvif.org/ver10/schema":G711DecOptions.
    tt__G711DecOptions*                  G711DecOptions                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the device is able to decode G726 encoded audio this section describes the supported configurations
/// </BLOCKQUOTE></PRE>
///
/// Element "G726DecOptions" of type "http://www.onvif.org/ver10/schema":G726DecOptions.
    tt__G726DecOptions*                  G726DecOptions                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension.
    tt__AudioDecoderConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":G711DecOptions is a complexType.
///
/// @note class tt__G711DecOptions operations:
/// - tt__G711DecOptions* soap_new_tt__G711DecOptions(soap*) allocate and default initialize
/// - tt__G711DecOptions* soap_new_tt__G711DecOptions(soap*, int num) allocate and default initialize an array
/// - tt__G711DecOptions* soap_new_req_tt__G711DecOptions(soap*, ...) allocate, set required members
/// - tt__G711DecOptions* soap_new_set_tt__G711DecOptions(soap*, ...) allocate, set all public members
/// - tt__G711DecOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__G711DecOptions(soap*, tt__G711DecOptions*) deserialize from a stream
/// - int soap_write_tt__G711DecOptions(soap*, tt__G711DecOptions*) serialize to a stream
/// - tt__G711DecOptions* tt__G711DecOptions::soap_dup(soap*) returns deep copy of tt__G711DecOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__G711DecOptions::soap_del() deep deletes tt__G711DecOptions data members, use only after tt__G711DecOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__G711DecOptions::soap_type() returns SOAP_TYPE_tt__G711DecOptions or derived type identifier
class tt__G711DecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AACDecOptions is a complexType.
///
/// @note class tt__AACDecOptions operations:
/// - tt__AACDecOptions* soap_new_tt__AACDecOptions(soap*) allocate and default initialize
/// - tt__AACDecOptions* soap_new_tt__AACDecOptions(soap*, int num) allocate and default initialize an array
/// - tt__AACDecOptions* soap_new_req_tt__AACDecOptions(soap*, ...) allocate, set required members
/// - tt__AACDecOptions* soap_new_set_tt__AACDecOptions(soap*, ...) allocate, set all public members
/// - tt__AACDecOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__AACDecOptions(soap*, tt__AACDecOptions*) deserialize from a stream
/// - int soap_write_tt__AACDecOptions(soap*, tt__AACDecOptions*) serialize to a stream
/// - tt__AACDecOptions* tt__AACDecOptions::soap_dup(soap*) returns deep copy of tt__AACDecOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AACDecOptions::soap_del() deep deletes tt__AACDecOptions data members, use only after tt__AACDecOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AACDecOptions::soap_type() returns SOAP_TYPE_tt__AACDecOptions or derived type identifier
class tt__AACDecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":G726DecOptions is a complexType.
///
/// @note class tt__G726DecOptions operations:
/// - tt__G726DecOptions* soap_new_tt__G726DecOptions(soap*) allocate and default initialize
/// - tt__G726DecOptions* soap_new_tt__G726DecOptions(soap*, int num) allocate and default initialize an array
/// - tt__G726DecOptions* soap_new_req_tt__G726DecOptions(soap*, ...) allocate, set required members
/// - tt__G726DecOptions* soap_new_set_tt__G726DecOptions(soap*, ...) allocate, set all public members
/// - tt__G726DecOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__G726DecOptions(soap*, tt__G726DecOptions*) deserialize from a stream
/// - int soap_write_tt__G726DecOptions(soap*, tt__G726DecOptions*) serialize to a stream
/// - tt__G726DecOptions* tt__G726DecOptions::soap_dup(soap*) returns deep copy of tt__G726DecOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__G726DecOptions::soap_del() deep deletes tt__G726DecOptions data members, use only after tt__G726DecOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__G726DecOptions::soap_type() returns SOAP_TYPE_tt__G726DecOptions or derived type identifier
class tt__G726DecOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported bitrates in kbps
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported sample rates in kHz
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRateRange" of type "http://www.onvif.org/ver10/schema":IntItems.
    tt__IntItems*                        SampleRateRange                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptionsExtension is a complexType.
///
/// @note class tt__AudioDecoderConfigurationOptionsExtension operations:
/// - tt__AudioDecoderConfigurationOptionsExtension* soap_new_tt__AudioDecoderConfigurationOptionsExtension(soap*) allocate and default initialize
/// - tt__AudioDecoderConfigurationOptionsExtension* soap_new_tt__AudioDecoderConfigurationOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__AudioDecoderConfigurationOptionsExtension* soap_new_req_tt__AudioDecoderConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - tt__AudioDecoderConfigurationOptionsExtension* soap_new_set_tt__AudioDecoderConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__AudioDecoderConfigurationOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioDecoderConfigurationOptionsExtension(soap*, tt__AudioDecoderConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfigurationOptionsExtension(soap*, tt__AudioDecoderConfigurationOptionsExtension*) serialize to a stream
/// - tt__AudioDecoderConfigurationOptionsExtension* tt__AudioDecoderConfigurationOptionsExtension::soap_dup(soap*) returns deep copy of tt__AudioDecoderConfigurationOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioDecoderConfigurationOptionsExtension::soap_del() deep deletes tt__AudioDecoderConfigurationOptionsExtension data members, use only after tt__AudioDecoderConfigurationOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioDecoderConfigurationOptionsExtension::soap_type() returns SOAP_TYPE_tt__AudioDecoderConfigurationOptionsExtension or derived type identifier
class tt__AudioDecoderConfigurationOptionsExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MulticastConfiguration is a complexType.
///
/// @note class tt__MulticastConfiguration operations:
/// - tt__MulticastConfiguration* soap_new_tt__MulticastConfiguration(soap*) allocate and default initialize
/// - tt__MulticastConfiguration* soap_new_tt__MulticastConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__MulticastConfiguration* soap_new_req_tt__MulticastConfiguration(soap*, ...) allocate, set required members
/// - tt__MulticastConfiguration* soap_new_set_tt__MulticastConfiguration(soap*, ...) allocate, set all public members
/// - tt__MulticastConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__MulticastConfiguration(soap*, tt__MulticastConfiguration*) deserialize from a stream
/// - int soap_write_tt__MulticastConfiguration(soap*, tt__MulticastConfiguration*) serialize to a stream
/// - tt__MulticastConfiguration* tt__MulticastConfiguration::soap_dup(soap*) returns deep copy of tt__MulticastConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MulticastConfiguration::soap_del() deep deletes tt__MulticastConfiguration data members, use only after tt__MulticastConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MulticastConfiguration::soap_type() returns SOAP_TYPE_tt__MulticastConfiguration or derived type identifier
class tt__MulticastConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   The multicast address (if this address is set to 0 no multicast streaming is enaled)
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPAddress.
    tt__IPAddress*                       Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The RTP mutlicast destination port. A device may support RTCP. In this case the port value shall be even to allow the corresponding RTCP stream to be mapped to the next higher (odd) destination port number as defined in the RTSP specification.
/// </BLOCKQUOTE></PRE>
///
/// Element "Port" of type xs:int.
    int                                  Port                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   In case of IPv6 the TTL value is assumed as the hop limit. Note that for IPV6 and administratively scoped IPv4 multicast the primary use for hop limit / TTL is to prevent packets from (endlessly) circulating and not limiting scope. In these cases the address contains the scope.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:int.
    int                                  TTL                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Read only property signalling that streaming is persistant. Use the methods StartMulticastStreaming and StopMulticastStreaming to switch its state.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":StreamSetup is a complexType.
///
/// @note class tt__StreamSetup operations:
/// - tt__StreamSetup* soap_new_tt__StreamSetup(soap*) allocate and default initialize
/// - tt__StreamSetup* soap_new_tt__StreamSetup(soap*, int num) allocate and default initialize an array
/// - tt__StreamSetup* soap_new_req_tt__StreamSetup(soap*, ...) allocate, set required members
/// - tt__StreamSetup* soap_new_set_tt__StreamSetup(soap*, ...) allocate, set all public members
/// - tt__StreamSetup::soap_default(soap*) default initialize members
/// - int soap_read_tt__StreamSetup(soap*, tt__StreamSetup*) deserialize from a stream
/// - int soap_write_tt__StreamSetup(soap*, tt__StreamSetup*) serialize to a stream
/// - tt__StreamSetup* tt__StreamSetup::soap_dup(soap*) returns deep copy of tt__StreamSetup, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__StreamSetup::soap_del() deep deletes tt__StreamSetup data members, use only after tt__StreamSetup::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__StreamSetup::soap_type() returns SOAP_TYPE_tt__StreamSetup or derived type identifier
class tt__StreamSetup
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines if a multicast or unicast stream is requested
/// </BLOCKQUOTE></PRE>
///
/// Element "Stream" of type "http://www.onvif.org/ver10/schema":StreamType.
    enum tt__StreamType                  Stream                         1;	///< Required element.
/// Element "Transport" of type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Transport                      1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Transport is a complexType.
///
/// @note class tt__Transport operations:
/// - tt__Transport* soap_new_tt__Transport(soap*) allocate and default initialize
/// - tt__Transport* soap_new_tt__Transport(soap*, int num) allocate and default initialize an array
/// - tt__Transport* soap_new_req_tt__Transport(soap*, ...) allocate, set required members
/// - tt__Transport* soap_new_set_tt__Transport(soap*, ...) allocate, set all public members
/// - tt__Transport::soap_default(soap*) default initialize members
/// - int soap_read_tt__Transport(soap*, tt__Transport*) deserialize from a stream
/// - int soap_write_tt__Transport(soap*, tt__Transport*) serialize to a stream
/// - tt__Transport* tt__Transport::soap_dup(soap*) returns deep copy of tt__Transport, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Transport::soap_del() deep deletes tt__Transport data members, use only after tt__Transport::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Transport::soap_type() returns SOAP_TYPE_tt__Transport or derived type identifier
class tt__Transport
{ public:
/// <PRE><BLOCKQUOTE>
///   Defines the network protocol for streaming, either UDP=RTP/UDP, RTSP=RTP/RTSP/TCP or HTTP=RTP/RTSP/HTTP/TCP
/// </BLOCKQUOTE></PRE>
///
/// Element "Protocol" of type "http://www.onvif.org/ver10/schema":TransportProtocol.
    enum tt__TransportProtocol           Protocol                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to describe further tunnel options. This element is normally not needed
/// </BLOCKQUOTE></PRE>
///
/// Element "Tunnel" of type "http://www.onvif.org/ver10/schema":Transport.
    tt__Transport*                       Tunnel                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaUri is a complexType.
///
/// @note class tt__MediaUri operations:
/// - tt__MediaUri* soap_new_tt__MediaUri(soap*) allocate and default initialize
/// - tt__MediaUri* soap_new_tt__MediaUri(soap*, int num) allocate and default initialize an array
/// - tt__MediaUri* soap_new_req_tt__MediaUri(soap*, ...) allocate, set required members
/// - tt__MediaUri* soap_new_set_tt__MediaUri(soap*, ...) allocate, set all public members
/// - tt__MediaUri::soap_default(soap*) default initialize members
/// - int soap_read_tt__MediaUri(soap*, tt__MediaUri*) deserialize from a stream
/// - int soap_write_tt__MediaUri(soap*, tt__MediaUri*) serialize to a stream
/// - tt__MediaUri* tt__MediaUri::soap_dup(soap*) returns deep copy of tt__MediaUri, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MediaUri::soap_del() deep deletes tt__MediaUri data members, use only after tt__MediaUri::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MediaUri::soap_type() returns SOAP_TYPE_tt__MediaUri or derived type identifier
class tt__MediaUri
{ public:
/// <PRE><BLOCKQUOTE>
///   Stable Uri to be used for requesting the media stream
/// </BLOCKQUOTE></PRE>
///
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is only valid until the connection is established. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
///
/// Element "InvalidAfterConnect" of type xs:boolean.
    bool                                 InvalidAfterConnect            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Uri is invalid after a reboot of the device. The value shall be set to "false".
/// </BLOCKQUOTE></PRE>
///
/// Element "InvalidAfterReboot" of type xs:boolean.
    bool                                 InvalidAfterReboot             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duration how long the Uri is valid. This parameter shall be set to PT0S to indicate that this stream URI is indefinitely valid even if the profile changes
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Scope is a complexType.
///
/// @note class tt__Scope operations:
/// - tt__Scope* soap_new_tt__Scope(soap*) allocate and default initialize
/// - tt__Scope* soap_new_tt__Scope(soap*, int num) allocate and default initialize an array
/// - tt__Scope* soap_new_req_tt__Scope(soap*, ...) allocate, set required members
/// - tt__Scope* soap_new_set_tt__Scope(soap*, ...) allocate, set all public members
/// - tt__Scope::soap_default(soap*) default initialize members
/// - int soap_read_tt__Scope(soap*, tt__Scope*) deserialize from a stream
/// - int soap_write_tt__Scope(soap*, tt__Scope*) serialize to a stream
/// - tt__Scope* tt__Scope::soap_dup(soap*) returns deep copy of tt__Scope, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Scope::soap_del() deep deletes tt__Scope data members, use only after tt__Scope::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Scope::soap_type() returns SOAP_TYPE_tt__Scope or derived type identifier
class tt__Scope
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the scope is fixed or configurable.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeDef" of type "http://www.onvif.org/ver10/schema":ScopeDefinition.
    enum tt__ScopeDefinition             ScopeDef                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Scope item URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "ScopeItem" of type xs:anyURI.
    xsd__anyURI                          ScopeItem                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension is a complexType.
///
/// @note class tt__NetworkInterfaceExtension operations:
/// - tt__NetworkInterfaceExtension* soap_new_tt__NetworkInterfaceExtension(soap*) allocate and default initialize
/// - tt__NetworkInterfaceExtension* soap_new_tt__NetworkInterfaceExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceExtension* soap_new_req_tt__NetworkInterfaceExtension(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceExtension* soap_new_set_tt__NetworkInterfaceExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceExtension(soap*, tt__NetworkInterfaceExtension*) serialize to a stream
/// - tt__NetworkInterfaceExtension* tt__NetworkInterfaceExtension::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceExtension::soap_del() deep deletes tt__NetworkInterfaceExtension data members, use only after tt__NetworkInterfaceExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceExtension::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceExtension or derived type identifier
class tt__NetworkInterfaceExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Extension point prepared for future 802.3 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Dot3Configuration* is 0..unbounded.
  $ int                                  __sizeDot3                     0;
/// Pointer to array tt__Dot3Configuration* of size 0..unbounded.
    tt__Dot3Configuration*              *Dot3                           0;	///< Multiple elements.
/// Size of array of tt__Dot11Configuration* is 0..unbounded.
  $ int                                  __sizeDot11                    0;
/// Pointer to array tt__Dot11Configuration* of size 0..unbounded.
    tt__Dot11Configuration*             *Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2.
    tt__NetworkInterfaceExtension2*      Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot3Configuration is a complexType.
///
/// @note class tt__Dot3Configuration operations:
/// - tt__Dot3Configuration* soap_new_tt__Dot3Configuration(soap*) allocate and default initialize
/// - tt__Dot3Configuration* soap_new_tt__Dot3Configuration(soap*, int num) allocate and default initialize an array
/// - tt__Dot3Configuration* soap_new_req_tt__Dot3Configuration(soap*, ...) allocate, set required members
/// - tt__Dot3Configuration* soap_new_set_tt__Dot3Configuration(soap*, ...) allocate, set all public members
/// - tt__Dot3Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) deserialize from a stream
/// - int soap_write_tt__Dot3Configuration(soap*, tt__Dot3Configuration*) serialize to a stream
/// - tt__Dot3Configuration* tt__Dot3Configuration::soap_dup(soap*) returns deep copy of tt__Dot3Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot3Configuration::soap_del() deep deletes tt__Dot3Configuration data members, use only after tt__Dot3Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot3Configuration::soap_type() returns SOAP_TYPE_tt__Dot3Configuration or derived type identifier
class tt__Dot3Configuration
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension2 is a complexType.
///
/// @note class tt__NetworkInterfaceExtension2 operations:
/// - tt__NetworkInterfaceExtension2* soap_new_tt__NetworkInterfaceExtension2(soap*) allocate and default initialize
/// - tt__NetworkInterfaceExtension2* soap_new_tt__NetworkInterfaceExtension2(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceExtension2* soap_new_req_tt__NetworkInterfaceExtension2(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceExtension2* soap_new_set_tt__NetworkInterfaceExtension2(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceExtension2(soap*, tt__NetworkInterfaceExtension2*) serialize to a stream
/// - tt__NetworkInterfaceExtension2* tt__NetworkInterfaceExtension2::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceExtension2::soap_del() deep deletes tt__NetworkInterfaceExtension2 data members, use only after tt__NetworkInterfaceExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceExtension2::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceExtension2 or derived type identifier
class tt__NetworkInterfaceExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceLink is a complexType.
///
/// @note class tt__NetworkInterfaceLink operations:
/// - tt__NetworkInterfaceLink* soap_new_tt__NetworkInterfaceLink(soap*) allocate and default initialize
/// - tt__NetworkInterfaceLink* soap_new_tt__NetworkInterfaceLink(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceLink* soap_new_req_tt__NetworkInterfaceLink(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceLink* soap_new_set_tt__NetworkInterfaceLink(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceLink::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceLink(soap*, tt__NetworkInterfaceLink*) serialize to a stream
/// - tt__NetworkInterfaceLink* tt__NetworkInterfaceLink::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceLink, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceLink::soap_del() deep deletes tt__NetworkInterfaceLink data members, use only after tt__NetworkInterfaceLink::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceLink::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceLink or derived type identifier
class tt__NetworkInterfaceLink
{ public:
/// <PRE><BLOCKQUOTE>
///   Configured link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "AdminSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  AdminSettings                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Current active link settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "OperSettings" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  OperSettings                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Integer indicating interface type, for example: 6 is ethernet.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceType" of type "http://www.onvif.org/ver10/schema":IANA-IfTypes.
    tt__IANA_IfTypes                     InterfaceType                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting is a complexType.
///
/// @note class tt__NetworkInterfaceConnectionSetting operations:
/// - tt__NetworkInterfaceConnectionSetting* soap_new_tt__NetworkInterfaceConnectionSetting(soap*) allocate and default initialize
/// - tt__NetworkInterfaceConnectionSetting* soap_new_tt__NetworkInterfaceConnectionSetting(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceConnectionSetting* soap_new_req_tt__NetworkInterfaceConnectionSetting(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceConnectionSetting* soap_new_set_tt__NetworkInterfaceConnectionSetting(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceConnectionSetting::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceConnectionSetting(soap*, tt__NetworkInterfaceConnectionSetting*) serialize to a stream
/// - tt__NetworkInterfaceConnectionSetting* tt__NetworkInterfaceConnectionSetting::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceConnectionSetting, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceConnectionSetting::soap_del() deep deletes tt__NetworkInterfaceConnectionSetting data members, use only after tt__NetworkInterfaceConnectionSetting::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceConnectionSetting::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceConnectionSetting or derived type identifier
class tt__NetworkInterfaceConnectionSetting
{ public:
/// <PRE><BLOCKQUOTE>
///   Auto negotiation on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoNegotiation" of type xs:boolean.
    bool                                 AutoNegotiation                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type xs:int.
    int                                  Speed                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Duplex type, Half or Full.
/// </BLOCKQUOTE></PRE>
///
/// Element "Duplex" of type "http://www.onvif.org/ver10/schema":Duplex.
    enum tt__Duplex                      Duplex                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo is a complexType.
///
/// @note class tt__NetworkInterfaceInfo operations:
/// - tt__NetworkInterfaceInfo* soap_new_tt__NetworkInterfaceInfo(soap*) allocate and default initialize
/// - tt__NetworkInterfaceInfo* soap_new_tt__NetworkInterfaceInfo(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceInfo* soap_new_req_tt__NetworkInterfaceInfo(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceInfo* soap_new_set_tt__NetworkInterfaceInfo(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceInfo::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceInfo(soap*, tt__NetworkInterfaceInfo*) serialize to a stream
/// - tt__NetworkInterfaceInfo* tt__NetworkInterfaceInfo::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceInfo, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceInfo::soap_del() deep deletes tt__NetworkInterfaceInfo data members, use only after tt__NetworkInterfaceInfo::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceInfo::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceInfo or derived type identifier
class tt__NetworkInterfaceInfo
{ public:
/// <PRE><BLOCKQUOTE>
///   Network interface name, for example eth0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:string.
    char*                                Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Network interface MAC address.
/// </BLOCKQUOTE></PRE>
///
/// Element "HwAddress" of type "http://www.onvif.org/ver10/schema":HwAddress.
    tt__HwAddress                        HwAddress                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterface is a complexType.
///
/// @note class tt__IPv6NetworkInterface operations:
/// - tt__IPv6NetworkInterface* soap_new_tt__IPv6NetworkInterface(soap*) allocate and default initialize
/// - tt__IPv6NetworkInterface* soap_new_tt__IPv6NetworkInterface(soap*, int num) allocate and default initialize an array
/// - tt__IPv6NetworkInterface* soap_new_req_tt__IPv6NetworkInterface(soap*, ...) allocate, set required members
/// - tt__IPv6NetworkInterface* soap_new_set_tt__IPv6NetworkInterface(soap*, ...) allocate, set all public members
/// - tt__IPv6NetworkInterface::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__IPv6NetworkInterface(soap*, tt__IPv6NetworkInterface*) serialize to a stream
/// - tt__IPv6NetworkInterface* tt__IPv6NetworkInterface::soap_dup(soap*) returns deep copy of tt__IPv6NetworkInterface, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv6NetworkInterface::soap_del() deep deletes tt__IPv6NetworkInterface data members, use only after tt__IPv6NetworkInterface::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv6NetworkInterface::soap_type() returns SOAP_TYPE_tt__IPv6NetworkInterface or derived type identifier
class tt__IPv6NetworkInterface
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv6 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv6Configuration.
    tt__IPv6Configuration*               Config                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterface is a complexType.
///
/// @note class tt__IPv4NetworkInterface operations:
/// - tt__IPv4NetworkInterface* soap_new_tt__IPv4NetworkInterface(soap*) allocate and default initialize
/// - tt__IPv4NetworkInterface* soap_new_tt__IPv4NetworkInterface(soap*, int num) allocate and default initialize an array
/// - tt__IPv4NetworkInterface* soap_new_req_tt__IPv4NetworkInterface(soap*, ...) allocate, set required members
/// - tt__IPv4NetworkInterface* soap_new_set_tt__IPv4NetworkInterface(soap*, ...) allocate, set all public members
/// - tt__IPv4NetworkInterface::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__IPv4NetworkInterface(soap*, tt__IPv4NetworkInterface*) serialize to a stream
/// - tt__IPv4NetworkInterface* tt__IPv4NetworkInterface::soap_dup(soap*) returns deep copy of tt__IPv4NetworkInterface, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv4NetworkInterface::soap_del() deep deletes tt__IPv4NetworkInterface data members, use only after tt__IPv4NetworkInterface::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv4NetworkInterface::soap_type() returns SOAP_TYPE_tt__IPv4NetworkInterface or derived type identifier
class tt__IPv4NetworkInterface
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Config" of type "http://www.onvif.org/ver10/schema":IPv4Configuration.
    tt__IPv4Configuration*               Config                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4Configuration is a complexType.
///
/// @note class tt__IPv4Configuration operations:
/// - tt__IPv4Configuration* soap_new_tt__IPv4Configuration(soap*) allocate and default initialize
/// - tt__IPv4Configuration* soap_new_tt__IPv4Configuration(soap*, int num) allocate and default initialize an array
/// - tt__IPv4Configuration* soap_new_req_tt__IPv4Configuration(soap*, ...) allocate, set required members
/// - tt__IPv4Configuration* soap_new_set_tt__IPv4Configuration(soap*, ...) allocate, set all public members
/// - tt__IPv4Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) deserialize from a stream
/// - int soap_write_tt__IPv4Configuration(soap*, tt__IPv4Configuration*) serialize to a stream
/// - tt__IPv4Configuration* tt__IPv4Configuration::soap_dup(soap*) returns deep copy of tt__IPv4Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv4Configuration::soap_del() deep deletes tt__IPv4Configuration data members, use only after tt__IPv4Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv4Configuration::soap_type() returns SOAP_TYPE_tt__IPv4Configuration or derived type identifier
class tt__IPv4Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Pointer to array tt__PrefixedIPv4Address* of size 0..unbounded.
    tt__PrefixedIPv4Address*            *Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Link local address.
/// </BLOCKQUOTE></PRE>
///
/// Element "LinkLocal" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             LinkLocal                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type "http://www.onvif.org/ver10/schema":PrefixedIPv4Address.
    tt__PrefixedIPv4Address*             FromDHCP                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    bool                                 DHCP                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6Configuration is a complexType.
///
/// @note class tt__IPv6Configuration operations:
/// - tt__IPv6Configuration* soap_new_tt__IPv6Configuration(soap*) allocate and default initialize
/// - tt__IPv6Configuration* soap_new_tt__IPv6Configuration(soap*, int num) allocate and default initialize an array
/// - tt__IPv6Configuration* soap_new_req_tt__IPv6Configuration(soap*, ...) allocate, set required members
/// - tt__IPv6Configuration* soap_new_set_tt__IPv6Configuration(soap*, ...) allocate, set all public members
/// - tt__IPv6Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) deserialize from a stream
/// - int soap_write_tt__IPv6Configuration(soap*, tt__IPv6Configuration*) serialize to a stream
/// - tt__IPv6Configuration* tt__IPv6Configuration::soap_dup(soap*) returns deep copy of tt__IPv6Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv6Configuration::soap_del() deep deletes tt__IPv6Configuration data members, use only after tt__IPv6Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv6Configuration::soap_type() returns SOAP_TYPE_tt__IPv6Configuration or derived type identifier
class tt__IPv6Configuration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration       DHCP                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of manually entered IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Pointer to array tt__PrefixedIPv6Address* of size 0..unbounded.
    tt__PrefixedIPv6Address*            *Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of link local IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeLinkLocal                0;
/// Pointer to array tt__PrefixedIPv6Address* of size 0..unbounded.
    tt__PrefixedIPv6Address*            *LinkLocal                      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeFromDHCP                 0;
/// Pointer to array tt__PrefixedIPv6Address* of size 0..unbounded.
    tt__PrefixedIPv6Address*            *FromDHCP                       0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of IPv6 addresses configured by using router advertisment.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeFromRA                   0;
/// Pointer to array tt__PrefixedIPv6Address* of size 0..unbounded.
    tt__PrefixedIPv6Address*            *FromRA                         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension.
    tt__IPv6ConfigurationExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6ConfigurationExtension is a complexType.
///
/// @note class tt__IPv6ConfigurationExtension operations:
/// - tt__IPv6ConfigurationExtension* soap_new_tt__IPv6ConfigurationExtension(soap*) allocate and default initialize
/// - tt__IPv6ConfigurationExtension* soap_new_tt__IPv6ConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__IPv6ConfigurationExtension* soap_new_req_tt__IPv6ConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__IPv6ConfigurationExtension* soap_new_set_tt__IPv6ConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__IPv6ConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__IPv6ConfigurationExtension(soap*, tt__IPv6ConfigurationExtension*) serialize to a stream
/// - tt__IPv6ConfigurationExtension* tt__IPv6ConfigurationExtension::soap_dup(soap*) returns deep copy of tt__IPv6ConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv6ConfigurationExtension::soap_del() deep deletes tt__IPv6ConfigurationExtension data members, use only after tt__IPv6ConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv6ConfigurationExtension::soap_type() returns SOAP_TYPE_tt__IPv6ConfigurationExtension or derived type identifier
class tt__IPv6ConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocol is a complexType.
///
/// @note class tt__NetworkProtocol operations:
/// - tt__NetworkProtocol* soap_new_tt__NetworkProtocol(soap*) allocate and default initialize
/// - tt__NetworkProtocol* soap_new_tt__NetworkProtocol(soap*, int num) allocate and default initialize an array
/// - tt__NetworkProtocol* soap_new_req_tt__NetworkProtocol(soap*, ...) allocate, set required members
/// - tt__NetworkProtocol* soap_new_set_tt__NetworkProtocol(soap*, ...) allocate, set all public members
/// - tt__NetworkProtocol::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) deserialize from a stream
/// - int soap_write_tt__NetworkProtocol(soap*, tt__NetworkProtocol*) serialize to a stream
/// - tt__NetworkProtocol* tt__NetworkProtocol::soap_dup(soap*) returns deep copy of tt__NetworkProtocol, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkProtocol::soap_del() deep deletes tt__NetworkProtocol data members, use only after tt__NetworkProtocol::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkProtocol::soap_type() returns SOAP_TYPE_tt__NetworkProtocol or derived type identifier
class tt__NetworkProtocol
{ public:
/// <PRE><BLOCKQUOTE>
///   Network protocol type string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":NetworkProtocolType.
    enum tt__NetworkProtocolType         Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the protocol is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The port that is used by the protocol.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of int is 1..unbounded.
  $ int                                  __sizePort                     1;
/// Pointer to array int of size 1..unbounded.
    int                                 *Port                           1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkProtocolExtension.
    tt__NetworkProtocolExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkProtocolExtension is a complexType.
///
/// @note class tt__NetworkProtocolExtension operations:
/// - tt__NetworkProtocolExtension* soap_new_tt__NetworkProtocolExtension(soap*) allocate and default initialize
/// - tt__NetworkProtocolExtension* soap_new_tt__NetworkProtocolExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkProtocolExtension* soap_new_req_tt__NetworkProtocolExtension(soap*, ...) allocate, set required members
/// - tt__NetworkProtocolExtension* soap_new_set_tt__NetworkProtocolExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkProtocolExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkProtocolExtension(soap*, tt__NetworkProtocolExtension*) serialize to a stream
/// - tt__NetworkProtocolExtension* tt__NetworkProtocolExtension::soap_dup(soap*) returns deep copy of tt__NetworkProtocolExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkProtocolExtension::soap_del() deep deletes tt__NetworkProtocolExtension data members, use only after tt__NetworkProtocolExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkProtocolExtension::soap_type() returns SOAP_TYPE_tt__NetworkProtocolExtension or derived type identifier
class tt__NetworkProtocolExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHost is a complexType.
///
/// @note class tt__NetworkHost operations:
/// - tt__NetworkHost* soap_new_tt__NetworkHost(soap*) allocate and default initialize
/// - tt__NetworkHost* soap_new_tt__NetworkHost(soap*, int num) allocate and default initialize an array
/// - tt__NetworkHost* soap_new_req_tt__NetworkHost(soap*, ...) allocate, set required members
/// - tt__NetworkHost* soap_new_set_tt__NetworkHost(soap*, ...) allocate, set all public members
/// - tt__NetworkHost::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkHost(soap*, tt__NetworkHost*) deserialize from a stream
/// - int soap_write_tt__NetworkHost(soap*, tt__NetworkHost*) serialize to a stream
/// - tt__NetworkHost* tt__NetworkHost::soap_dup(soap*) returns deep copy of tt__NetworkHost, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkHost::soap_del() deep deletes tt__NetworkHost data members, use only after tt__NetworkHost::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkHost::soap_type() returns SOAP_TYPE_tt__NetworkHost or derived type identifier
class tt__NetworkHost
{ public:
/// <PRE><BLOCKQUOTE>
///   Network host type: IPv4, IPv6 or DNS.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":NetworkHostType.
    enum tt__NetworkHostType             Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSname" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          DNSname                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkHostExtension.
    tt__NetworkHostExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkHostExtension is a complexType.
///
/// @note class tt__NetworkHostExtension operations:
/// - tt__NetworkHostExtension* soap_new_tt__NetworkHostExtension(soap*) allocate and default initialize
/// - tt__NetworkHostExtension* soap_new_tt__NetworkHostExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkHostExtension* soap_new_req_tt__NetworkHostExtension(soap*, ...) allocate, set required members
/// - tt__NetworkHostExtension* soap_new_set_tt__NetworkHostExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkHostExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkHostExtension(soap*, tt__NetworkHostExtension*) serialize to a stream
/// - tt__NetworkHostExtension* tt__NetworkHostExtension::soap_dup(soap*) returns deep copy of tt__NetworkHostExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkHostExtension::soap_del() deep deletes tt__NetworkHostExtension data members, use only after tt__NetworkHostExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkHostExtension::soap_type() returns SOAP_TYPE_tt__NetworkHostExtension or derived type identifier
class tt__NetworkHostExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddress is a complexType.
///
/// @note class tt__IPAddress operations:
/// - tt__IPAddress* soap_new_tt__IPAddress(soap*) allocate and default initialize
/// - tt__IPAddress* soap_new_tt__IPAddress(soap*, int num) allocate and default initialize an array
/// - tt__IPAddress* soap_new_req_tt__IPAddress(soap*, ...) allocate, set required members
/// - tt__IPAddress* soap_new_set_tt__IPAddress(soap*, ...) allocate, set all public members
/// - tt__IPAddress::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPAddress(soap*, tt__IPAddress*) deserialize from a stream
/// - int soap_write_tt__IPAddress(soap*, tt__IPAddress*) serialize to a stream
/// - tt__IPAddress* tt__IPAddress::soap_dup(soap*) returns deep copy of tt__IPAddress, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPAddress::soap_del() deep deletes tt__IPAddress data members, use only after tt__IPAddress::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPAddress::soap_type() returns SOAP_TYPE_tt__IPAddress or derived type identifier
class tt__IPAddress
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the address is an IPv4 or IPv6 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPType.
    enum tt__IPType                      Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   IPv4 address.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      IPv4Address                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      IPv6Address                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv4Address is a complexType.
///
/// @note class tt__PrefixedIPv4Address operations:
/// - tt__PrefixedIPv4Address* soap_new_tt__PrefixedIPv4Address(soap*) allocate and default initialize
/// - tt__PrefixedIPv4Address* soap_new_tt__PrefixedIPv4Address(soap*, int num) allocate and default initialize an array
/// - tt__PrefixedIPv4Address* soap_new_req_tt__PrefixedIPv4Address(soap*, ...) allocate, set required members
/// - tt__PrefixedIPv4Address* soap_new_set_tt__PrefixedIPv4Address(soap*, ...) allocate, set all public members
/// - tt__PrefixedIPv4Address::soap_default(soap*) default initialize members
/// - int soap_read_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) deserialize from a stream
/// - int soap_write_tt__PrefixedIPv4Address(soap*, tt__PrefixedIPv4Address*) serialize to a stream
/// - tt__PrefixedIPv4Address* tt__PrefixedIPv4Address::soap_dup(soap*) returns deep copy of tt__PrefixedIPv4Address, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PrefixedIPv4Address::soap_del() deep deletes tt__PrefixedIPv4Address data members, use only after tt__PrefixedIPv4Address::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PrefixedIPv4Address::soap_type() returns SOAP_TYPE_tt__PrefixedIPv4Address or derived type identifier
class tt__PrefixedIPv4Address
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv4 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv4Address.
    tt__IPv4Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PrefixedIPv6Address is a complexType.
///
/// @note class tt__PrefixedIPv6Address operations:
/// - tt__PrefixedIPv6Address* soap_new_tt__PrefixedIPv6Address(soap*) allocate and default initialize
/// - tt__PrefixedIPv6Address* soap_new_tt__PrefixedIPv6Address(soap*, int num) allocate and default initialize an array
/// - tt__PrefixedIPv6Address* soap_new_req_tt__PrefixedIPv6Address(soap*, ...) allocate, set required members
/// - tt__PrefixedIPv6Address* soap_new_set_tt__PrefixedIPv6Address(soap*, ...) allocate, set all public members
/// - tt__PrefixedIPv6Address::soap_default(soap*) default initialize members
/// - int soap_read_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) deserialize from a stream
/// - int soap_write_tt__PrefixedIPv6Address(soap*, tt__PrefixedIPv6Address*) serialize to a stream
/// - tt__PrefixedIPv6Address* tt__PrefixedIPv6Address::soap_dup(soap*) returns deep copy of tt__PrefixedIPv6Address, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PrefixedIPv6Address::soap_del() deep deletes tt__PrefixedIPv6Address data members, use only after tt__PrefixedIPv6Address::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PrefixedIPv6Address::soap_type() returns SOAP_TYPE_tt__PrefixedIPv6Address or derived type identifier
class tt__PrefixedIPv6Address
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv6 address
/// </BLOCKQUOTE></PRE>
///
/// Element "Address" of type "http://www.onvif.org/ver10/schema":IPv6Address.
    tt__IPv6Address                      Address                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Prefix/submask length
/// </BLOCKQUOTE></PRE>
///
/// Element "PrefixLength" of type xs:int.
    int                                  PrefixLength                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformation is a complexType.
///
/// @note class tt__HostnameInformation operations:
/// - tt__HostnameInformation* soap_new_tt__HostnameInformation(soap*) allocate and default initialize
/// - tt__HostnameInformation* soap_new_tt__HostnameInformation(soap*, int num) allocate and default initialize an array
/// - tt__HostnameInformation* soap_new_req_tt__HostnameInformation(soap*, ...) allocate, set required members
/// - tt__HostnameInformation* soap_new_set_tt__HostnameInformation(soap*, ...) allocate, set all public members
/// - tt__HostnameInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__HostnameInformation(soap*, tt__HostnameInformation*) deserialize from a stream
/// - int soap_write_tt__HostnameInformation(soap*, tt__HostnameInformation*) serialize to a stream
/// - tt__HostnameInformation* tt__HostnameInformation::soap_dup(soap*) returns deep copy of tt__HostnameInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__HostnameInformation::soap_del() deep deletes tt__HostnameInformation data members, use only after tt__HostnameInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__HostnameInformation::soap_type() returns SOAP_TYPE_tt__HostnameInformation or derived type identifier
class tt__HostnameInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether the hostname is obtained from DHCP or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates the hostname.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":HostnameInformationExtension.
    tt__HostnameInformationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":HostnameInformationExtension is a complexType.
///
/// @note class tt__HostnameInformationExtension operations:
/// - tt__HostnameInformationExtension* soap_new_tt__HostnameInformationExtension(soap*) allocate and default initialize
/// - tt__HostnameInformationExtension* soap_new_tt__HostnameInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__HostnameInformationExtension* soap_new_req_tt__HostnameInformationExtension(soap*, ...) allocate, set required members
/// - tt__HostnameInformationExtension* soap_new_set_tt__HostnameInformationExtension(soap*, ...) allocate, set all public members
/// - tt__HostnameInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) deserialize from a stream
/// - int soap_write_tt__HostnameInformationExtension(soap*, tt__HostnameInformationExtension*) serialize to a stream
/// - tt__HostnameInformationExtension* tt__HostnameInformationExtension::soap_dup(soap*) returns deep copy of tt__HostnameInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__HostnameInformationExtension::soap_del() deep deletes tt__HostnameInformationExtension data members, use only after tt__HostnameInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__HostnameInformationExtension::soap_type() returns SOAP_TYPE_tt__HostnameInformationExtension or derived type identifier
class tt__HostnameInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformation is a complexType.
///
/// @note class tt__DNSInformation operations:
/// - tt__DNSInformation* soap_new_tt__DNSInformation(soap*) allocate and default initialize
/// - tt__DNSInformation* soap_new_tt__DNSInformation(soap*, int num) allocate and default initialize an array
/// - tt__DNSInformation* soap_new_req_tt__DNSInformation(soap*, ...) allocate, set required members
/// - tt__DNSInformation* soap_new_set_tt__DNSInformation(soap*, ...) allocate, set all public members
/// - tt__DNSInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__DNSInformation(soap*, tt__DNSInformation*) deserialize from a stream
/// - int soap_write_tt__DNSInformation(soap*, tt__DNSInformation*) serialize to a stream
/// - tt__DNSInformation* tt__DNSInformation::soap_dup(soap*) returns deep copy of tt__DNSInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DNSInformation::soap_del() deep deletes tt__DNSInformation data members, use only after tt__DNSInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DNSInformation::soap_type() returns SOAP_TYPE_tt__DNSInformation or derived type identifier
class tt__DNSInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DNS information is retrieved from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Search domain.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token is 0..unbounded.
  $ int                                  __sizeSearchDomain             0;
/// Pointer to array xsd__token of size 0..unbounded.
    xsd__token                          *SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of DNS addresses received from DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSFromDHCP              0;
/// Pointer to array tt__IPAddress* of size 0..unbounded.
    tt__IPAddress*                      *DNSFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered DNS addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSManual                0;
/// Pointer to array tt__IPAddress* of size 0..unbounded.
    tt__IPAddress*                      *DNSManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DNSInformationExtension.
    tt__DNSInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DNSInformationExtension is a complexType.
///
/// @note class tt__DNSInformationExtension operations:
/// - tt__DNSInformationExtension* soap_new_tt__DNSInformationExtension(soap*) allocate and default initialize
/// - tt__DNSInformationExtension* soap_new_tt__DNSInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__DNSInformationExtension* soap_new_req_tt__DNSInformationExtension(soap*, ...) allocate, set required members
/// - tt__DNSInformationExtension* soap_new_set_tt__DNSInformationExtension(soap*, ...) allocate, set all public members
/// - tt__DNSInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) deserialize from a stream
/// - int soap_write_tt__DNSInformationExtension(soap*, tt__DNSInformationExtension*) serialize to a stream
/// - tt__DNSInformationExtension* tt__DNSInformationExtension::soap_dup(soap*) returns deep copy of tt__DNSInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DNSInformationExtension::soap_del() deep deletes tt__DNSInformationExtension data members, use only after tt__DNSInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DNSInformationExtension::soap_type() returns SOAP_TYPE_tt__DNSInformationExtension or derived type identifier
class tt__DNSInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformation is a complexType.
///
/// @note class tt__NTPInformation operations:
/// - tt__NTPInformation* soap_new_tt__NTPInformation(soap*) allocate and default initialize
/// - tt__NTPInformation* soap_new_tt__NTPInformation(soap*, int num) allocate and default initialize an array
/// - tt__NTPInformation* soap_new_req_tt__NTPInformation(soap*, ...) allocate, set required members
/// - tt__NTPInformation* soap_new_set_tt__NTPInformation(soap*, ...) allocate, set all public members
/// - tt__NTPInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__NTPInformation(soap*, tt__NTPInformation*) deserialize from a stream
/// - int soap_write_tt__NTPInformation(soap*, tt__NTPInformation*) serialize to a stream
/// - tt__NTPInformation* tt__NTPInformation::soap_dup(soap*) returns deep copy of tt__NTPInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NTPInformation::soap_del() deep deletes tt__NTPInformation data members, use only after tt__NTPInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NTPInformation::soap_type() returns SOAP_TYPE_tt__NTPInformation or derived type identifier
class tt__NTPInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if NTP information is to be retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of NTP addresses retrieved by using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPFromDHCP              0;
/// Pointer to array tt__NetworkHost* of size 0..unbounded.
    tt__NetworkHost*                    *NTPFromDHCP                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of manually entered NTP addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPManual                0;
/// Pointer to array tt__NetworkHost* of size 0..unbounded.
    tt__NetworkHost*                    *NTPManual                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NTPInformationExtension.
    tt__NTPInformationExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NTPInformationExtension is a complexType.
///
/// @note class tt__NTPInformationExtension operations:
/// - tt__NTPInformationExtension* soap_new_tt__NTPInformationExtension(soap*) allocate and default initialize
/// - tt__NTPInformationExtension* soap_new_tt__NTPInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__NTPInformationExtension* soap_new_req_tt__NTPInformationExtension(soap*, ...) allocate, set required members
/// - tt__NTPInformationExtension* soap_new_set_tt__NTPInformationExtension(soap*, ...) allocate, set all public members
/// - tt__NTPInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) deserialize from a stream
/// - int soap_write_tt__NTPInformationExtension(soap*, tt__NTPInformationExtension*) serialize to a stream
/// - tt__NTPInformationExtension* tt__NTPInformationExtension::soap_dup(soap*) returns deep copy of tt__NTPInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NTPInformationExtension::soap_del() deep deletes tt__NTPInformationExtension data members, use only after tt__NTPInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NTPInformationExtension::soap_type() returns SOAP_TYPE_tt__NTPInformationExtension or derived type identifier
class tt__NTPInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformation is a complexType.
///
/// @note class tt__DynamicDNSInformation operations:
/// - tt__DynamicDNSInformation* soap_new_tt__DynamicDNSInformation(soap*) allocate and default initialize
/// - tt__DynamicDNSInformation* soap_new_tt__DynamicDNSInformation(soap*, int num) allocate and default initialize an array
/// - tt__DynamicDNSInformation* soap_new_req_tt__DynamicDNSInformation(soap*, ...) allocate, set required members
/// - tt__DynamicDNSInformation* soap_new_set_tt__DynamicDNSInformation(soap*, ...) allocate, set all public members
/// - tt__DynamicDNSInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) deserialize from a stream
/// - int soap_write_tt__DynamicDNSInformation(soap*, tt__DynamicDNSInformation*) serialize to a stream
/// - tt__DynamicDNSInformation* tt__DynamicDNSInformation::soap_dup(soap*) returns deep copy of tt__DynamicDNSInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DynamicDNSInformation::soap_del() deep deletes tt__DynamicDNSInformation data members, use only after tt__DynamicDNSInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DynamicDNSInformation::soap_type() returns SOAP_TYPE_tt__DynamicDNSInformation or derived type identifier
class tt__DynamicDNSInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration                        TTL                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension.
    tt__DynamicDNSInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DynamicDNSInformationExtension is a complexType.
///
/// @note class tt__DynamicDNSInformationExtension operations:
/// - tt__DynamicDNSInformationExtension* soap_new_tt__DynamicDNSInformationExtension(soap*) allocate and default initialize
/// - tt__DynamicDNSInformationExtension* soap_new_tt__DynamicDNSInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__DynamicDNSInformationExtension* soap_new_req_tt__DynamicDNSInformationExtension(soap*, ...) allocate, set required members
/// - tt__DynamicDNSInformationExtension* soap_new_set_tt__DynamicDNSInformationExtension(soap*, ...) allocate, set all public members
/// - tt__DynamicDNSInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) deserialize from a stream
/// - int soap_write_tt__DynamicDNSInformationExtension(soap*, tt__DynamicDNSInformationExtension*) serialize to a stream
/// - tt__DynamicDNSInformationExtension* tt__DynamicDNSInformationExtension::soap_dup(soap*) returns deep copy of tt__DynamicDNSInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DynamicDNSInformationExtension::soap_del() deep deletes tt__DynamicDNSInformationExtension data members, use only after tt__DynamicDNSInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DynamicDNSInformationExtension::soap_type() returns SOAP_TYPE_tt__DynamicDNSInformationExtension or derived type identifier
class tt__DynamicDNSInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration is a complexType.
///
/// @note class tt__NetworkInterfaceSetConfiguration operations:
/// - tt__NetworkInterfaceSetConfiguration* soap_new_tt__NetworkInterfaceSetConfiguration(soap*) allocate and default initialize
/// - tt__NetworkInterfaceSetConfiguration* soap_new_tt__NetworkInterfaceSetConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceSetConfiguration* soap_new_req_tt__NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceSetConfiguration* soap_new_set_tt__NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceSetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfiguration(soap*, tt__NetworkInterfaceSetConfiguration*) serialize to a stream
/// - tt__NetworkInterfaceSetConfiguration* tt__NetworkInterfaceSetConfiguration::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceSetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceSetConfiguration::soap_del() deep deletes tt__NetworkInterfaceSetConfiguration data members, use only after tt__NetworkInterfaceSetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceSetConfiguration::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceSetConfiguration or derived type identifier
class tt__NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConnectionSetting.
    tt__NetworkInterfaceConnectionSetting*  Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum transmission unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "MTU" of type xs:int.
    int*                                 MTU                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration.
    tt__IPv4NetworkInterfaceSetConfiguration*  IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration.
    tt__IPv6NetworkInterfaceSetConfiguration*  IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension.
    tt__NetworkInterfaceSetConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension is a complexType.
///
/// @note class tt__NetworkInterfaceSetConfigurationExtension operations:
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap*) allocate and default initialize
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_req_tt__NetworkInterfaceSetConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceSetConfigurationExtension* soap_new_set_tt__NetworkInterfaceSetConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceSetConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension(soap*, tt__NetworkInterfaceSetConfigurationExtension*) serialize to a stream
/// - tt__NetworkInterfaceSetConfigurationExtension* tt__NetworkInterfaceSetConfigurationExtension::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceSetConfigurationExtension::soap_del() deep deletes tt__NetworkInterfaceSetConfigurationExtension data members, use only after tt__NetworkInterfaceSetConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceSetConfigurationExtension::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension or derived type identifier
class tt__NetworkInterfaceSetConfigurationExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Size of array of tt__Dot3Configuration* is 0..unbounded.
  $ int                                  __sizeDot3                     0;
/// Pointer to array tt__Dot3Configuration* of size 0..unbounded.
    tt__Dot3Configuration*              *Dot3                           0;	///< Multiple elements.
/// Size of array of tt__Dot11Configuration* is 0..unbounded.
  $ int                                  __sizeDot11                    0;
/// Pointer to array tt__Dot11Configuration* of size 0..unbounded.
    tt__Dot11Configuration*             *Dot11                          0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2.
    tt__NetworkInterfaceSetConfigurationExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv6NetworkInterfaceSetConfiguration is a complexType.
///
/// @note class tt__IPv6NetworkInterfaceSetConfiguration operations:
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap*) allocate and default initialize
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_req_tt__IPv6NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - tt__IPv6NetworkInterfaceSetConfiguration* soap_new_set_tt__IPv6NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - tt__IPv6NetworkInterfaceSetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__IPv6NetworkInterfaceSetConfiguration(soap*, tt__IPv6NetworkInterfaceSetConfiguration*) serialize to a stream
/// - tt__IPv6NetworkInterfaceSetConfiguration* tt__IPv6NetworkInterfaceSetConfiguration::soap_dup(soap*) returns deep copy of tt__IPv6NetworkInterfaceSetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv6NetworkInterfaceSetConfiguration::soap_del() deep deletes tt__IPv6NetworkInterfaceSetConfiguration data members, use only after tt__IPv6NetworkInterfaceSetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv6NetworkInterfaceSetConfiguration::soap_type() returns SOAP_TYPE_tt__IPv6NetworkInterfaceSetConfiguration or derived type identifier
class tt__IPv6NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether router advertisment is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "AcceptRouterAdvert" of type xs:boolean.
    bool*                                AcceptRouterAdvert             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv6 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Pointer to array tt__PrefixedIPv6Address* of size 0..unbounded.
    tt__PrefixedIPv6Address*            *Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DHCP configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type "http://www.onvif.org/ver10/schema":IPv6DHCPConfiguration.
    enum tt__IPv6DHCPConfiguration*      DHCP                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPv4NetworkInterfaceSetConfiguration is a complexType.
///
/// @note class tt__IPv4NetworkInterfaceSetConfiguration operations:
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap*) allocate and default initialize
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_req_tt__IPv4NetworkInterfaceSetConfiguration(soap*, ...) allocate, set required members
/// - tt__IPv4NetworkInterfaceSetConfiguration* soap_new_set_tt__IPv4NetworkInterfaceSetConfiguration(soap*, ...) allocate, set all public members
/// - tt__IPv4NetworkInterfaceSetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) deserialize from a stream
/// - int soap_write_tt__IPv4NetworkInterfaceSetConfiguration(soap*, tt__IPv4NetworkInterfaceSetConfiguration*) serialize to a stream
/// - tt__IPv4NetworkInterfaceSetConfiguration* tt__IPv4NetworkInterfaceSetConfiguration::soap_dup(soap*) returns deep copy of tt__IPv4NetworkInterfaceSetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPv4NetworkInterfaceSetConfiguration::soap_del() deep deletes tt__IPv4NetworkInterfaceSetConfiguration data members, use only after tt__IPv4NetworkInterfaceSetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPv4NetworkInterfaceSetConfiguration::soap_type() returns SOAP_TYPE_tt__IPv4NetworkInterfaceSetConfiguration or derived type identifier
class tt__IPv4NetworkInterfaceSetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv4 is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool*                                Enabled                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of manually added IPv4 addresses.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeManual                   0;
/// Pointer to array tt__PrefixedIPv4Address* of size 0..unbounded.
    tt__PrefixedIPv4Address*            *Manual                         0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not DHCP is used.
/// </BLOCKQUOTE></PRE>
///
/// Element "DHCP" of type xs:boolean.
    bool*                                DHCP                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkGateway is a complexType.
///
/// @note class tt__NetworkGateway operations:
/// - tt__NetworkGateway* soap_new_tt__NetworkGateway(soap*) allocate and default initialize
/// - tt__NetworkGateway* soap_new_tt__NetworkGateway(soap*, int num) allocate and default initialize an array
/// - tt__NetworkGateway* soap_new_req_tt__NetworkGateway(soap*, ...) allocate, set required members
/// - tt__NetworkGateway* soap_new_set_tt__NetworkGateway(soap*, ...) allocate, set all public members
/// - tt__NetworkGateway::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkGateway(soap*, tt__NetworkGateway*) deserialize from a stream
/// - int soap_write_tt__NetworkGateway(soap*, tt__NetworkGateway*) serialize to a stream
/// - tt__NetworkGateway* tt__NetworkGateway::soap_dup(soap*) returns deep copy of tt__NetworkGateway, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkGateway::soap_del() deep deletes tt__NetworkGateway data members, use only after tt__NetworkGateway::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkGateway::soap_type() returns SOAP_TYPE_tt__NetworkGateway or derived type identifier
class tt__NetworkGateway
{ public:
/// <PRE><BLOCKQUOTE>
///   IPv4 address string.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Pointer to array tt__IPv4Address of size 0..unbounded.
    tt__IPv4Address                     *IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   IPv6 address string.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv6Address is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Pointer to array tt__IPv6Address of size 0..unbounded.
    tt__IPv6Address                     *IPv6Address                    0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration is a complexType.
///
/// @note class tt__NetworkZeroConfiguration operations:
/// - tt__NetworkZeroConfiguration* soap_new_tt__NetworkZeroConfiguration(soap*) allocate and default initialize
/// - tt__NetworkZeroConfiguration* soap_new_tt__NetworkZeroConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__NetworkZeroConfiguration* soap_new_req_tt__NetworkZeroConfiguration(soap*, ...) allocate, set required members
/// - tt__NetworkZeroConfiguration* soap_new_set_tt__NetworkZeroConfiguration(soap*, ...) allocate, set all public members
/// - tt__NetworkZeroConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfiguration(soap*, tt__NetworkZeroConfiguration*) serialize to a stream
/// - tt__NetworkZeroConfiguration* tt__NetworkZeroConfiguration::soap_dup(soap*) returns deep copy of tt__NetworkZeroConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkZeroConfiguration::soap_del() deep deletes tt__NetworkZeroConfiguration data members, use only after tt__NetworkZeroConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkZeroConfiguration::soap_type() returns SOAP_TYPE_tt__NetworkZeroConfiguration or derived type identifier
class tt__NetworkZeroConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier of network interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the zero-configuration is enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The zero-configuration IPv4 address(es)
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address is 0..unbounded.
  $ int                                  __sizeAddresses                0;
/// Pointer to array tt__IPv4Address of size 0..unbounded.
    tt__IPv4Address                     *Addresses                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension.
    tt__NetworkZeroConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension is a complexType.
///
/// @note class tt__NetworkZeroConfigurationExtension operations:
/// - tt__NetworkZeroConfigurationExtension* soap_new_tt__NetworkZeroConfigurationExtension(soap*) allocate and default initialize
/// - tt__NetworkZeroConfigurationExtension* soap_new_tt__NetworkZeroConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkZeroConfigurationExtension* soap_new_req_tt__NetworkZeroConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__NetworkZeroConfigurationExtension* soap_new_set_tt__NetworkZeroConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkZeroConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfigurationExtension(soap*, tt__NetworkZeroConfigurationExtension*) serialize to a stream
/// - tt__NetworkZeroConfigurationExtension* tt__NetworkZeroConfigurationExtension::soap_dup(soap*) returns deep copy of tt__NetworkZeroConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkZeroConfigurationExtension::soap_del() deep deletes tt__NetworkZeroConfigurationExtension data members, use only after tt__NetworkZeroConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkZeroConfigurationExtension::soap_type() returns SOAP_TYPE_tt__NetworkZeroConfigurationExtension or derived type identifier
class tt__NetworkZeroConfigurationExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional array holding the configuration for the second and possibly further interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkZeroConfiguration* is 0..unbounded.
  $ int                                  __sizeAdditional               0;
/// Pointer to array tt__NetworkZeroConfiguration* of size 0..unbounded.
    tt__NetworkZeroConfiguration*       *Additional                     0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2.
    tt__NetworkZeroConfigurationExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkZeroConfigurationExtension2 is a complexType.
///
/// @note class tt__NetworkZeroConfigurationExtension2 operations:
/// - tt__NetworkZeroConfigurationExtension2* soap_new_tt__NetworkZeroConfigurationExtension2(soap*) allocate and default initialize
/// - tt__NetworkZeroConfigurationExtension2* soap_new_tt__NetworkZeroConfigurationExtension2(soap*, int num) allocate and default initialize an array
/// - tt__NetworkZeroConfigurationExtension2* soap_new_req_tt__NetworkZeroConfigurationExtension2(soap*, ...) allocate, set required members
/// - tt__NetworkZeroConfigurationExtension2* soap_new_set_tt__NetworkZeroConfigurationExtension2(soap*, ...) allocate, set all public members
/// - tt__NetworkZeroConfigurationExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkZeroConfigurationExtension2(soap*, tt__NetworkZeroConfigurationExtension2*) serialize to a stream
/// - tt__NetworkZeroConfigurationExtension2* tt__NetworkZeroConfigurationExtension2::soap_dup(soap*) returns deep copy of tt__NetworkZeroConfigurationExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkZeroConfigurationExtension2::soap_del() deep deletes tt__NetworkZeroConfigurationExtension2 data members, use only after tt__NetworkZeroConfigurationExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkZeroConfigurationExtension2::soap_type() returns SOAP_TYPE_tt__NetworkZeroConfigurationExtension2 or derived type identifier
class tt__NetworkZeroConfigurationExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilter is a complexType.
///
/// @note class tt__IPAddressFilter operations:
/// - tt__IPAddressFilter* soap_new_tt__IPAddressFilter(soap*) allocate and default initialize
/// - tt__IPAddressFilter* soap_new_tt__IPAddressFilter(soap*, int num) allocate and default initialize an array
/// - tt__IPAddressFilter* soap_new_req_tt__IPAddressFilter(soap*, ...) allocate, set required members
/// - tt__IPAddressFilter* soap_new_set_tt__IPAddressFilter(soap*, ...) allocate, set all public members
/// - tt__IPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) deserialize from a stream
/// - int soap_write_tt__IPAddressFilter(soap*, tt__IPAddressFilter*) serialize to a stream
/// - tt__IPAddressFilter* tt__IPAddressFilter::soap_dup(soap*) returns deep copy of tt__IPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPAddressFilter::soap_del() deep deletes tt__IPAddressFilter data members, use only after tt__IPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPAddressFilter::soap_type() returns SOAP_TYPE_tt__IPAddressFilter or derived type identifier
class tt__IPAddressFilter
{ public:
/// Element "Type" of type "http://www.onvif.org/ver10/schema":IPAddressFilterType.
    enum tt__IPAddressFilterType         Type                           1;	///< Required element.
/// Size of array of tt__PrefixedIPv4Address* is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Pointer to array tt__PrefixedIPv4Address* of size 0..unbounded.
    tt__PrefixedIPv4Address*            *IPv4Address                    0;	///< Multiple elements.
/// Size of array of tt__PrefixedIPv6Address* is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Pointer to array tt__PrefixedIPv6Address* of size 0..unbounded.
    tt__PrefixedIPv6Address*            *IPv6Address                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IPAddressFilterExtension.
    tt__IPAddressFilterExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IPAddressFilterExtension is a complexType.
///
/// @note class tt__IPAddressFilterExtension operations:
/// - tt__IPAddressFilterExtension* soap_new_tt__IPAddressFilterExtension(soap*) allocate and default initialize
/// - tt__IPAddressFilterExtension* soap_new_tt__IPAddressFilterExtension(soap*, int num) allocate and default initialize an array
/// - tt__IPAddressFilterExtension* soap_new_req_tt__IPAddressFilterExtension(soap*, ...) allocate, set required members
/// - tt__IPAddressFilterExtension* soap_new_set_tt__IPAddressFilterExtension(soap*, ...) allocate, set all public members
/// - tt__IPAddressFilterExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) deserialize from a stream
/// - int soap_write_tt__IPAddressFilterExtension(soap*, tt__IPAddressFilterExtension*) serialize to a stream
/// - tt__IPAddressFilterExtension* tt__IPAddressFilterExtension::soap_dup(soap*) returns deep copy of tt__IPAddressFilterExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IPAddressFilterExtension::soap_del() deep deletes tt__IPAddressFilterExtension data members, use only after tt__IPAddressFilterExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IPAddressFilterExtension::soap_type() returns SOAP_TYPE_tt__IPAddressFilterExtension or derived type identifier
class tt__IPAddressFilterExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Configuration is a complexType.
///
/// @note class tt__Dot11Configuration operations:
/// - tt__Dot11Configuration* soap_new_tt__Dot11Configuration(soap*) allocate and default initialize
/// - tt__Dot11Configuration* soap_new_tt__Dot11Configuration(soap*, int num) allocate and default initialize an array
/// - tt__Dot11Configuration* soap_new_req_tt__Dot11Configuration(soap*, ...) allocate, set required members
/// - tt__Dot11Configuration* soap_new_set_tt__Dot11Configuration(soap*, ...) allocate, set all public members
/// - tt__Dot11Configuration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) deserialize from a stream
/// - int soap_write_tt__Dot11Configuration(soap*, tt__Dot11Configuration*) serialize to a stream
/// - tt__Dot11Configuration* tt__Dot11Configuration::soap_dup(soap*) returns deep copy of tt__Dot11Configuration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11Configuration::soap_del() deep deletes tt__Dot11Configuration data members, use only after tt__Dot11Configuration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11Configuration::soap_type() returns SOAP_TYPE_tt__Dot11Configuration or derived type identifier
class tt__Dot11Configuration
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11StationMode.
    enum tt__Dot11StationMode            Mode                           1;	///< Required element.
/// Element "Alias" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Alias                          1;	///< Required element.
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceConfigPriority.
    tt__NetworkInterfaceConfigPriority   Priority                       1;	///< Required element.
/// Element "Security" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration.
    tt__Dot11SecurityConfiguration*      Security                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfiguration is a complexType.
///
/// @note class tt__Dot11SecurityConfiguration operations:
/// - tt__Dot11SecurityConfiguration* soap_new_tt__Dot11SecurityConfiguration(soap*) allocate and default initialize
/// - tt__Dot11SecurityConfiguration* soap_new_tt__Dot11SecurityConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__Dot11SecurityConfiguration* soap_new_req_tt__Dot11SecurityConfiguration(soap*, ...) allocate, set required members
/// - tt__Dot11SecurityConfiguration* soap_new_set_tt__Dot11SecurityConfiguration(soap*, ...) allocate, set all public members
/// - tt__Dot11SecurityConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) deserialize from a stream
/// - int soap_write_tt__Dot11SecurityConfiguration(soap*, tt__Dot11SecurityConfiguration*) serialize to a stream
/// - tt__Dot11SecurityConfiguration* tt__Dot11SecurityConfiguration::soap_dup(soap*) returns deep copy of tt__Dot11SecurityConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11SecurityConfiguration::soap_del() deep deletes tt__Dot11SecurityConfiguration data members, use only after tt__Dot11SecurityConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11SecurityConfiguration::soap_type() returns SOAP_TYPE_tt__Dot11SecurityConfiguration or derived type identifier
class tt__Dot11SecurityConfiguration
{ public:
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":Dot11SecurityMode.
    enum tt__Dot11SecurityMode           Mode                           1;	///< Required element.
/// Element "Algorithm" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                Algorithm                      0;	///< Optional element.
/// Element "PSK" of type "http://www.onvif.org/ver10/schema":Dot11PSKSet.
    tt__Dot11PSKSet*                     PSK                            0;	///< Optional element.
/// Element "Dot1X" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1X                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension.
    tt__Dot11SecurityConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11SecurityConfigurationExtension is a complexType.
///
/// @note class tt__Dot11SecurityConfigurationExtension operations:
/// - tt__Dot11SecurityConfigurationExtension* soap_new_tt__Dot11SecurityConfigurationExtension(soap*) allocate and default initialize
/// - tt__Dot11SecurityConfigurationExtension* soap_new_tt__Dot11SecurityConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__Dot11SecurityConfigurationExtension* soap_new_req_tt__Dot11SecurityConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__Dot11SecurityConfigurationExtension* soap_new_set_tt__Dot11SecurityConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__Dot11SecurityConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11SecurityConfigurationExtension(soap*, tt__Dot11SecurityConfigurationExtension*) serialize to a stream
/// - tt__Dot11SecurityConfigurationExtension* tt__Dot11SecurityConfigurationExtension::soap_dup(soap*) returns deep copy of tt__Dot11SecurityConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11SecurityConfigurationExtension::soap_del() deep deletes tt__Dot11SecurityConfigurationExtension data members, use only after tt__Dot11SecurityConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11SecurityConfigurationExtension::soap_type() returns SOAP_TYPE_tt__Dot11SecurityConfigurationExtension or derived type identifier
class tt__Dot11SecurityConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSet is a complexType.
///
/// @note class tt__Dot11PSKSet operations:
/// - tt__Dot11PSKSet* soap_new_tt__Dot11PSKSet(soap*) allocate and default initialize
/// - tt__Dot11PSKSet* soap_new_tt__Dot11PSKSet(soap*, int num) allocate and default initialize an array
/// - tt__Dot11PSKSet* soap_new_req_tt__Dot11PSKSet(soap*, ...) allocate, set required members
/// - tt__Dot11PSKSet* soap_new_set_tt__Dot11PSKSet(soap*, ...) allocate, set all public members
/// - tt__Dot11PSKSet::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) deserialize from a stream
/// - int soap_write_tt__Dot11PSKSet(soap*, tt__Dot11PSKSet*) serialize to a stream
/// - tt__Dot11PSKSet* tt__Dot11PSKSet::soap_dup(soap*) returns deep copy of tt__Dot11PSKSet, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11PSKSet::soap_del() deep deletes tt__Dot11PSKSet data members, use only after tt__Dot11PSKSet::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11PSKSet::soap_type() returns SOAP_TYPE_tt__Dot11PSKSet or derived type identifier
class tt__Dot11PSKSet
{ public:
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 the RSNA PSK consists of 256 bits, or 64 octets when represented in hex<br/>
///   Either Key or Passphrase shall be given, if both are supplied Key shall be used by the device and Passphrase ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "Key" of type "http://www.onvif.org/ver10/schema":Dot11PSK.
    tt__Dot11PSK*                        Key                            0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   According to IEEE802.11-2007 H.4.1 a pass-phrase is a sequence of between 8 and 63 ASCII-encoded characters and
///   each character in the pass-phrase must have an encoding in the range of 32 to 126 (decimal),inclusive.<br/>
///   If only Passpharse is supplied the Key shall be derived using the algorithm described in IEEE802.11-2007 section H.4
/// </BLOCKQUOTE></PRE>
///
/// Element "Passphrase" of type "http://www.onvif.org/ver10/schema":Dot11PSKPassphrase.
    tt__Dot11PSKPassphrase               Passphrase                     0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension.
    tt__Dot11PSKSetExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11PSKSetExtension is a complexType.
///
/// @note class tt__Dot11PSKSetExtension operations:
/// - tt__Dot11PSKSetExtension* soap_new_tt__Dot11PSKSetExtension(soap*) allocate and default initialize
/// - tt__Dot11PSKSetExtension* soap_new_tt__Dot11PSKSetExtension(soap*, int num) allocate and default initialize an array
/// - tt__Dot11PSKSetExtension* soap_new_req_tt__Dot11PSKSetExtension(soap*, ...) allocate, set required members
/// - tt__Dot11PSKSetExtension* soap_new_set_tt__Dot11PSKSetExtension(soap*, ...) allocate, set all public members
/// - tt__Dot11PSKSetExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11PSKSetExtension(soap*, tt__Dot11PSKSetExtension*) serialize to a stream
/// - tt__Dot11PSKSetExtension* tt__Dot11PSKSetExtension::soap_dup(soap*) returns deep copy of tt__Dot11PSKSetExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11PSKSetExtension::soap_del() deep deletes tt__Dot11PSKSetExtension data members, use only after tt__Dot11PSKSetExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11PSKSetExtension::soap_type() returns SOAP_TYPE_tt__Dot11PSKSetExtension or derived type identifier
class tt__Dot11PSKSetExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfigurationExtension2 is a complexType.
///
/// @note class tt__NetworkInterfaceSetConfigurationExtension2 operations:
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap*) allocate and default initialize
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_req_tt__NetworkInterfaceSetConfigurationExtension2(soap*, ...) allocate, set required members
/// - tt__NetworkInterfaceSetConfigurationExtension2* soap_new_set_tt__NetworkInterfaceSetConfigurationExtension2(soap*, ...) allocate, set all public members
/// - tt__NetworkInterfaceSetConfigurationExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkInterfaceSetConfigurationExtension2(soap*, tt__NetworkInterfaceSetConfigurationExtension2*) serialize to a stream
/// - tt__NetworkInterfaceSetConfigurationExtension2* tt__NetworkInterfaceSetConfigurationExtension2::soap_dup(soap*) returns deep copy of tt__NetworkInterfaceSetConfigurationExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterfaceSetConfigurationExtension2::soap_del() deep deletes tt__NetworkInterfaceSetConfigurationExtension2 data members, use only after tt__NetworkInterfaceSetConfigurationExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterfaceSetConfigurationExtension2::soap_type() returns SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension2 or derived type identifier
class tt__NetworkInterfaceSetConfigurationExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Capabilities is a complexType.
///
/// @note class tt__Dot11Capabilities operations:
/// - tt__Dot11Capabilities* soap_new_tt__Dot11Capabilities(soap*) allocate and default initialize
/// - tt__Dot11Capabilities* soap_new_tt__Dot11Capabilities(soap*, int num) allocate and default initialize an array
/// - tt__Dot11Capabilities* soap_new_req_tt__Dot11Capabilities(soap*, ...) allocate, set required members
/// - tt__Dot11Capabilities* soap_new_set_tt__Dot11Capabilities(soap*, ...) allocate, set all public members
/// - tt__Dot11Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) deserialize from a stream
/// - int soap_write_tt__Dot11Capabilities(soap*, tt__Dot11Capabilities*) serialize to a stream
/// - tt__Dot11Capabilities* tt__Dot11Capabilities::soap_dup(soap*) returns deep copy of tt__Dot11Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11Capabilities::soap_del() deep deletes tt__Dot11Capabilities data members, use only after tt__Dot11Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11Capabilities::soap_type() returns SOAP_TYPE_tt__Dot11Capabilities or derived type identifier
class tt__Dot11Capabilities
{ public:
/// Element "TKIP" of type xs:boolean.
    bool                                 TKIP                           1;	///< Required element.
/// Element "ScanAvailableNetworks" of type xs:boolean.
    bool                                 ScanAvailableNetworks          1;	///< Required element.
/// Element "MultipleConfiguration" of type xs:boolean.
    bool                                 MultipleConfiguration          1;	///< Required element.
/// Element "AdHocStationMode" of type xs:boolean.
    bool                                 AdHocStationMode               1;	///< Required element.
/// Element "WEP" of type xs:boolean.
    bool                                 WEP                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11Status is a complexType.
///
/// @note class tt__Dot11Status operations:
/// - tt__Dot11Status* soap_new_tt__Dot11Status(soap*) allocate and default initialize
/// - tt__Dot11Status* soap_new_tt__Dot11Status(soap*, int num) allocate and default initialize an array
/// - tt__Dot11Status* soap_new_req_tt__Dot11Status(soap*, ...) allocate, set required members
/// - tt__Dot11Status* soap_new_set_tt__Dot11Status(soap*, ...) allocate, set all public members
/// - tt__Dot11Status::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11Status(soap*, tt__Dot11Status*) deserialize from a stream
/// - int soap_write_tt__Dot11Status(soap*, tt__Dot11Status*) serialize to a stream
/// - tt__Dot11Status* tt__Dot11Status::soap_dup(soap*) returns deep copy of tt__Dot11Status, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11Status::soap_del() deep deletes tt__Dot11Status data members, use only after tt__Dot11Status::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11Status::soap_type() returns SOAP_TYPE_tt__Dot11Status or derived type identifier
class tt__Dot11Status
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// Element "PairCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                PairCipher                     0;	///< Optional element.
/// Element "GroupCipher" of type "http://www.onvif.org/ver10/schema":Dot11Cipher.
    enum tt__Dot11Cipher*                GroupCipher                    0;	///< Optional element.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "ActiveConfigAlias" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ActiveConfigAlias              1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworks is a complexType.
///
/// @note class tt__Dot11AvailableNetworks operations:
/// - tt__Dot11AvailableNetworks* soap_new_tt__Dot11AvailableNetworks(soap*) allocate and default initialize
/// - tt__Dot11AvailableNetworks* soap_new_tt__Dot11AvailableNetworks(soap*, int num) allocate and default initialize an array
/// - tt__Dot11AvailableNetworks* soap_new_req_tt__Dot11AvailableNetworks(soap*, ...) allocate, set required members
/// - tt__Dot11AvailableNetworks* soap_new_set_tt__Dot11AvailableNetworks(soap*, ...) allocate, set all public members
/// - tt__Dot11AvailableNetworks::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) deserialize from a stream
/// - int soap_write_tt__Dot11AvailableNetworks(soap*, tt__Dot11AvailableNetworks*) serialize to a stream
/// - tt__Dot11AvailableNetworks* tt__Dot11AvailableNetworks::soap_dup(soap*) returns deep copy of tt__Dot11AvailableNetworks, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11AvailableNetworks::soap_del() deep deletes tt__Dot11AvailableNetworks data members, use only after tt__Dot11AvailableNetworks::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11AvailableNetworks::soap_type() returns SOAP_TYPE_tt__Dot11AvailableNetworks or derived type identifier
class tt__Dot11AvailableNetworks
{ public:
/// Element "SSID" of type "http://www.onvif.org/ver10/schema":Dot11SSIDType.
    tt__Dot11SSIDType                    SSID                           1;	///< Required element.
/// Element "BSSID" of type xs:string.
    char*                                BSSID                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   See IEEE802.11 7.3.2.25.2 for details.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Dot11AuthAndMangementSuite is 0..unbounded.
  $ int                                  __sizeAuthAndMangementSuite    0;
/// Pointer to array enum tt__Dot11AuthAndMangementSuite of size 0..unbounded.
    enum tt__Dot11AuthAndMangementSuite *AuthAndMangementSuite          0;	///< Multiple elements.
/// Size of array of enum tt__Dot11Cipher is 0..unbounded.
  $ int                                  __sizePairCipher               0;
/// Pointer to array enum tt__Dot11Cipher of size 0..unbounded.
    enum tt__Dot11Cipher                *PairCipher                     0;	///< Multiple elements.
/// Size of array of enum tt__Dot11Cipher is 0..unbounded.
  $ int                                  __sizeGroupCipher              0;
/// Pointer to array enum tt__Dot11Cipher of size 0..unbounded.
    enum tt__Dot11Cipher                *GroupCipher                    0;	///< Multiple elements.
/// Element "SignalStrength" of type "http://www.onvif.org/ver10/schema":Dot11SignalStrength.
    enum tt__Dot11SignalStrength*        SignalStrength                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension.
    tt__Dot11AvailableNetworksExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot11AvailableNetworksExtension is a complexType.
///
/// @note class tt__Dot11AvailableNetworksExtension operations:
/// - tt__Dot11AvailableNetworksExtension* soap_new_tt__Dot11AvailableNetworksExtension(soap*) allocate and default initialize
/// - tt__Dot11AvailableNetworksExtension* soap_new_tt__Dot11AvailableNetworksExtension(soap*, int num) allocate and default initialize an array
/// - tt__Dot11AvailableNetworksExtension* soap_new_req_tt__Dot11AvailableNetworksExtension(soap*, ...) allocate, set required members
/// - tt__Dot11AvailableNetworksExtension* soap_new_set_tt__Dot11AvailableNetworksExtension(soap*, ...) allocate, set all public members
/// - tt__Dot11AvailableNetworksExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) deserialize from a stream
/// - int soap_write_tt__Dot11AvailableNetworksExtension(soap*, tt__Dot11AvailableNetworksExtension*) serialize to a stream
/// - tt__Dot11AvailableNetworksExtension* tt__Dot11AvailableNetworksExtension::soap_dup(soap*) returns deep copy of tt__Dot11AvailableNetworksExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot11AvailableNetworksExtension::soap_del() deep deletes tt__Dot11AvailableNetworksExtension data members, use only after tt__Dot11AvailableNetworksExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot11AvailableNetworksExtension::soap_type() returns SOAP_TYPE_tt__Dot11AvailableNetworksExtension or derived type identifier
class tt__Dot11AvailableNetworksExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Capabilities is a complexType.
///
/// @note class tt__Capabilities operations:
/// - tt__Capabilities* soap_new_tt__Capabilities(soap*) allocate and default initialize
/// - tt__Capabilities* soap_new_tt__Capabilities(soap*, int num) allocate and default initialize an array
/// - tt__Capabilities* soap_new_req_tt__Capabilities(soap*, ...) allocate, set required members
/// - tt__Capabilities* soap_new_set_tt__Capabilities(soap*, ...) allocate, set all public members
/// - tt__Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__Capabilities(soap*, tt__Capabilities*) deserialize from a stream
/// - int soap_write_tt__Capabilities(soap*, tt__Capabilities*) serialize to a stream
/// - tt__Capabilities* tt__Capabilities::soap_dup(soap*) returns deep copy of tt__Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Capabilities::soap_del() deep deletes tt__Capabilities data members, use only after tt__Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Capabilities::soap_type() returns SOAP_TYPE_tt__Capabilities or derived type identifier
class tt__Capabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Analytics capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type "http://www.onvif.org/ver10/schema":AnalyticsCapabilities.
    tt__AnalyticsCapabilities*           Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Device capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Device" of type "http://www.onvif.org/ver10/schema":DeviceCapabilities.
    tt__DeviceCapabilities*              Device                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Event capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventCapabilities.
    tt__EventCapabilities*               Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Imaging capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingCapabilities.
    tt__ImagingCapabilities*             Imaging                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Media capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "Media" of type "http://www.onvif.org/ver10/schema":MediaCapabilities.
    tt__MediaCapabilities*               Media                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   PTZ capabilities
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZ" of type "http://www.onvif.org/ver10/schema":PTZCapabilities.
    tt__PTZCapabilities*                 PTZ                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension.
    tt__CapabilitiesExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension is a complexType.
///
/// @note class tt__CapabilitiesExtension operations:
/// - tt__CapabilitiesExtension* soap_new_tt__CapabilitiesExtension(soap*) allocate and default initialize
/// - tt__CapabilitiesExtension* soap_new_tt__CapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__CapabilitiesExtension* soap_new_req_tt__CapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__CapabilitiesExtension* soap_new_set_tt__CapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__CapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__CapabilitiesExtension(soap*, tt__CapabilitiesExtension*) serialize to a stream
/// - tt__CapabilitiesExtension* tt__CapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__CapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CapabilitiesExtension::soap_del() deep deletes tt__CapabilitiesExtension data members, use only after tt__CapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__CapabilitiesExtension or derived type identifier
class tt__CapabilitiesExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "DeviceIO" of type "http://www.onvif.org/ver10/schema":DeviceIOCapabilities.
    tt__DeviceIOCapabilities*            DeviceIO                       0;	///< Optional element.
/// Element "Display" of type "http://www.onvif.org/ver10/schema":DisplayCapabilities.
    tt__DisplayCapabilities*             Display                        0;	///< Optional element.
/// Element "Recording" of type "http://www.onvif.org/ver10/schema":RecordingCapabilities.
    tt__RecordingCapabilities*           Recording                      0;	///< Optional element.
/// Element "Search" of type "http://www.onvif.org/ver10/schema":SearchCapabilities.
    tt__SearchCapabilities*              Search                         0;	///< Optional element.
/// Element "Replay" of type "http://www.onvif.org/ver10/schema":ReplayCapabilities.
    tt__ReplayCapabilities*              Replay                         0;	///< Optional element.
/// Element "Receiver" of type "http://www.onvif.org/ver10/schema":ReceiverCapabilities.
    tt__ReceiverCapabilities*            Receiver                       0;	///< Optional element.
/// Element "AnalyticsDevice" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities.
    tt__AnalyticsDeviceCapabilities*     AnalyticsDevice                0;	///< Optional element.
/// Element "Extensions" of type "http://www.onvif.org/ver10/schema":CapabilitiesExtension2.
    tt__CapabilitiesExtension2*          Extensions                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CapabilitiesExtension2 is a complexType.
///
/// @note class tt__CapabilitiesExtension2 operations:
/// - tt__CapabilitiesExtension2* soap_new_tt__CapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__CapabilitiesExtension2* soap_new_tt__CapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__CapabilitiesExtension2* soap_new_req_tt__CapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__CapabilitiesExtension2* soap_new_set_tt__CapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__CapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__CapabilitiesExtension2(soap*, tt__CapabilitiesExtension2*) serialize to a stream
/// - tt__CapabilitiesExtension2* tt__CapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__CapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CapabilitiesExtension2::soap_del() deep deletes tt__CapabilitiesExtension2 data members, use only after tt__CapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__CapabilitiesExtension2 or derived type identifier
class tt__CapabilitiesExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsCapabilities is a complexType.
///
/// @note class tt__AnalyticsCapabilities operations:
/// - tt__AnalyticsCapabilities* soap_new_tt__AnalyticsCapabilities(soap*) allocate and default initialize
/// - tt__AnalyticsCapabilities* soap_new_tt__AnalyticsCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__AnalyticsCapabilities* soap_new_req_tt__AnalyticsCapabilities(soap*, ...) allocate, set required members
/// - tt__AnalyticsCapabilities* soap_new_set_tt__AnalyticsCapabilities(soap*, ...) allocate, set all public members
/// - tt__AnalyticsCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) deserialize from a stream
/// - int soap_write_tt__AnalyticsCapabilities(soap*, tt__AnalyticsCapabilities*) serialize to a stream
/// - tt__AnalyticsCapabilities* tt__AnalyticsCapabilities::soap_dup(soap*) returns deep copy of tt__AnalyticsCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AnalyticsCapabilities::soap_del() deep deletes tt__AnalyticsCapabilities data members, use only after tt__AnalyticsCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AnalyticsCapabilities::soap_type() returns SOAP_TYPE_tt__AnalyticsCapabilities or derived type identifier
class tt__AnalyticsCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Analytics service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not rules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    bool                                 RuleSupport                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not modules are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsModuleSupport" of type xs:boolean.
    bool                                 AnalyticsModuleSupport         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilities is a complexType.
///
/// @note class tt__DeviceCapabilities operations:
/// - tt__DeviceCapabilities* soap_new_tt__DeviceCapabilities(soap*) allocate and default initialize
/// - tt__DeviceCapabilities* soap_new_tt__DeviceCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__DeviceCapabilities* soap_new_req_tt__DeviceCapabilities(soap*, ...) allocate, set required members
/// - tt__DeviceCapabilities* soap_new_set_tt__DeviceCapabilities(soap*, ...) allocate, set all public members
/// - tt__DeviceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) deserialize from a stream
/// - int soap_write_tt__DeviceCapabilities(soap*, tt__DeviceCapabilities*) serialize to a stream
/// - tt__DeviceCapabilities* tt__DeviceCapabilities::soap_dup(soap*) returns deep copy of tt__DeviceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceCapabilities::soap_del() deep deletes tt__DeviceCapabilities data members, use only after tt__DeviceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceCapabilities::soap_type() returns SOAP_TYPE_tt__DeviceCapabilities or derived type identifier
class tt__DeviceCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Device service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Network" of type "http://www.onvif.org/ver10/schema":NetworkCapabilities.
    tt__NetworkCapabilities*             Network                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   System capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "System" of type "http://www.onvif.org/ver10/schema":SystemCapabilities.
    tt__SystemCapabilities*              System                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   I/O capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "IO" of type "http://www.onvif.org/ver10/schema":IOCapabilities.
    tt__IOCapabilities*                  IO                             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Security capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "Security" of type "http://www.onvif.org/ver10/schema":SecurityCapabilities.
    tt__SecurityCapabilities*            Security                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension.
    tt__DeviceCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceCapabilitiesExtension is a complexType.
///
/// @note class tt__DeviceCapabilitiesExtension operations:
/// - tt__DeviceCapabilitiesExtension* soap_new_tt__DeviceCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__DeviceCapabilitiesExtension* soap_new_tt__DeviceCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__DeviceCapabilitiesExtension* soap_new_req_tt__DeviceCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__DeviceCapabilitiesExtension* soap_new_set_tt__DeviceCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__DeviceCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__DeviceCapabilitiesExtension(soap*, tt__DeviceCapabilitiesExtension*) serialize to a stream
/// - tt__DeviceCapabilitiesExtension* tt__DeviceCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__DeviceCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceCapabilitiesExtension::soap_del() deep deletes tt__DeviceCapabilitiesExtension data members, use only after tt__DeviceCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__DeviceCapabilitiesExtension or derived type identifier
class tt__DeviceCapabilitiesExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EventCapabilities is a complexType.
///
/// @note class tt__EventCapabilities operations:
/// - tt__EventCapabilities* soap_new_tt__EventCapabilities(soap*) allocate and default initialize
/// - tt__EventCapabilities* soap_new_tt__EventCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__EventCapabilities* soap_new_req_tt__EventCapabilities(soap*, ...) allocate, set required members
/// - tt__EventCapabilities* soap_new_set_tt__EventCapabilities(soap*, ...) allocate, set all public members
/// - tt__EventCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__EventCapabilities(soap*, tt__EventCapabilities*) deserialize from a stream
/// - int soap_write_tt__EventCapabilities(soap*, tt__EventCapabilities*) serialize to a stream
/// - tt__EventCapabilities* tt__EventCapabilities::soap_dup(soap*) returns deep copy of tt__EventCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EventCapabilities::soap_del() deep deletes tt__EventCapabilities data members, use only after tt__EventCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EventCapabilities::soap_type() returns SOAP_TYPE_tt__EventCapabilities or derived type identifier
class tt__EventCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Event service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Subscription policy is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSSubscriptionPolicySupport" of type xs:boolean.
    bool                                 WSSubscriptionPolicySupport    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pull Point is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPullPointSupport" of type xs:boolean.
    bool                                 WSPullPointSupport             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Pausable Subscription Manager Interface is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "WSPausableSubscriptionManagerInterfaceSupport" of type xs:boolean.
    bool                                 WSPausableSubscriptionManagerInterfaceSupport 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilities is a complexType.
///
/// @note class tt__IOCapabilities operations:
/// - tt__IOCapabilities* soap_new_tt__IOCapabilities(soap*) allocate and default initialize
/// - tt__IOCapabilities* soap_new_tt__IOCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__IOCapabilities* soap_new_req_tt__IOCapabilities(soap*, ...) allocate, set required members
/// - tt__IOCapabilities* soap_new_set_tt__IOCapabilities(soap*, ...) allocate, set all public members
/// - tt__IOCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__IOCapabilities(soap*, tt__IOCapabilities*) deserialize from a stream
/// - int soap_write_tt__IOCapabilities(soap*, tt__IOCapabilities*) serialize to a stream
/// - tt__IOCapabilities* tt__IOCapabilities::soap_dup(soap*) returns deep copy of tt__IOCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IOCapabilities::soap_del() deep deletes tt__IOCapabilities data members, use only after tt__IOCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IOCapabilities::soap_type() returns SOAP_TYPE_tt__IOCapabilities or derived type identifier
class tt__IOCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Number of input connectors.
/// </BLOCKQUOTE></PRE>
///
/// Element "InputConnectors" of type xs:int.
    int*                                 InputConnectors                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Number of relay outputs.
/// </BLOCKQUOTE></PRE>
///
/// Element "RelayOutputs" of type xs:int.
    int*                                 RelayOutputs                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension.
    tt__IOCapabilitiesExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension is a complexType.
///
/// @note class tt__IOCapabilitiesExtension operations:
/// - tt__IOCapabilitiesExtension* soap_new_tt__IOCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__IOCapabilitiesExtension* soap_new_tt__IOCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__IOCapabilitiesExtension* soap_new_req_tt__IOCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__IOCapabilitiesExtension* soap_new_set_tt__IOCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__IOCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__IOCapabilitiesExtension(soap*, tt__IOCapabilitiesExtension*) serialize to a stream
/// - tt__IOCapabilitiesExtension* tt__IOCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__IOCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IOCapabilitiesExtension::soap_del() deep deletes tt__IOCapabilitiesExtension data members, use only after tt__IOCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IOCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__IOCapabilitiesExtension or derived type identifier
class tt__IOCapabilitiesExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Auxiliary" of type xs:boolean.
    bool*                                Auxiliary                      0;	///< Optional element.
/// Size of array of tt__AuxiliaryData is 0..unbounded.
  $ int                                  __sizeAuxiliaryCommands        0;
/// Pointer to array tt__AuxiliaryData of size 0..unbounded.
    tt__AuxiliaryData                   *AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2.
    tt__IOCapabilitiesExtension2*        Extension                      1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IOCapabilitiesExtension2 is a complexType.
///
/// @note class tt__IOCapabilitiesExtension2 operations:
/// - tt__IOCapabilitiesExtension2* soap_new_tt__IOCapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__IOCapabilitiesExtension2* soap_new_tt__IOCapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__IOCapabilitiesExtension2* soap_new_req_tt__IOCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__IOCapabilitiesExtension2* soap_new_set_tt__IOCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__IOCapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__IOCapabilitiesExtension2(soap*, tt__IOCapabilitiesExtension2*) serialize to a stream
/// - tt__IOCapabilitiesExtension2* tt__IOCapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__IOCapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IOCapabilitiesExtension2::soap_del() deep deletes tt__IOCapabilitiesExtension2 data members, use only after tt__IOCapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IOCapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__IOCapabilitiesExtension2 or derived type identifier
class tt__IOCapabilitiesExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilities is a complexType.
///
/// @note class tt__MediaCapabilities operations:
/// - tt__MediaCapabilities* soap_new_tt__MediaCapabilities(soap*) allocate and default initialize
/// - tt__MediaCapabilities* soap_new_tt__MediaCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__MediaCapabilities* soap_new_req_tt__MediaCapabilities(soap*, ...) allocate, set required members
/// - tt__MediaCapabilities* soap_new_set_tt__MediaCapabilities(soap*, ...) allocate, set all public members
/// - tt__MediaCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) deserialize from a stream
/// - int soap_write_tt__MediaCapabilities(soap*, tt__MediaCapabilities*) serialize to a stream
/// - tt__MediaCapabilities* tt__MediaCapabilities::soap_dup(soap*) returns deep copy of tt__MediaCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MediaCapabilities::soap_del() deep deletes tt__MediaCapabilities data members, use only after tt__MediaCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MediaCapabilities::soap_type() returns SOAP_TYPE_tt__MediaCapabilities or derived type identifier
class tt__MediaCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Media service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities.
    tt__RealTimeStreamingCapabilities*   StreamingCapabilities          1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension.
    tt__MediaCapabilitiesExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MediaCapabilitiesExtension is a complexType.
///
/// @note class tt__MediaCapabilitiesExtension operations:
/// - tt__MediaCapabilitiesExtension* soap_new_tt__MediaCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__MediaCapabilitiesExtension* soap_new_tt__MediaCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__MediaCapabilitiesExtension* soap_new_req_tt__MediaCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__MediaCapabilitiesExtension* soap_new_set_tt__MediaCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__MediaCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__MediaCapabilitiesExtension(soap*, tt__MediaCapabilitiesExtension*) serialize to a stream
/// - tt__MediaCapabilitiesExtension* tt__MediaCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__MediaCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MediaCapabilitiesExtension::soap_del() deep deletes tt__MediaCapabilitiesExtension data members, use only after tt__MediaCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MediaCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__MediaCapabilitiesExtension or derived type identifier
class tt__MediaCapabilitiesExtension
{ public:
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/schema":ProfileCapabilities.
    tt__ProfileCapabilities*             ProfileCapabilities            1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilities is a complexType.
///
/// @note class tt__RealTimeStreamingCapabilities operations:
/// - tt__RealTimeStreamingCapabilities* soap_new_tt__RealTimeStreamingCapabilities(soap*) allocate and default initialize
/// - tt__RealTimeStreamingCapabilities* soap_new_tt__RealTimeStreamingCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__RealTimeStreamingCapabilities* soap_new_req_tt__RealTimeStreamingCapabilities(soap*, ...) allocate, set required members
/// - tt__RealTimeStreamingCapabilities* soap_new_set_tt__RealTimeStreamingCapabilities(soap*, ...) allocate, set all public members
/// - tt__RealTimeStreamingCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) deserialize from a stream
/// - int soap_write_tt__RealTimeStreamingCapabilities(soap*, tt__RealTimeStreamingCapabilities*) serialize to a stream
/// - tt__RealTimeStreamingCapabilities* tt__RealTimeStreamingCapabilities::soap_dup(soap*) returns deep copy of tt__RealTimeStreamingCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RealTimeStreamingCapabilities::soap_del() deep deletes tt__RealTimeStreamingCapabilities data members, use only after tt__RealTimeStreamingCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RealTimeStreamingCapabilities::soap_type() returns SOAP_TYPE_tt__RealTimeStreamingCapabilities or derived type identifier
class tt__RealTimeStreamingCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP multicast is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTPMulticast" of type xs:boolean.
    bool*                                RTPMulticast                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP over TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    bool*                                RTP_USCORETCP                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not RTP/RTSP/TCP is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension.
    tt__RealTimeStreamingCapabilitiesExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RealTimeStreamingCapabilitiesExtension is a complexType.
///
/// @note class tt__RealTimeStreamingCapabilitiesExtension operations:
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_req_tt__RealTimeStreamingCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__RealTimeStreamingCapabilitiesExtension* soap_new_set_tt__RealTimeStreamingCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__RealTimeStreamingCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__RealTimeStreamingCapabilitiesExtension(soap*, tt__RealTimeStreamingCapabilitiesExtension*) serialize to a stream
/// - tt__RealTimeStreamingCapabilitiesExtension* tt__RealTimeStreamingCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__RealTimeStreamingCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RealTimeStreamingCapabilitiesExtension::soap_del() deep deletes tt__RealTimeStreamingCapabilitiesExtension data members, use only after tt__RealTimeStreamingCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RealTimeStreamingCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__RealTimeStreamingCapabilitiesExtension or derived type identifier
class tt__RealTimeStreamingCapabilitiesExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileCapabilities is a complexType.
///
/// @note class tt__ProfileCapabilities operations:
/// - tt__ProfileCapabilities* soap_new_tt__ProfileCapabilities(soap*) allocate and default initialize
/// - tt__ProfileCapabilities* soap_new_tt__ProfileCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__ProfileCapabilities* soap_new_req_tt__ProfileCapabilities(soap*, ...) allocate, set required members
/// - tt__ProfileCapabilities* soap_new_set_tt__ProfileCapabilities(soap*, ...) allocate, set all public members
/// - tt__ProfileCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) deserialize from a stream
/// - int soap_write_tt__ProfileCapabilities(soap*, tt__ProfileCapabilities*) serialize to a stream
/// - tt__ProfileCapabilities* tt__ProfileCapabilities::soap_dup(soap*) returns deep copy of tt__ProfileCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ProfileCapabilities::soap_del() deep deletes tt__ProfileCapabilities data members, use only after tt__ProfileCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ProfileCapabilities::soap_type() returns SOAP_TYPE_tt__ProfileCapabilities or derived type identifier
class tt__ProfileCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfProfiles" of type xs:int.
    int                                  MaximumNumberOfProfiles        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilities is a complexType.
///
/// @note class tt__NetworkCapabilities operations:
/// - tt__NetworkCapabilities* soap_new_tt__NetworkCapabilities(soap*) allocate and default initialize
/// - tt__NetworkCapabilities* soap_new_tt__NetworkCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__NetworkCapabilities* soap_new_req_tt__NetworkCapabilities(soap*, ...) allocate, set required members
/// - tt__NetworkCapabilities* soap_new_set_tt__NetworkCapabilities(soap*, ...) allocate, set all public members
/// - tt__NetworkCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilities(soap*, tt__NetworkCapabilities*) serialize to a stream
/// - tt__NetworkCapabilities* tt__NetworkCapabilities::soap_dup(soap*) returns deep copy of tt__NetworkCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkCapabilities::soap_del() deep deletes tt__NetworkCapabilities data members, use only after tt__NetworkCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkCapabilities::soap_type() returns SOAP_TYPE_tt__NetworkCapabilities or derived type identifier
class tt__NetworkCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IP filtering is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPFilter" of type xs:boolean.
    bool*                                IPFilter                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not zeroconf is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type xs:boolean.
    bool*                                ZeroConfiguration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not IPv6 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPVersion6" of type xs:boolean.
    bool*                                IPVersion6                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynDNS" of type xs:boolean.
    bool*                                DynDNS                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension.
    tt__NetworkCapabilitiesExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension is a complexType.
///
/// @note class tt__NetworkCapabilitiesExtension operations:
/// - tt__NetworkCapabilitiesExtension* soap_new_tt__NetworkCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__NetworkCapabilitiesExtension* soap_new_tt__NetworkCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__NetworkCapabilitiesExtension* soap_new_req_tt__NetworkCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__NetworkCapabilitiesExtension* soap_new_set_tt__NetworkCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__NetworkCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilitiesExtension(soap*, tt__NetworkCapabilitiesExtension*) serialize to a stream
/// - tt__NetworkCapabilitiesExtension* tt__NetworkCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__NetworkCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkCapabilitiesExtension::soap_del() deep deletes tt__NetworkCapabilitiesExtension data members, use only after tt__NetworkCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__NetworkCapabilitiesExtension or derived type identifier
class tt__NetworkCapabilitiesExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Dot11Configuration" of type xs:boolean.
    bool*                                Dot11Configuration             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2.
    tt__NetworkCapabilitiesExtension2*   Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkCapabilitiesExtension2 is a complexType.
///
/// @note class tt__NetworkCapabilitiesExtension2 operations:
/// - tt__NetworkCapabilitiesExtension2* soap_new_tt__NetworkCapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__NetworkCapabilitiesExtension2* soap_new_tt__NetworkCapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__NetworkCapabilitiesExtension2* soap_new_req_tt__NetworkCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__NetworkCapabilitiesExtension2* soap_new_set_tt__NetworkCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__NetworkCapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__NetworkCapabilitiesExtension2(soap*, tt__NetworkCapabilitiesExtension2*) serialize to a stream
/// - tt__NetworkCapabilitiesExtension2* tt__NetworkCapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__NetworkCapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkCapabilitiesExtension2::soap_del() deep deletes tt__NetworkCapabilitiesExtension2 data members, use only after tt__NetworkCapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkCapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__NetworkCapabilitiesExtension2 or derived type identifier
class tt__NetworkCapabilitiesExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilities is a complexType.
///
/// @note class tt__SecurityCapabilities operations:
/// - tt__SecurityCapabilities* soap_new_tt__SecurityCapabilities(soap*) allocate and default initialize
/// - tt__SecurityCapabilities* soap_new_tt__SecurityCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__SecurityCapabilities* soap_new_req_tt__SecurityCapabilities(soap*, ...) allocate, set required members
/// - tt__SecurityCapabilities* soap_new_set_tt__SecurityCapabilities(soap*, ...) allocate, set all public members
/// - tt__SecurityCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilities(soap*, tt__SecurityCapabilities*) serialize to a stream
/// - tt__SecurityCapabilities* tt__SecurityCapabilities::soap_dup(soap*) returns deep copy of tt__SecurityCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SecurityCapabilities::soap_del() deep deletes tt__SecurityCapabilities data members, use only after tt__SecurityCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SecurityCapabilities::soap_type() returns SOAP_TYPE_tt__SecurityCapabilities or derived type identifier
class tt__SecurityCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.1 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.1" of type xs:boolean.
    bool                                 TLS1_x002e1                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not TLS 1.2 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLS1.2" of type xs:boolean.
    bool                                 TLS1_x002e2                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not onboard key generation is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "OnboardKeyGeneration" of type xs:boolean.
    bool                                 OnboardKeyGeneration           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not access policy configuration is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AccessPolicyConfig" of type xs:boolean.
    bool                                 AccessPolicyConfig             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security X.509 token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "X.509Token" of type xs:boolean.
    bool                                 X_x002e509Token                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security SAML token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SAMLToken" of type xs:boolean.
    bool                                 SAMLToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security Kerberos token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "KerberosToken" of type xs:boolean.
    bool                                 KerberosToken                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Security REL token is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RELToken" of type xs:boolean.
    bool                                 RELToken                       1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension.
    tt__SecurityCapabilitiesExtension*   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension is a complexType.
///
/// @note class tt__SecurityCapabilitiesExtension operations:
/// - tt__SecurityCapabilitiesExtension* soap_new_tt__SecurityCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__SecurityCapabilitiesExtension* soap_new_tt__SecurityCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__SecurityCapabilitiesExtension* soap_new_req_tt__SecurityCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__SecurityCapabilitiesExtension* soap_new_set_tt__SecurityCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__SecurityCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilitiesExtension(soap*, tt__SecurityCapabilitiesExtension*) serialize to a stream
/// - tt__SecurityCapabilitiesExtension* tt__SecurityCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__SecurityCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SecurityCapabilitiesExtension::soap_del() deep deletes tt__SecurityCapabilitiesExtension data members, use only after tt__SecurityCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SecurityCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__SecurityCapabilitiesExtension or derived type identifier
class tt__SecurityCapabilitiesExtension
{ public:
/// Element "TLS1.0" of type xs:boolean.
    bool                                 TLS1_x002e0                    1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2.
    tt__SecurityCapabilitiesExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SecurityCapabilitiesExtension2 is a complexType.
///
/// @note class tt__SecurityCapabilitiesExtension2 operations:
/// - tt__SecurityCapabilitiesExtension2* soap_new_tt__SecurityCapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__SecurityCapabilitiesExtension2* soap_new_tt__SecurityCapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__SecurityCapabilitiesExtension2* soap_new_req_tt__SecurityCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__SecurityCapabilitiesExtension2* soap_new_set_tt__SecurityCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__SecurityCapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__SecurityCapabilitiesExtension2(soap*, tt__SecurityCapabilitiesExtension2*) serialize to a stream
/// - tt__SecurityCapabilitiesExtension2* tt__SecurityCapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__SecurityCapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SecurityCapabilitiesExtension2::soap_del() deep deletes tt__SecurityCapabilitiesExtension2 data members, use only after tt__SecurityCapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SecurityCapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__SecurityCapabilitiesExtension2 or derived type identifier
class tt__SecurityCapabilitiesExtension2
{ public:
/// Element "Dot1X" of type xs:boolean.
    bool                                 Dot1X                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   EAP Methods supported by the device. The int values refer to the <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of int is 0..unbounded.
  $ int                                  __sizeSupportedEAPMethod       0;
/// Pointer to array int of size 0..unbounded.
    int                                 *SupportedEAPMethod             0;	///< Multiple elements.
/// Element "RemoteUserHandling" of type xs:boolean.
    bool                                 RemoteUserHandling             1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilities is a complexType.
///
/// @note class tt__SystemCapabilities operations:
/// - tt__SystemCapabilities* soap_new_tt__SystemCapabilities(soap*) allocate and default initialize
/// - tt__SystemCapabilities* soap_new_tt__SystemCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__SystemCapabilities* soap_new_req_tt__SystemCapabilities(soap*, ...) allocate, set required members
/// - tt__SystemCapabilities* soap_new_set_tt__SystemCapabilities(soap*, ...) allocate, set all public members
/// - tt__SystemCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilities(soap*, tt__SystemCapabilities*) serialize to a stream
/// - tt__SystemCapabilities* tt__SystemCapabilities::soap_dup(soap*) returns deep copy of tt__SystemCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemCapabilities::soap_del() deep deletes tt__SystemCapabilities data members, use only after tt__SystemCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemCapabilities::soap_type() returns SOAP_TYPE_tt__SystemCapabilities or derived type identifier
class tt__SystemCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS Discovery resolve requests are supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryResolve" of type xs:boolean.
    bool                                 DiscoveryResolve               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not WS-Discovery Bye is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryBye" of type xs:boolean.
    bool                                 DiscoveryBye                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not remote discovery is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscovery" of type xs:boolean.
    bool                                 RemoteDiscovery                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system backup is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemBackup" of type xs:boolean.
    bool                                 SystemBackup                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not system logging is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLogging" of type xs:boolean.
    bool                                 SystemLogging                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not firmware upgrade is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "FirmwareUpgrade" of type xs:boolean.
    bool                                 FirmwareUpgrade                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates supported ONVIF version(s).
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__OnvifVersion* is 1..unbounded.
  $ int                                  __sizeSupportedVersions        1;
/// Pointer to array tt__OnvifVersion* of size 1..unbounded.
    tt__OnvifVersion*                   *SupportedVersions              1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension.
    tt__SystemCapabilitiesExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension is a complexType.
///
/// @note class tt__SystemCapabilitiesExtension operations:
/// - tt__SystemCapabilitiesExtension* soap_new_tt__SystemCapabilitiesExtension(soap*) allocate and default initialize
/// - tt__SystemCapabilitiesExtension* soap_new_tt__SystemCapabilitiesExtension(soap*, int num) allocate and default initialize an array
/// - tt__SystemCapabilitiesExtension* soap_new_req_tt__SystemCapabilitiesExtension(soap*, ...) allocate, set required members
/// - tt__SystemCapabilitiesExtension* soap_new_set_tt__SystemCapabilitiesExtension(soap*, ...) allocate, set all public members
/// - tt__SystemCapabilitiesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilitiesExtension(soap*, tt__SystemCapabilitiesExtension*) serialize to a stream
/// - tt__SystemCapabilitiesExtension* tt__SystemCapabilitiesExtension::soap_dup(soap*) returns deep copy of tt__SystemCapabilitiesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemCapabilitiesExtension::soap_del() deep deletes tt__SystemCapabilitiesExtension data members, use only after tt__SystemCapabilitiesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemCapabilitiesExtension::soap_type() returns SOAP_TYPE_tt__SystemCapabilitiesExtension or derived type identifier
class tt__SystemCapabilitiesExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "HttpFirmwareUpgrade" of type xs:boolean.
    bool*                                HttpFirmwareUpgrade            0;	///< Optional element.
/// Element "HttpSystemBackup" of type xs:boolean.
    bool*                                HttpSystemBackup               0;	///< Optional element.
/// Element "HttpSystemLogging" of type xs:boolean.
    bool*                                HttpSystemLogging              0;	///< Optional element.
/// Element "HttpSupportInformation" of type xs:boolean.
    bool*                                HttpSupportInformation         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2.
    tt__SystemCapabilitiesExtension2*    Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemCapabilitiesExtension2 is a complexType.
///
/// @note class tt__SystemCapabilitiesExtension2 operations:
/// - tt__SystemCapabilitiesExtension2* soap_new_tt__SystemCapabilitiesExtension2(soap*) allocate and default initialize
/// - tt__SystemCapabilitiesExtension2* soap_new_tt__SystemCapabilitiesExtension2(soap*, int num) allocate and default initialize an array
/// - tt__SystemCapabilitiesExtension2* soap_new_req_tt__SystemCapabilitiesExtension2(soap*, ...) allocate, set required members
/// - tt__SystemCapabilitiesExtension2* soap_new_set_tt__SystemCapabilitiesExtension2(soap*, ...) allocate, set all public members
/// - tt__SystemCapabilitiesExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) deserialize from a stream
/// - int soap_write_tt__SystemCapabilitiesExtension2(soap*, tt__SystemCapabilitiesExtension2*) serialize to a stream
/// - tt__SystemCapabilitiesExtension2* tt__SystemCapabilitiesExtension2::soap_dup(soap*) returns deep copy of tt__SystemCapabilitiesExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemCapabilitiesExtension2::soap_del() deep deletes tt__SystemCapabilitiesExtension2 data members, use only after tt__SystemCapabilitiesExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemCapabilitiesExtension2::soap_type() returns SOAP_TYPE_tt__SystemCapabilitiesExtension2 or derived type identifier
class tt__SystemCapabilitiesExtension2
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OnvifVersion is a complexType.
///
/// @note class tt__OnvifVersion operations:
/// - tt__OnvifVersion* soap_new_tt__OnvifVersion(soap*) allocate and default initialize
/// - tt__OnvifVersion* soap_new_tt__OnvifVersion(soap*, int num) allocate and default initialize an array
/// - tt__OnvifVersion* soap_new_req_tt__OnvifVersion(soap*, ...) allocate, set required members
/// - tt__OnvifVersion* soap_new_set_tt__OnvifVersion(soap*, ...) allocate, set all public members
/// - tt__OnvifVersion::soap_default(soap*) default initialize members
/// - int soap_read_tt__OnvifVersion(soap*, tt__OnvifVersion*) deserialize from a stream
/// - int soap_write_tt__OnvifVersion(soap*, tt__OnvifVersion*) serialize to a stream
/// - tt__OnvifVersion* tt__OnvifVersion::soap_dup(soap*) returns deep copy of tt__OnvifVersion, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OnvifVersion::soap_del() deep deletes tt__OnvifVersion data members, use only after tt__OnvifVersion::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OnvifVersion::soap_type() returns SOAP_TYPE_tt__OnvifVersion or derived type identifier
class tt__OnvifVersion
{ public:
/// <PRE><BLOCKQUOTE>
///   Major version number.
/// </BLOCKQUOTE></PRE>
///
/// Element "Major" of type xs:int.
    int                                  Major                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Two digit minor version number.
///   If major version number is less than "16", X.0.1 maps to "01" and X.2.1 maps to "21" where X stands for Major version number.
///   Otherwise, minor number is month of release, such as "06" for June.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minor" of type xs:int.
    int                                  Minor                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingCapabilities is a complexType.
///
/// @note class tt__ImagingCapabilities operations:
/// - tt__ImagingCapabilities* soap_new_tt__ImagingCapabilities(soap*) allocate and default initialize
/// - tt__ImagingCapabilities* soap_new_tt__ImagingCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__ImagingCapabilities* soap_new_req_tt__ImagingCapabilities(soap*, ...) allocate, set required members
/// - tt__ImagingCapabilities* soap_new_set_tt__ImagingCapabilities(soap*, ...) allocate, set all public members
/// - tt__ImagingCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) deserialize from a stream
/// - int soap_write_tt__ImagingCapabilities(soap*, tt__ImagingCapabilities*) serialize to a stream
/// - tt__ImagingCapabilities* tt__ImagingCapabilities::soap_dup(soap*) returns deep copy of tt__ImagingCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingCapabilities::soap_del() deep deletes tt__ImagingCapabilities data members, use only after tt__ImagingCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingCapabilities::soap_type() returns SOAP_TYPE_tt__ImagingCapabilities or derived type identifier
class tt__ImagingCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Imaging service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZCapabilities is a complexType.
///
/// @note class tt__PTZCapabilities operations:
/// - tt__PTZCapabilities* soap_new_tt__PTZCapabilities(soap*) allocate and default initialize
/// - tt__PTZCapabilities* soap_new_tt__PTZCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__PTZCapabilities* soap_new_req_tt__PTZCapabilities(soap*, ...) allocate, set required members
/// - tt__PTZCapabilities* soap_new_set_tt__PTZCapabilities(soap*, ...) allocate, set all public members
/// - tt__PTZCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) deserialize from a stream
/// - int soap_write_tt__PTZCapabilities(soap*, tt__PTZCapabilities*) serialize to a stream
/// - tt__PTZCapabilities* tt__PTZCapabilities::soap_dup(soap*) returns deep copy of tt__PTZCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZCapabilities::soap_del() deep deletes tt__PTZCapabilities data members, use only after tt__PTZCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZCapabilities::soap_type() returns SOAP_TYPE_tt__PTZCapabilities or derived type identifier
class tt__PTZCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   PTZ service URI.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DeviceIOCapabilities is a complexType.
///
/// @note class tt__DeviceIOCapabilities operations:
/// - tt__DeviceIOCapabilities* soap_new_tt__DeviceIOCapabilities(soap*) allocate and default initialize
/// - tt__DeviceIOCapabilities* soap_new_tt__DeviceIOCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__DeviceIOCapabilities* soap_new_req_tt__DeviceIOCapabilities(soap*, ...) allocate, set required members
/// - tt__DeviceIOCapabilities* soap_new_set_tt__DeviceIOCapabilities(soap*, ...) allocate, set all public members
/// - tt__DeviceIOCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) deserialize from a stream
/// - int soap_write_tt__DeviceIOCapabilities(soap*, tt__DeviceIOCapabilities*) serialize to a stream
/// - tt__DeviceIOCapabilities* tt__DeviceIOCapabilities::soap_dup(soap*) returns deep copy of tt__DeviceIOCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceIOCapabilities::soap_del() deep deletes tt__DeviceIOCapabilities data members, use only after tt__DeviceIOCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceIOCapabilities::soap_type() returns SOAP_TYPE_tt__DeviceIOCapabilities or derived type identifier
class tt__DeviceIOCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "VideoSources" of type xs:int.
    int                                  VideoSources                   1;	///< Required element.
/// Element "VideoOutputs" of type xs:int.
    int                                  VideoOutputs                   1;	///< Required element.
/// Element "AudioSources" of type xs:int.
    int                                  AudioSources                   1;	///< Required element.
/// Element "AudioOutputs" of type xs:int.
    int                                  AudioOutputs                   1;	///< Required element.
/// Element "RelayOutputs" of type xs:int.
    int                                  RelayOutputs                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DisplayCapabilities is a complexType.
///
/// @note class tt__DisplayCapabilities operations:
/// - tt__DisplayCapabilities* soap_new_tt__DisplayCapabilities(soap*) allocate and default initialize
/// - tt__DisplayCapabilities* soap_new_tt__DisplayCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__DisplayCapabilities* soap_new_req_tt__DisplayCapabilities(soap*, ...) allocate, set required members
/// - tt__DisplayCapabilities* soap_new_set_tt__DisplayCapabilities(soap*, ...) allocate, set all public members
/// - tt__DisplayCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) deserialize from a stream
/// - int soap_write_tt__DisplayCapabilities(soap*, tt__DisplayCapabilities*) serialize to a stream
/// - tt__DisplayCapabilities* tt__DisplayCapabilities::soap_dup(soap*) returns deep copy of tt__DisplayCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DisplayCapabilities::soap_del() deep deletes tt__DisplayCapabilities data members, use only after tt__DisplayCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DisplayCapabilities::soap_type() returns SOAP_TYPE_tt__DisplayCapabilities or derived type identifier
class tt__DisplayCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication that the SetLayout command supports only predefined layouts.
/// </BLOCKQUOTE></PRE>
///
/// Element "FixedLayout" of type xs:boolean.
    bool                                 FixedLayout                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RecordingCapabilities is a complexType.
///
/// @note class tt__RecordingCapabilities operations:
/// - tt__RecordingCapabilities* soap_new_tt__RecordingCapabilities(soap*) allocate and default initialize
/// - tt__RecordingCapabilities* soap_new_tt__RecordingCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__RecordingCapabilities* soap_new_req_tt__RecordingCapabilities(soap*, ...) allocate, set required members
/// - tt__RecordingCapabilities* soap_new_set_tt__RecordingCapabilities(soap*, ...) allocate, set all public members
/// - tt__RecordingCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) deserialize from a stream
/// - int soap_write_tt__RecordingCapabilities(soap*, tt__RecordingCapabilities*) serialize to a stream
/// - tt__RecordingCapabilities* tt__RecordingCapabilities::soap_dup(soap*) returns deep copy of tt__RecordingCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RecordingCapabilities::soap_del() deep deletes tt__RecordingCapabilities data members, use only after tt__RecordingCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RecordingCapabilities::soap_type() returns SOAP_TYPE_tt__RecordingCapabilities or derived type identifier
class tt__RecordingCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "ReceiverSource" of type xs:boolean.
    bool                                 ReceiverSource                 1;	///< Required element.
/// Element "MediaProfileSource" of type xs:boolean.
    bool                                 MediaProfileSource             1;	///< Required element.
/// Element "DynamicRecordings" of type xs:boolean.
    bool                                 DynamicRecordings              1;	///< Required element.
/// Element "DynamicTracks" of type xs:boolean.
    bool                                 DynamicTracks                  1;	///< Required element.
/// Element "MaxStringLength" of type xs:int.
    int                                  MaxStringLength                1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SearchCapabilities is a complexType.
///
/// @note class tt__SearchCapabilities operations:
/// - tt__SearchCapabilities* soap_new_tt__SearchCapabilities(soap*) allocate and default initialize
/// - tt__SearchCapabilities* soap_new_tt__SearchCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__SearchCapabilities* soap_new_req_tt__SearchCapabilities(soap*, ...) allocate, set required members
/// - tt__SearchCapabilities* soap_new_set_tt__SearchCapabilities(soap*, ...) allocate, set all public members
/// - tt__SearchCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) deserialize from a stream
/// - int soap_write_tt__SearchCapabilities(soap*, tt__SearchCapabilities*) serialize to a stream
/// - tt__SearchCapabilities* tt__SearchCapabilities::soap_dup(soap*) returns deep copy of tt__SearchCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SearchCapabilities::soap_del() deep deletes tt__SearchCapabilities data members, use only after tt__SearchCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SearchCapabilities::soap_type() returns SOAP_TYPE_tt__SearchCapabilities or derived type identifier
class tt__SearchCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// Element "MetadataSearch" of type xs:boolean.
    bool                                 MetadataSearch                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReplayCapabilities is a complexType.
///
/// @note class tt__ReplayCapabilities operations:
/// - tt__ReplayCapabilities* soap_new_tt__ReplayCapabilities(soap*) allocate and default initialize
/// - tt__ReplayCapabilities* soap_new_tt__ReplayCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__ReplayCapabilities* soap_new_req_tt__ReplayCapabilities(soap*, ...) allocate, set required members
/// - tt__ReplayCapabilities* soap_new_set_tt__ReplayCapabilities(soap*, ...) allocate, set all public members
/// - tt__ReplayCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) deserialize from a stream
/// - int soap_write_tt__ReplayCapabilities(soap*, tt__ReplayCapabilities*) serialize to a stream
/// - tt__ReplayCapabilities* tt__ReplayCapabilities::soap_dup(soap*) returns deep copy of tt__ReplayCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ReplayCapabilities::soap_del() deep deletes tt__ReplayCapabilities data members, use only after tt__ReplayCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ReplayCapabilities::soap_type() returns SOAP_TYPE_tt__ReplayCapabilities or derived type identifier
class tt__ReplayCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   The address of the replay service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReceiverCapabilities is a complexType.
///
/// @note class tt__ReceiverCapabilities operations:
/// - tt__ReceiverCapabilities* soap_new_tt__ReceiverCapabilities(soap*) allocate and default initialize
/// - tt__ReceiverCapabilities* soap_new_tt__ReceiverCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__ReceiverCapabilities* soap_new_req_tt__ReceiverCapabilities(soap*, ...) allocate, set required members
/// - tt__ReceiverCapabilities* soap_new_set_tt__ReceiverCapabilities(soap*, ...) allocate, set all public members
/// - tt__ReceiverCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) deserialize from a stream
/// - int soap_write_tt__ReceiverCapabilities(soap*, tt__ReceiverCapabilities*) serialize to a stream
/// - tt__ReceiverCapabilities* tt__ReceiverCapabilities::soap_dup(soap*) returns deep copy of tt__ReceiverCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ReceiverCapabilities::soap_del() deep deletes tt__ReceiverCapabilities data members, use only after tt__ReceiverCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ReceiverCapabilities::soap_type() returns SOAP_TYPE_tt__ReceiverCapabilities or derived type identifier
class tt__ReceiverCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   The address of the receiver service.
/// </BLOCKQUOTE></PRE>
///
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP multicast streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_Multicast" of type xs:boolean.
    bool                                 RTP_USCOREMulticast            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/TCP streams
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_TCP" of type xs:boolean.
    bool                                 RTP_USCORETCP                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether the device can receive RTP/RTSP/TCP streams.
/// </BLOCKQUOTE></PRE>
///
/// Element "RTP_RTSP_TCP" of type xs:boolean.
    bool                                 RTP_USCORERTSP_USCORETCP       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum number of receivers supported by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedReceivers" of type xs:int.
    int                                  SupportedReceivers             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The maximum allowed length for RTSP URIs.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumRTSPURILength" of type xs:int.
    int                                  MaximumRTSPURILength           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceCapabilities is a complexType.
///
/// @note class tt__AnalyticsDeviceCapabilities operations:
/// - tt__AnalyticsDeviceCapabilities* soap_new_tt__AnalyticsDeviceCapabilities(soap*) allocate and default initialize
/// - tt__AnalyticsDeviceCapabilities* soap_new_tt__AnalyticsDeviceCapabilities(soap*, int num) allocate and default initialize an array
/// - tt__AnalyticsDeviceCapabilities* soap_new_req_tt__AnalyticsDeviceCapabilities(soap*, ...) allocate, set required members
/// - tt__AnalyticsDeviceCapabilities* soap_new_set_tt__AnalyticsDeviceCapabilities(soap*, ...) allocate, set all public members
/// - tt__AnalyticsDeviceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceCapabilities(soap*, tt__AnalyticsDeviceCapabilities*) serialize to a stream
/// - tt__AnalyticsDeviceCapabilities* tt__AnalyticsDeviceCapabilities::soap_dup(soap*) returns deep copy of tt__AnalyticsDeviceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AnalyticsDeviceCapabilities::soap_del() deep deletes tt__AnalyticsDeviceCapabilities data members, use only after tt__AnalyticsDeviceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AnalyticsDeviceCapabilities::soap_type() returns SOAP_TYPE_tt__AnalyticsDeviceCapabilities or derived type identifier
class tt__AnalyticsDeviceCapabilities
{ public:
/// Element "XAddr" of type xs:anyURI.
    xsd__anyURI                          XAddr                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Obsolete property.
/// </BLOCKQUOTE></PRE>
///
/// Element "RuleSupport" of type xs:boolean.
    bool*                                RuleSupport                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension.
    tt__AnalyticsDeviceExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsDeviceExtension is a complexType.
///
/// @note class tt__AnalyticsDeviceExtension operations:
/// - tt__AnalyticsDeviceExtension* soap_new_tt__AnalyticsDeviceExtension(soap*) allocate and default initialize
/// - tt__AnalyticsDeviceExtension* soap_new_tt__AnalyticsDeviceExtension(soap*, int num) allocate and default initialize an array
/// - tt__AnalyticsDeviceExtension* soap_new_req_tt__AnalyticsDeviceExtension(soap*, ...) allocate, set required members
/// - tt__AnalyticsDeviceExtension* soap_new_set_tt__AnalyticsDeviceExtension(soap*, ...) allocate, set all public members
/// - tt__AnalyticsDeviceExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsDeviceExtension(soap*, tt__AnalyticsDeviceExtension*) serialize to a stream
/// - tt__AnalyticsDeviceExtension* tt__AnalyticsDeviceExtension::soap_dup(soap*) returns deep copy of tt__AnalyticsDeviceExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AnalyticsDeviceExtension::soap_del() deep deletes tt__AnalyticsDeviceExtension data members, use only after tt__AnalyticsDeviceExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AnalyticsDeviceExtension::soap_type() returns SOAP_TYPE_tt__AnalyticsDeviceExtension or derived type identifier
class tt__AnalyticsDeviceExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLog is a complexType.
///
/// @note class tt__SystemLog operations:
/// - tt__SystemLog* soap_new_tt__SystemLog(soap*) allocate and default initialize
/// - tt__SystemLog* soap_new_tt__SystemLog(soap*, int num) allocate and default initialize an array
/// - tt__SystemLog* soap_new_req_tt__SystemLog(soap*, ...) allocate, set required members
/// - tt__SystemLog* soap_new_set_tt__SystemLog(soap*, ...) allocate, set all public members
/// - tt__SystemLog::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemLog(soap*, tt__SystemLog*) deserialize from a stream
/// - int soap_write_tt__SystemLog(soap*, tt__SystemLog*) serialize to a stream
/// - tt__SystemLog* tt__SystemLog::soap_dup(soap*) returns deep copy of tt__SystemLog, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemLog::soap_del() deep deletes tt__SystemLog data members, use only after tt__SystemLog::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemLog::soap_type() returns SOAP_TYPE_tt__SystemLog or derived type identifier
class tt__SystemLog
{ public:
/// <PRE><BLOCKQUOTE>
///   The log information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The log information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    char*                                String                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SupportInformation is a complexType.
///
/// @note class tt__SupportInformation operations:
/// - tt__SupportInformation* soap_new_tt__SupportInformation(soap*) allocate and default initialize
/// - tt__SupportInformation* soap_new_tt__SupportInformation(soap*, int num) allocate and default initialize an array
/// - tt__SupportInformation* soap_new_req_tt__SupportInformation(soap*, ...) allocate, set required members
/// - tt__SupportInformation* soap_new_set_tt__SupportInformation(soap*, ...) allocate, set all public members
/// - tt__SupportInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__SupportInformation(soap*, tt__SupportInformation*) deserialize from a stream
/// - int soap_write_tt__SupportInformation(soap*, tt__SupportInformation*) serialize to a stream
/// - tt__SupportInformation* tt__SupportInformation::soap_dup(soap*) returns deep copy of tt__SupportInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SupportInformation::soap_del() deep deletes tt__SupportInformation data members, use only after tt__SupportInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SupportInformation::soap_type() returns SOAP_TYPE_tt__SupportInformation or derived type identifier
class tt__SupportInformation
{ public:
/// <PRE><BLOCKQUOTE>
///   The support information as attachment data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Binary" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Binary                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The support information as character data.
/// </BLOCKQUOTE></PRE>
///
/// Element "String" of type xs:string.
    char*                                String                         0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BinaryData is a complexType.
///
/// @note class tt__BinaryData operations:
/// - tt__BinaryData* soap_new_tt__BinaryData(soap*) allocate and default initialize
/// - tt__BinaryData* soap_new_tt__BinaryData(soap*, int num) allocate and default initialize an array
/// - tt__BinaryData* soap_new_req_tt__BinaryData(soap*, ...) allocate, set required members
/// - tt__BinaryData* soap_new_set_tt__BinaryData(soap*, ...) allocate, set all public members
/// - tt__BinaryData::soap_default(soap*) default initialize members
/// - int soap_read_tt__BinaryData(soap*, tt__BinaryData*) deserialize from a stream
/// - int soap_write_tt__BinaryData(soap*, tt__BinaryData*) serialize to a stream
/// - tt__BinaryData* tt__BinaryData::soap_dup(soap*) returns deep copy of tt__BinaryData, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__BinaryData::soap_del() deep deletes tt__BinaryData data members, use only after tt__BinaryData::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__BinaryData::soap_type() returns SOAP_TYPE_tt__BinaryData or derived type identifier
class tt__BinaryData
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded binary data.
/// </BLOCKQUOTE></PRE>
///
/// Element "Data" of type xs:base64Binary.
    xsd__base64Binary                    Data                           1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ char*                                xmime__contentType             0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AttachmentData is a complexType.
///
/// @note class tt__AttachmentData operations:
/// - tt__AttachmentData* soap_new_tt__AttachmentData(soap*) allocate and default initialize
/// - tt__AttachmentData* soap_new_tt__AttachmentData(soap*, int num) allocate and default initialize an array
/// - tt__AttachmentData* soap_new_req_tt__AttachmentData(soap*, ...) allocate, set required members
/// - tt__AttachmentData* soap_new_set_tt__AttachmentData(soap*, ...) allocate, set all public members
/// - tt__AttachmentData::soap_default(soap*) default initialize members
/// - int soap_read_tt__AttachmentData(soap*, tt__AttachmentData*) deserialize from a stream
/// - int soap_write_tt__AttachmentData(soap*, tt__AttachmentData*) serialize to a stream
/// - tt__AttachmentData* tt__AttachmentData::soap_dup(soap*) returns deep copy of tt__AttachmentData, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AttachmentData::soap_del() deep deletes tt__AttachmentData data members, use only after tt__AttachmentData::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AttachmentData::soap_type() returns SOAP_TYPE_tt__AttachmentData or derived type identifier
class tt__AttachmentData
{ public:
/// Imported element reference "http://www.w3.org/2004/08/xop/include":Include.
    _xop__Include                        xop__Include                   1;	///< Required element.
/// Imported attribute reference xmime:contentType.
  @ char*                                xmime__contentType             0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BackupFile is a complexType.
///
/// @note class tt__BackupFile operations:
/// - tt__BackupFile* soap_new_tt__BackupFile(soap*) allocate and default initialize
/// - tt__BackupFile* soap_new_tt__BackupFile(soap*, int num) allocate and default initialize an array
/// - tt__BackupFile* soap_new_req_tt__BackupFile(soap*, ...) allocate, set required members
/// - tt__BackupFile* soap_new_set_tt__BackupFile(soap*, ...) allocate, set all public members
/// - tt__BackupFile::soap_default(soap*) default initialize members
/// - int soap_read_tt__BackupFile(soap*, tt__BackupFile*) deserialize from a stream
/// - int soap_write_tt__BackupFile(soap*, tt__BackupFile*) serialize to a stream
/// - tt__BackupFile* tt__BackupFile::soap_dup(soap*) returns deep copy of tt__BackupFile, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__BackupFile::soap_del() deep deletes tt__BackupFile data members, use only after tt__BackupFile::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__BackupFile::soap_type() returns SOAP_TYPE_tt__BackupFile or derived type identifier
class tt__BackupFile
{ public:
/// Element "Name" of type xs:string.
    char*                                Name                           1;	///< Required element.
/// Element "Data" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Data                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUriList is a complexType.
///
/// @note class tt__SystemLogUriList operations:
/// - tt__SystemLogUriList* soap_new_tt__SystemLogUriList(soap*) allocate and default initialize
/// - tt__SystemLogUriList* soap_new_tt__SystemLogUriList(soap*, int num) allocate and default initialize an array
/// - tt__SystemLogUriList* soap_new_req_tt__SystemLogUriList(soap*, ...) allocate, set required members
/// - tt__SystemLogUriList* soap_new_set_tt__SystemLogUriList(soap*, ...) allocate, set all public members
/// - tt__SystemLogUriList::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) deserialize from a stream
/// - int soap_write_tt__SystemLogUriList(soap*, tt__SystemLogUriList*) serialize to a stream
/// - tt__SystemLogUriList* tt__SystemLogUriList::soap_dup(soap*) returns deep copy of tt__SystemLogUriList, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemLogUriList::soap_del() deep deletes tt__SystemLogUriList data members, use only after tt__SystemLogUriList::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemLogUriList::soap_type() returns SOAP_TYPE_tt__SystemLogUriList or derived type identifier
class tt__SystemLogUriList
{ public:
/// Size of array of tt__SystemLogUri* is 0..unbounded.
  $ int                                  __sizeSystemLog                0;
/// Pointer to array tt__SystemLogUri* of size 0..unbounded.
    tt__SystemLogUri*                   *SystemLog                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemLogUri is a complexType.
///
/// @note class tt__SystemLogUri operations:
/// - tt__SystemLogUri* soap_new_tt__SystemLogUri(soap*) allocate and default initialize
/// - tt__SystemLogUri* soap_new_tt__SystemLogUri(soap*, int num) allocate and default initialize an array
/// - tt__SystemLogUri* soap_new_req_tt__SystemLogUri(soap*, ...) allocate, set required members
/// - tt__SystemLogUri* soap_new_set_tt__SystemLogUri(soap*, ...) allocate, set all public members
/// - tt__SystemLogUri::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemLogUri(soap*, tt__SystemLogUri*) deserialize from a stream
/// - int soap_write_tt__SystemLogUri(soap*, tt__SystemLogUri*) serialize to a stream
/// - tt__SystemLogUri* tt__SystemLogUri::soap_dup(soap*) returns deep copy of tt__SystemLogUri, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemLogUri::soap_del() deep deletes tt__SystemLogUri data members, use only after tt__SystemLogUri::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemLogUri::soap_type() returns SOAP_TYPE_tt__SystemLogUri or derived type identifier
class tt__SystemLogUri
{ public:
/// Element "Type" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               Type                           1;	///< Required element.
/// Element "Uri" of type xs:anyURI.
    xsd__anyURI                          Uri                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTime is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   General date time inforamtion returned by the GetSystemDateTime method.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__SystemDateTime operations:
/// - tt__SystemDateTime* soap_new_tt__SystemDateTime(soap*) allocate and default initialize
/// - tt__SystemDateTime* soap_new_tt__SystemDateTime(soap*, int num) allocate and default initialize an array
/// - tt__SystemDateTime* soap_new_req_tt__SystemDateTime(soap*, ...) allocate, set required members
/// - tt__SystemDateTime* soap_new_set_tt__SystemDateTime(soap*, ...) allocate, set all public members
/// - tt__SystemDateTime::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemDateTime(soap*, tt__SystemDateTime*) deserialize from a stream
/// - int soap_write_tt__SystemDateTime(soap*, tt__SystemDateTime*) serialize to a stream
/// - tt__SystemDateTime* tt__SystemDateTime::soap_dup(soap*) returns deep copy of tt__SystemDateTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemDateTime::soap_del() deep deletes tt__SystemDateTime data members, use only after tt__SystemDateTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemDateTime::soap_type() returns SOAP_TYPE_tt__SystemDateTime or derived type identifier
class tt__SystemDateTime
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if the time is set manully or through NTP.
/// </BLOCKQUOTE></PRE>
///
/// Element "DateTimeType" of type "http://www.onvif.org/ver10/schema":SetDateTimeType.
    enum tt__SetDateTimeType             DateTimeType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative indicator whether daylight savings is currently on/off.
/// </BLOCKQUOTE></PRE>
///
/// Element "DaylightSavings" of type xs:boolean.
    bool                                 DaylightSavings                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Timezone information in Posix format.
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeZone" of type "http://www.onvif.org/ver10/schema":TimeZone.
    tt__TimeZone*                        TimeZone                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Current system date and time in UTC format. This field is mandatory since version 2.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "UTCDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        UTCDateTime                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Date and time in local format.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalDateTime" of type "http://www.onvif.org/ver10/schema":DateTime.
    tt__DateTime*                        LocalDateTime                  0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":SystemDateTimeExtension.
    tt__SystemDateTimeExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":SystemDateTimeExtension is a complexType.
///
/// @note class tt__SystemDateTimeExtension operations:
/// - tt__SystemDateTimeExtension* soap_new_tt__SystemDateTimeExtension(soap*) allocate and default initialize
/// - tt__SystemDateTimeExtension* soap_new_tt__SystemDateTimeExtension(soap*, int num) allocate and default initialize an array
/// - tt__SystemDateTimeExtension* soap_new_req_tt__SystemDateTimeExtension(soap*, ...) allocate, set required members
/// - tt__SystemDateTimeExtension* soap_new_set_tt__SystemDateTimeExtension(soap*, ...) allocate, set all public members
/// - tt__SystemDateTimeExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) deserialize from a stream
/// - int soap_write_tt__SystemDateTimeExtension(soap*, tt__SystemDateTimeExtension*) serialize to a stream
/// - tt__SystemDateTimeExtension* tt__SystemDateTimeExtension::soap_dup(soap*) returns deep copy of tt__SystemDateTimeExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__SystemDateTimeExtension::soap_del() deep deletes tt__SystemDateTimeExtension data members, use only after tt__SystemDateTimeExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__SystemDateTimeExtension::soap_type() returns SOAP_TYPE_tt__SystemDateTimeExtension or derived type identifier
class tt__SystemDateTimeExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DateTime is a complexType.
///
/// @note class tt__DateTime operations:
/// - tt__DateTime* soap_new_tt__DateTime(soap*) allocate and default initialize
/// - tt__DateTime* soap_new_tt__DateTime(soap*, int num) allocate and default initialize an array
/// - tt__DateTime* soap_new_req_tt__DateTime(soap*, ...) allocate, set required members
/// - tt__DateTime* soap_new_set_tt__DateTime(soap*, ...) allocate, set all public members
/// - tt__DateTime::soap_default(soap*) default initialize members
/// - int soap_read_tt__DateTime(soap*, tt__DateTime*) deserialize from a stream
/// - int soap_write_tt__DateTime(soap*, tt__DateTime*) serialize to a stream
/// - tt__DateTime* tt__DateTime::soap_dup(soap*) returns deep copy of tt__DateTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DateTime::soap_del() deep deletes tt__DateTime data members, use only after tt__DateTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DateTime::soap_type() returns SOAP_TYPE_tt__DateTime or derived type identifier
class tt__DateTime
{ public:
/// Element "Time" of type "http://www.onvif.org/ver10/schema":Time.
    tt__Time*                            Time                           1;	///< Required element.
/// Element "Date" of type "http://www.onvif.org/ver10/schema":Date.
    tt__Date*                            Date                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Date is a complexType.
///
/// @note class tt__Date operations:
/// - tt__Date* soap_new_tt__Date(soap*) allocate and default initialize
/// - tt__Date* soap_new_tt__Date(soap*, int num) allocate and default initialize an array
/// - tt__Date* soap_new_req_tt__Date(soap*, ...) allocate, set required members
/// - tt__Date* soap_new_set_tt__Date(soap*, ...) allocate, set all public members
/// - tt__Date::soap_default(soap*) default initialize members
/// - int soap_read_tt__Date(soap*, tt__Date*) deserialize from a stream
/// - int soap_write_tt__Date(soap*, tt__Date*) serialize to a stream
/// - tt__Date* tt__Date::soap_dup(soap*) returns deep copy of tt__Date, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Date::soap_del() deep deletes tt__Date data members, use only after tt__Date::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Date::soap_type() returns SOAP_TYPE_tt__Date or derived type identifier
class tt__Date
{ public:
/// Element "Year" of type xs:int.
    int                                  Year                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 12.
/// </BLOCKQUOTE></PRE>
///
/// Element "Month" of type xs:int.
    int                                  Month                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 1 to 31.
/// </BLOCKQUOTE></PRE>
///
/// Element "Day" of type xs:int.
    int                                  Day                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Time is a complexType.
///
/// @note class tt__Time operations:
/// - tt__Time* soap_new_tt__Time(soap*) allocate and default initialize
/// - tt__Time* soap_new_tt__Time(soap*, int num) allocate and default initialize an array
/// - tt__Time* soap_new_req_tt__Time(soap*, ...) allocate, set required members
/// - tt__Time* soap_new_set_tt__Time(soap*, ...) allocate, set all public members
/// - tt__Time::soap_default(soap*) default initialize members
/// - int soap_read_tt__Time(soap*, tt__Time*) deserialize from a stream
/// - int soap_write_tt__Time(soap*, tt__Time*) serialize to a stream
/// - tt__Time* tt__Time::soap_dup(soap*) returns deep copy of tt__Time, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Time::soap_del() deep deletes tt__Time data members, use only after tt__Time::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Time::soap_type() returns SOAP_TYPE_tt__Time or derived type identifier
class tt__Time
{ public:
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 23.
/// </BLOCKQUOTE></PRE>
///
/// Element "Hour" of type xs:int.
    int                                  Hour                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 59.
/// </BLOCKQUOTE></PRE>
///
/// Element "Minute" of type xs:int.
    int                                  Minute                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range is 0 to 61 (typically 59).
/// </BLOCKQUOTE></PRE>
///
/// Element "Second" of type xs:int.
    int                                  Second                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TimeZone is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The TZ format is specified by POSIX, please refer to POSIX 1003.1 section 8.3<br/>
///   Example: Europe, Paris TZ=CET-1CEST,M3.5.0/2,M10.5.0/3<br/>
///   CET = designation for standard time when daylight saving is not in force<br/>
///   -1 = offset in hours = negative so 1 hour east of Greenwich meridian<br/>
///   CEST = designation when daylight saving is in force ("Central European Summer Time")<br/>
///   , = no offset number between code and comma, so default to one hour ahead for daylight saving<br/>
///   M3.5.0 = when daylight saving starts = the last Sunday in March (the "5th" week means the last in the month)<br/>
///   /2, = the local time when the switch occurs = 2 a.m. in this case<br/>
///   M10.5.0 = when daylight saving ends = the last Sunday in October.<br/>
///   /3, = the local time when the switch occurs = 3 a.m. in this case<br/>
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__TimeZone operations:
/// - tt__TimeZone* soap_new_tt__TimeZone(soap*) allocate and default initialize
/// - tt__TimeZone* soap_new_tt__TimeZone(soap*, int num) allocate and default initialize an array
/// - tt__TimeZone* soap_new_req_tt__TimeZone(soap*, ...) allocate, set required members
/// - tt__TimeZone* soap_new_set_tt__TimeZone(soap*, ...) allocate, set all public members
/// - tt__TimeZone::soap_default(soap*) default initialize members
/// - int soap_read_tt__TimeZone(soap*, tt__TimeZone*) deserialize from a stream
/// - int soap_write_tt__TimeZone(soap*, tt__TimeZone*) serialize to a stream
/// - tt__TimeZone* tt__TimeZone::soap_dup(soap*) returns deep copy of tt__TimeZone, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__TimeZone::soap_del() deep deletes tt__TimeZone data members, use only after tt__TimeZone::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__TimeZone::soap_type() returns SOAP_TYPE_tt__TimeZone or derived type identifier
class tt__TimeZone
{ public:
/// <PRE><BLOCKQUOTE>
///   Posix timezone string.
/// </BLOCKQUOTE></PRE>
///
/// Element "TZ" of type xs:token.
    xsd__token                           TZ                             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RemoteUser is a complexType.
///
/// @note class tt__RemoteUser operations:
/// - tt__RemoteUser* soap_new_tt__RemoteUser(soap*) allocate and default initialize
/// - tt__RemoteUser* soap_new_tt__RemoteUser(soap*, int num) allocate and default initialize an array
/// - tt__RemoteUser* soap_new_req_tt__RemoteUser(soap*, ...) allocate, set required members
/// - tt__RemoteUser* soap_new_set_tt__RemoteUser(soap*, ...) allocate, set all public members
/// - tt__RemoteUser::soap_default(soap*) default initialize members
/// - int soap_read_tt__RemoteUser(soap*, tt__RemoteUser*) deserialize from a stream
/// - int soap_write_tt__RemoteUser(soap*, tt__RemoteUser*) serialize to a stream
/// - tt__RemoteUser* tt__RemoteUser::soap_dup(soap*) returns deep copy of tt__RemoteUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RemoteUser::soap_del() deep deletes tt__RemoteUser data members, use only after tt__RemoteUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RemoteUser::soap_type() returns SOAP_TYPE_tt__RemoteUser or derived type identifier
class tt__RemoteUser
{ public:
/// Element "Username" of type xs:string.
    char*                                Username                       1;	///< Required element.
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "UseDerivedPassword" of type xs:boolean.
    bool                                 UseDerivedPassword             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":User is a complexType.
///
/// @note class tt__User operations:
/// - tt__User* soap_new_tt__User(soap*) allocate and default initialize
/// - tt__User* soap_new_tt__User(soap*, int num) allocate and default initialize an array
/// - tt__User* soap_new_req_tt__User(soap*, ...) allocate, set required members
/// - tt__User* soap_new_set_tt__User(soap*, ...) allocate, set all public members
/// - tt__User::soap_default(soap*) default initialize members
/// - int soap_read_tt__User(soap*, tt__User*) deserialize from a stream
/// - int soap_write_tt__User(soap*, tt__User*) serialize to a stream
/// - tt__User* tt__User::soap_dup(soap*) returns deep copy of tt__User, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__User::soap_del() deep deletes tt__User data members, use only after tt__User::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__User::soap_type() returns SOAP_TYPE_tt__User or derived type identifier
class tt__User
{ public:
/// <PRE><BLOCKQUOTE>
///   Username string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Username" of type xs:string.
    char*                                Username                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Password string.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   User level string.
/// </BLOCKQUOTE></PRE>
///
/// Element "UserLevel" of type "http://www.onvif.org/ver10/schema":UserLevel.
    enum tt__UserLevel                   UserLevel                      1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":UserExtension.
    tt__UserExtension*                   Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":UserExtension is a complexType.
///
/// @note class tt__UserExtension operations:
/// - tt__UserExtension* soap_new_tt__UserExtension(soap*) allocate and default initialize
/// - tt__UserExtension* soap_new_tt__UserExtension(soap*, int num) allocate and default initialize an array
/// - tt__UserExtension* soap_new_req_tt__UserExtension(soap*, ...) allocate, set required members
/// - tt__UserExtension* soap_new_set_tt__UserExtension(soap*, ...) allocate, set all public members
/// - tt__UserExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__UserExtension(soap*, tt__UserExtension*) deserialize from a stream
/// - int soap_write_tt__UserExtension(soap*, tt__UserExtension*) serialize to a stream
/// - tt__UserExtension* tt__UserExtension::soap_dup(soap*) returns deep copy of tt__UserExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__UserExtension::soap_del() deep deletes tt__UserExtension data members, use only after tt__UserExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__UserExtension::soap_type() returns SOAP_TYPE_tt__UserExtension or derived type identifier
class tt__UserExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateGenerationParameters is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CertificateGenerationParametersExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":Certificate is a complexType.
///
/// @note class tt__Certificate operations:
/// - tt__Certificate* soap_new_tt__Certificate(soap*) allocate and default initialize
/// - tt__Certificate* soap_new_tt__Certificate(soap*, int num) allocate and default initialize an array
/// - tt__Certificate* soap_new_req_tt__Certificate(soap*, ...) allocate, set required members
/// - tt__Certificate* soap_new_set_tt__Certificate(soap*, ...) allocate, set all public members
/// - tt__Certificate::soap_default(soap*) default initialize members
/// - int soap_read_tt__Certificate(soap*, tt__Certificate*) deserialize from a stream
/// - int soap_write_tt__Certificate(soap*, tt__Certificate*) serialize to a stream
/// - tt__Certificate* tt__Certificate::soap_dup(soap*) returns deep copy of tt__Certificate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Certificate::soap_del() deep deletes tt__Certificate data members, use only after tt__Certificate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Certificate::soap_type() returns SOAP_TYPE_tt__Certificate or derived type identifier
class tt__Certificate
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateStatus is a complexType.
///
/// @note class tt__CertificateStatus operations:
/// - tt__CertificateStatus* soap_new_tt__CertificateStatus(soap*) allocate and default initialize
/// - tt__CertificateStatus* soap_new_tt__CertificateStatus(soap*, int num) allocate and default initialize an array
/// - tt__CertificateStatus* soap_new_req_tt__CertificateStatus(soap*, ...) allocate, set required members
/// - tt__CertificateStatus* soap_new_set_tt__CertificateStatus(soap*, ...) allocate, set all public members
/// - tt__CertificateStatus::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateStatus(soap*, tt__CertificateStatus*) deserialize from a stream
/// - int soap_write_tt__CertificateStatus(soap*, tt__CertificateStatus*) serialize to a stream
/// - tt__CertificateStatus* tt__CertificateStatus::soap_dup(soap*) returns deep copy of tt__CertificateStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateStatus::soap_del() deep deletes tt__CertificateStatus data members, use only after tt__CertificateStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateStatus::soap_type() returns SOAP_TYPE_tt__CertificateStatus or derived type identifier
class tt__CertificateStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a certificate is used in a HTTPS configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type xs:boolean.
    bool                                 Status                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateWithPrivateKey is a complexType.
///
/// @note class tt__CertificateWithPrivateKey operations:
/// - tt__CertificateWithPrivateKey* soap_new_tt__CertificateWithPrivateKey(soap*) allocate and default initialize
/// - tt__CertificateWithPrivateKey* soap_new_tt__CertificateWithPrivateKey(soap*, int num) allocate and default initialize an array
/// - tt__CertificateWithPrivateKey* soap_new_req_tt__CertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - tt__CertificateWithPrivateKey* soap_new_set_tt__CertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - tt__CertificateWithPrivateKey::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write_tt__CertificateWithPrivateKey(soap*, tt__CertificateWithPrivateKey*) serialize to a stream
/// - tt__CertificateWithPrivateKey* tt__CertificateWithPrivateKey::soap_dup(soap*) returns deep copy of tt__CertificateWithPrivateKey, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateWithPrivateKey::soap_del() deep deletes tt__CertificateWithPrivateKey data members, use only after tt__CertificateWithPrivateKey::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateWithPrivateKey::soap_type() returns SOAP_TYPE_tt__CertificateWithPrivateKey or derived type identifier
class tt__CertificateWithPrivateKey
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// Element "Certificate" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Certificate                    1;	///< Required element.
/// Element "PrivateKey" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PrivateKey                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformation is a complexType.
///
/// @note class tt__CertificateInformation operations:
/// - tt__CertificateInformation* soap_new_tt__CertificateInformation(soap*) allocate and default initialize
/// - tt__CertificateInformation* soap_new_tt__CertificateInformation(soap*, int num) allocate and default initialize an array
/// - tt__CertificateInformation* soap_new_req_tt__CertificateInformation(soap*, ...) allocate, set required members
/// - tt__CertificateInformation* soap_new_set_tt__CertificateInformation(soap*, ...) allocate, set all public members
/// - tt__CertificateInformation::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateInformation(soap*, tt__CertificateInformation*) deserialize from a stream
/// - int soap_write_tt__CertificateInformation(soap*, tt__CertificateInformation*) serialize to a stream
/// - tt__CertificateInformation* tt__CertificateInformation::soap_dup(soap*) returns deep copy of tt__CertificateInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateInformation::soap_del() deep deletes tt__CertificateInformation data members, use only after tt__CertificateInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateInformation::soap_type() returns SOAP_TYPE_tt__CertificateInformation or derived type identifier
class tt__CertificateInformation
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Element "IssuerDN" of type xs:string.
    char*                                IssuerDN                       0;	///< Optional element.
/// Element "SubjectDN" of type xs:string.
    char*                                SubjectDN                      0;	///< Optional element.
/// Element "KeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                KeyUsage                       0;	///< Optional element.
/// Element "ExtendedKeyUsage" of type "http://www.onvif.org/ver10/schema":CertificateUsage.
    tt__CertificateUsage*                ExtendedKeyUsage               0;	///< Optional element.
/// Element "KeyLength" of type xs:int.
    int*                                 KeyLength                      0;	///< Optional element.
/// Element "Version" of type xs:string.
    char*                                Version                        0;	///< Optional element.
/// Element "SerialNum" of type xs:string.
    char*                                SerialNum                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Validity Range is from "NotBefore" to "NotAfter"; the corresponding DateTimeRange is from "From" to "Until"
/// </BLOCKQUOTE></PRE>
///
/// Element "SignatureAlgorithm" of type xs:string.
    char*                                SignatureAlgorithm             0;	///< Optional element.
/// Element "Validity" of type "http://www.onvif.org/ver10/schema":DateTimeRange.
    tt__DateTimeRange*                   Validity                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":CertificateInformationExtension.
    tt__CertificateInformationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateInformationExtension is a complexType.
///
/// @note class tt__CertificateInformationExtension operations:
/// - tt__CertificateInformationExtension* soap_new_tt__CertificateInformationExtension(soap*) allocate and default initialize
/// - tt__CertificateInformationExtension* soap_new_tt__CertificateInformationExtension(soap*, int num) allocate and default initialize an array
/// - tt__CertificateInformationExtension* soap_new_req_tt__CertificateInformationExtension(soap*, ...) allocate, set required members
/// - tt__CertificateInformationExtension* soap_new_set_tt__CertificateInformationExtension(soap*, ...) allocate, set all public members
/// - tt__CertificateInformationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) deserialize from a stream
/// - int soap_write_tt__CertificateInformationExtension(soap*, tt__CertificateInformationExtension*) serialize to a stream
/// - tt__CertificateInformationExtension* tt__CertificateInformationExtension::soap_dup(soap*) returns deep copy of tt__CertificateInformationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateInformationExtension::soap_del() deep deletes tt__CertificateInformationExtension data members, use only after tt__CertificateInformationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateInformationExtension::soap_type() returns SOAP_TYPE_tt__CertificateInformationExtension or derived type identifier
class tt__CertificateInformationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfiguration is a complexType.
///
/// @note class tt__Dot1XConfiguration operations:
/// - tt__Dot1XConfiguration* soap_new_tt__Dot1XConfiguration(soap*) allocate and default initialize
/// - tt__Dot1XConfiguration* soap_new_tt__Dot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__Dot1XConfiguration* soap_new_req_tt__Dot1XConfiguration(soap*, ...) allocate, set required members
/// - tt__Dot1XConfiguration* soap_new_set_tt__Dot1XConfiguration(soap*, ...) allocate, set all public members
/// - tt__Dot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) deserialize from a stream
/// - int soap_write_tt__Dot1XConfiguration(soap*, tt__Dot1XConfiguration*) serialize to a stream
/// - tt__Dot1XConfiguration* tt__Dot1XConfiguration::soap_dup(soap*) returns deep copy of tt__Dot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot1XConfiguration::soap_del() deep deletes tt__Dot1XConfiguration data members, use only after tt__Dot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot1XConfiguration::soap_type() returns SOAP_TYPE_tt__Dot1XConfiguration or derived type identifier
class tt__Dot1XConfiguration
{ public:
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Element "Identity" of type xs:string.
    char*                                Identity                       1;	///< Required element.
/// Element "AnonymousID" of type xs:string.
    char*                                AnonymousID                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   EAP Method type as defined in <a href="http://www.iana.org/assignments/eap-numbers/eap-numbers.xhtml">IANA EAP Registry</a>.
/// </BLOCKQUOTE></PRE>
///
/// Element "EAPMethod" of type xs:int.
    int                                  EAPMethod                      1;	///< Required element.
/// Size of array of xsd__token is 0..unbounded.
  $ int                                  __sizeCACertificateID          0;
/// Pointer to array xsd__token of size 0..unbounded.
    xsd__token                          *CACertificateID                0;	///< Multiple elements.
/// Element "EAPMethodConfiguration" of type "http://www.onvif.org/ver10/schema":EAPMethodConfiguration.
    tt__EAPMethodConfiguration*          EAPMethodConfiguration         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension.
    tt__Dot1XConfigurationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Dot1XConfigurationExtension is a complexType.
///
/// @note class tt__Dot1XConfigurationExtension operations:
/// - tt__Dot1XConfigurationExtension* soap_new_tt__Dot1XConfigurationExtension(soap*) allocate and default initialize
/// - tt__Dot1XConfigurationExtension* soap_new_tt__Dot1XConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__Dot1XConfigurationExtension* soap_new_req_tt__Dot1XConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__Dot1XConfigurationExtension* soap_new_set_tt__Dot1XConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__Dot1XConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__Dot1XConfigurationExtension(soap*, tt__Dot1XConfigurationExtension*) serialize to a stream
/// - tt__Dot1XConfigurationExtension* tt__Dot1XConfigurationExtension::soap_dup(soap*) returns deep copy of tt__Dot1XConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Dot1XConfigurationExtension::soap_del() deep deletes tt__Dot1XConfigurationExtension data members, use only after tt__Dot1XConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Dot1XConfigurationExtension::soap_type() returns SOAP_TYPE_tt__Dot1XConfigurationExtension or derived type identifier
class tt__Dot1XConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EAPMethodConfiguration is a complexType.
///
/// @note class tt__EAPMethodConfiguration operations:
/// - tt__EAPMethodConfiguration* soap_new_tt__EAPMethodConfiguration(soap*) allocate and default initialize
/// - tt__EAPMethodConfiguration* soap_new_tt__EAPMethodConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__EAPMethodConfiguration* soap_new_req_tt__EAPMethodConfiguration(soap*, ...) allocate, set required members
/// - tt__EAPMethodConfiguration* soap_new_set_tt__EAPMethodConfiguration(soap*, ...) allocate, set all public members
/// - tt__EAPMethodConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) deserialize from a stream
/// - int soap_write_tt__EAPMethodConfiguration(soap*, tt__EAPMethodConfiguration*) serialize to a stream
/// - tt__EAPMethodConfiguration* tt__EAPMethodConfiguration::soap_dup(soap*) returns deep copy of tt__EAPMethodConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EAPMethodConfiguration::soap_del() deep deletes tt__EAPMethodConfiguration data members, use only after tt__EAPMethodConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EAPMethodConfiguration::soap_type() returns SOAP_TYPE_tt__EAPMethodConfiguration or derived type identifier
class tt__EAPMethodConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Confgiuration information for TLS Method.
/// </BLOCKQUOTE></PRE>
///
/// Element "TLSConfiguration" of type "http://www.onvif.org/ver10/schema":TLSConfiguration.
    tt__TLSConfiguration*                TLSConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Password for those EAP Methods that require a password. The password shall never be returned on a get method.
/// </BLOCKQUOTE></PRE>
///
/// Element "Password" of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EapMethodExtension.
    tt__EapMethodExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EapMethodExtension is a complexType.
///
/// @note class tt__EapMethodExtension operations:
/// - tt__EapMethodExtension* soap_new_tt__EapMethodExtension(soap*) allocate and default initialize
/// - tt__EapMethodExtension* soap_new_tt__EapMethodExtension(soap*, int num) allocate and default initialize an array
/// - tt__EapMethodExtension* soap_new_req_tt__EapMethodExtension(soap*, ...) allocate, set required members
/// - tt__EapMethodExtension* soap_new_set_tt__EapMethodExtension(soap*, ...) allocate, set all public members
/// - tt__EapMethodExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) deserialize from a stream
/// - int soap_write_tt__EapMethodExtension(soap*, tt__EapMethodExtension*) serialize to a stream
/// - tt__EapMethodExtension* tt__EapMethodExtension::soap_dup(soap*) returns deep copy of tt__EapMethodExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EapMethodExtension::soap_del() deep deletes tt__EapMethodExtension data members, use only after tt__EapMethodExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EapMethodExtension::soap_type() returns SOAP_TYPE_tt__EapMethodExtension or derived type identifier
class tt__EapMethodExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":TLSConfiguration is a complexType.
///
/// @note class tt__TLSConfiguration operations:
/// - tt__TLSConfiguration* soap_new_tt__TLSConfiguration(soap*) allocate and default initialize
/// - tt__TLSConfiguration* soap_new_tt__TLSConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__TLSConfiguration* soap_new_req_tt__TLSConfiguration(soap*, ...) allocate, set required members
/// - tt__TLSConfiguration* soap_new_set_tt__TLSConfiguration(soap*, ...) allocate, set all public members
/// - tt__TLSConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) deserialize from a stream
/// - int soap_write_tt__TLSConfiguration(soap*, tt__TLSConfiguration*) serialize to a stream
/// - tt__TLSConfiguration* tt__TLSConfiguration::soap_dup(soap*) returns deep copy of tt__TLSConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__TLSConfiguration::soap_del() deep deletes tt__TLSConfiguration data members, use only after tt__TLSConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__TLSConfiguration::soap_type() returns SOAP_TYPE_tt__TLSConfiguration or derived type identifier
class tt__TLSConfiguration
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":GenericEapPwdConfigurationExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":RelayOutputSettings is a complexType.
///
/// @note class tt__RelayOutputSettings operations:
/// - tt__RelayOutputSettings* soap_new_tt__RelayOutputSettings(soap*) allocate and default initialize
/// - tt__RelayOutputSettings* soap_new_tt__RelayOutputSettings(soap*, int num) allocate and default initialize an array
/// - tt__RelayOutputSettings* soap_new_req_tt__RelayOutputSettings(soap*, ...) allocate, set required members
/// - tt__RelayOutputSettings* soap_new_set_tt__RelayOutputSettings(soap*, ...) allocate, set all public members
/// - tt__RelayOutputSettings::soap_default(soap*) default initialize members
/// - int soap_read_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) deserialize from a stream
/// - int soap_write_tt__RelayOutputSettings(soap*, tt__RelayOutputSettings*) serialize to a stream
/// - tt__RelayOutputSettings* tt__RelayOutputSettings::soap_dup(soap*) returns deep copy of tt__RelayOutputSettings, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RelayOutputSettings::soap_del() deep deletes tt__RelayOutputSettings data members, use only after tt__RelayOutputSettings::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RelayOutputSettings::soap_type() returns SOAP_TYPE_tt__RelayOutputSettings or derived type identifier
class tt__RelayOutputSettings
{ public:
/// <PRE><BLOCKQUOTE>
///   'Bistable' or 'Monostable'
///   <ul>
///   <li>Bistable After setting the state, the relay remains in this state.</li>
///   <li>Monostable After setting the state, the relay returns to its idle state after the specified time.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RelayMode.
    enum tt__RelayMode                   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Time after which the relay returns to its idle state if it is in monostable mode. If the Mode field is set to bistable mode the value of the parameter can be ignored.
/// </BLOCKQUOTE></PRE>
///
/// Element "DelayTime" of type xs:duration.
    xsd__duration                        DelayTime                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   'open' or 'closed'
///   <ul>
///   <li>'open' means that the relay is open when the relay state is set to 'inactive' through the trigger command and closed when the state is set to 'active' through the same command.</li>
///   <li>'closed' means that the relay is closed when the relay state is set to 'inactive' through the trigger command and open when the state is set to 'active' through the same command.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "IdleState" of type "http://www.onvif.org/ver10/schema":RelayIdleState.
    enum tt__RelayIdleState              IdleState                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension is a complexType.
///
/// @note class tt__PTZNodeExtension operations:
/// - tt__PTZNodeExtension* soap_new_tt__PTZNodeExtension(soap*) allocate and default initialize
/// - tt__PTZNodeExtension* soap_new_tt__PTZNodeExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZNodeExtension* soap_new_req_tt__PTZNodeExtension(soap*, ...) allocate, set required members
/// - tt__PTZNodeExtension* soap_new_set_tt__PTZNodeExtension(soap*, ...) allocate, set all public members
/// - tt__PTZNodeExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) deserialize from a stream
/// - int soap_write_tt__PTZNodeExtension(soap*, tt__PTZNodeExtension*) serialize to a stream
/// - tt__PTZNodeExtension* tt__PTZNodeExtension::soap_dup(soap*) returns deep copy of tt__PTZNodeExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZNodeExtension::soap_del() deep deletes tt__PTZNodeExtension data members, use only after tt__PTZNodeExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZNodeExtension::soap_type() returns SOAP_TYPE_tt__PTZNodeExtension or derived type identifier
class tt__PTZNodeExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Detail of supported Preset Tour feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedPresetTour" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupported.
    tt__PTZPresetTourSupported*          SupportedPresetTour            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZNodeExtension2.
    tt__PTZNodeExtension2*               Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZNodeExtension2 is a complexType.
///
/// @note class tt__PTZNodeExtension2 operations:
/// - tt__PTZNodeExtension2* soap_new_tt__PTZNodeExtension2(soap*) allocate and default initialize
/// - tt__PTZNodeExtension2* soap_new_tt__PTZNodeExtension2(soap*, int num) allocate and default initialize an array
/// - tt__PTZNodeExtension2* soap_new_req_tt__PTZNodeExtension2(soap*, ...) allocate, set required members
/// - tt__PTZNodeExtension2* soap_new_set_tt__PTZNodeExtension2(soap*, ...) allocate, set all public members
/// - tt__PTZNodeExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) deserialize from a stream
/// - int soap_write_tt__PTZNodeExtension2(soap*, tt__PTZNodeExtension2*) serialize to a stream
/// - tt__PTZNodeExtension2* tt__PTZNodeExtension2::soap_dup(soap*) returns deep copy of tt__PTZNodeExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZNodeExtension2::soap_del() deep deletes tt__PTZNodeExtension2 data members, use only after tt__PTZNodeExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZNodeExtension2::soap_type() returns SOAP_TYPE_tt__PTZNodeExtension2 or derived type identifier
class tt__PTZNodeExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupported is a complexType.
///
/// @note class tt__PTZPresetTourSupported operations:
/// - tt__PTZPresetTourSupported* soap_new_tt__PTZPresetTourSupported(soap*) allocate and default initialize
/// - tt__PTZPresetTourSupported* soap_new_tt__PTZPresetTourSupported(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSupported* soap_new_req_tt__PTZPresetTourSupported(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSupported* soap_new_set_tt__PTZPresetTourSupported(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSupported::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSupported(soap*, tt__PTZPresetTourSupported*) serialize to a stream
/// - tt__PTZPresetTourSupported* tt__PTZPresetTourSupported::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSupported, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSupported::soap_del() deep deletes tt__PTZPresetTourSupported data members, use only after tt__PTZPresetTourSupported::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSupported::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSupported or derived type identifier
class tt__PTZPresetTourSupported
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates number of preset tours that can be created. Required preset tour operations shall be available for this PTZ Node if one or more preset tour is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfPresetTours" of type xs:int.
    int                                  MaximumNumberOfPresetTours     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates which preset tour operations are available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__PTZPresetTourOperation is 0..unbounded.
  $ int                                  __sizePTZPresetTourOperation   0;
/// Pointer to array enum tt__PTZPresetTourOperation of size 0..unbounded.
    enum tt__PTZPresetTourOperation     *PTZPresetTourOperation         0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension.
    tt__PTZPresetTourSupportedExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSupportedExtension is a complexType.
///
/// @note class tt__PTZPresetTourSupportedExtension operations:
/// - tt__PTZPresetTourSupportedExtension* soap_new_tt__PTZPresetTourSupportedExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourSupportedExtension* soap_new_tt__PTZPresetTourSupportedExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSupportedExtension* soap_new_req_tt__PTZPresetTourSupportedExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSupportedExtension* soap_new_set_tt__PTZPresetTourSupportedExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSupportedExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSupportedExtension(soap*, tt__PTZPresetTourSupportedExtension*) serialize to a stream
/// - tt__PTZPresetTourSupportedExtension* tt__PTZPresetTourSupportedExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSupportedExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSupportedExtension::soap_del() deep deletes tt__PTZPresetTourSupportedExtension data members, use only after tt__PTZPresetTourSupportedExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSupportedExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSupportedExtension or derived type identifier
class tt__PTZPresetTourSupportedExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension is a complexType.
///
/// @note class tt__PTZConfigurationExtension operations:
/// - tt__PTZConfigurationExtension* soap_new_tt__PTZConfigurationExtension(soap*) allocate and default initialize
/// - tt__PTZConfigurationExtension* soap_new_tt__PTZConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfigurationExtension* soap_new_req_tt__PTZConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__PTZConfigurationExtension* soap_new_set_tt__PTZConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__PTZConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationExtension(soap*, tt__PTZConfigurationExtension*) serialize to a stream
/// - tt__PTZConfigurationExtension* tt__PTZConfigurationExtension::soap_dup(soap*) returns deep copy of tt__PTZConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfigurationExtension::soap_del() deep deletes tt__PTZConfigurationExtension data members, use only after tt__PTZConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfigurationExtension::soap_type() returns SOAP_TYPE_tt__PTZConfigurationExtension or derived type identifier
class tt__PTZConfigurationExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure PT Control Direction related features.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTControlDirection" of type "http://www.onvif.org/ver10/schema":PTControlDirection.
    tt__PTControlDirection*              PTControlDirection             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2.
    tt__PTZConfigurationExtension2*      Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationExtension2 is a complexType.
///
/// @note class tt__PTZConfigurationExtension2 operations:
/// - tt__PTZConfigurationExtension2* soap_new_tt__PTZConfigurationExtension2(soap*) allocate and default initialize
/// - tt__PTZConfigurationExtension2* soap_new_tt__PTZConfigurationExtension2(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfigurationExtension2* soap_new_req_tt__PTZConfigurationExtension2(soap*, ...) allocate, set required members
/// - tt__PTZConfigurationExtension2* soap_new_set_tt__PTZConfigurationExtension2(soap*, ...) allocate, set all public members
/// - tt__PTZConfigurationExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationExtension2(soap*, tt__PTZConfigurationExtension2*) serialize to a stream
/// - tt__PTZConfigurationExtension2* tt__PTZConfigurationExtension2::soap_dup(soap*) returns deep copy of tt__PTZConfigurationExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfigurationExtension2::soap_del() deep deletes tt__PTZConfigurationExtension2 data members, use only after tt__PTZConfigurationExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfigurationExtension2::soap_type() returns SOAP_TYPE_tt__PTZConfigurationExtension2 or derived type identifier
class tt__PTZConfigurationExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirection is a complexType.
///
/// @note class tt__PTControlDirection operations:
/// - tt__PTControlDirection* soap_new_tt__PTControlDirection(soap*) allocate and default initialize
/// - tt__PTControlDirection* soap_new_tt__PTControlDirection(soap*, int num) allocate and default initialize an array
/// - tt__PTControlDirection* soap_new_req_tt__PTControlDirection(soap*, ...) allocate, set required members
/// - tt__PTControlDirection* soap_new_set_tt__PTControlDirection(soap*, ...) allocate, set all public members
/// - tt__PTControlDirection::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTControlDirection(soap*, tt__PTControlDirection*) deserialize from a stream
/// - int soap_write_tt__PTControlDirection(soap*, tt__PTControlDirection*) serialize to a stream
/// - tt__PTControlDirection* tt__PTControlDirection::soap_dup(soap*) returns deep copy of tt__PTControlDirection, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTControlDirection::soap_del() deep deletes tt__PTControlDirection data members, use only after tt__PTControlDirection::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTControlDirection::soap_type() returns SOAP_TYPE_tt__PTControlDirection or derived type identifier
class tt__PTControlDirection
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for E-Flip.
/// </BLOCKQUOTE></PRE>
///
/// Element "EFlip" of type "http://www.onvif.org/ver10/schema":EFlip.
    tt__EFlip*                           EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure related parameters for reversing of PT Control Direction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type "http://www.onvif.org/ver10/schema":Reverse.
    tt__Reverse*                         Reverse                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTControlDirectionExtension.
    tt__PTControlDirectionExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionExtension is a complexType.
///
/// @note class tt__PTControlDirectionExtension operations:
/// - tt__PTControlDirectionExtension* soap_new_tt__PTControlDirectionExtension(soap*) allocate and default initialize
/// - tt__PTControlDirectionExtension* soap_new_tt__PTControlDirectionExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTControlDirectionExtension* soap_new_req_tt__PTControlDirectionExtension(soap*, ...) allocate, set required members
/// - tt__PTControlDirectionExtension* soap_new_set_tt__PTControlDirectionExtension(soap*, ...) allocate, set all public members
/// - tt__PTControlDirectionExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionExtension(soap*, tt__PTControlDirectionExtension*) serialize to a stream
/// - tt__PTControlDirectionExtension* tt__PTControlDirectionExtension::soap_dup(soap*) returns deep copy of tt__PTControlDirectionExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTControlDirectionExtension::soap_del() deep deletes tt__PTControlDirectionExtension data members, use only after tt__PTControlDirectionExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTControlDirectionExtension::soap_type() returns SOAP_TYPE_tt__PTControlDirectionExtension or derived type identifier
class tt__PTControlDirectionExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlip is a complexType.
///
/// @note class tt__EFlip operations:
/// - tt__EFlip* soap_new_tt__EFlip(soap*) allocate and default initialize
/// - tt__EFlip* soap_new_tt__EFlip(soap*, int num) allocate and default initialize an array
/// - tt__EFlip* soap_new_req_tt__EFlip(soap*, ...) allocate, set required members
/// - tt__EFlip* soap_new_set_tt__EFlip(soap*, ...) allocate, set all public members
/// - tt__EFlip::soap_default(soap*) default initialize members
/// - int soap_read_tt__EFlip(soap*, tt__EFlip*) deserialize from a stream
/// - int soap_write_tt__EFlip(soap*, tt__EFlip*) serialize to a stream
/// - tt__EFlip* tt__EFlip::soap_dup(soap*) returns deep copy of tt__EFlip, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EFlip::soap_del() deep deletes tt__EFlip data members, use only after tt__EFlip::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EFlip::soap_type() returns SOAP_TYPE_tt__EFlip or derived type identifier
class tt__EFlip
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable E-Flip feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":EFlipMode.
    enum tt__EFlipMode                   Mode                           1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Reverse is a complexType.
///
/// @note class tt__Reverse operations:
/// - tt__Reverse* soap_new_tt__Reverse(soap*) allocate and default initialize
/// - tt__Reverse* soap_new_tt__Reverse(soap*, int num) allocate and default initialize an array
/// - tt__Reverse* soap_new_req_tt__Reverse(soap*, ...) allocate, set required members
/// - tt__Reverse* soap_new_set_tt__Reverse(soap*, ...) allocate, set all public members
/// - tt__Reverse::soap_default(soap*) default initialize members
/// - int soap_read_tt__Reverse(soap*, tt__Reverse*) deserialize from a stream
/// - int soap_write_tt__Reverse(soap*, tt__Reverse*) serialize to a stream
/// - tt__Reverse* tt__Reverse::soap_dup(soap*) returns deep copy of tt__Reverse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Reverse::soap_del() deep deletes tt__Reverse data members, use only after tt__Reverse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Reverse::soap_type() returns SOAP_TYPE_tt__Reverse or derived type identifier
class tt__Reverse
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Reverse feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ReverseMode.
    enum tt__ReverseMode                 Mode                           1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions is a complexType.
///
/// @note class tt__PTZConfigurationOptions operations:
/// - tt__PTZConfigurationOptions* soap_new_tt__PTZConfigurationOptions(soap*) allocate and default initialize
/// - tt__PTZConfigurationOptions* soap_new_tt__PTZConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfigurationOptions* soap_new_req_tt__PTZConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__PTZConfigurationOptions* soap_new_set_tt__PTZConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__PTZConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationOptions(soap*, tt__PTZConfigurationOptions*) serialize to a stream
/// - tt__PTZConfigurationOptions* tt__PTZConfigurationOptions::soap_dup(soap*) returns deep copy of tt__PTZConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfigurationOptions::soap_del() deep deletes tt__PTZConfigurationOptions data members, use only after tt__PTZConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfigurationOptions::soap_type() returns SOAP_TYPE_tt__PTZConfigurationOptions or derived type identifier
class tt__PTZConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of supported coordinate systems including their range limitations.
/// </BLOCKQUOTE></PRE>
///
/// Element "Spaces" of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       Spaces                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A timeout Range within which Timeouts are accepted by the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZTimeout" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   PTZTimeout                     1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Supported options for PT Direction Control.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTControlDirection" of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptions.
    tt__PTControlDirectionOptions*       PTControlDirection             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2.
    tt__PTZConfigurationOptions2*        Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The list of acceleration ramps supported by the device. The
///   smallest acceleration value corresponds to the minimal index, the
///   highest acceleration corresponds to the maximum index.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PTZRamps" of type "http://www.onvif.org/ver10/schema":IntAttrList.
  @ tt__IntAttrList                      PTZRamps                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfigurationOptions2 is a complexType.
///
/// @note class tt__PTZConfigurationOptions2 operations:
/// - tt__PTZConfigurationOptions2* soap_new_tt__PTZConfigurationOptions2(soap*) allocate and default initialize
/// - tt__PTZConfigurationOptions2* soap_new_tt__PTZConfigurationOptions2(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfigurationOptions2* soap_new_req_tt__PTZConfigurationOptions2(soap*, ...) allocate, set required members
/// - tt__PTZConfigurationOptions2* soap_new_set_tt__PTZConfigurationOptions2(soap*, ...) allocate, set all public members
/// - tt__PTZConfigurationOptions2::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) deserialize from a stream
/// - int soap_write_tt__PTZConfigurationOptions2(soap*, tt__PTZConfigurationOptions2*) serialize to a stream
/// - tt__PTZConfigurationOptions2* tt__PTZConfigurationOptions2::soap_dup(soap*) returns deep copy of tt__PTZConfigurationOptions2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfigurationOptions2::soap_del() deep deletes tt__PTZConfigurationOptions2 data members, use only after tt__PTZConfigurationOptions2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfigurationOptions2::soap_type() returns SOAP_TYPE_tt__PTZConfigurationOptions2 or derived type identifier
class tt__PTZConfigurationOptions2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptions is a complexType.
///
/// @note class tt__PTControlDirectionOptions operations:
/// - tt__PTControlDirectionOptions* soap_new_tt__PTControlDirectionOptions(soap*) allocate and default initialize
/// - tt__PTControlDirectionOptions* soap_new_tt__PTControlDirectionOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTControlDirectionOptions* soap_new_req_tt__PTControlDirectionOptions(soap*, ...) allocate, set required members
/// - tt__PTControlDirectionOptions* soap_new_set_tt__PTControlDirectionOptions(soap*, ...) allocate, set all public members
/// - tt__PTControlDirectionOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionOptions(soap*, tt__PTControlDirectionOptions*) serialize to a stream
/// - tt__PTControlDirectionOptions* tt__PTControlDirectionOptions::soap_dup(soap*) returns deep copy of tt__PTControlDirectionOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTControlDirectionOptions::soap_del() deep deletes tt__PTControlDirectionOptions data members, use only after tt__PTControlDirectionOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTControlDirectionOptions::soap_type() returns SOAP_TYPE_tt__PTControlDirectionOptions or derived type identifier
class tt__PTControlDirectionOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for EFlip feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "EFlip" of type "http://www.onvif.org/ver10/schema":EFlipOptions.
    tt__EFlipOptions*                    EFlip                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Reverse feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reverse" of type "http://www.onvif.org/ver10/schema":ReverseOptions.
    tt__ReverseOptions*                  Reverse                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension.
    tt__PTControlDirectionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTControlDirectionOptionsExtension is a complexType.
///
/// @note class tt__PTControlDirectionOptionsExtension operations:
/// - tt__PTControlDirectionOptionsExtension* soap_new_tt__PTControlDirectionOptionsExtension(soap*) allocate and default initialize
/// - tt__PTControlDirectionOptionsExtension* soap_new_tt__PTControlDirectionOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTControlDirectionOptionsExtension* soap_new_req_tt__PTControlDirectionOptionsExtension(soap*, ...) allocate, set required members
/// - tt__PTControlDirectionOptionsExtension* soap_new_set_tt__PTControlDirectionOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__PTControlDirectionOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTControlDirectionOptionsExtension(soap*, tt__PTControlDirectionOptionsExtension*) serialize to a stream
/// - tt__PTControlDirectionOptionsExtension* tt__PTControlDirectionOptionsExtension::soap_dup(soap*) returns deep copy of tt__PTControlDirectionOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTControlDirectionOptionsExtension::soap_del() deep deletes tt__PTControlDirectionOptionsExtension data members, use only after tt__PTControlDirectionOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTControlDirectionOptionsExtension::soap_type() returns SOAP_TYPE_tt__PTControlDirectionOptionsExtension or derived type identifier
class tt__PTControlDirectionOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptions is a complexType.
///
/// @note class tt__EFlipOptions operations:
/// - tt__EFlipOptions* soap_new_tt__EFlipOptions(soap*) allocate and default initialize
/// - tt__EFlipOptions* soap_new_tt__EFlipOptions(soap*, int num) allocate and default initialize an array
/// - tt__EFlipOptions* soap_new_req_tt__EFlipOptions(soap*, ...) allocate, set required members
/// - tt__EFlipOptions* soap_new_set_tt__EFlipOptions(soap*, ...) allocate, set all public members
/// - tt__EFlipOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__EFlipOptions(soap*, tt__EFlipOptions*) deserialize from a stream
/// - int soap_write_tt__EFlipOptions(soap*, tt__EFlipOptions*) serialize to a stream
/// - tt__EFlipOptions* tt__EFlipOptions::soap_dup(soap*) returns deep copy of tt__EFlipOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EFlipOptions::soap_del() deep deletes tt__EFlipOptions data members, use only after tt__EFlipOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EFlipOptions::soap_type() returns SOAP_TYPE_tt__EFlipOptions or derived type identifier
class tt__EFlipOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of EFlip mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__EFlipMode is 0..unbounded.
  $ int                                  __sizeMode                     0;
/// Pointer to array enum tt__EFlipMode of size 0..unbounded.
    enum tt__EFlipMode                  *Mode                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":EFlipOptionsExtension.
    tt__EFlipOptionsExtension*           Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":EFlipOptionsExtension is a complexType.
///
/// @note class tt__EFlipOptionsExtension operations:
/// - tt__EFlipOptionsExtension* soap_new_tt__EFlipOptionsExtension(soap*) allocate and default initialize
/// - tt__EFlipOptionsExtension* soap_new_tt__EFlipOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__EFlipOptionsExtension* soap_new_req_tt__EFlipOptionsExtension(soap*, ...) allocate, set required members
/// - tt__EFlipOptionsExtension* soap_new_set_tt__EFlipOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__EFlipOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__EFlipOptionsExtension(soap*, tt__EFlipOptionsExtension*) serialize to a stream
/// - tt__EFlipOptionsExtension* tt__EFlipOptionsExtension::soap_dup(soap*) returns deep copy of tt__EFlipOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__EFlipOptionsExtension::soap_del() deep deletes tt__EFlipOptionsExtension data members, use only after tt__EFlipOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__EFlipOptionsExtension::soap_type() returns SOAP_TYPE_tt__EFlipOptionsExtension or derived type identifier
class tt__EFlipOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptions is a complexType.
///
/// @note class tt__ReverseOptions operations:
/// - tt__ReverseOptions* soap_new_tt__ReverseOptions(soap*) allocate and default initialize
/// - tt__ReverseOptions* soap_new_tt__ReverseOptions(soap*, int num) allocate and default initialize an array
/// - tt__ReverseOptions* soap_new_req_tt__ReverseOptions(soap*, ...) allocate, set required members
/// - tt__ReverseOptions* soap_new_set_tt__ReverseOptions(soap*, ...) allocate, set all public members
/// - tt__ReverseOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__ReverseOptions(soap*, tt__ReverseOptions*) deserialize from a stream
/// - int soap_write_tt__ReverseOptions(soap*, tt__ReverseOptions*) serialize to a stream
/// - tt__ReverseOptions* tt__ReverseOptions::soap_dup(soap*) returns deep copy of tt__ReverseOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ReverseOptions::soap_del() deep deletes tt__ReverseOptions data members, use only after tt__ReverseOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ReverseOptions::soap_type() returns SOAP_TYPE_tt__ReverseOptions or derived type identifier
class tt__ReverseOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Options of Reverse mode parameter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__ReverseMode is 0..unbounded.
  $ int                                  __sizeMode                     0;
/// Pointer to array enum tt__ReverseMode of size 0..unbounded.
    enum tt__ReverseMode                *Mode                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ReverseOptionsExtension.
    tt__ReverseOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ReverseOptionsExtension is a complexType.
///
/// @note class tt__ReverseOptionsExtension operations:
/// - tt__ReverseOptionsExtension* soap_new_tt__ReverseOptionsExtension(soap*) allocate and default initialize
/// - tt__ReverseOptionsExtension* soap_new_tt__ReverseOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__ReverseOptionsExtension* soap_new_req_tt__ReverseOptionsExtension(soap*, ...) allocate, set required members
/// - tt__ReverseOptionsExtension* soap_new_set_tt__ReverseOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__ReverseOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__ReverseOptionsExtension(soap*, tt__ReverseOptionsExtension*) serialize to a stream
/// - tt__ReverseOptionsExtension* tt__ReverseOptionsExtension::soap_dup(soap*) returns deep copy of tt__ReverseOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ReverseOptionsExtension::soap_del() deep deletes tt__ReverseOptionsExtension data members, use only after tt__ReverseOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ReverseOptionsExtension::soap_type() returns SOAP_TYPE_tt__ReverseOptionsExtension or derived type identifier
class tt__ReverseOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PanTiltLimits is a complexType.
///
/// @note class tt__PanTiltLimits operations:
/// - tt__PanTiltLimits* soap_new_tt__PanTiltLimits(soap*) allocate and default initialize
/// - tt__PanTiltLimits* soap_new_tt__PanTiltLimits(soap*, int num) allocate and default initialize an array
/// - tt__PanTiltLimits* soap_new_req_tt__PanTiltLimits(soap*, ...) allocate, set required members
/// - tt__PanTiltLimits* soap_new_set_tt__PanTiltLimits(soap*, ...) allocate, set all public members
/// - tt__PanTiltLimits::soap_default(soap*) default initialize members
/// - int soap_read_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) deserialize from a stream
/// - int soap_write_tt__PanTiltLimits(soap*, tt__PanTiltLimits*) serialize to a stream
/// - tt__PanTiltLimits* tt__PanTiltLimits::soap_dup(soap*) returns deep copy of tt__PanTiltLimits, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PanTiltLimits::soap_del() deep deletes tt__PanTiltLimits data members, use only after tt__PanTiltLimits::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PanTiltLimits::soap_type() returns SOAP_TYPE_tt__PanTiltLimits or derived type identifier
class tt__PanTiltLimits
{ public:
/// <PRE><BLOCKQUOTE>
///   A range of pan tilt limits.
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              Range                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ZoomLimits is a complexType.
///
/// @note class tt__ZoomLimits operations:
/// - tt__ZoomLimits* soap_new_tt__ZoomLimits(soap*) allocate and default initialize
/// - tt__ZoomLimits* soap_new_tt__ZoomLimits(soap*, int num) allocate and default initialize an array
/// - tt__ZoomLimits* soap_new_req_tt__ZoomLimits(soap*, ...) allocate, set required members
/// - tt__ZoomLimits* soap_new_set_tt__ZoomLimits(soap*, ...) allocate, set all public members
/// - tt__ZoomLimits::soap_default(soap*) default initialize members
/// - int soap_read_tt__ZoomLimits(soap*, tt__ZoomLimits*) deserialize from a stream
/// - int soap_write_tt__ZoomLimits(soap*, tt__ZoomLimits*) serialize to a stream
/// - tt__ZoomLimits* tt__ZoomLimits::soap_dup(soap*) returns deep copy of tt__ZoomLimits, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ZoomLimits::soap_del() deep deletes tt__ZoomLimits data members, use only after tt__ZoomLimits::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ZoomLimits::soap_type() returns SOAP_TYPE_tt__ZoomLimits or derived type identifier
class tt__ZoomLimits
{ public:
/// <PRE><BLOCKQUOTE>
///   A range of zoom limit
/// </BLOCKQUOTE></PRE>
///
/// Element "Range" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              Range                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpaces is a complexType.
///
/// @note class tt__PTZSpaces operations:
/// - tt__PTZSpaces* soap_new_tt__PTZSpaces(soap*) allocate and default initialize
/// - tt__PTZSpaces* soap_new_tt__PTZSpaces(soap*, int num) allocate and default initialize an array
/// - tt__PTZSpaces* soap_new_req_tt__PTZSpaces(soap*, ...) allocate, set required members
/// - tt__PTZSpaces* soap_new_set_tt__PTZSpaces(soap*, ...) allocate, set all public members
/// - tt__PTZSpaces::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZSpaces(soap*, tt__PTZSpaces*) deserialize from a stream
/// - int soap_write_tt__PTZSpaces(soap*, tt__PTZSpaces*) serialize to a stream
/// - tt__PTZSpaces* tt__PTZSpaces::soap_dup(soap*) returns deep copy of tt__PTZSpaces, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZSpaces::soap_del() deep deletes tt__PTZSpaces data members, use only after tt__PTZSpaces::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZSpaces::soap_type() returns SOAP_TYPE_tt__PTZSpaces or derived type identifier
class tt__PTZSpaces
{ public:
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt Position space is provided by every PTZ node that supports absolute Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the PTZ unit normalized to the range -1 to 1 resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Space2DDescription* is 0..unbounded.
  $ int                                  __sizeAbsolutePanTiltPositionSpace 0;
/// Pointer to array tt__Space2DDescription* of size 0..unbounded.
    tt__Space2DDescription*             *AbsolutePanTiltPositionSpace   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Position Space is provided by every PTZ node that supports absolute Zoom, since it does not relate to a specific physical range. Instead, the range should be defined as the full range of the Zoom normalized to the range 0 (wide) to 1 (tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeAbsoluteZoomPositionSpace 0;
/// Pointer to array tt__Space1DDescription* of size 0..unbounded.
    tt__Space1DDescription*             *AbsoluteZoomPositionSpace      0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Pan/Tilt translation space is provided by every PTZ node that supports relative Pan/Tilt, since it does not relate to a specific physical range. Instead, the range should be defined as the full positive and negative translation range of the PTZ unit normalized to the range -1 to 1, where positive translation would mean clockwise rotation or movement in right/up direction resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Space2DDescription* is 0..unbounded.
  $ int                                  __sizeRelativePanTiltTranslationSpace 0;
/// Pointer to array tt__Space2DDescription* of size 0..unbounded.
    tt__Space2DDescription*             *RelativePanTiltTranslationSpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The Generic Zoom Translation Space is provided by every PTZ node that supports relative Zoom, since it does not relate to a specific physical range. Instead, the corresponding absolute range should be defined as the full positive and negative translation range of the Zoom normalized to the range -1 to1, where a positive translation maps to a movement in TELE direction. The translation is signed to indicate direction (negative is to wide, positive is to tele). There is no assumption about how the generic zoom range is mapped to magnification, FOV or other physical zoom dimension. This results in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeRelativeZoomTranslationSpace 0;
/// Pointer to array tt__Space1DDescription* of size 0..unbounded.
    tt__Space1DDescription*             *RelativeZoomTranslationSpace   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic Pan/Tilt velocity space shall be provided by every PTZ node, since it does not relate to a specific physical range. Instead, the range should be defined as a range of the PTZ units speed normalized to the range -1 to 1, where a positive velocity would map to clockwise rotation or movement in the right/up direction. A signed speed can be independently specified for the pan and tilt component resulting in the following space description.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Space2DDescription* is 0..unbounded.
  $ int                                  __sizeContinuousPanTiltVelocitySpace 0;
/// Pointer to array tt__Space2DDescription* of size 0..unbounded.
    tt__Space2DDescription*             *ContinuousPanTiltVelocitySpace 0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The generic zoom velocity space specifies a zoom factor velocity without knowing the underlying physical model. The range should be normalized from -1 to 1, where a positive velocity would map to TELE direction. A generic zoom velocity space description resembles the following.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeContinuousZoomVelocitySpace 0;
/// Pointer to array tt__Space1DDescription* of size 0..unbounded.
    tt__Space1DDescription*             *ContinuousZoomVelocitySpace    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Pan/Tilt movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information. The speed of a combined Pan/Tilt movement is represented by a single non-negative scalar value.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizePanTiltSpeedSpace        0;
/// Pointer to array tt__Space1DDescription* of size 0..unbounded.
    tt__Space1DDescription*             *PanTiltSpeedSpace              0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   The speed space specifies the speed for a Zoom movement when moving to an absolute position or to a relative translation. In contrast to the velocity spaces, speed spaces do not contain any directional information.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Space1DDescription* is 0..unbounded.
  $ int                                  __sizeZoomSpeedSpace           0;
/// Pointer to array tt__Space1DDescription* of size 0..unbounded.
    tt__Space1DDescription*             *ZoomSpeedSpace                 0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZSpacesExtension.
    tt__PTZSpacesExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpacesExtension is a complexType.
///
/// @note class tt__PTZSpacesExtension operations:
/// - tt__PTZSpacesExtension* soap_new_tt__PTZSpacesExtension(soap*) allocate and default initialize
/// - tt__PTZSpacesExtension* soap_new_tt__PTZSpacesExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZSpacesExtension* soap_new_req_tt__PTZSpacesExtension(soap*, ...) allocate, set required members
/// - tt__PTZSpacesExtension* soap_new_set_tt__PTZSpacesExtension(soap*, ...) allocate, set all public members
/// - tt__PTZSpacesExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) deserialize from a stream
/// - int soap_write_tt__PTZSpacesExtension(soap*, tt__PTZSpacesExtension*) serialize to a stream
/// - tt__PTZSpacesExtension* tt__PTZSpacesExtension::soap_dup(soap*) returns deep copy of tt__PTZSpacesExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZSpacesExtension::soap_del() deep deletes tt__PTZSpacesExtension data members, use only after tt__PTZSpacesExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZSpacesExtension::soap_type() returns SOAP_TYPE_tt__PTZSpacesExtension or derived type identifier
class tt__PTZSpacesExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Space2DDescription is a complexType.
///
/// @note class tt__Space2DDescription operations:
/// - tt__Space2DDescription* soap_new_tt__Space2DDescription(soap*) allocate and default initialize
/// - tt__Space2DDescription* soap_new_tt__Space2DDescription(soap*, int num) allocate and default initialize an array
/// - tt__Space2DDescription* soap_new_req_tt__Space2DDescription(soap*, ...) allocate, set required members
/// - tt__Space2DDescription* soap_new_set_tt__Space2DDescription(soap*, ...) allocate, set all public members
/// - tt__Space2DDescription::soap_default(soap*) default initialize members
/// - int soap_read_tt__Space2DDescription(soap*, tt__Space2DDescription*) deserialize from a stream
/// - int soap_write_tt__Space2DDescription(soap*, tt__Space2DDescription*) serialize to a stream
/// - tt__Space2DDescription* tt__Space2DDescription::soap_dup(soap*) returns deep copy of tt__Space2DDescription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Space2DDescription::soap_del() deep deletes tt__Space2DDescription data members, use only after tt__Space2DDescription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Space2DDescription::soap_type() returns SOAP_TYPE_tt__Space2DDescription or derived type identifier
class tt__Space2DDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      YRange                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Space1DDescription is a complexType.
///
/// @note class tt__Space1DDescription operations:
/// - tt__Space1DDescription* soap_new_tt__Space1DDescription(soap*) allocate and default initialize
/// - tt__Space1DDescription* soap_new_tt__Space1DDescription(soap*, int num) allocate and default initialize an array
/// - tt__Space1DDescription* soap_new_req_tt__Space1DDescription(soap*, ...) allocate, set required members
/// - tt__Space1DDescription* soap_new_set_tt__Space1DDescription(soap*, ...) allocate, set all public members
/// - tt__Space1DDescription::soap_default(soap*) default initialize members
/// - int soap_read_tt__Space1DDescription(soap*, tt__Space1DDescription*) deserialize from a stream
/// - int soap_write_tt__Space1DDescription(soap*, tt__Space1DDescription*) serialize to a stream
/// - tt__Space1DDescription* tt__Space1DDescription::soap_dup(soap*) returns deep copy of tt__Space1DDescription, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Space1DDescription::soap_del() deep deletes tt__Space1DDescription data members, use only after tt__Space1DDescription::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Space1DDescription::soap_type() returns SOAP_TYPE_tt__Space1DDescription or derived type identifier
class tt__Space1DDescription
{ public:
/// <PRE><BLOCKQUOTE>
///   A URI of coordinate systems.
/// </BLOCKQUOTE></PRE>
///
/// Element "URI" of type xs:anyURI.
    xsd__anyURI                          URI                            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A range of x-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      XRange                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZSpeed is a complexType.
///
/// @note class tt__PTZSpeed operations:
/// - tt__PTZSpeed* soap_new_tt__PTZSpeed(soap*) allocate and default initialize
/// - tt__PTZSpeed* soap_new_tt__PTZSpeed(soap*, int num) allocate and default initialize an array
/// - tt__PTZSpeed* soap_new_req_tt__PTZSpeed(soap*, ...) allocate, set required members
/// - tt__PTZSpeed* soap_new_set_tt__PTZSpeed(soap*, ...) allocate, set all public members
/// - tt__PTZSpeed::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZSpeed(soap*, tt__PTZSpeed*) deserialize from a stream
/// - int soap_write_tt__PTZSpeed(soap*, tt__PTZSpeed*) serialize to a stream
/// - tt__PTZSpeed* tt__PTZSpeed::soap_dup(soap*) returns deep copy of tt__PTZSpeed, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZSpeed::soap_del() deep deletes tt__PTZSpeed data members, use only after tt__PTZSpeed::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZSpeed::soap_type() returns SOAP_TYPE_tt__PTZSpeed or derived type identifier
class tt__PTZSpeed
{ public:
/// <PRE><BLOCKQUOTE>
///   Pan and tilt speed. The x component corresponds to pan and the y component to tilt. If omitted in a request, the current (if any) PanTilt movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom speed. If omitted in a request, the current (if any) Zoom movement should not be affected.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPreset is a complexType.
///
/// @note class tt__PTZPreset operations:
/// - tt__PTZPreset* soap_new_tt__PTZPreset(soap*) allocate and default initialize
/// - tt__PTZPreset* soap_new_tt__PTZPreset(soap*, int num) allocate and default initialize an array
/// - tt__PTZPreset* soap_new_req_tt__PTZPreset(soap*, ...) allocate, set required members
/// - tt__PTZPreset* soap_new_set_tt__PTZPreset(soap*, ...) allocate, set all public members
/// - tt__PTZPreset::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPreset(soap*, tt__PTZPreset*) deserialize from a stream
/// - int soap_write_tt__PTZPreset(soap*, tt__PTZPreset*) serialize to a stream
/// - tt__PTZPreset* tt__PTZPreset::soap_dup(soap*) returns deep copy of tt__PTZPreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPreset::soap_del() deep deletes tt__PTZPreset data members, use only after tt__PTZPreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPreset::soap_type() returns SOAP_TYPE_tt__PTZPreset or derived type identifier
class tt__PTZPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of preset position name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of preset position.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                    0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PresetTour is a complexType.
///
/// @note class tt__PresetTour operations:
/// - tt__PresetTour* soap_new_tt__PresetTour(soap*) allocate and default initialize
/// - tt__PresetTour* soap_new_tt__PresetTour(soap*, int num) allocate and default initialize an array
/// - tt__PresetTour* soap_new_req_tt__PresetTour(soap*, ...) allocate, set required members
/// - tt__PresetTour* soap_new_set_tt__PresetTour(soap*, ...) allocate, set all public members
/// - tt__PresetTour::soap_default(soap*) default initialize members
/// - int soap_read_tt__PresetTour(soap*, tt__PresetTour*) deserialize from a stream
/// - int soap_write_tt__PresetTour(soap*, tt__PresetTour*) serialize to a stream
/// - tt__PresetTour* tt__PresetTour::soap_dup(soap*) returns deep copy of tt__PresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PresetTour::soap_del() deep deletes tt__PresetTour data members, use only after tt__PresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PresetTour::soap_type() returns SOAP_TYPE_tt__PresetTour or derived type identifier
class tt__PresetTour
{ public:
/// <PRE><BLOCKQUOTE>
///   Readable name of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Read only parameters to indicate the status of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "Status" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatus.
    tt__PTZPresetTourStatus*             Status                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Auto Start flag of the preset tour. True allows the preset tour to be activated always.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameters to specify the detail behavior of the preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartingCondition" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition.
    tt__PTZPresetTourStartingCondition*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of detail of touring spots including preset positions.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZPresetTourSpot* is 0..unbounded.
  $ int                                  __sizeTourSpot                 0;
/// Pointer to array tt__PTZPresetTourSpot* of size 0..unbounded.
    tt__PTZPresetTourSpot*              *TourSpot                       0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourExtension.
    tt__PTZPresetTourExtension*          Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of this preset tour.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourExtension is a complexType.
///
/// @note class tt__PTZPresetTourExtension operations:
/// - tt__PTZPresetTourExtension* soap_new_tt__PTZPresetTourExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourExtension* soap_new_tt__PTZPresetTourExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourExtension* soap_new_req_tt__PTZPresetTourExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourExtension* soap_new_set_tt__PTZPresetTourExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourExtension(soap*, tt__PTZPresetTourExtension*) serialize to a stream
/// - tt__PTZPresetTourExtension* tt__PTZPresetTourExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourExtension::soap_del() deep deletes tt__PTZPresetTourExtension data members, use only after tt__PTZPresetTourExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourExtension or derived type identifier
class tt__PTZPresetTourExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpot is a complexType.
///
/// @note class tt__PTZPresetTourSpot operations:
/// - tt__PTZPresetTourSpot* soap_new_tt__PTZPresetTourSpot(soap*) allocate and default initialize
/// - tt__PTZPresetTourSpot* soap_new_tt__PTZPresetTourSpot(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSpot* soap_new_req_tt__PTZPresetTourSpot(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSpot* soap_new_set_tt__PTZPresetTourSpot(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSpot::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpot(soap*, tt__PTZPresetTourSpot*) serialize to a stream
/// - tt__PTZPresetTourSpot* tt__PTZPresetTourSpot::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSpot, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSpot::soap_del() deep deletes tt__PTZPresetTourSpot data members, use only after tt__PTZPresetTourSpot::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSpot::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSpot or derived type identifier
class tt__PTZPresetTourSpot
{ public:
/// <PRE><BLOCKQUOTE>
///   Detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetDetail" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail.
    tt__PTZPresetTourPresetDetail*       PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify Pan/Tilt and Zoom speed on moving toward this tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify time duration of staying on this tour sport.
/// </BLOCKQUOTE></PRE>
///
/// Element "StayTime" of type xs:duration.
    xsd__duration                        StayTime                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension.
    tt__PTZPresetTourSpotExtension*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotExtension is a complexType.
///
/// @note class tt__PTZPresetTourSpotExtension operations:
/// - tt__PTZPresetTourSpotExtension* soap_new_tt__PTZPresetTourSpotExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourSpotExtension* soap_new_tt__PTZPresetTourSpotExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSpotExtension* soap_new_req_tt__PTZPresetTourSpotExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSpotExtension* soap_new_set_tt__PTZPresetTourSpotExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSpotExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpotExtension(soap*, tt__PTZPresetTourSpotExtension*) serialize to a stream
/// - tt__PTZPresetTourSpotExtension* tt__PTZPresetTourSpotExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSpotExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSpotExtension::soap_del() deep deletes tt__PTZPresetTourSpotExtension data members, use only after tt__PTZPresetTourSpotExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSpotExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSpotExtension or derived type identifier
class tt__PTZPresetTourSpotExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetail is a complexType.
///
/// @note class tt__PTZPresetTourPresetDetail operations:
/// - tt__PTZPresetTourPresetDetail* soap_new_tt__PTZPresetTourPresetDetail(soap*) allocate and default initialize
/// - tt__PTZPresetTourPresetDetail* soap_new_tt__PTZPresetTourPresetDetail(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourPresetDetail* soap_new_req_tt__PTZPresetTourPresetDetail(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourPresetDetail* soap_new_set_tt__PTZPresetTourPresetDetail(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourPresetDetail::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetail(soap*, tt__PTZPresetTourPresetDetail*) serialize to a stream
/// - tt__PTZPresetTourPresetDetail* tt__PTZPresetTourPresetDetail::soap_dup(soap*) returns deep copy of tt__PTZPresetTourPresetDetail, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourPresetDetail::soap_del() deep deletes tt__PTZPresetTourPresetDetail data members, use only after tt__PTZPresetTourPresetDetail::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourPresetDetail::soap_type() returns SOAP_TYPE_tt__PTZPresetTourPresetDetail or derived type identifier
class tt__PTZPresetTourPresetDetail
{ public:
//  BEGIN CHOICE <xs:choice>
  $ int                                  __union_PTZPresetTourPresetDetail;	///< Union _tt__union_PTZPresetTourPresetDetail selector: set to SOAP_UNION__tt__union_PTZPresetTourPresetDetail_<fieldname>
    union _tt__union_PTZPresetTourPresetDetail
    {
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with Preset Token defined in advance.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                   ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with the home position of this PTZ Node. "False" to this parameter shall be treated as an invalid argument.
/// </BLOCKQUOTE></PRE>
///
/// Element "Home" of type xs:boolean.
    bool                                 Home                          ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Option to specify the preset position with vector of PTZ node directly.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       PTZPosition                   ;	///< Choice of element (one of multiple choices).
/// Element "TypeExtension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension.
    tt__PTZPresetTourTypeExtension*      TypeExtension                 ;	///< Choice of element (one of multiple choices).
    }                                    union_PTZPresetTourPresetDetail;
//  END OF CHOICE
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourTypeExtension is a complexType.
///
/// @note class tt__PTZPresetTourTypeExtension operations:
/// - tt__PTZPresetTourTypeExtension* soap_new_tt__PTZPresetTourTypeExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourTypeExtension* soap_new_tt__PTZPresetTourTypeExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourTypeExtension* soap_new_req_tt__PTZPresetTourTypeExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourTypeExtension* soap_new_set_tt__PTZPresetTourTypeExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourTypeExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourTypeExtension(soap*, tt__PTZPresetTourTypeExtension*) serialize to a stream
/// - tt__PTZPresetTourTypeExtension* tt__PTZPresetTourTypeExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourTypeExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourTypeExtension::soap_del() deep deletes tt__PTZPresetTourTypeExtension data members, use only after tt__PTZPresetTourTypeExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourTypeExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourTypeExtension or derived type identifier
class tt__PTZPresetTourTypeExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatus is a complexType.
///
/// @note class tt__PTZPresetTourStatus operations:
/// - tt__PTZPresetTourStatus* soap_new_tt__PTZPresetTourStatus(soap*) allocate and default initialize
/// - tt__PTZPresetTourStatus* soap_new_tt__PTZPresetTourStatus(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStatus* soap_new_req_tt__PTZPresetTourStatus(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStatus* soap_new_set_tt__PTZPresetTourStatus(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStatus::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStatus(soap*, tt__PTZPresetTourStatus*) serialize to a stream
/// - tt__PTZPresetTourStatus* tt__PTZPresetTourStatus::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStatus::soap_del() deep deletes tt__PTZPresetTourStatus data members, use only after tt__PTZPresetTourStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStatus::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStatus or derived type identifier
class tt__PTZPresetTourStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates state of this preset tour by Idle/Touring/Paused.
/// </BLOCKQUOTE></PRE>
///
/// Element "State" of type "http://www.onvif.org/ver10/schema":PTZPresetTourState.
    enum tt__PTZPresetTourState          State                          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicates a tour spot currently staying.
/// </BLOCKQUOTE></PRE>
///
/// Element "CurrentTourSpot" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpot.
    tt__PTZPresetTourSpot*               CurrentTourSpot                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension.
    tt__PTZPresetTourStatusExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStatusExtension is a complexType.
///
/// @note class tt__PTZPresetTourStatusExtension operations:
/// - tt__PTZPresetTourStatusExtension* soap_new_tt__PTZPresetTourStatusExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourStatusExtension* soap_new_tt__PTZPresetTourStatusExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStatusExtension* soap_new_req_tt__PTZPresetTourStatusExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStatusExtension* soap_new_set_tt__PTZPresetTourStatusExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStatusExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStatusExtension(soap*, tt__PTZPresetTourStatusExtension*) serialize to a stream
/// - tt__PTZPresetTourStatusExtension* tt__PTZPresetTourStatusExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStatusExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStatusExtension::soap_del() deep deletes tt__PTZPresetTourStatusExtension data members, use only after tt__PTZPresetTourStatusExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStatusExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStatusExtension or derived type identifier
class tt__PTZPresetTourStatusExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingCondition is a complexType.
///
/// @note class tt__PTZPresetTourStartingCondition operations:
/// - tt__PTZPresetTourStartingCondition* soap_new_tt__PTZPresetTourStartingCondition(soap*) allocate and default initialize
/// - tt__PTZPresetTourStartingCondition* soap_new_tt__PTZPresetTourStartingCondition(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStartingCondition* soap_new_req_tt__PTZPresetTourStartingCondition(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStartingCondition* soap_new_set_tt__PTZPresetTourStartingCondition(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStartingCondition::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingCondition(soap*, tt__PTZPresetTourStartingCondition*) serialize to a stream
/// - tt__PTZPresetTourStartingCondition* tt__PTZPresetTourStartingCondition::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStartingCondition, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStartingCondition::soap_del() deep deletes tt__PTZPresetTourStartingCondition data members, use only after tt__PTZPresetTourStartingCondition::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStartingCondition::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStartingCondition or derived type identifier
class tt__PTZPresetTourStartingCondition
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how many times the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringTime" of type xs:int.
    int*                                 RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to specify how long time duration the preset tour is recurred.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringDuration" of type xs:duration.
    xsd__duration                        RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to choose which direction the preset tour goes. Forward shall be chosen in case it is omitted.
/// </BLOCKQUOTE></PRE>
///
/// Element "Direction" of type "http://www.onvif.org/ver10/schema":PTZPresetTourDirection.
    enum tt__PTZPresetTourDirection*     Direction                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension.
    tt__PTZPresetTourStartingConditionExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Execute presets in random order. If set to true and Direction is also present, Direction will be ignored and presets of the Tour will be recalled randomly.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RandomPresetOrder" of type xs:boolean.
  @ bool*                                RandomPresetOrder              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionExtension is a complexType.
///
/// @note class tt__PTZPresetTourStartingConditionExtension operations:
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_tt__PTZPresetTourStartingConditionExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_tt__PTZPresetTourStartingConditionExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_req_tt__PTZPresetTourStartingConditionExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStartingConditionExtension* soap_new_set_tt__PTZPresetTourStartingConditionExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStartingConditionExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionExtension(soap*, tt__PTZPresetTourStartingConditionExtension*) serialize to a stream
/// - tt__PTZPresetTourStartingConditionExtension* tt__PTZPresetTourStartingConditionExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStartingConditionExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStartingConditionExtension::soap_del() deep deletes tt__PTZPresetTourStartingConditionExtension data members, use only after tt__PTZPresetTourStartingConditionExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStartingConditionExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStartingConditionExtension or derived type identifier
class tt__PTZPresetTourStartingConditionExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourOptions is a complexType.
///
/// @note class tt__PTZPresetTourOptions operations:
/// - tt__PTZPresetTourOptions* soap_new_tt__PTZPresetTourOptions(soap*) allocate and default initialize
/// - tt__PTZPresetTourOptions* soap_new_tt__PTZPresetTourOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourOptions* soap_new_req_tt__PTZPresetTourOptions(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourOptions* soap_new_set_tt__PTZPresetTourOptions(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourOptions(soap*, tt__PTZPresetTourOptions*) serialize to a stream
/// - tt__PTZPresetTourOptions* tt__PTZPresetTourOptions::soap_dup(soap*) returns deep copy of tt__PTZPresetTourOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourOptions::soap_del() deep deletes tt__PTZPresetTourOptions data members, use only after tt__PTZPresetTourOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourOptions::soap_type() returns SOAP_TYPE_tt__PTZPresetTourOptions or derived type identifier
class tt__PTZPresetTourOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not the AutoStart is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoStart" of type xs:boolean.
    bool                                 AutoStart                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Starting Condition.
/// </BLOCKQUOTE></PRE>
///
/// Element "StartingCondition" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions.
    tt__PTZPresetTourStartingConditionOptions*  StartingCondition              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Preset Tour Spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "TourSpot" of type "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions.
    tt__PTZPresetTourSpotOptions*        TourSpot                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourSpotOptions is a complexType.
///
/// @note class tt__PTZPresetTourSpotOptions operations:
/// - tt__PTZPresetTourSpotOptions* soap_new_tt__PTZPresetTourSpotOptions(soap*) allocate and default initialize
/// - tt__PTZPresetTourSpotOptions* soap_new_tt__PTZPresetTourSpotOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourSpotOptions* soap_new_req_tt__PTZPresetTourSpotOptions(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourSpotOptions* soap_new_set_tt__PTZPresetTourSpotOptions(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourSpotOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourSpotOptions(soap*, tt__PTZPresetTourSpotOptions*) serialize to a stream
/// - tt__PTZPresetTourSpotOptions* tt__PTZPresetTourSpotOptions::soap_dup(soap*) returns deep copy of tt__PTZPresetTourSpotOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourSpotOptions::soap_del() deep deletes tt__PTZPresetTourSpotOptions data members, use only after tt__PTZPresetTourSpotOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourSpotOptions::soap_type() returns SOAP_TYPE_tt__PTZPresetTourSpotOptions or derived type identifier
class tt__PTZPresetTourSpotOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported options for detail definition of preset position of the tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetDetail" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions.
    tt__PTZPresetTourPresetDetailOptions*  PresetDetail                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported range of stay time for a tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "StayTime" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   StayTime                       1;	///< Required element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptions is a complexType.
///
/// @note class tt__PTZPresetTourPresetDetailOptions operations:
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_tt__PTZPresetTourPresetDetailOptions(soap*) allocate and default initialize
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_tt__PTZPresetTourPresetDetailOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_req_tt__PTZPresetTourPresetDetailOptions(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourPresetDetailOptions* soap_new_set_tt__PTZPresetTourPresetDetailOptions(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourPresetDetailOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetailOptions(soap*, tt__PTZPresetTourPresetDetailOptions*) serialize to a stream
/// - tt__PTZPresetTourPresetDetailOptions* tt__PTZPresetTourPresetDetailOptions::soap_dup(soap*) returns deep copy of tt__PTZPresetTourPresetDetailOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourPresetDetailOptions::soap_del() deep deletes tt__PTZPresetTourPresetDetailOptions data members, use only after tt__PTZPresetTourPresetDetailOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourPresetDetailOptions::soap_type() returns SOAP_TYPE_tt__PTZPresetTourPresetDetailOptions or derived type identifier
class tt__PTZPresetTourPresetDetailOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of available Preset Tokens for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ReferenceToken is 0..unbounded.
  $ int                                  __sizePresetToken              0;
/// Pointer to array tt__ReferenceToken of size 0..unbounded.
    tt__ReferenceToken                  *PresetToken                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   An option to indicate Home postion for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Element "Home" of type xs:boolean.
    bool*                                Home                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Pan and Tilt for tour spots.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltPositionSpace" of type "http://www.onvif.org/ver10/schema":Space2DDescription.
    tt__Space2DDescription*              PanTiltPositionSpace           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Zoom for a tour spot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomPositionSpace" of type "http://www.onvif.org/ver10/schema":Space1DDescription.
    tt__Space1DDescription*              ZoomPositionSpace              0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension.
    tt__PTZPresetTourPresetDetailOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourPresetDetailOptionsExtension is a complexType.
///
/// @note class tt__PTZPresetTourPresetDetailOptionsExtension operations:
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_req_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourPresetDetailOptionsExtension* soap_new_set_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourPresetDetailOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourPresetDetailOptionsExtension(soap*, tt__PTZPresetTourPresetDetailOptionsExtension*) serialize to a stream
/// - tt__PTZPresetTourPresetDetailOptionsExtension* tt__PTZPresetTourPresetDetailOptionsExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourPresetDetailOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourPresetDetailOptionsExtension::soap_del() deep deletes tt__PTZPresetTourPresetDetailOptionsExtension data members, use only after tt__PTZPresetTourPresetDetailOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourPresetDetailOptionsExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourPresetDetailOptionsExtension or derived type identifier
class tt__PTZPresetTourPresetDetailOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptions is a complexType.
///
/// @note class tt__PTZPresetTourStartingConditionOptions operations:
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_tt__PTZPresetTourStartingConditionOptions(soap*) allocate and default initialize
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_tt__PTZPresetTourStartingConditionOptions(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_req_tt__PTZPresetTourStartingConditionOptions(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStartingConditionOptions* soap_new_set_tt__PTZPresetTourStartingConditionOptions(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStartingConditionOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionOptions(soap*, tt__PTZPresetTourStartingConditionOptions*) serialize to a stream
/// - tt__PTZPresetTourStartingConditionOptions* tt__PTZPresetTourStartingConditionOptions::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStartingConditionOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStartingConditionOptions::soap_del() deep deletes tt__PTZPresetTourStartingConditionOptions data members, use only after tt__PTZPresetTourStartingConditionOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStartingConditionOptions::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStartingConditionOptions or derived type identifier
class tt__PTZPresetTourStartingConditionOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Time.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringTime" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        RecurringTime                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported range of Recurring Duration.
/// </BLOCKQUOTE></PRE>
///
/// Element "RecurringDuration" of type "http://www.onvif.org/ver10/schema":DurationRange.
    tt__DurationRange*                   RecurringDuration              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Supported options for Direction of Preset Tour.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__PTZPresetTourDirection is 0..unbounded.
  $ int                                  __sizeDirection                0;
/// Pointer to array enum tt__PTZPresetTourDirection of size 0..unbounded.
    enum tt__PTZPresetTourDirection     *Direction                      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension.
    tt__PTZPresetTourStartingConditionOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZPresetTourStartingConditionOptionsExtension is a complexType.
///
/// @note class tt__PTZPresetTourStartingConditionOptionsExtension operations:
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap*) allocate and default initialize
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_req_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, ...) allocate, set required members
/// - tt__PTZPresetTourStartingConditionOptionsExtension* soap_new_set_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__PTZPresetTourStartingConditionOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__PTZPresetTourStartingConditionOptionsExtension(soap*, tt__PTZPresetTourStartingConditionOptionsExtension*) serialize to a stream
/// - tt__PTZPresetTourStartingConditionOptionsExtension* tt__PTZPresetTourStartingConditionOptionsExtension::soap_dup(soap*) returns deep copy of tt__PTZPresetTourStartingConditionOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZPresetTourStartingConditionOptionsExtension::soap_del() deep deletes tt__PTZPresetTourStartingConditionOptionsExtension data members, use only after tt__PTZPresetTourStartingConditionOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZPresetTourStartingConditionOptionsExtension::soap_type() returns SOAP_TYPE_tt__PTZPresetTourStartingConditionOptionsExtension or derived type identifier
class tt__PTZPresetTourStartingConditionOptionsExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration is a complexType.
///
/// @note class tt__FocusConfiguration operations:
/// - tt__FocusConfiguration* soap_new_tt__FocusConfiguration(soap*) allocate and default initialize
/// - tt__FocusConfiguration* soap_new_tt__FocusConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__FocusConfiguration* soap_new_req_tt__FocusConfiguration(soap*, ...) allocate, set required members
/// - tt__FocusConfiguration* soap_new_set_tt__FocusConfiguration(soap*, ...) allocate, set all public members
/// - tt__FocusConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__FocusConfiguration(soap*, tt__FocusConfiguration*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration(soap*, tt__FocusConfiguration*) serialize to a stream
/// - tt__FocusConfiguration* tt__FocusConfiguration::soap_dup(soap*) returns deep copy of tt__FocusConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__FocusConfiguration::soap_del() deep deletes tt__FocusConfiguration data members, use only after tt__FocusConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__FocusConfiguration::soap_type() returns SOAP_TYPE_tt__FocusConfiguration or derived type identifier
class tt__FocusConfiguration
{ public:
/// Element "AutoFocusMode" of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of type xs:float.
    float                                DefaultSpeed                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "NearLimit" of type xs:float.
    float                                NearLimit                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
///   If set to 0.0, infinity will be used.
/// </BLOCKQUOTE></PRE>
///
/// Element "FarLimit" of type xs:float.
    float                                FarLimit                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings is a complexType.
///
/// @note class tt__ImagingSettings operations:
/// - tt__ImagingSettings* soap_new_tt__ImagingSettings(soap*) allocate and default initialize
/// - tt__ImagingSettings* soap_new_tt__ImagingSettings(soap*, int num) allocate and default initialize an array
/// - tt__ImagingSettings* soap_new_req_tt__ImagingSettings(soap*, ...) allocate, set required members
/// - tt__ImagingSettings* soap_new_set_tt__ImagingSettings(soap*, ...) allocate, set all public members
/// - tt__ImagingSettings::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingSettings(soap*, tt__ImagingSettings*) deserialize from a stream
/// - int soap_write_tt__ImagingSettings(soap*, tt__ImagingSettings*) serialize to a stream
/// - tt__ImagingSettings* tt__ImagingSettings::soap_dup(soap*) returns deep copy of tt__ImagingSettings, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingSettings::soap_del() deep deletes tt__ImagingSettings data members, use only after tt__ImagingSettings::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingSettings::soap_type() returns SOAP_TYPE_tt__ImagingSettings or derived type identifier
class tt__ImagingSettings
{ public:
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensation.
    tt__BacklightCompensation*           BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Brightness" of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "ColorSaturation" of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Contrast" of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":Exposure.
    tt__Exposure*                        Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusConfiguration.
    tt__FocusConfiguration*              Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "IrCutFilter" of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sharpness" of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRange.
    tt__WideDynamicRange*                WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalance.
    tt__WhiteBalance*                    WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension.
    tt__ImagingSettingsExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension is a complexType.
///
/// @note class tt__ImagingSettingsExtension operations:
/// - tt__ImagingSettingsExtension* soap_new_tt__ImagingSettingsExtension(soap*) allocate and default initialize
/// - tt__ImagingSettingsExtension* soap_new_tt__ImagingSettingsExtension(soap*, int num) allocate and default initialize an array
/// - tt__ImagingSettingsExtension* soap_new_req_tt__ImagingSettingsExtension(soap*, ...) allocate, set required members
/// - tt__ImagingSettingsExtension* soap_new_set_tt__ImagingSettingsExtension(soap*, ...) allocate, set all public members
/// - tt__ImagingSettingsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension(soap*, tt__ImagingSettingsExtension*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension(soap*, tt__ImagingSettingsExtension*) serialize to a stream
/// - tt__ImagingSettingsExtension* tt__ImagingSettingsExtension::soap_dup(soap*) returns deep copy of tt__ImagingSettingsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingSettingsExtension::soap_del() deep deletes tt__ImagingSettingsExtension data members, use only after tt__ImagingSettingsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingSettingsExtension::soap_type() returns SOAP_TYPE_tt__ImagingSettingsExtension or derived type identifier
class tt__ImagingSettingsExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure is a complexType.
///
/// @note class tt__Exposure operations:
/// - tt__Exposure* soap_new_tt__Exposure(soap*) allocate and default initialize
/// - tt__Exposure* soap_new_tt__Exposure(soap*, int num) allocate and default initialize an array
/// - tt__Exposure* soap_new_req_tt__Exposure(soap*, ...) allocate, set required members
/// - tt__Exposure* soap_new_set_tt__Exposure(soap*, ...) allocate, set all public members
/// - tt__Exposure::soap_default(soap*) default initialize members
/// - int soap_read_tt__Exposure(soap*, tt__Exposure*) deserialize from a stream
/// - int soap_write_tt__Exposure(soap*, tt__Exposure*) serialize to a stream
/// - tt__Exposure* tt__Exposure::soap_dup(soap*) returns deep copy of tt__Exposure, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Exposure::soap_del() deep deletes tt__Exposure data members, use only after tt__Exposure::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Exposure::soap_type() returns SOAP_TYPE_tt__Exposure or derived type identifier
class tt__Exposure
{ public:
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the NVT.</li>
///   <li>Manual Disabled exposure algorithm on the NVT.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
///
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority            Priority                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
///
/// Element "Window" of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinExposureTime" of type xs:float.
    float                                MinExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxExposureTime" of type xs:float.
    float                                MaxExposureTime                1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinGain" of type xs:float.
    float                                MinGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxGain" of type xs:float.
    float                                MaxGain                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinIris" of type xs:float.
    float                                MinIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxIris" of type xs:float.
    float                                MaxIris                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
///
/// Element "ExposureTime" of type xs:float.
    float                                ExposureTime                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
///
/// Element "Gain" of type xs:float.
    float                                Gain                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris.
/// </BLOCKQUOTE></PRE>
///
/// Element "Iris" of type xs:float.
    float                                Iris                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange is a complexType.
///
/// @note class tt__WideDynamicRange operations:
/// - tt__WideDynamicRange* soap_new_tt__WideDynamicRange(soap*) allocate and default initialize
/// - tt__WideDynamicRange* soap_new_tt__WideDynamicRange(soap*, int num) allocate and default initialize an array
/// - tt__WideDynamicRange* soap_new_req_tt__WideDynamicRange(soap*, ...) allocate, set required members
/// - tt__WideDynamicRange* soap_new_set_tt__WideDynamicRange(soap*, ...) allocate, set all public members
/// - tt__WideDynamicRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__WideDynamicRange(soap*, tt__WideDynamicRange*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRange(soap*, tt__WideDynamicRange*) serialize to a stream
/// - tt__WideDynamicRange* tt__WideDynamicRange::soap_dup(soap*) returns deep copy of tt__WideDynamicRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__WideDynamicRange::soap_del() deep deletes tt__WideDynamicRange data members, use only after tt__WideDynamicRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__WideDynamicRange::soap_type() returns SOAP_TYPE_tt__WideDynamicRange or derived type identifier
class tt__WideDynamicRange
{ public:
/// <PRE><BLOCKQUOTE>
///   White dynamic range (on/off)
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unitless)
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation is a complexType.
///
/// @note class tt__BacklightCompensation operations:
/// - tt__BacklightCompensation* soap_new_tt__BacklightCompensation(soap*) allocate and default initialize
/// - tt__BacklightCompensation* soap_new_tt__BacklightCompensation(soap*, int num) allocate and default initialize an array
/// - tt__BacklightCompensation* soap_new_req_tt__BacklightCompensation(soap*, ...) allocate, set required members
/// - tt__BacklightCompensation* soap_new_set_tt__BacklightCompensation(soap*, ...) allocate, set all public members
/// - tt__BacklightCompensation::soap_default(soap*) default initialize members
/// - int soap_read_tt__BacklightCompensation(soap*, tt__BacklightCompensation*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensation(soap*, tt__BacklightCompensation*) serialize to a stream
/// - tt__BacklightCompensation* tt__BacklightCompensation::soap_dup(soap*) returns deep copy of tt__BacklightCompensation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__BacklightCompensation::soap_del() deep deletes tt__BacklightCompensation data members, use only after tt__BacklightCompensation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__BacklightCompensation::soap_type() returns SOAP_TYPE_tt__BacklightCompensation or derived type identifier
class tt__BacklightCompensation
{ public:
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ExposureOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusMove is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AbsoluteFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ContinuousFocus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MoveOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AbsoluteFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocusOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ContinuousFocusOptions is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance is a complexType.
///
/// @note class tt__WhiteBalance operations:
/// - tt__WhiteBalance* soap_new_tt__WhiteBalance(soap*) allocate and default initialize
/// - tt__WhiteBalance* soap_new_tt__WhiteBalance(soap*, int num) allocate and default initialize an array
/// - tt__WhiteBalance* soap_new_req_tt__WhiteBalance(soap*, ...) allocate, set required members
/// - tt__WhiteBalance* soap_new_set_tt__WhiteBalance(soap*, ...) allocate, set all public members
/// - tt__WhiteBalance::soap_default(soap*) default initialize members
/// - int soap_read_tt__WhiteBalance(soap*, tt__WhiteBalance*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance(soap*, tt__WhiteBalance*) serialize to a stream
/// - tt__WhiteBalance* tt__WhiteBalance::soap_dup(soap*) returns deep copy of tt__WhiteBalance, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__WhiteBalance::soap_del() deep deletes tt__WhiteBalance data members, use only after tt__WhiteBalance::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__WhiteBalance::soap_type() returns SOAP_TYPE_tt__WhiteBalance or derived type identifier
class tt__WhiteBalance
{ public:
/// <PRE><BLOCKQUOTE>
///   Auto whitebalancing mode (auto/manual).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CrGain" of type xs:float.
    float                                CrGain                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CbGain" of type xs:float.
    float                                CbGain                         1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingStatus20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusStatus20Extension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettings20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the ImagingSettings of a VideoSource. The supported options and ranges can be obtained via the GetOptions command.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__ImagingSettings20 operations:
/// - tt__ImagingSettings20* soap_new_tt__ImagingSettings20(soap*) allocate and default initialize
/// - tt__ImagingSettings20* soap_new_tt__ImagingSettings20(soap*, int num) allocate and default initialize an array
/// - tt__ImagingSettings20* soap_new_req_tt__ImagingSettings20(soap*, ...) allocate, set required members
/// - tt__ImagingSettings20* soap_new_set_tt__ImagingSettings20(soap*, ...) allocate, set all public members
/// - tt__ImagingSettings20::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingSettings20(soap*, tt__ImagingSettings20*) deserialize from a stream
/// - int soap_write_tt__ImagingSettings20(soap*, tt__ImagingSettings20*) serialize to a stream
/// - tt__ImagingSettings20* tt__ImagingSettings20::soap_dup(soap*) returns deep copy of tt__ImagingSettings20, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingSettings20::soap_del() deep deletes tt__ImagingSettings20 data members, use only after tt__ImagingSettings20::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingSettings20::soap_type() returns SOAP_TYPE_tt__ImagingSettings20 or derived type identifier
class tt__ImagingSettings20
{ public:
/// <PRE><BLOCKQUOTE>
///   Enabled/disabled BLC mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "BacklightCompensation" of type "http://www.onvif.org/ver10/schema":BacklightCompensation20.
    tt__BacklightCompensation20*         BacklightCompensation          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image brightness (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Brightness" of type xs:float.
    float*                               Brightness                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Color saturation of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "ColorSaturation" of type xs:float.
    float*                               ColorSaturation                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Contrast of the image (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Contrast" of type xs:float.
    float*                               Contrast                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Exposure mode of the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Exposure" of type "http://www.onvif.org/ver10/schema":Exposure20.
    tt__Exposure20*                      Exposure                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Focus configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Focus" of type "http://www.onvif.org/ver10/schema":FocusConfiguration20.
    tt__FocusConfiguration20*            Focus                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Infrared Cutoff Filter settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "IrCutFilter" of type "http://www.onvif.org/ver10/schema":IrCutFilterMode.
    enum tt__IrCutFilterMode*            IrCutFilter                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Sharpness of the Video image.
/// </BLOCKQUOTE></PRE>
///
/// Element "Sharpness" of type xs:float.
    float*                               Sharpness                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   WDR settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WideDynamicRange" of type "http://www.onvif.org/ver10/schema":WideDynamicRange20.
    tt__WideDynamicRange20*              WideDynamicRange               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   White balance settings.
/// </BLOCKQUOTE></PRE>
///
/// Element "WhiteBalance" of type "http://www.onvif.org/ver10/schema":WhiteBalance20.
    tt__WhiteBalance20*                  WhiteBalance                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20.
    tt__ImagingSettingsExtension20*      Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension20 is a complexType.
///
/// @note class tt__ImagingSettingsExtension20 operations:
/// - tt__ImagingSettingsExtension20* soap_new_tt__ImagingSettingsExtension20(soap*) allocate and default initialize
/// - tt__ImagingSettingsExtension20* soap_new_tt__ImagingSettingsExtension20(soap*, int num) allocate and default initialize an array
/// - tt__ImagingSettingsExtension20* soap_new_req_tt__ImagingSettingsExtension20(soap*, ...) allocate, set required members
/// - tt__ImagingSettingsExtension20* soap_new_set_tt__ImagingSettingsExtension20(soap*, ...) allocate, set all public members
/// - tt__ImagingSettingsExtension20::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension20(soap*, tt__ImagingSettingsExtension20*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension20(soap*, tt__ImagingSettingsExtension20*) serialize to a stream
/// - tt__ImagingSettingsExtension20* tt__ImagingSettingsExtension20::soap_dup(soap*) returns deep copy of tt__ImagingSettingsExtension20, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingSettingsExtension20::soap_del() deep deletes tt__ImagingSettingsExtension20 data members, use only after tt__ImagingSettingsExtension20::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingSettingsExtension20::soap_type() returns SOAP_TYPE_tt__ImagingSettingsExtension20 or derived type identifier
class tt__ImagingSettingsExtension20
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImageStabilization" of type "http://www.onvif.org/ver10/schema":ImageStabilization.
    tt__ImageStabilization*              ImageStabilization             0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202.
    tt__ImagingSettingsExtension202*     Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension202 is a complexType.
///
/// @note class tt__ImagingSettingsExtension202 operations:
/// - tt__ImagingSettingsExtension202* soap_new_tt__ImagingSettingsExtension202(soap*) allocate and default initialize
/// - tt__ImagingSettingsExtension202* soap_new_tt__ImagingSettingsExtension202(soap*, int num) allocate and default initialize an array
/// - tt__ImagingSettingsExtension202* soap_new_req_tt__ImagingSettingsExtension202(soap*, ...) allocate, set required members
/// - tt__ImagingSettingsExtension202* soap_new_set_tt__ImagingSettingsExtension202(soap*, ...) allocate, set all public members
/// - tt__ImagingSettingsExtension202::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension202(soap*, tt__ImagingSettingsExtension202*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension202(soap*, tt__ImagingSettingsExtension202*) serialize to a stream
/// - tt__ImagingSettingsExtension202* tt__ImagingSettingsExtension202::soap_dup(soap*) returns deep copy of tt__ImagingSettingsExtension202, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingSettingsExtension202::soap_del() deep deletes tt__ImagingSettingsExtension202 data members, use only after tt__ImagingSettingsExtension202::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingSettingsExtension202::soap_type() returns SOAP_TYPE_tt__ImagingSettingsExtension202 or derived type identifier
class tt__ImagingSettingsExtension202
{ public:
/// <PRE><BLOCKQUOTE>
///   An optional parameter applied to only auto mode to adjust timing of toggling Ir cut filter.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IrCutFilterAutoAdjustment* is 0..unbounded.
  $ int                                  __sizeIrCutFilterAutoAdjustment 0;
/// Pointer to array tt__IrCutFilterAutoAdjustment* of size 0..unbounded.
    tt__IrCutFilterAutoAdjustment*      *IrCutFilterAutoAdjustment      0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203.
    tt__ImagingSettingsExtension203*     Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension203 is a complexType.
///
/// @note class tt__ImagingSettingsExtension203 operations:
/// - tt__ImagingSettingsExtension203* soap_new_tt__ImagingSettingsExtension203(soap*) allocate and default initialize
/// - tt__ImagingSettingsExtension203* soap_new_tt__ImagingSettingsExtension203(soap*, int num) allocate and default initialize an array
/// - tt__ImagingSettingsExtension203* soap_new_req_tt__ImagingSettingsExtension203(soap*, ...) allocate, set required members
/// - tt__ImagingSettingsExtension203* soap_new_set_tt__ImagingSettingsExtension203(soap*, ...) allocate, set all public members
/// - tt__ImagingSettingsExtension203::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension203(soap*, tt__ImagingSettingsExtension203*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension203(soap*, tt__ImagingSettingsExtension203*) serialize to a stream
/// - tt__ImagingSettingsExtension203* tt__ImagingSettingsExtension203::soap_dup(soap*) returns deep copy of tt__ImagingSettingsExtension203, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingSettingsExtension203::soap_del() deep deletes tt__ImagingSettingsExtension203 data members, use only after tt__ImagingSettingsExtension203::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingSettingsExtension203::soap_type() returns SOAP_TYPE_tt__ImagingSettingsExtension203 or derived type identifier
class tt__ImagingSettingsExtension203
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Contrast Compensation.
/// </BLOCKQUOTE></PRE>
///
/// Element "ToneCompensation" of type "http://www.onvif.org/ver10/schema":ToneCompensation.
    tt__ToneCompensation*                ToneCompensation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Defogging.
/// </BLOCKQUOTE></PRE>
///
/// Element "Defogging" of type "http://www.onvif.org/ver10/schema":Defogging.
    tt__Defogging*                       Defogging                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Image Noise Reduction.
/// </BLOCKQUOTE></PRE>
///
/// Element "NoiseReduction" of type "http://www.onvif.org/ver10/schema":NoiseReduction.
    tt__NoiseReduction*                  NoiseReduction                 0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204.
    tt__ImagingSettingsExtension204*     Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImagingSettingsExtension204 is a complexType.
///
/// @note class tt__ImagingSettingsExtension204 operations:
/// - tt__ImagingSettingsExtension204* soap_new_tt__ImagingSettingsExtension204(soap*) allocate and default initialize
/// - tt__ImagingSettingsExtension204* soap_new_tt__ImagingSettingsExtension204(soap*, int num) allocate and default initialize an array
/// - tt__ImagingSettingsExtension204* soap_new_req_tt__ImagingSettingsExtension204(soap*, ...) allocate, set required members
/// - tt__ImagingSettingsExtension204* soap_new_set_tt__ImagingSettingsExtension204(soap*, ...) allocate, set all public members
/// - tt__ImagingSettingsExtension204::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImagingSettingsExtension204(soap*, tt__ImagingSettingsExtension204*) deserialize from a stream
/// - int soap_write_tt__ImagingSettingsExtension204(soap*, tt__ImagingSettingsExtension204*) serialize to a stream
/// - tt__ImagingSettingsExtension204* tt__ImagingSettingsExtension204::soap_dup(soap*) returns deep copy of tt__ImagingSettingsExtension204, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImagingSettingsExtension204::soap_del() deep deletes tt__ImagingSettingsExtension204 data members, use only after tt__ImagingSettingsExtension204::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImagingSettingsExtension204::soap_type() returns SOAP_TYPE_tt__ImagingSettingsExtension204 or derived type identifier
class tt__ImagingSettingsExtension204
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilization is a complexType.
///
/// @note class tt__ImageStabilization operations:
/// - tt__ImageStabilization* soap_new_tt__ImageStabilization(soap*) allocate and default initialize
/// - tt__ImageStabilization* soap_new_tt__ImageStabilization(soap*, int num) allocate and default initialize an array
/// - tt__ImageStabilization* soap_new_req_tt__ImageStabilization(soap*, ...) allocate, set required members
/// - tt__ImageStabilization* soap_new_set_tt__ImageStabilization(soap*, ...) allocate, set all public members
/// - tt__ImageStabilization::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImageStabilization(soap*, tt__ImageStabilization*) deserialize from a stream
/// - int soap_write_tt__ImageStabilization(soap*, tt__ImageStabilization*) serialize to a stream
/// - tt__ImageStabilization* tt__ImageStabilization::soap_dup(soap*) returns deep copy of tt__ImageStabilization, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImageStabilization::soap_del() deep deletes tt__ImageStabilization data members, use only after tt__ImageStabilization::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImageStabilization::soap_type() returns SOAP_TYPE_tt__ImageStabilization or derived type identifier
class tt__ImageStabilization
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Image Stabilization feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ImageStabilizationMode.
    enum tt__ImageStabilizationMode      Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified)
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ImageStabilizationExtension.
    tt__ImageStabilizationExtension*     Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ImageStabilizationExtension is a complexType.
///
/// @note class tt__ImageStabilizationExtension operations:
/// - tt__ImageStabilizationExtension* soap_new_tt__ImageStabilizationExtension(soap*) allocate and default initialize
/// - tt__ImageStabilizationExtension* soap_new_tt__ImageStabilizationExtension(soap*, int num) allocate and default initialize an array
/// - tt__ImageStabilizationExtension* soap_new_req_tt__ImageStabilizationExtension(soap*, ...) allocate, set required members
/// - tt__ImageStabilizationExtension* soap_new_set_tt__ImageStabilizationExtension(soap*, ...) allocate, set all public members
/// - tt__ImageStabilizationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__ImageStabilizationExtension(soap*, tt__ImageStabilizationExtension*) deserialize from a stream
/// - int soap_write_tt__ImageStabilizationExtension(soap*, tt__ImageStabilizationExtension*) serialize to a stream
/// - tt__ImageStabilizationExtension* tt__ImageStabilizationExtension::soap_dup(soap*) returns deep copy of tt__ImageStabilizationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ImageStabilizationExtension::soap_del() deep deletes tt__ImageStabilizationExtension data members, use only after tt__ImageStabilizationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ImageStabilizationExtension::soap_type() returns SOAP_TYPE_tt__ImageStabilizationExtension or derived type identifier
class tt__ImageStabilizationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustment is a complexType.
///
/// @note class tt__IrCutFilterAutoAdjustment operations:
/// - tt__IrCutFilterAutoAdjustment* soap_new_tt__IrCutFilterAutoAdjustment(soap*) allocate and default initialize
/// - tt__IrCutFilterAutoAdjustment* soap_new_tt__IrCutFilterAutoAdjustment(soap*, int num) allocate and default initialize an array
/// - tt__IrCutFilterAutoAdjustment* soap_new_req_tt__IrCutFilterAutoAdjustment(soap*, ...) allocate, set required members
/// - tt__IrCutFilterAutoAdjustment* soap_new_set_tt__IrCutFilterAutoAdjustment(soap*, ...) allocate, set all public members
/// - tt__IrCutFilterAutoAdjustment::soap_default(soap*) default initialize members
/// - int soap_read_tt__IrCutFilterAutoAdjustment(soap*, tt__IrCutFilterAutoAdjustment*) deserialize from a stream
/// - int soap_write_tt__IrCutFilterAutoAdjustment(soap*, tt__IrCutFilterAutoAdjustment*) serialize to a stream
/// - tt__IrCutFilterAutoAdjustment* tt__IrCutFilterAutoAdjustment::soap_dup(soap*) returns deep copy of tt__IrCutFilterAutoAdjustment, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IrCutFilterAutoAdjustment::soap_del() deep deletes tt__IrCutFilterAutoAdjustment data members, use only after tt__IrCutFilterAutoAdjustment::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IrCutFilterAutoAdjustment::soap_type() returns SOAP_TYPE_tt__IrCutFilterAutoAdjustment or derived type identifier
class tt__IrCutFilterAutoAdjustment
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies which boundaries to automatically toggle Ir cut filter following parameters are applied to. Its options shall be chosen from tt:IrCutFilterAutoBoundaryType.
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundaryType" of type xs:string.
    char*                                BoundaryType                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Adjusts boundary exposure level for toggling Ir cut filter to on/off specified with unitless normalized value from +1.0 to -1.0. Zero is default and -1.0 is the darkest adjustment (Unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "BoundaryOffset" of type xs:float.
    float*                               BoundaryOffset                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Delay time of toggling Ir cut filter to on/off after crossing of the boundary exposure levels.
/// </BLOCKQUOTE></PRE>
///
/// Element "ResponseTime" of type xs:duration.
    xsd__duration                        ResponseTime                   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension.
    tt__IrCutFilterAutoAdjustmentExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentExtension is a complexType.
///
/// @note class tt__IrCutFilterAutoAdjustmentExtension operations:
/// - tt__IrCutFilterAutoAdjustmentExtension* soap_new_tt__IrCutFilterAutoAdjustmentExtension(soap*) allocate and default initialize
/// - tt__IrCutFilterAutoAdjustmentExtension* soap_new_tt__IrCutFilterAutoAdjustmentExtension(soap*, int num) allocate and default initialize an array
/// - tt__IrCutFilterAutoAdjustmentExtension* soap_new_req_tt__IrCutFilterAutoAdjustmentExtension(soap*, ...) allocate, set required members
/// - tt__IrCutFilterAutoAdjustmentExtension* soap_new_set_tt__IrCutFilterAutoAdjustmentExtension(soap*, ...) allocate, set all public members
/// - tt__IrCutFilterAutoAdjustmentExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__IrCutFilterAutoAdjustmentExtension(soap*, tt__IrCutFilterAutoAdjustmentExtension*) deserialize from a stream
/// - int soap_write_tt__IrCutFilterAutoAdjustmentExtension(soap*, tt__IrCutFilterAutoAdjustmentExtension*) serialize to a stream
/// - tt__IrCutFilterAutoAdjustmentExtension* tt__IrCutFilterAutoAdjustmentExtension::soap_dup(soap*) returns deep copy of tt__IrCutFilterAutoAdjustmentExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IrCutFilterAutoAdjustmentExtension::soap_del() deep deletes tt__IrCutFilterAutoAdjustmentExtension data members, use only after tt__IrCutFilterAutoAdjustmentExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IrCutFilterAutoAdjustmentExtension::soap_type() returns SOAP_TYPE_tt__IrCutFilterAutoAdjustmentExtension or derived type identifier
class tt__IrCutFilterAutoAdjustmentExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WideDynamicRange20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether WDR mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__WideDynamicRange20 operations:
/// - tt__WideDynamicRange20* soap_new_tt__WideDynamicRange20(soap*) allocate and default initialize
/// - tt__WideDynamicRange20* soap_new_tt__WideDynamicRange20(soap*, int num) allocate and default initialize an array
/// - tt__WideDynamicRange20* soap_new_req_tt__WideDynamicRange20(soap*, ...) allocate, set required members
/// - tt__WideDynamicRange20* soap_new_set_tt__WideDynamicRange20(soap*, ...) allocate, set all public members
/// - tt__WideDynamicRange20::soap_default(soap*) default initialize members
/// - int soap_read_tt__WideDynamicRange20(soap*, tt__WideDynamicRange20*) deserialize from a stream
/// - int soap_write_tt__WideDynamicRange20(soap*, tt__WideDynamicRange20*) serialize to a stream
/// - tt__WideDynamicRange20* tt__WideDynamicRange20::soap_dup(soap*) returns deep copy of tt__WideDynamicRange20, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__WideDynamicRange20::soap_del() deep deletes tt__WideDynamicRange20 data members, use only after tt__WideDynamicRange20::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__WideDynamicRange20::soap_type() returns SOAP_TYPE_tt__WideDynamicRange20 or derived type identifier
class tt__WideDynamicRange20
{ public:
/// <PRE><BLOCKQUOTE>
///   Wide dynamic range mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WideDynamicMode.
    enum tt__WideDynamicMode             Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":BacklightCompensation20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing whether BLC mode is enabled or disabled (on/off).
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__BacklightCompensation20 operations:
/// - tt__BacklightCompensation20* soap_new_tt__BacklightCompensation20(soap*) allocate and default initialize
/// - tt__BacklightCompensation20* soap_new_tt__BacklightCompensation20(soap*, int num) allocate and default initialize an array
/// - tt__BacklightCompensation20* soap_new_req_tt__BacklightCompensation20(soap*, ...) allocate, set required members
/// - tt__BacklightCompensation20* soap_new_set_tt__BacklightCompensation20(soap*, ...) allocate, set all public members
/// - tt__BacklightCompensation20::soap_default(soap*) default initialize members
/// - int soap_read_tt__BacklightCompensation20(soap*, tt__BacklightCompensation20*) deserialize from a stream
/// - int soap_write_tt__BacklightCompensation20(soap*, tt__BacklightCompensation20*) serialize to a stream
/// - tt__BacklightCompensation20* tt__BacklightCompensation20::soap_dup(soap*) returns deep copy of tt__BacklightCompensation20, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__BacklightCompensation20::soap_del() deep deletes tt__BacklightCompensation20 data members, use only after tt__BacklightCompensation20::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__BacklightCompensation20::soap_type() returns SOAP_TYPE_tt__BacklightCompensation20 or derived type identifier
class tt__BacklightCompensation20
{ public:
/// <PRE><BLOCKQUOTE>
///   Backlight compensation mode (on/off).
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":BacklightCompensationMode.
    enum tt__BacklightCompensationMode   Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter (unit unspecified).
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Exposure20 is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Type describing the exposure settings.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__Exposure20 operations:
/// - tt__Exposure20* soap_new_tt__Exposure20(soap*) allocate and default initialize
/// - tt__Exposure20* soap_new_tt__Exposure20(soap*, int num) allocate and default initialize an array
/// - tt__Exposure20* soap_new_req_tt__Exposure20(soap*, ...) allocate, set required members
/// - tt__Exposure20* soap_new_set_tt__Exposure20(soap*, ...) allocate, set all public members
/// - tt__Exposure20::soap_default(soap*) default initialize members
/// - int soap_read_tt__Exposure20(soap*, tt__Exposure20*) deserialize from a stream
/// - int soap_write_tt__Exposure20(soap*, tt__Exposure20*) serialize to a stream
/// - tt__Exposure20* tt__Exposure20::soap_dup(soap*) returns deep copy of tt__Exposure20, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Exposure20::soap_del() deep deletes tt__Exposure20 data members, use only after tt__Exposure20::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Exposure20::soap_type() returns SOAP_TYPE_tt__Exposure20 or derived type identifier
class tt__Exposure20
{ public:
/// <PRE><BLOCKQUOTE>
///   Exposure Mode
///   <ul>
///   <li>Auto Enabled the exposure algorithm on the device.</li>
///   <li>Manual Disabled exposure algorithm on the device.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":ExposureMode.
    enum tt__ExposureMode                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The exposure priority mode (low noise/framerate).
/// </BLOCKQUOTE></PRE>
///
/// Element "Priority" of type "http://www.onvif.org/ver10/schema":ExposurePriority.
    enum tt__ExposurePriority*           Priority                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Rectangular exposure mask.
/// </BLOCKQUOTE></PRE>
///
/// Element "Window" of type "http://www.onvif.org/ver10/schema":Rectangle.
    tt__Rectangle*                       Window                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinExposureTime" of type xs:float.
    float*                               MinExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of exposure time range allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxExposureTime" of type xs:float.
    float*                               MaxExposureTime                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinGain" of type xs:float.
    float*                               MinGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the sensor gain range that is allowed to be used by the algorithm.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxGain" of type xs:float.
    float*                               MaxGain                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Minimum value of the iris range allowed to be used by the algorithm. 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "MinIris" of type xs:float.
    float*                               MinIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Maximum value of the iris range allowed to be used by the algorithm. 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxIris" of type xs:float.
    float*                               MaxIris                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed exposure time used by the image sensor (s).
/// </BLOCKQUOTE></PRE>
///
/// Element "ExposureTime" of type xs:float.
    float*                               ExposureTime                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed gain used by the image sensor (dB).
/// </BLOCKQUOTE></PRE>
///
/// Element "Gain" of type xs:float.
    float*                               Gain                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The fixed attenuation of input light affected by the iris (dB). 0dB maps to a fully opened iris and positive values map to higher attenuation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Iris" of type xs:float.
    float*                               Iris                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensation is a complexType.
///
/// @note class tt__ToneCompensation operations:
/// - tt__ToneCompensation* soap_new_tt__ToneCompensation(soap*) allocate and default initialize
/// - tt__ToneCompensation* soap_new_tt__ToneCompensation(soap*, int num) allocate and default initialize an array
/// - tt__ToneCompensation* soap_new_req_tt__ToneCompensation(soap*, ...) allocate, set required members
/// - tt__ToneCompensation* soap_new_set_tt__ToneCompensation(soap*, ...) allocate, set all public members
/// - tt__ToneCompensation::soap_default(soap*) default initialize members
/// - int soap_read_tt__ToneCompensation(soap*, tt__ToneCompensation*) deserialize from a stream
/// - int soap_write_tt__ToneCompensation(soap*, tt__ToneCompensation*) serialize to a stream
/// - tt__ToneCompensation* tt__ToneCompensation::soap_dup(soap*) returns deep copy of tt__ToneCompensation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ToneCompensation::soap_del() deep deletes tt__ToneCompensation data members, use only after tt__ToneCompensation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ToneCompensation::soap_type() returns SOAP_TYPE_tt__ToneCompensation or derived type identifier
class tt__ToneCompensation
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic ToneCompensation feature. Its options shall be chosen from tt:ToneCompensationMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ToneCompensationExtension.
    tt__ToneCompensationExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ToneCompensationExtension is a complexType.
///
/// @note class tt__ToneCompensationExtension operations:
/// - tt__ToneCompensationExtension* soap_new_tt__ToneCompensationExtension(soap*) allocate and default initialize
/// - tt__ToneCompensationExtension* soap_new_tt__ToneCompensationExtension(soap*, int num) allocate and default initialize an array
/// - tt__ToneCompensationExtension* soap_new_req_tt__ToneCompensationExtension(soap*, ...) allocate, set required members
/// - tt__ToneCompensationExtension* soap_new_set_tt__ToneCompensationExtension(soap*, ...) allocate, set all public members
/// - tt__ToneCompensationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__ToneCompensationExtension(soap*, tt__ToneCompensationExtension*) deserialize from a stream
/// - int soap_write_tt__ToneCompensationExtension(soap*, tt__ToneCompensationExtension*) serialize to a stream
/// - tt__ToneCompensationExtension* tt__ToneCompensationExtension::soap_dup(soap*) returns deep copy of tt__ToneCompensationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ToneCompensationExtension::soap_del() deep deletes tt__ToneCompensationExtension data members, use only after tt__ToneCompensationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ToneCompensationExtension::soap_type() returns SOAP_TYPE_tt__ToneCompensationExtension or derived type identifier
class tt__ToneCompensationExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Defogging is a complexType.
///
/// @note class tt__Defogging operations:
/// - tt__Defogging* soap_new_tt__Defogging(soap*) allocate and default initialize
/// - tt__Defogging* soap_new_tt__Defogging(soap*, int num) allocate and default initialize an array
/// - tt__Defogging* soap_new_req_tt__Defogging(soap*, ...) allocate, set required members
/// - tt__Defogging* soap_new_set_tt__Defogging(soap*, ...) allocate, set all public members
/// - tt__Defogging::soap_default(soap*) default initialize members
/// - int soap_read_tt__Defogging(soap*, tt__Defogging*) deserialize from a stream
/// - int soap_write_tt__Defogging(soap*, tt__Defogging*) serialize to a stream
/// - tt__Defogging* tt__Defogging::soap_dup(soap*) returns deep copy of tt__Defogging, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Defogging::soap_del() deep deletes tt__Defogging data members, use only after tt__Defogging::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Defogging::soap_type() returns SOAP_TYPE_tt__Defogging or derived type identifier
class tt__Defogging
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable or automatic Defogging feature. Its options shall be chosen from tt:DefoggingMode Type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type xs:string.
    char*                                Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional level parameter specified with unitless normalized value from 0.0 to +1.0.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float*                               Level                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":DefoggingExtension.
    tt__DefoggingExtension*              Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DefoggingExtension is a complexType.
///
/// @note class tt__DefoggingExtension operations:
/// - tt__DefoggingExtension* soap_new_tt__DefoggingExtension(soap*) allocate and default initialize
/// - tt__DefoggingExtension* soap_new_tt__DefoggingExtension(soap*, int num) allocate and default initialize an array
/// - tt__DefoggingExtension* soap_new_req_tt__DefoggingExtension(soap*, ...) allocate, set required members
/// - tt__DefoggingExtension* soap_new_set_tt__DefoggingExtension(soap*, ...) allocate, set all public members
/// - tt__DefoggingExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__DefoggingExtension(soap*, tt__DefoggingExtension*) deserialize from a stream
/// - int soap_write_tt__DefoggingExtension(soap*, tt__DefoggingExtension*) serialize to a stream
/// - tt__DefoggingExtension* tt__DefoggingExtension::soap_dup(soap*) returns deep copy of tt__DefoggingExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DefoggingExtension::soap_del() deep deletes tt__DefoggingExtension data members, use only after tt__DefoggingExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DefoggingExtension::soap_type() returns SOAP_TYPE_tt__DefoggingExtension or derived type identifier
class tt__DefoggingExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":NoiseReduction is a complexType.
///
/// @note class tt__NoiseReduction operations:
/// - tt__NoiseReduction* soap_new_tt__NoiseReduction(soap*) allocate and default initialize
/// - tt__NoiseReduction* soap_new_tt__NoiseReduction(soap*, int num) allocate and default initialize an array
/// - tt__NoiseReduction* soap_new_req_tt__NoiseReduction(soap*, ...) allocate, set required members
/// - tt__NoiseReduction* soap_new_set_tt__NoiseReduction(soap*, ...) allocate, set all public members
/// - tt__NoiseReduction::soap_default(soap*) default initialize members
/// - int soap_read_tt__NoiseReduction(soap*, tt__NoiseReduction*) deserialize from a stream
/// - int soap_write_tt__NoiseReduction(soap*, tt__NoiseReduction*) serialize to a stream
/// - tt__NoiseReduction* tt__NoiseReduction::soap_dup(soap*) returns deep copy of tt__NoiseReduction, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NoiseReduction::soap_del() deep deletes tt__NoiseReduction data members, use only after tt__NoiseReduction::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NoiseReduction::soap_type() returns SOAP_TYPE_tt__NoiseReduction or derived type identifier
class tt__NoiseReduction
{ public:
/// <PRE><BLOCKQUOTE>
///   Level parameter specified with unitless normalized value from 0.0 to +1.0. Level=0 means no noise reduction or minimal noise reduction.
/// </BLOCKQUOTE></PRE>
///
/// Element "Level" of type xs:float.
    float                                Level                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension2 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension3 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImagingOptions20Extension4 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ImageStabilizationOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":IrCutFilterAutoAdjustmentOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WideDynamicRangeOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":BacklightCompensationOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ExposureOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MoveOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RelativeFocusOptions20 is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20 is a complexType.
///
/// @note class tt__WhiteBalance20 operations:
/// - tt__WhiteBalance20* soap_new_tt__WhiteBalance20(soap*) allocate and default initialize
/// - tt__WhiteBalance20* soap_new_tt__WhiteBalance20(soap*, int num) allocate and default initialize an array
/// - tt__WhiteBalance20* soap_new_req_tt__WhiteBalance20(soap*, ...) allocate, set required members
/// - tt__WhiteBalance20* soap_new_set_tt__WhiteBalance20(soap*, ...) allocate, set all public members
/// - tt__WhiteBalance20::soap_default(soap*) default initialize members
/// - int soap_read_tt__WhiteBalance20(soap*, tt__WhiteBalance20*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance20(soap*, tt__WhiteBalance20*) serialize to a stream
/// - tt__WhiteBalance20* tt__WhiteBalance20::soap_dup(soap*) returns deep copy of tt__WhiteBalance20, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__WhiteBalance20::soap_del() deep deletes tt__WhiteBalance20 data members, use only after tt__WhiteBalance20::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__WhiteBalance20::soap_type() returns SOAP_TYPE_tt__WhiteBalance20 or derived type identifier
class tt__WhiteBalance20
{ public:
/// <PRE><BLOCKQUOTE>
///   'AUTO' or 'MANUAL'
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":WhiteBalanceMode.
    enum tt__WhiteBalanceMode            Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CrGain" of type xs:float.
    float*                               CrGain                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Bgain (unitless).
/// </BLOCKQUOTE></PRE>
///
/// Element "CbGain" of type xs:float.
    float*                               CbGain                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":WhiteBalance20Extension.
    tt__WhiteBalance20Extension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":WhiteBalance20Extension is a complexType.
///
/// @note class tt__WhiteBalance20Extension operations:
/// - tt__WhiteBalance20Extension* soap_new_tt__WhiteBalance20Extension(soap*) allocate and default initialize
/// - tt__WhiteBalance20Extension* soap_new_tt__WhiteBalance20Extension(soap*, int num) allocate and default initialize an array
/// - tt__WhiteBalance20Extension* soap_new_req_tt__WhiteBalance20Extension(soap*, ...) allocate, set required members
/// - tt__WhiteBalance20Extension* soap_new_set_tt__WhiteBalance20Extension(soap*, ...) allocate, set all public members
/// - tt__WhiteBalance20Extension::soap_default(soap*) default initialize members
/// - int soap_read_tt__WhiteBalance20Extension(soap*, tt__WhiteBalance20Extension*) deserialize from a stream
/// - int soap_write_tt__WhiteBalance20Extension(soap*, tt__WhiteBalance20Extension*) serialize to a stream
/// - tt__WhiteBalance20Extension* tt__WhiteBalance20Extension::soap_dup(soap*) returns deep copy of tt__WhiteBalance20Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__WhiteBalance20Extension::soap_del() deep deletes tt__WhiteBalance20Extension data members, use only after tt__WhiteBalance20Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__WhiteBalance20Extension::soap_type() returns SOAP_TYPE_tt__WhiteBalance20Extension or derived type identifier
class tt__WhiteBalance20Extension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20 is a complexType.
///
/// @note class tt__FocusConfiguration20 operations:
/// - tt__FocusConfiguration20* soap_new_tt__FocusConfiguration20(soap*) allocate and default initialize
/// - tt__FocusConfiguration20* soap_new_tt__FocusConfiguration20(soap*, int num) allocate and default initialize an array
/// - tt__FocusConfiguration20* soap_new_req_tt__FocusConfiguration20(soap*, ...) allocate, set required members
/// - tt__FocusConfiguration20* soap_new_set_tt__FocusConfiguration20(soap*, ...) allocate, set all public members
/// - tt__FocusConfiguration20::soap_default(soap*) default initialize members
/// - int soap_read_tt__FocusConfiguration20(soap*, tt__FocusConfiguration20*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration20(soap*, tt__FocusConfiguration20*) serialize to a stream
/// - tt__FocusConfiguration20* tt__FocusConfiguration20::soap_dup(soap*) returns deep copy of tt__FocusConfiguration20, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__FocusConfiguration20::soap_del() deep deletes tt__FocusConfiguration20 data members, use only after tt__FocusConfiguration20::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__FocusConfiguration20::soap_type() returns SOAP_TYPE_tt__FocusConfiguration20 or derived type identifier
class tt__FocusConfiguration20
{ public:
/// <PRE><BLOCKQUOTE>
///   Mode of auto focus.
///   <ul>
///   <li>AUTO - The device automatically adjusts focus.</li>
///   <li>MANUAL - The device does not automatically adjust focus.</li>
///   </ul>
///   Note: for devices supporting both manual and auto operation at the same time manual operation may be supported even if the Mode parameter is set to Auto.
/// </BLOCKQUOTE></PRE>
///
/// Element "AutoFocusMode" of type "http://www.onvif.org/ver10/schema":AutoFocusMode.
    enum tt__AutoFocusMode               AutoFocusMode                  1;	///< Required element.
/// Element "DefaultSpeed" of type xs:float.
    float*                               DefaultSpeed                   0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus near limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "NearLimit" of type xs:float.
    float*                               NearLimit                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Parameter to set autofocus far limit (unit: meter).
/// </BLOCKQUOTE></PRE>
///
/// Element "FarLimit" of type xs:float.
    float*                               FarLimit                       0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension.
    tt__FocusConfiguration20Extension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Zero or more modes as defined in enumeration tt:AFModes.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AFMode" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   AFMode                         0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FocusConfiguration20Extension is a complexType.
///
/// @note class tt__FocusConfiguration20Extension operations:
/// - tt__FocusConfiguration20Extension* soap_new_tt__FocusConfiguration20Extension(soap*) allocate and default initialize
/// - tt__FocusConfiguration20Extension* soap_new_tt__FocusConfiguration20Extension(soap*, int num) allocate and default initialize an array
/// - tt__FocusConfiguration20Extension* soap_new_req_tt__FocusConfiguration20Extension(soap*, ...) allocate, set required members
/// - tt__FocusConfiguration20Extension* soap_new_set_tt__FocusConfiguration20Extension(soap*, ...) allocate, set all public members
/// - tt__FocusConfiguration20Extension::soap_default(soap*) default initialize members
/// - int soap_read_tt__FocusConfiguration20Extension(soap*, tt__FocusConfiguration20Extension*) deserialize from a stream
/// - int soap_write_tt__FocusConfiguration20Extension(soap*, tt__FocusConfiguration20Extension*) serialize to a stream
/// - tt__FocusConfiguration20Extension* tt__FocusConfiguration20Extension::soap_dup(soap*) returns deep copy of tt__FocusConfiguration20Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__FocusConfiguration20Extension::soap_del() deep deletes tt__FocusConfiguration20Extension data members, use only after tt__FocusConfiguration20Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__FocusConfiguration20Extension::soap_type() returns SOAP_TYPE_tt__FocusConfiguration20Extension or derived type identifier
class tt__FocusConfiguration20Extension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":WhiteBalanceOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions20 is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FocusOptions20Extension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ToneCompensationOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":DefoggingOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":NoiseReductionOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":ItemList is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of parameters according to the corresponding ItemListDescription.
///   Each item in the list shall have a unique name.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__ItemList operations:
/// - tt__ItemList* soap_new_tt__ItemList(soap*) allocate and default initialize
/// - tt__ItemList* soap_new_tt__ItemList(soap*, int num) allocate and default initialize an array
/// - tt__ItemList* soap_new_req_tt__ItemList(soap*, ...) allocate, set required members
/// - tt__ItemList* soap_new_set_tt__ItemList(soap*, ...) allocate, set all public members
/// - tt__ItemList::soap_default(soap*) default initialize members
/// - int soap_read_tt__ItemList(soap*, tt__ItemList*) deserialize from a stream
/// - int soap_write_tt__ItemList(soap*, tt__ItemList*) serialize to a stream
/// - tt__ItemList* tt__ItemList::soap_dup(soap*) returns deep copy of tt__ItemList, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ItemList::soap_del() deep deletes tt__ItemList data members, use only after tt__ItemList::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ItemList::soap_type() returns SOAP_TYPE_tt__ItemList or derived type identifier
class tt__ItemList
{ public:
/// <PRE><BLOCKQUOTE>
///   Value name pair as defined by the corresponding description.
/// </BLOCKQUOTE></PRE>
///
/// Size of SimpleItem array is 0..unbounded.
  $ int                                  __sizeSimpleItem               0;
/// @note class _tt__ItemList_SimpleItem operations:
/// - _tt__ItemList_SimpleItem* soap_new__tt__ItemList_SimpleItem(soap*) allocate and default initialize
/// - _tt__ItemList_SimpleItem* soap_new__tt__ItemList_SimpleItem(soap*, int num) allocate and default initialize an array
/// - _tt__ItemList_SimpleItem* soap_new_req__tt__ItemList_SimpleItem(soap*, ...) allocate, set required members
/// - _tt__ItemList_SimpleItem* soap_new_set__tt__ItemList_SimpleItem(soap*, ...) allocate, set all public members
/// - _tt__ItemList_SimpleItem::soap_default(soap*) default initialize members
/// - int soap_read__tt__ItemList_SimpleItem(soap*, _tt__ItemList_SimpleItem*) deserialize from a stream
/// - int soap_write__tt__ItemList_SimpleItem(soap*, _tt__ItemList_SimpleItem*) serialize to a stream
/// - _tt__ItemList_SimpleItem* _tt__ItemList_SimpleItem::soap_dup(soap*) returns deep copy of _tt__ItemList_SimpleItem, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tt__ItemList_SimpleItem::soap_del() deep deletes _tt__ItemList_SimpleItem data members, use only after _tt__ItemList_SimpleItem::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tt__ItemList_SimpleItem::soap_type() returns SOAP_TYPE__tt__ItemList_SimpleItem or derived type identifier
    class _tt__ItemList_SimpleItem
    { public:
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Item value. The type is defined in the corresponding description.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Value" of type xs:anySimpleType.
  @ xsd__anySimpleType                   Value                          1;	///< Required attribute.
    }                                   *SimpleItem                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Complex value structure.
/// </BLOCKQUOTE></PRE>
///
/// Size of ElementItem array is 0..unbounded.
  $ int                                  __sizeElementItem              0;
/// @note class _tt__ItemList_ElementItem operations:
/// - _tt__ItemList_ElementItem* soap_new__tt__ItemList_ElementItem(soap*) allocate and default initialize
/// - _tt__ItemList_ElementItem* soap_new__tt__ItemList_ElementItem(soap*, int num) allocate and default initialize an array
/// - _tt__ItemList_ElementItem* soap_new_req__tt__ItemList_ElementItem(soap*, ...) allocate, set required members
/// - _tt__ItemList_ElementItem* soap_new_set__tt__ItemList_ElementItem(soap*, ...) allocate, set all public members
/// - _tt__ItemList_ElementItem::soap_default(soap*) default initialize members
/// - int soap_read__tt__ItemList_ElementItem(soap*, _tt__ItemList_ElementItem*) deserialize from a stream
/// - int soap_write__tt__ItemList_ElementItem(soap*, _tt__ItemList_ElementItem*) serialize to a stream
/// - _tt__ItemList_ElementItem* _tt__ItemList_ElementItem::soap_dup(soap*) returns deep copy of _tt__ItemList_ElementItem, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tt__ItemList_ElementItem::soap_del() deep deletes _tt__ItemList_ElementItem data members, use only after _tt__ItemList_ElementItem::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tt__ItemList_ElementItem::soap_type() returns SOAP_TYPE__tt__ItemList_ElementItem or derived type identifier
    class _tt__ItemList_ElementItem
    { public:
/// <any namespace="##any">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Item name.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
    }                                   *ElementItem                    0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ItemListExtension.
    tt__ItemListExtension*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ItemListExtension is a complexType.
///
/// @note class tt__ItemListExtension operations:
/// - tt__ItemListExtension* soap_new_tt__ItemListExtension(soap*) allocate and default initialize
/// - tt__ItemListExtension* soap_new_tt__ItemListExtension(soap*, int num) allocate and default initialize an array
/// - tt__ItemListExtension* soap_new_req_tt__ItemListExtension(soap*, ...) allocate, set required members
/// - tt__ItemListExtension* soap_new_set_tt__ItemListExtension(soap*, ...) allocate, set all public members
/// - tt__ItemListExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__ItemListExtension(soap*, tt__ItemListExtension*) deserialize from a stream
/// - int soap_write_tt__ItemListExtension(soap*, tt__ItemListExtension*) serialize to a stream
/// - tt__ItemListExtension* tt__ItemListExtension::soap_dup(soap*) returns deep copy of tt__ItemListExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ItemListExtension::soap_del() deep deletes tt__ItemListExtension data members, use only after tt__ItemListExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ItemListExtension::soap_type() returns SOAP_TYPE_tt__ItemListExtension or derived type identifier
class tt__ItemListExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MessageDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ItemListDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Polyline is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration is a complexType.
///
/// @note class tt__AnalyticsEngineConfiguration operations:
/// - tt__AnalyticsEngineConfiguration* soap_new_tt__AnalyticsEngineConfiguration(soap*) allocate and default initialize
/// - tt__AnalyticsEngineConfiguration* soap_new_tt__AnalyticsEngineConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__AnalyticsEngineConfiguration* soap_new_req_tt__AnalyticsEngineConfiguration(soap*, ...) allocate, set required members
/// - tt__AnalyticsEngineConfiguration* soap_new_set_tt__AnalyticsEngineConfiguration(soap*, ...) allocate, set all public members
/// - tt__AnalyticsEngineConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__AnalyticsEngineConfiguration(soap*, tt__AnalyticsEngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineConfiguration(soap*, tt__AnalyticsEngineConfiguration*) serialize to a stream
/// - tt__AnalyticsEngineConfiguration* tt__AnalyticsEngineConfiguration::soap_dup(soap*) returns deep copy of tt__AnalyticsEngineConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AnalyticsEngineConfiguration::soap_del() deep deletes tt__AnalyticsEngineConfiguration data members, use only after tt__AnalyticsEngineConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AnalyticsEngineConfiguration::soap_type() returns SOAP_TYPE_tt__AnalyticsEngineConfiguration or derived type identifier
class tt__AnalyticsEngineConfiguration
{ public:
/// Size of array of tt__Config* is 0..unbounded.
  $ int                                  __sizeAnalyticsModule          0;
/// Pointer to array tt__Config* of size 0..unbounded.
    tt__Config*                         *AnalyticsModule                0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension.
    tt__AnalyticsEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":AnalyticsEngineConfigurationExtension is a complexType.
///
/// @note class tt__AnalyticsEngineConfigurationExtension operations:
/// - tt__AnalyticsEngineConfigurationExtension* soap_new_tt__AnalyticsEngineConfigurationExtension(soap*) allocate and default initialize
/// - tt__AnalyticsEngineConfigurationExtension* soap_new_tt__AnalyticsEngineConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__AnalyticsEngineConfigurationExtension* soap_new_req_tt__AnalyticsEngineConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__AnalyticsEngineConfigurationExtension* soap_new_set_tt__AnalyticsEngineConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__AnalyticsEngineConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__AnalyticsEngineConfigurationExtension(soap*, tt__AnalyticsEngineConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__AnalyticsEngineConfigurationExtension(soap*, tt__AnalyticsEngineConfigurationExtension*) serialize to a stream
/// - tt__AnalyticsEngineConfigurationExtension* tt__AnalyticsEngineConfigurationExtension::soap_dup(soap*) returns deep copy of tt__AnalyticsEngineConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AnalyticsEngineConfigurationExtension::soap_del() deep deletes tt__AnalyticsEngineConfigurationExtension data members, use only after tt__AnalyticsEngineConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AnalyticsEngineConfigurationExtension::soap_type() returns SOAP_TYPE_tt__AnalyticsEngineConfigurationExtension or derived type identifier
class tt__AnalyticsEngineConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfiguration is a complexType.
///
/// @note class tt__RuleEngineConfiguration operations:
/// - tt__RuleEngineConfiguration* soap_new_tt__RuleEngineConfiguration(soap*) allocate and default initialize
/// - tt__RuleEngineConfiguration* soap_new_tt__RuleEngineConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__RuleEngineConfiguration* soap_new_req_tt__RuleEngineConfiguration(soap*, ...) allocate, set required members
/// - tt__RuleEngineConfiguration* soap_new_set_tt__RuleEngineConfiguration(soap*, ...) allocate, set all public members
/// - tt__RuleEngineConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__RuleEngineConfiguration(soap*, tt__RuleEngineConfiguration*) deserialize from a stream
/// - int soap_write_tt__RuleEngineConfiguration(soap*, tt__RuleEngineConfiguration*) serialize to a stream
/// - tt__RuleEngineConfiguration* tt__RuleEngineConfiguration::soap_dup(soap*) returns deep copy of tt__RuleEngineConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RuleEngineConfiguration::soap_del() deep deletes tt__RuleEngineConfiguration data members, use only after tt__RuleEngineConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RuleEngineConfiguration::soap_type() returns SOAP_TYPE_tt__RuleEngineConfiguration or derived type identifier
class tt__RuleEngineConfiguration
{ public:
/// Size of array of tt__Config* is 0..unbounded.
  $ int                                  __sizeRule                     0;
/// Pointer to array tt__Config* of size 0..unbounded.
    tt__Config*                         *Rule                           0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension.
    tt__RuleEngineConfigurationExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RuleEngineConfigurationExtension is a complexType.
///
/// @note class tt__RuleEngineConfigurationExtension operations:
/// - tt__RuleEngineConfigurationExtension* soap_new_tt__RuleEngineConfigurationExtension(soap*) allocate and default initialize
/// - tt__RuleEngineConfigurationExtension* soap_new_tt__RuleEngineConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__RuleEngineConfigurationExtension* soap_new_req_tt__RuleEngineConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__RuleEngineConfigurationExtension* soap_new_set_tt__RuleEngineConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__RuleEngineConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__RuleEngineConfigurationExtension(soap*, tt__RuleEngineConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__RuleEngineConfigurationExtension(soap*, tt__RuleEngineConfigurationExtension*) serialize to a stream
/// - tt__RuleEngineConfigurationExtension* tt__RuleEngineConfigurationExtension::soap_dup(soap*) returns deep copy of tt__RuleEngineConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RuleEngineConfigurationExtension::soap_del() deep deletes tt__RuleEngineConfigurationExtension data members, use only after tt__RuleEngineConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RuleEngineConfigurationExtension::soap_type() returns SOAP_TYPE_tt__RuleEngineConfigurationExtension or derived type identifier
class tt__RuleEngineConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Config is a complexType.
///
/// @note class tt__Config operations:
/// - tt__Config* soap_new_tt__Config(soap*) allocate and default initialize
/// - tt__Config* soap_new_tt__Config(soap*, int num) allocate and default initialize an array
/// - tt__Config* soap_new_req_tt__Config(soap*, ...) allocate, set required members
/// - tt__Config* soap_new_set_tt__Config(soap*, ...) allocate, set all public members
/// - tt__Config::soap_default(soap*) default initialize members
/// - int soap_read_tt__Config(soap*, tt__Config*) deserialize from a stream
/// - int soap_write_tt__Config(soap*, tt__Config*) serialize to a stream
/// - tt__Config* tt__Config::soap_dup(soap*) returns deep copy of tt__Config, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Config::soap_del() deep deletes tt__Config data members, use only after tt__Config::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Config::soap_type() returns SOAP_TYPE_tt__Config or derived type identifier
class tt__Config
{ public:
/// <PRE><BLOCKQUOTE>
///   List of configuration parameters as defined in the correspding description.
/// </BLOCKQUOTE></PRE>
///
/// Element "Parameters" of type "http://www.onvif.org/ver10/schema":ItemList.
    tt__ItemList*                        Parameters                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Name of the configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Name" of type xs:string.
  @ char*                                Name                           1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   The Type attribute specifies the type of rule and shall be equal to value of one of Name attributes of ConfigDescription elements returned by GetSupportedRules and GetSupportedAnalyticsModules command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Type" of type xs:QName.
  @ _QName                               Type                           1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigDescription is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ConfigDescriptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedRules is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedRulesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedAnalyticsModules is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SupportedAnalyticsModulesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArray is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArrayExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolylineArrayConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MotionExpression is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MotionExpressionConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CellLayout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneLayout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Layout is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":CodingCapabilities is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":LayoutOptionsExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneLayoutOptions is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PaneOptionExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Receiver is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReceiverStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceReference is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":DateTimeRange is a complexType.
///
/// @note class tt__DateTimeRange operations:
/// - tt__DateTimeRange* soap_new_tt__DateTimeRange(soap*) allocate and default initialize
/// - tt__DateTimeRange* soap_new_tt__DateTimeRange(soap*, int num) allocate and default initialize an array
/// - tt__DateTimeRange* soap_new_req_tt__DateTimeRange(soap*, ...) allocate, set required members
/// - tt__DateTimeRange* soap_new_set_tt__DateTimeRange(soap*, ...) allocate, set all public members
/// - tt__DateTimeRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__DateTimeRange(soap*, tt__DateTimeRange*) deserialize from a stream
/// - int soap_write_tt__DateTimeRange(soap*, tt__DateTimeRange*) serialize to a stream
/// - tt__DateTimeRange* tt__DateTimeRange::soap_dup(soap*) returns deep copy of tt__DateTimeRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DateTimeRange::soap_del() deep deletes tt__DateTimeRange data members, use only after tt__DateTimeRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DateTimeRange::soap_type() returns SOAP_TYPE_tt__DateTimeRange or derived type identifier
class tt__DateTimeRange
{ public:
/// Element "From" of type xs:dateTime.
    time_t                               From                           1;	///< Required element.
/// Element "Until" of type xs:dateTime.
    time_t                               Until                          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingSummary is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchScope is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SearchScopeExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PTZPositionFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindRecordingResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindEventResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindEventResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindPTZPositionResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindPTZPositionResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindMetadataResultList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":FindMetadataResult is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingSourceInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MediaAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackAttributesExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataAttributes is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TrackConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetRecordingsResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetTracksResponseList is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetTracksResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobSourceExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobTrack is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateInformationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateSource is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateTracks is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":RecordingJobStateTrack is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":GetRecordingJobsResponseItem is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ReplayConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsDeviceEngineConfigurationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":EngineConfiguration is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfo is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInputInfoExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceIdentification is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":SourceIdentificationExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":MetadataInputExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsStateInformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsState is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActionEngineEventPayload is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActionEngineEventPayloadExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassCandidate is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassDescriptor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioClassDescriptorExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ActiveConnection is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileStatus is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ProfileStatusExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfiguration is a complexType.
///
/// @note class tt__OSDPosConfiguration operations:
/// - tt__OSDPosConfiguration* soap_new_tt__OSDPosConfiguration(soap*) allocate and default initialize
/// - tt__OSDPosConfiguration* soap_new_tt__OSDPosConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__OSDPosConfiguration* soap_new_req_tt__OSDPosConfiguration(soap*, ...) allocate, set required members
/// - tt__OSDPosConfiguration* soap_new_set_tt__OSDPosConfiguration(soap*, ...) allocate, set all public members
/// - tt__OSDPosConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDPosConfiguration(soap*, tt__OSDPosConfiguration*) deserialize from a stream
/// - int soap_write_tt__OSDPosConfiguration(soap*, tt__OSDPosConfiguration*) serialize to a stream
/// - tt__OSDPosConfiguration* tt__OSDPosConfiguration::soap_dup(soap*) returns deep copy of tt__OSDPosConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDPosConfiguration::soap_del() deep deletes tt__OSDPosConfiguration data members, use only after tt__OSDPosConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDPosConfiguration::soap_type() returns SOAP_TYPE_tt__OSDPosConfiguration or derived type identifier
class tt__OSDPosConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   For OSD position type, following are the pre-defined: <ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type xs:string.
    char*                                Type                           1;	///< Required element.
/// Element "Pos" of type "http://www.onvif.org/ver10/schema":Vector.
    tt__Vector*                          Pos                            0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension.
    tt__OSDPosConfigurationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDPosConfigurationExtension is a complexType.
///
/// @note class tt__OSDPosConfigurationExtension operations:
/// - tt__OSDPosConfigurationExtension* soap_new_tt__OSDPosConfigurationExtension(soap*) allocate and default initialize
/// - tt__OSDPosConfigurationExtension* soap_new_tt__OSDPosConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__OSDPosConfigurationExtension* soap_new_req_tt__OSDPosConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__OSDPosConfigurationExtension* soap_new_set_tt__OSDPosConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__OSDPosConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDPosConfigurationExtension(soap*, tt__OSDPosConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__OSDPosConfigurationExtension(soap*, tt__OSDPosConfigurationExtension*) serialize to a stream
/// - tt__OSDPosConfigurationExtension* tt__OSDPosConfigurationExtension::soap_dup(soap*) returns deep copy of tt__OSDPosConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDPosConfigurationExtension::soap_del() deep deletes tt__OSDPosConfigurationExtension data members, use only after tt__OSDPosConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDPosConfigurationExtension::soap_type() returns SOAP_TYPE_tt__OSDPosConfigurationExtension or derived type identifier
class tt__OSDPosConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColor is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   The value range of "Transparent" could be defined by vendors only should follow this rule: the minimum value means non-transparent and the maximum value maens fully transparent.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__OSDColor operations:
/// - tt__OSDColor* soap_new_tt__OSDColor(soap*) allocate and default initialize
/// - tt__OSDColor* soap_new_tt__OSDColor(soap*, int num) allocate and default initialize an array
/// - tt__OSDColor* soap_new_req_tt__OSDColor(soap*, ...) allocate, set required members
/// - tt__OSDColor* soap_new_set_tt__OSDColor(soap*, ...) allocate, set all public members
/// - tt__OSDColor::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDColor(soap*, tt__OSDColor*) deserialize from a stream
/// - int soap_write_tt__OSDColor(soap*, tt__OSDColor*) serialize to a stream
/// - tt__OSDColor* tt__OSDColor::soap_dup(soap*) returns deep copy of tt__OSDColor, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDColor::soap_del() deep deletes tt__OSDColor data members, use only after tt__OSDColor::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDColor::soap_type() returns SOAP_TYPE_tt__OSDColor or derived type identifier
class tt__OSDColor
{ public:
/// Element "Color" of type "http://www.onvif.org/ver10/schema":Color.
    tt__Color*                           Color                          1;	///< Required element.
/// Attribute "Transparent" of type xs:int.
  @ int*                                 Transparent                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfiguration is a complexType.
///
/// @note class tt__OSDTextConfiguration operations:
/// - tt__OSDTextConfiguration* soap_new_tt__OSDTextConfiguration(soap*) allocate and default initialize
/// - tt__OSDTextConfiguration* soap_new_tt__OSDTextConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__OSDTextConfiguration* soap_new_req_tt__OSDTextConfiguration(soap*, ...) allocate, set required members
/// - tt__OSDTextConfiguration* soap_new_set_tt__OSDTextConfiguration(soap*, ...) allocate, set all public members
/// - tt__OSDTextConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDTextConfiguration(soap*, tt__OSDTextConfiguration*) deserialize from a stream
/// - int soap_write_tt__OSDTextConfiguration(soap*, tt__OSDTextConfiguration*) serialize to a stream
/// - tt__OSDTextConfiguration* tt__OSDTextConfiguration::soap_dup(soap*) returns deep copy of tt__OSDTextConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDTextConfiguration::soap_del() deep deletes tt__OSDTextConfiguration data members, use only after tt__OSDTextConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDTextConfiguration::soap_type() returns SOAP_TYPE_tt__OSDTextConfiguration or derived type identifier
class tt__OSDTextConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   The following OSD Text Type are defined:<ul>
///   <li>Plain - The Plain type means the OSD is shown as a text string which defined in the "PlainText" item.</li>
///   <li>Date - The Date type means the OSD is shown as a date, format of which should be present in the "DateFormat" item.</li>
///   <li>Time - The Time type means the OSD is shown as a time, format of which should be present in the "TimeFormat" item.</li>
///   <li>DateAndTime - The DateAndTime type means the OSD is shown as date and time, format of which should be present in the "DateFormat" and the "TimeFormat" item.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type xs:string.
    char*                                Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD date formats. This element shall be present when the value of Type field has Date or DateAndTime. The following DateFormat are defined:<ul>
///   <li>M/d/yyyy - e.g. 3/6/2013</li>
///   <li>MM/dd/yyyy - e.g. 03/06/2013</li>
///   <li>dd/MM/yyyy - e.g. 06/03/2013</li>
///   <li>yyyy/MM/dd - e.g. 2013/03/06</li>
///   <li>yyyy-MM-dd - e.g. 2013-06-03</li>
///   <li>dddd, MMMM dd, yyyy - e.g. Wednesday, March 06, 2013</li>
///   <li>MMMM dd, yyyy - e.g. March 06, 2013</li>
///   <li>dd MMMM, yyyy - e.g. 06 March, 2013</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "DateFormat" of type xs:string.
    char*                                DateFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported OSD time formats. This element shall be present when the value of Type field has Time or DateAndTime. The following TimeFormat are defined:<ul>
///   <li>h:mm:ss tt - e.g. 2:14:21 PM</li>
///   <li>hh:mm:ss tt - e.g. 02:14:21 PM</li>
///   <li>H:mm:ss - e.g. 14:14:21</li>
///   <li>HH:mm:ss - e.g. 14:14:21</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "TimeFormat" of type xs:string.
    char*                                TimeFormat                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font size of the text in pt.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontSize" of type xs:int.
    int*                                 FontSize                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Font color of the text.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontColor" of type "http://www.onvif.org/ver10/schema":OSDColor.
    tt__OSDColor*                        FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Background color of the text.
/// </BLOCKQUOTE></PRE>
///
/// Element "BackgroundColor" of type "http://www.onvif.org/ver10/schema":OSDColor.
    tt__OSDColor*                        BackgroundColor                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The content of text to be displayed.
/// </BLOCKQUOTE></PRE>
///
/// Element "PlainText" of type xs:string.
    char*                                PlainText                      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension.
    tt__OSDTextConfigurationExtension*   Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   This flag is applicable for Type Plain and defaults to true. When set to false the PlainText content will not be persistent across device reboots.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "IsPersistentText" of type xs:boolean.
  @ bool*                                IsPersistentText               0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextConfigurationExtension is a complexType.
///
/// @note class tt__OSDTextConfigurationExtension operations:
/// - tt__OSDTextConfigurationExtension* soap_new_tt__OSDTextConfigurationExtension(soap*) allocate and default initialize
/// - tt__OSDTextConfigurationExtension* soap_new_tt__OSDTextConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__OSDTextConfigurationExtension* soap_new_req_tt__OSDTextConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__OSDTextConfigurationExtension* soap_new_set_tt__OSDTextConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__OSDTextConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDTextConfigurationExtension(soap*, tt__OSDTextConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__OSDTextConfigurationExtension(soap*, tt__OSDTextConfigurationExtension*) serialize to a stream
/// - tt__OSDTextConfigurationExtension* tt__OSDTextConfigurationExtension::soap_dup(soap*) returns deep copy of tt__OSDTextConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDTextConfigurationExtension::soap_del() deep deletes tt__OSDTextConfigurationExtension data members, use only after tt__OSDTextConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDTextConfigurationExtension::soap_type() returns SOAP_TYPE_tt__OSDTextConfigurationExtension or derived type identifier
class tt__OSDTextConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfiguration is a complexType.
///
/// @note class tt__OSDImgConfiguration operations:
/// - tt__OSDImgConfiguration* soap_new_tt__OSDImgConfiguration(soap*) allocate and default initialize
/// - tt__OSDImgConfiguration* soap_new_tt__OSDImgConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__OSDImgConfiguration* soap_new_req_tt__OSDImgConfiguration(soap*, ...) allocate, set required members
/// - tt__OSDImgConfiguration* soap_new_set_tt__OSDImgConfiguration(soap*, ...) allocate, set all public members
/// - tt__OSDImgConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDImgConfiguration(soap*, tt__OSDImgConfiguration*) deserialize from a stream
/// - int soap_write_tt__OSDImgConfiguration(soap*, tt__OSDImgConfiguration*) serialize to a stream
/// - tt__OSDImgConfiguration* tt__OSDImgConfiguration::soap_dup(soap*) returns deep copy of tt__OSDImgConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDImgConfiguration::soap_del() deep deletes tt__OSDImgConfiguration data members, use only after tt__OSDImgConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDImgConfiguration::soap_type() returns SOAP_TYPE_tt__OSDImgConfiguration or derived type identifier
class tt__OSDImgConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   The URI of the image which to be displayed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImgPath" of type xs:anyURI.
    xsd__anyURI                          ImgPath                        1;	///< Required element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension.
    tt__OSDImgConfigurationExtension*    Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgConfigurationExtension is a complexType.
///
/// @note class tt__OSDImgConfigurationExtension operations:
/// - tt__OSDImgConfigurationExtension* soap_new_tt__OSDImgConfigurationExtension(soap*) allocate and default initialize
/// - tt__OSDImgConfigurationExtension* soap_new_tt__OSDImgConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__OSDImgConfigurationExtension* soap_new_req_tt__OSDImgConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__OSDImgConfigurationExtension* soap_new_set_tt__OSDImgConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__OSDImgConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDImgConfigurationExtension(soap*, tt__OSDImgConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__OSDImgConfigurationExtension(soap*, tt__OSDImgConfigurationExtension*) serialize to a stream
/// - tt__OSDImgConfigurationExtension* tt__OSDImgConfigurationExtension::soap_dup(soap*) returns deep copy of tt__OSDImgConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDImgConfigurationExtension::soap_del() deep deletes tt__OSDImgConfigurationExtension data members, use only after tt__OSDImgConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDImgConfigurationExtension::soap_type() returns SOAP_TYPE_tt__OSDImgConfigurationExtension or derived type identifier
class tt__OSDImgConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ColorspaceRange is a complexType.
///
/// @note class tt__ColorspaceRange operations:
/// - tt__ColorspaceRange* soap_new_tt__ColorspaceRange(soap*) allocate and default initialize
/// - tt__ColorspaceRange* soap_new_tt__ColorspaceRange(soap*, int num) allocate and default initialize an array
/// - tt__ColorspaceRange* soap_new_req_tt__ColorspaceRange(soap*, ...) allocate, set required members
/// - tt__ColorspaceRange* soap_new_set_tt__ColorspaceRange(soap*, ...) allocate, set all public members
/// - tt__ColorspaceRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__ColorspaceRange(soap*, tt__ColorspaceRange*) deserialize from a stream
/// - int soap_write_tt__ColorspaceRange(soap*, tt__ColorspaceRange*) serialize to a stream
/// - tt__ColorspaceRange* tt__ColorspaceRange::soap_dup(soap*) returns deep copy of tt__ColorspaceRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ColorspaceRange::soap_del() deep deletes tt__ColorspaceRange data members, use only after tt__ColorspaceRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ColorspaceRange::soap_type() returns SOAP_TYPE_tt__ColorspaceRange or derived type identifier
class tt__ColorspaceRange
{ public:
/// Element "X" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      X                              1;	///< Required element.
/// Element "Y" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Y                              1;	///< Required element.
/// Element "Z" of type "http://www.onvif.org/ver10/schema":FloatRange.
    tt__FloatRange*                      Z                              1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Acceptable values are the same as in tt:Color.
/// </BLOCKQUOTE></PRE>
///
/// Element "Colorspace" of type xs:anyURI.
    xsd__anyURI                          Colorspace                     1;	///< Required element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the colors supported. Either list each color or define the range of color values.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__ColorOptions operations:
/// - tt__ColorOptions* soap_new_tt__ColorOptions(soap*) allocate and default initialize
/// - tt__ColorOptions* soap_new_tt__ColorOptions(soap*, int num) allocate and default initialize an array
/// - tt__ColorOptions* soap_new_req_tt__ColorOptions(soap*, ...) allocate, set required members
/// - tt__ColorOptions* soap_new_set_tt__ColorOptions(soap*, ...) allocate, set all public members
/// - tt__ColorOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__ColorOptions(soap*, tt__ColorOptions*) deserialize from a stream
/// - int soap_write_tt__ColorOptions(soap*, tt__ColorOptions*) serialize to a stream
/// - tt__ColorOptions* tt__ColorOptions::soap_dup(soap*) returns deep copy of tt__ColorOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ColorOptions::soap_del() deep deletes tt__ColorOptions data members, use only after tt__ColorOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ColorOptions::soap_type() returns SOAP_TYPE_tt__ColorOptions or derived type identifier
class tt__ColorOptions
{ public:
//  BEGIN CHOICE <xs:choice>
/// @note <xs:choice> with one ore more elements with maxOccurs>1 prevents the use of a union. Instead of being members of a union, the following members are declared optional. Only one member should be non-NULL by choice.
/// <PRE><BLOCKQUOTE>
///   List the supported color.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Color* is 1..unbounded.
  $ int                                  __sizeColorList                0;
/// Pointer to array tt__Color* of size 1..unbounded.
    tt__Color*                          *ColorList                     ;	///< Choice of element (one of multiple choices).
/// <PRE><BLOCKQUOTE>
///   Define the range of color supported.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__ColorspaceRange* is 1..unbounded.
  $ int                                  __sizeColorspaceRange          0;
/// Pointer to array tt__ColorspaceRange* of size 1..unbounded.
    tt__ColorspaceRange*                *ColorspaceRange               ;	///< Choice of element (one of multiple choices).
//  END OF CHOICE
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptions is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Describe the option of the color and its transparency.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__OSDColorOptions operations:
/// - tt__OSDColorOptions* soap_new_tt__OSDColorOptions(soap*) allocate and default initialize
/// - tt__OSDColorOptions* soap_new_tt__OSDColorOptions(soap*, int num) allocate and default initialize an array
/// - tt__OSDColorOptions* soap_new_req_tt__OSDColorOptions(soap*, ...) allocate, set required members
/// - tt__OSDColorOptions* soap_new_set_tt__OSDColorOptions(soap*, ...) allocate, set all public members
/// - tt__OSDColorOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDColorOptions(soap*, tt__OSDColorOptions*) deserialize from a stream
/// - int soap_write_tt__OSDColorOptions(soap*, tt__OSDColorOptions*) serialize to a stream
/// - tt__OSDColorOptions* tt__OSDColorOptions::soap_dup(soap*) returns deep copy of tt__OSDColorOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDColorOptions::soap_del() deep deletes tt__OSDColorOptions data members, use only after tt__OSDColorOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDColorOptions::soap_type() returns SOAP_TYPE_tt__OSDColorOptions or derived type identifier
class tt__OSDColorOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional list of supported colors.
/// </BLOCKQUOTE></PRE>
///
/// Element "Color" of type "http://www.onvif.org/ver10/schema":ColorOptions.
    tt__ColorOptions*                    Color                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Range of the transparent level. Larger means more tranparent.
/// </BLOCKQUOTE></PRE>
///
/// Element "Transparent" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        Transparent                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension.
    tt__OSDColorOptionsExtension*        Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDColorOptionsExtension is a complexType.
///
/// @note class tt__OSDColorOptionsExtension operations:
/// - tt__OSDColorOptionsExtension* soap_new_tt__OSDColorOptionsExtension(soap*) allocate and default initialize
/// - tt__OSDColorOptionsExtension* soap_new_tt__OSDColorOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__OSDColorOptionsExtension* soap_new_req_tt__OSDColorOptionsExtension(soap*, ...) allocate, set required members
/// - tt__OSDColorOptionsExtension* soap_new_set_tt__OSDColorOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__OSDColorOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDColorOptionsExtension(soap*, tt__OSDColorOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__OSDColorOptionsExtension(soap*, tt__OSDColorOptionsExtension*) serialize to a stream
/// - tt__OSDColorOptionsExtension* tt__OSDColorOptionsExtension::soap_dup(soap*) returns deep copy of tt__OSDColorOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDColorOptionsExtension::soap_del() deep deletes tt__OSDColorOptionsExtension data members, use only after tt__OSDColorOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDColorOptionsExtension::soap_type() returns SOAP_TYPE_tt__OSDColorOptionsExtension or derived type identifier
class tt__OSDColorOptionsExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptions is a complexType.
///
/// @note class tt__OSDTextOptions operations:
/// - tt__OSDTextOptions* soap_new_tt__OSDTextOptions(soap*) allocate and default initialize
/// - tt__OSDTextOptions* soap_new_tt__OSDTextOptions(soap*, int num) allocate and default initialize an array
/// - tt__OSDTextOptions* soap_new_req_tt__OSDTextOptions(soap*, ...) allocate, set required members
/// - tt__OSDTextOptions* soap_new_set_tt__OSDTextOptions(soap*, ...) allocate, set all public members
/// - tt__OSDTextOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDTextOptions(soap*, tt__OSDTextOptions*) deserialize from a stream
/// - int soap_write_tt__OSDTextOptions(soap*, tt__OSDTextOptions*) serialize to a stream
/// - tt__OSDTextOptions* tt__OSDTextOptions::soap_dup(soap*) returns deep copy of tt__OSDTextOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDTextOptions::soap_del() deep deletes tt__OSDTextOptions data members, use only after tt__OSDTextOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDTextOptions::soap_type() returns SOAP_TYPE_tt__OSDTextOptions or derived type identifier
class tt__OSDTextOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of supported OSD text type. When a device indicates the supported number relating to Text type in MaximumNumberOfOSDs, the type shall be presented.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char* is 1..unbounded.
  $ int                                  __sizeType                     1;
/// Pointer to array char* of size 1..unbounded.
    char*                               *Type                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Range of the font size value.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontSizeRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FontSizeRange                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported date format.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char* is 0..unbounded.
  $ int                                  __sizeDateFormat               0;
/// Pointer to array char* of size 0..unbounded.
    char*                               *DateFormat                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported time format.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char* is 0..unbounded.
  $ int                                  __sizeTimeFormat               0;
/// Pointer to array char* of size 0..unbounded.
    char*                               *TimeFormat                     0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List of supported font color.
/// </BLOCKQUOTE></PRE>
///
/// Element "FontColor" of type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    tt__OSDColorOptions*                 FontColor                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported background color.
/// </BLOCKQUOTE></PRE>
///
/// Element "BackgroundColor" of type "http://www.onvif.org/ver10/schema":OSDColorOptions.
    tt__OSDColorOptions*                 BackgroundColor                0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension.
    tt__OSDTextOptionsExtension*         Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDTextOptionsExtension is a complexType.
///
/// @note class tt__OSDTextOptionsExtension operations:
/// - tt__OSDTextOptionsExtension* soap_new_tt__OSDTextOptionsExtension(soap*) allocate and default initialize
/// - tt__OSDTextOptionsExtension* soap_new_tt__OSDTextOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__OSDTextOptionsExtension* soap_new_req_tt__OSDTextOptionsExtension(soap*, ...) allocate, set required members
/// - tt__OSDTextOptionsExtension* soap_new_set_tt__OSDTextOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__OSDTextOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDTextOptionsExtension(soap*, tt__OSDTextOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__OSDTextOptionsExtension(soap*, tt__OSDTextOptionsExtension*) serialize to a stream
/// - tt__OSDTextOptionsExtension* tt__OSDTextOptionsExtension::soap_dup(soap*) returns deep copy of tt__OSDTextOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDTextOptionsExtension::soap_del() deep deletes tt__OSDTextOptionsExtension data members, use only after tt__OSDTextOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDTextOptionsExtension::soap_type() returns SOAP_TYPE_tt__OSDTextOptionsExtension or derived type identifier
class tt__OSDTextOptionsExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptions is a complexType.
///
/// @note class tt__OSDImgOptions operations:
/// - tt__OSDImgOptions* soap_new_tt__OSDImgOptions(soap*) allocate and default initialize
/// - tt__OSDImgOptions* soap_new_tt__OSDImgOptions(soap*, int num) allocate and default initialize an array
/// - tt__OSDImgOptions* soap_new_req_tt__OSDImgOptions(soap*, ...) allocate, set required members
/// - tt__OSDImgOptions* soap_new_set_tt__OSDImgOptions(soap*, ...) allocate, set all public members
/// - tt__OSDImgOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDImgOptions(soap*, tt__OSDImgOptions*) deserialize from a stream
/// - int soap_write_tt__OSDImgOptions(soap*, tt__OSDImgOptions*) serialize to a stream
/// - tt__OSDImgOptions* tt__OSDImgOptions::soap_dup(soap*) returns deep copy of tt__OSDImgOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDImgOptions::soap_del() deep deletes tt__OSDImgOptions data members, use only after tt__OSDImgOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDImgOptions::soap_type() returns SOAP_TYPE_tt__OSDImgOptions or derived type identifier
class tt__OSDImgOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   List of available image URIs.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 1..unbounded.
  $ int                                  __sizeImagePath                1;
/// Pointer to array xsd__anyURI of size 1..unbounded.
    xsd__anyURI                         *ImagePath                      1;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension.
    tt__OSDImgOptionsExtension*          Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   List of supported image MIME types, such as "image/png".
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FormatsSupported" of type "http://www.onvif.org/ver10/schema":StringAttrList.
  @ tt__StringAttrList                   FormatsSupported               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum size (in bytes) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxSize" of type xs:int.
  @ int*                                 MaxSize                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum width (in pixels) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxWidth" of type xs:int.
  @ int*                                 MaxWidth                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The maximum height (in pixels) of the image that can be uploaded.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaxHeight" of type xs:int.
  @ int*                                 MaxHeight                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDImgOptionsExtension is a complexType.
///
/// @note class tt__OSDImgOptionsExtension operations:
/// - tt__OSDImgOptionsExtension* soap_new_tt__OSDImgOptionsExtension(soap*) allocate and default initialize
/// - tt__OSDImgOptionsExtension* soap_new_tt__OSDImgOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__OSDImgOptionsExtension* soap_new_req_tt__OSDImgOptionsExtension(soap*, ...) allocate, set required members
/// - tt__OSDImgOptionsExtension* soap_new_set_tt__OSDImgOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__OSDImgOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDImgOptionsExtension(soap*, tt__OSDImgOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__OSDImgOptionsExtension(soap*, tt__OSDImgOptionsExtension*) serialize to a stream
/// - tt__OSDImgOptionsExtension* tt__OSDImgOptionsExtension::soap_dup(soap*) returns deep copy of tt__OSDImgOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDImgOptionsExtension::soap_del() deep deletes tt__OSDImgOptionsExtension data members, use only after tt__OSDImgOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDImgOptionsExtension::soap_type() returns SOAP_TYPE_tt__OSDImgOptionsExtension or derived type identifier
class tt__OSDImgOptionsExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationExtension is a complexType.
///
/// @note class tt__OSDConfigurationExtension operations:
/// - tt__OSDConfigurationExtension* soap_new_tt__OSDConfigurationExtension(soap*) allocate and default initialize
/// - tt__OSDConfigurationExtension* soap_new_tt__OSDConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__OSDConfigurationExtension* soap_new_req_tt__OSDConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__OSDConfigurationExtension* soap_new_set_tt__OSDConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__OSDConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDConfigurationExtension(soap*, tt__OSDConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__OSDConfigurationExtension(soap*, tt__OSDConfigurationExtension*) serialize to a stream
/// - tt__OSDConfigurationExtension* tt__OSDConfigurationExtension::soap_dup(soap*) returns deep copy of tt__OSDConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDConfigurationExtension::soap_del() deep deletes tt__OSDConfigurationExtension data members, use only after tt__OSDConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDConfigurationExtension::soap_type() returns SOAP_TYPE_tt__OSDConfigurationExtension or derived type identifier
class tt__OSDConfigurationExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs is a complexType.
///
/// @note class tt__MaximumNumberOfOSDs operations:
/// - tt__MaximumNumberOfOSDs* soap_new_tt__MaximumNumberOfOSDs(soap*) allocate and default initialize
/// - tt__MaximumNumberOfOSDs* soap_new_tt__MaximumNumberOfOSDs(soap*, int num) allocate and default initialize an array
/// - tt__MaximumNumberOfOSDs* soap_new_req_tt__MaximumNumberOfOSDs(soap*, ...) allocate, set required members
/// - tt__MaximumNumberOfOSDs* soap_new_set_tt__MaximumNumberOfOSDs(soap*, ...) allocate, set all public members
/// - tt__MaximumNumberOfOSDs::soap_default(soap*) default initialize members
/// - int soap_read_tt__MaximumNumberOfOSDs(soap*, tt__MaximumNumberOfOSDs*) deserialize from a stream
/// - int soap_write_tt__MaximumNumberOfOSDs(soap*, tt__MaximumNumberOfOSDs*) serialize to a stream
/// - tt__MaximumNumberOfOSDs* tt__MaximumNumberOfOSDs::soap_dup(soap*) returns deep copy of tt__MaximumNumberOfOSDs, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MaximumNumberOfOSDs::soap_del() deep deletes tt__MaximumNumberOfOSDs data members, use only after tt__MaximumNumberOfOSDs::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MaximumNumberOfOSDs::soap_type() returns SOAP_TYPE_tt__MaximumNumberOfOSDs or derived type identifier
class tt__MaximumNumberOfOSDs
{ public:
/// Attribute "Total" of type xs:int.
  @ int                                  Total                          1;	///< Required attribute.
/// Attribute "Image" of type xs:int.
  @ int*                                 Image                          0;	///< Optional attribute.
/// Attribute "PlainText" of type xs:int.
  @ int*                                 PlainText                      0;	///< Optional attribute.
/// Attribute "Date" of type xs:int.
  @ int*                                 Date                           0;	///< Optional attribute.
/// Attribute "Time" of type xs:int.
  @ int*                                 Time                           0;	///< Optional attribute.
/// Attribute "DateAndTime" of type xs:int.
  @ int*                                 DateAndTime                    0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptions is a complexType.
///
/// @note class tt__OSDConfigurationOptions operations:
/// - tt__OSDConfigurationOptions* soap_new_tt__OSDConfigurationOptions(soap*) allocate and default initialize
/// - tt__OSDConfigurationOptions* soap_new_tt__OSDConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - tt__OSDConfigurationOptions* soap_new_req_tt__OSDConfigurationOptions(soap*, ...) allocate, set required members
/// - tt__OSDConfigurationOptions* soap_new_set_tt__OSDConfigurationOptions(soap*, ...) allocate, set all public members
/// - tt__OSDConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDConfigurationOptions(soap*, tt__OSDConfigurationOptions*) deserialize from a stream
/// - int soap_write_tt__OSDConfigurationOptions(soap*, tt__OSDConfigurationOptions*) serialize to a stream
/// - tt__OSDConfigurationOptions* tt__OSDConfigurationOptions::soap_dup(soap*) returns deep copy of tt__OSDConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDConfigurationOptions::soap_del() deep deletes tt__OSDConfigurationOptions data members, use only after tt__OSDConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDConfigurationOptions::soap_type() returns SOAP_TYPE_tt__OSDConfigurationOptions or derived type identifier
class tt__OSDConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   The maximum number of OSD configurations supported for the specified video source configuration. If the configuration does not support OSDs, this value shall be zero and the Type and PositionOption elements are ignored. If a device limits the number of instances by OSDType, it shall indicate the supported number for each type via the related attribute.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfOSDs" of type "http://www.onvif.org/ver10/schema":MaximumNumberOfOSDs.
    tt__MaximumNumberOfOSDs*             MaximumNumberOfOSDs            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List supported type of OSD configuration. When a device indicates the supported number for each types in MaximumNumberOfOSDs, related type shall be presented. A device shall return Option element relating to listed type.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__OSDType is 1..unbounded.
  $ int                                  __sizeType                     1;
/// Pointer to array enum tt__OSDType of size 1..unbounded.
    enum tt__OSDType                    *Type                           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   List available OSD position type. Following are the pre-defined:<ul><li>UpperLeft</li>
///   <li>UpperRight</li>
///   <li>LowerLeft</li>
///   <li>LowerRight</li>
///   <li>Custom</li></ul>
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char* is 1..unbounded.
  $ int                                  __sizePositionOption           1;
/// Pointer to array char* of size 1..unbounded.
    char*                               *PositionOption                 1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD text configuration. This element shall be returned if the device is signaling the support for Text.
/// </BLOCKQUOTE></PRE>
///
/// Element "TextOption" of type "http://www.onvif.org/ver10/schema":OSDTextOptions.
    tt__OSDTextOptions*                  TextOption                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Option of the OSD image configuration. This element shall be returned if the device is signaling the support for Image.
/// </BLOCKQUOTE></PRE>
///
/// Element "ImageOption" of type "http://www.onvif.org/ver10/schema":OSDImgOptions.
    tt__OSDImgOptions*                   ImageOption                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension.
    tt__OSDConfigurationOptionsExtension*  Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":OSDConfigurationOptionsExtension is a complexType.
///
/// @note class tt__OSDConfigurationOptionsExtension operations:
/// - tt__OSDConfigurationOptionsExtension* soap_new_tt__OSDConfigurationOptionsExtension(soap*) allocate and default initialize
/// - tt__OSDConfigurationOptionsExtension* soap_new_tt__OSDConfigurationOptionsExtension(soap*, int num) allocate and default initialize an array
/// - tt__OSDConfigurationOptionsExtension* soap_new_req_tt__OSDConfigurationOptionsExtension(soap*, ...) allocate, set required members
/// - tt__OSDConfigurationOptionsExtension* soap_new_set_tt__OSDConfigurationOptionsExtension(soap*, ...) allocate, set all public members
/// - tt__OSDConfigurationOptionsExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDConfigurationOptionsExtension(soap*, tt__OSDConfigurationOptionsExtension*) deserialize from a stream
/// - int soap_write_tt__OSDConfigurationOptionsExtension(soap*, tt__OSDConfigurationOptionsExtension*) serialize to a stream
/// - tt__OSDConfigurationOptionsExtension* tt__OSDConfigurationOptionsExtension::soap_dup(soap*) returns deep copy of tt__OSDConfigurationOptionsExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDConfigurationOptionsExtension::soap_del() deep deletes tt__OSDConfigurationOptionsExtension data members, use only after tt__OSDConfigurationOptionsExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDConfigurationOptionsExtension::soap_type() returns SOAP_TYPE_tt__OSDConfigurationOptionsExtension or derived type identifier
class tt__OSDConfigurationOptionsExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":FileProgress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ArrayOfFileProgress is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ArrayOfFileProgressExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StorageReferencePath is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":StorageReferencePathExtension is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":PolygonOptions is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":IntRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntRange operations:
/// - tt__IntRange* soap_new_tt__IntRange(soap*) allocate and default initialize
/// - tt__IntRange* soap_new_tt__IntRange(soap*, int num) allocate and default initialize an array
/// - tt__IntRange* soap_new_req_tt__IntRange(soap*, ...) allocate, set required members
/// - tt__IntRange* soap_new_set_tt__IntRange(soap*, ...) allocate, set all public members
/// - tt__IntRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntRange(soap*, tt__IntRange*) deserialize from a stream
/// - int soap_write_tt__IntRange(soap*, tt__IntRange*) serialize to a stream
/// - tt__IntRange* tt__IntRange::soap_dup(soap*) returns deep copy of tt__IntRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntRange::soap_del() deep deletes tt__IntRange data members, use only after tt__IntRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntRange::soap_type() returns SOAP_TYPE_tt__IntRange or derived type identifier
class tt__IntRange
{ public:
/// Element "Min" of type xs:int.
    int                                  Min                            1;	///< Required element.
/// Element "Max" of type xs:int.
    int                                  Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Vector2D is a complexType.
///
/// @note class tt__Vector2D operations:
/// - tt__Vector2D* soap_new_tt__Vector2D(soap*) allocate and default initialize
/// - tt__Vector2D* soap_new_tt__Vector2D(soap*, int num) allocate and default initialize an array
/// - tt__Vector2D* soap_new_req_tt__Vector2D(soap*, ...) allocate, set required members
/// - tt__Vector2D* soap_new_set_tt__Vector2D(soap*, ...) allocate, set all public members
/// - tt__Vector2D::soap_default(soap*) default initialize members
/// - int soap_read_tt__Vector2D(soap*, tt__Vector2D*) deserialize from a stream
/// - int soap_write_tt__Vector2D(soap*, tt__Vector2D*) serialize to a stream
/// - tt__Vector2D* tt__Vector2D::soap_dup(soap*) returns deep copy of tt__Vector2D, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Vector2D::soap_del() deep deletes tt__Vector2D data members, use only after tt__Vector2D::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Vector2D::soap_type() returns SOAP_TYPE_tt__Vector2D or derived type identifier
class tt__Vector2D
{ public:
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// Attribute "y" of type xs:float.
  @ float                                y                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Pan/tilt coordinate space selector. The following options are defined:<ul>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/PanTiltSpaces/GenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI                          space                          0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Vector1D is a complexType.
///
/// @note class tt__Vector1D operations:
/// - tt__Vector1D* soap_new_tt__Vector1D(soap*) allocate and default initialize
/// - tt__Vector1D* soap_new_tt__Vector1D(soap*, int num) allocate and default initialize an array
/// - tt__Vector1D* soap_new_req_tt__Vector1D(soap*, ...) allocate, set required members
/// - tt__Vector1D* soap_new_set_tt__Vector1D(soap*, ...) allocate, set all public members
/// - tt__Vector1D::soap_default(soap*) default initialize members
/// - int soap_read_tt__Vector1D(soap*, tt__Vector1D*) deserialize from a stream
/// - int soap_write_tt__Vector1D(soap*, tt__Vector1D*) serialize to a stream
/// - tt__Vector1D* tt__Vector1D::soap_dup(soap*) returns deep copy of tt__Vector1D, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Vector1D::soap_del() deep deletes tt__Vector1D data members, use only after tt__Vector1D::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Vector1D::soap_type() returns SOAP_TYPE_tt__Vector1D or derived type identifier
class tt__Vector1D
{ public:
/// Attribute "x" of type xs:float.
  @ float                                x                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Zoom coordinate space selector. The following options are defined:<ul style="">
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/PositionGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/TranslationGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/VelocityGenericSpace</li>
///   <li> http://www.onvif.org/ver10/tptz/ZoomSpaces/ZoomGenericSpeedSpace</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "space" of type xs:anyURI.
  @ xsd__anyURI                          space                          0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZVector is a complexType.
///
/// @note class tt__PTZVector operations:
/// - tt__PTZVector* soap_new_tt__PTZVector(soap*) allocate and default initialize
/// - tt__PTZVector* soap_new_tt__PTZVector(soap*, int num) allocate and default initialize an array
/// - tt__PTZVector* soap_new_req_tt__PTZVector(soap*, ...) allocate, set required members
/// - tt__PTZVector* soap_new_set_tt__PTZVector(soap*, ...) allocate, set all public members
/// - tt__PTZVector::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZVector(soap*, tt__PTZVector*) deserialize from a stream
/// - int soap_write_tt__PTZVector(soap*, tt__PTZVector*) serialize to a stream
/// - tt__PTZVector* tt__PTZVector::soap_dup(soap*) returns deep copy of tt__PTZVector, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZVector::soap_del() deep deletes tt__PTZVector data members, use only after tt__PTZVector::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZVector::soap_type() returns SOAP_TYPE_tt__PTZVector or derived type identifier
class tt__PTZVector
{ public:
/// <PRE><BLOCKQUOTE>
///   Pan and tilt position. The x component corresponds to pan and the y component to tilt.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":Vector2D.
    tt__Vector2D*                        PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A zoom position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":Vector1D.
    tt__Vector1D*                        Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZStatus is a complexType.
///
/// @note class tt__PTZStatus operations:
/// - tt__PTZStatus* soap_new_tt__PTZStatus(soap*) allocate and default initialize
/// - tt__PTZStatus* soap_new_tt__PTZStatus(soap*, int num) allocate and default initialize an array
/// - tt__PTZStatus* soap_new_req_tt__PTZStatus(soap*, ...) allocate, set required members
/// - tt__PTZStatus* soap_new_set_tt__PTZStatus(soap*, ...) allocate, set all public members
/// - tt__PTZStatus::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZStatus(soap*, tt__PTZStatus*) deserialize from a stream
/// - int soap_write_tt__PTZStatus(soap*, tt__PTZStatus*) serialize to a stream
/// - tt__PTZStatus* tt__PTZStatus::soap_dup(soap*) returns deep copy of tt__PTZStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZStatus::soap_del() deep deletes tt__PTZStatus data members, use only after tt__PTZStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZStatus::soap_type() returns SOAP_TYPE_tt__PTZStatus or derived type identifier
class tt__PTZStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the absolute position of the PTZ unit together with the Space references. The default absolute spaces of the corresponding PTZ configuration MUST be referenced within the Position element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicates if the Pan/Tilt/Zoom device unit is currently moving, idle or in an unknown state.
/// </BLOCKQUOTE></PRE>
///
/// Element "MoveStatus" of type "http://www.onvif.org/ver10/schema":PTZMoveStatus.
    tt__PTZMoveStatus*                   MoveStatus                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   States a current PTZ error.
/// </BLOCKQUOTE></PRE>
///
/// Element "Error" of type xs:string.
    char*                                Error                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Specifies the UTC time when this status was generated.
/// </BLOCKQUOTE></PRE>
///
/// Element "UtcTime" of type xs:dateTime.
    time_t                               UtcTime                        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":PTZMoveStatus is a complexType.
///
/// @note class tt__PTZMoveStatus operations:
/// - tt__PTZMoveStatus* soap_new_tt__PTZMoveStatus(soap*) allocate and default initialize
/// - tt__PTZMoveStatus* soap_new_tt__PTZMoveStatus(soap*, int num) allocate and default initialize an array
/// - tt__PTZMoveStatus* soap_new_req_tt__PTZMoveStatus(soap*, ...) allocate, set required members
/// - tt__PTZMoveStatus* soap_new_set_tt__PTZMoveStatus(soap*, ...) allocate, set all public members
/// - tt__PTZMoveStatus::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) deserialize from a stream
/// - int soap_write_tt__PTZMoveStatus(soap*, tt__PTZMoveStatus*) serialize to a stream
/// - tt__PTZMoveStatus* tt__PTZMoveStatus::soap_dup(soap*) returns deep copy of tt__PTZMoveStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZMoveStatus::soap_del() deep deletes tt__PTZMoveStatus data members, use only after tt__PTZMoveStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZMoveStatus::soap_type() returns SOAP_TYPE_tt__PTZMoveStatus or derived type identifier
class tt__PTZMoveStatus
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 PanTilt                        0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type "http://www.onvif.org/ver10/schema":MoveStatus.
    enum tt__MoveStatus*                 Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Vector is a complexType.
///
/// @note class tt__Vector operations:
/// - tt__Vector* soap_new_tt__Vector(soap*) allocate and default initialize
/// - tt__Vector* soap_new_tt__Vector(soap*, int num) allocate and default initialize an array
/// - tt__Vector* soap_new_req_tt__Vector(soap*, ...) allocate, set required members
/// - tt__Vector* soap_new_set_tt__Vector(soap*, ...) allocate, set all public members
/// - tt__Vector::soap_default(soap*) default initialize members
/// - int soap_read_tt__Vector(soap*, tt__Vector*) deserialize from a stream
/// - int soap_write_tt__Vector(soap*, tt__Vector*) serialize to a stream
/// - tt__Vector* tt__Vector::soap_dup(soap*) returns deep copy of tt__Vector, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Vector::soap_del() deep deletes tt__Vector data members, use only after tt__Vector::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Vector::soap_type() returns SOAP_TYPE_tt__Vector or derived type identifier
class tt__Vector
{ public:
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Rectangle is a complexType.
///
/// @note class tt__Rectangle operations:
/// - tt__Rectangle* soap_new_tt__Rectangle(soap*) allocate and default initialize
/// - tt__Rectangle* soap_new_tt__Rectangle(soap*, int num) allocate and default initialize an array
/// - tt__Rectangle* soap_new_req_tt__Rectangle(soap*, ...) allocate, set required members
/// - tt__Rectangle* soap_new_set_tt__Rectangle(soap*, ...) allocate, set all public members
/// - tt__Rectangle::soap_default(soap*) default initialize members
/// - int soap_read_tt__Rectangle(soap*, tt__Rectangle*) deserialize from a stream
/// - int soap_write_tt__Rectangle(soap*, tt__Rectangle*) serialize to a stream
/// - tt__Rectangle* tt__Rectangle::soap_dup(soap*) returns deep copy of tt__Rectangle, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Rectangle::soap_del() deep deletes tt__Rectangle data members, use only after tt__Rectangle::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Rectangle::soap_type() returns SOAP_TYPE_tt__Rectangle or derived type identifier
class tt__Rectangle
{ public:
/// Attribute "bottom" of type xs:float.
  @ float*                               bottom                         0;	///< Optional attribute.
/// Attribute "top" of type xs:float.
  @ float*                               top                            0;	///< Optional attribute.
/// Attribute "right" of type xs:float.
  @ float*                               right                          0;	///< Optional attribute.
/// Attribute "left" of type xs:float.
  @ float*                               left                           0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":Polygon is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":Color is a complexType.
///
/// @note class tt__Color operations:
/// - tt__Color* soap_new_tt__Color(soap*) allocate and default initialize
/// - tt__Color* soap_new_tt__Color(soap*, int num) allocate and default initialize an array
/// - tt__Color* soap_new_req_tt__Color(soap*, ...) allocate, set required members
/// - tt__Color* soap_new_set_tt__Color(soap*, ...) allocate, set all public members
/// - tt__Color::soap_default(soap*) default initialize members
/// - int soap_read_tt__Color(soap*, tt__Color*) deserialize from a stream
/// - int soap_write_tt__Color(soap*, tt__Color*) serialize to a stream
/// - tt__Color* tt__Color::soap_dup(soap*) returns deep copy of tt__Color, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Color::soap_del() deep deletes tt__Color data members, use only after tt__Color::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Color::soap_type() returns SOAP_TYPE_tt__Color or derived type identifier
class tt__Color
{ public:
/// Attribute "X" of type xs:float.
  @ float                                X                              1;	///< Required attribute.
/// Attribute "Y" of type xs:float.
  @ float                                Y                              1;	///< Required attribute.
/// Attribute "Z" of type xs:float.
  @ float                                Z                              1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Acceptable values:
///   <ul>
///   <li>http://www.onvif.org/ver10/colorspace/YCbCr - YCbCr
///   <ul><li>X attribute = Y value</li>
///   <li>Y attribute = Cb value</li>
///   <li>Z attribute = Cr value</li></ul>
///   </li>
///   <li>http://www.onvif.org/ver10/colorspace/RGB - RGB
///   <ul><li>X attribute = R value</li>
///   <li>Y attribute = G value</li>
///   <li>Z attribute = B value</li></ul>
///   </li>
///   </ul>
///   If the Colorspace attribute is absent, YCbCr is implied.
///   Deprecated values:
///   <ul>
///   <li>http://www.onvif.org/ver10/colorspace/CIELUV - CIE LUV</li>
///   <li>http://www.onvif.org/ver10/colorspace/CIELAB - CIE 1976 (L*a*b*)</li>
///   <li>http://www.onvif.org/ver10/colorspace/HSV - HSV</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Colorspace" of type xs:anyURI.
  @ xsd__anyURI                          Colorspace                     0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorCovariance is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":ColorDescriptor is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":Transformation is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":TransformationExtension is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":GeoLocation is a complexType.
///
/// @note class tt__GeoLocation operations:
/// - tt__GeoLocation* soap_new_tt__GeoLocation(soap*) allocate and default initialize
/// - tt__GeoLocation* soap_new_tt__GeoLocation(soap*, int num) allocate and default initialize an array
/// - tt__GeoLocation* soap_new_req_tt__GeoLocation(soap*, ...) allocate, set required members
/// - tt__GeoLocation* soap_new_set_tt__GeoLocation(soap*, ...) allocate, set all public members
/// - tt__GeoLocation::soap_default(soap*) default initialize members
/// - int soap_read_tt__GeoLocation(soap*, tt__GeoLocation*) deserialize from a stream
/// - int soap_write_tt__GeoLocation(soap*, tt__GeoLocation*) serialize to a stream
/// - tt__GeoLocation* tt__GeoLocation::soap_dup(soap*) returns deep copy of tt__GeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__GeoLocation::soap_del() deep deletes tt__GeoLocation data members, use only after tt__GeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__GeoLocation::soap_type() returns SOAP_TYPE_tt__GeoLocation or derived type identifier
class tt__GeoLocation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lon" of type xs:double.
  @ double*                              lon                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "lat" of type xs:double.
  @ double*                              lat                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Hight in meters above sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "elevation" of type xs:float.
  @ float*                               elevation                      0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":GeoOrientation is a complexType.
///
/// @note class tt__GeoOrientation operations:
/// - tt__GeoOrientation* soap_new_tt__GeoOrientation(soap*) allocate and default initialize
/// - tt__GeoOrientation* soap_new_tt__GeoOrientation(soap*, int num) allocate and default initialize an array
/// - tt__GeoOrientation* soap_new_req_tt__GeoOrientation(soap*, ...) allocate, set required members
/// - tt__GeoOrientation* soap_new_set_tt__GeoOrientation(soap*, ...) allocate, set all public members
/// - tt__GeoOrientation::soap_default(soap*) default initialize members
/// - int soap_read_tt__GeoOrientation(soap*, tt__GeoOrientation*) deserialize from a stream
/// - int soap_write_tt__GeoOrientation(soap*, tt__GeoOrientation*) serialize to a stream
/// - tt__GeoOrientation* tt__GeoOrientation::soap_dup(soap*) returns deep copy of tt__GeoOrientation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__GeoOrientation::soap_del() deep deletes tt__GeoOrientation data members, use only after tt__GeoOrientation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__GeoOrientation::soap_type() returns SOAP_TYPE_tt__GeoOrientation or derived type identifier
class tt__GeoOrientation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pitch" of type xs:float.
  @ float*                               pitch                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "yaw" of type xs:float.
  @ float*                               yaw                            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LocalLocation is a complexType.
///
/// @note class tt__LocalLocation operations:
/// - tt__LocalLocation* soap_new_tt__LocalLocation(soap*) allocate and default initialize
/// - tt__LocalLocation* soap_new_tt__LocalLocation(soap*, int num) allocate and default initialize an array
/// - tt__LocalLocation* soap_new_req_tt__LocalLocation(soap*, ...) allocate, set required members
/// - tt__LocalLocation* soap_new_set_tt__LocalLocation(soap*, ...) allocate, set all public members
/// - tt__LocalLocation::soap_default(soap*) default initialize members
/// - int soap_read_tt__LocalLocation(soap*, tt__LocalLocation*) deserialize from a stream
/// - int soap_write_tt__LocalLocation(soap*, tt__LocalLocation*) serialize to a stream
/// - tt__LocalLocation* tt__LocalLocation::soap_dup(soap*) returns deep copy of tt__LocalLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LocalLocation::soap_del() deep deletes tt__LocalLocation data members, use only after tt__LocalLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LocalLocation::soap_type() returns SOAP_TYPE_tt__LocalLocation or derived type identifier
class tt__LocalLocation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   East west location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "x" of type xs:float.
  @ float*                               x                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   North south location as angle.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "y" of type xs:float.
  @ float*                               y                              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Offset in meters from the sea level.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "z" of type xs:float.
  @ float*                               z                              0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LocalOrientation is a complexType.
///
/// @note class tt__LocalOrientation operations:
/// - tt__LocalOrientation* soap_new_tt__LocalOrientation(soap*) allocate and default initialize
/// - tt__LocalOrientation* soap_new_tt__LocalOrientation(soap*, int num) allocate and default initialize an array
/// - tt__LocalOrientation* soap_new_req_tt__LocalOrientation(soap*, ...) allocate, set required members
/// - tt__LocalOrientation* soap_new_set_tt__LocalOrientation(soap*, ...) allocate, set all public members
/// - tt__LocalOrientation::soap_default(soap*) default initialize members
/// - int soap_read_tt__LocalOrientation(soap*, tt__LocalOrientation*) deserialize from a stream
/// - int soap_write_tt__LocalOrientation(soap*, tt__LocalOrientation*) serialize to a stream
/// - tt__LocalOrientation* tt__LocalOrientation::soap_dup(soap*) returns deep copy of tt__LocalOrientation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LocalOrientation::soap_del() deep deletes tt__LocalOrientation data members, use only after tt__LocalOrientation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LocalOrientation::soap_type() returns SOAP_TYPE_tt__LocalOrientation or derived type identifier
class tt__LocalOrientation
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Rotation around the y axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "pan" of type xs:float.
  @ float*                               pan                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the z axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "tilt" of type xs:float.
  @ float*                               tilt                           0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Rotation around the x axis.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "roll" of type xs:float.
  @ float*                               roll                           0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LocationEntity is a complexType.
///
/// @note class tt__LocationEntity operations:
/// - tt__LocationEntity* soap_new_tt__LocationEntity(soap*) allocate and default initialize
/// - tt__LocationEntity* soap_new_tt__LocationEntity(soap*, int num) allocate and default initialize an array
/// - tt__LocationEntity* soap_new_req_tt__LocationEntity(soap*, ...) allocate, set required members
/// - tt__LocationEntity* soap_new_set_tt__LocationEntity(soap*, ...) allocate, set all public members
/// - tt__LocationEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__LocationEntity(soap*, tt__LocationEntity*) deserialize from a stream
/// - int soap_write_tt__LocationEntity(soap*, tt__LocationEntity*) serialize to a stream
/// - tt__LocationEntity* tt__LocationEntity::soap_dup(soap*) returns deep copy of tt__LocationEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__LocationEntity::soap_del() deep deletes tt__LocationEntity data members, use only after tt__LocationEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__LocationEntity::soap_type() returns SOAP_TYPE_tt__LocationEntity or derived type identifier
class tt__LocationEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   Location on earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoLocation" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     GeoLocation                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Orientation relative to earth.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoOrientation" of type "http://www.onvif.org/ver10/schema":GeoOrientation.
    tt__GeoOrientation*                  GeoOrientation                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor location offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalLocation" of type "http://www.onvif.org/ver10/schema":LocalLocation.
    tt__LocalLocation*                   LocalLocation                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indoor orientation offset.
/// </BLOCKQUOTE></PRE>
///
/// Element "LocalOrientation" of type "http://www.onvif.org/ver10/schema":LocalOrientation.
    tt__LocalOrientation*                LocalOrientation               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Entity type the entry refers to, use a value from the tt:Entity enumeration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Entity" of type xs:string.
  @ char*                                Entity                         0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional entity token.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   Token                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If this value is true the entity cannot be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Fixed" of type xs:boolean.
  @ bool*                                Fixed                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional reference to the XAddr of another devices DeviceManagement service.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoSource" of type xs:anyURI.
  @ xsd__anyURI                          GeoSource                      0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   If set the geo location is obtained internally.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "AutoGeo" of type xs:boolean.
  @ bool*                                AutoGeo                        0;	///< Optional attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringItems
// Optimization: complexType "http://www.onvif.org/ver10/schema":StringItems is not used and was removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Message
// Optimization: complexType "http://www.onvif.org/ver10/schema":Message is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is not used and was removed

/// @brief "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":EventFilter (not used and removed, retain with option -Ow4)
///
/// @note class wsnt__FilterType operations:
/// - wsnt__FilterType* soap_new_wsnt__FilterType(soap*) allocate and default initialize
/// - wsnt__FilterType* soap_new_wsnt__FilterType(soap*, int num) allocate and default initialize an array
/// - wsnt__FilterType* soap_new_req_wsnt__FilterType(soap*, ...) allocate, set required members
/// - wsnt__FilterType* soap_new_set_wsnt__FilterType(soap*, ...) allocate, set all public members
/// - wsnt__FilterType::soap_default(soap*) default initialize members
/// - int soap_read_wsnt__FilterType(soap*, wsnt__FilterType*) deserialize from a stream
/// - int soap_write_wsnt__FilterType(soap*, wsnt__FilterType*) serialize to a stream
/// - wsnt__FilterType* wsnt__FilterType::soap_dup(soap*) returns deep copy of wsnt__FilterType, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - wsnt__FilterType::soap_del() deep deletes wsnt__FilterType data members, use only after wsnt__FilterType::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int wsnt__FilterType::soap_type() returns SOAP_TYPE_wsnt__FilterType or derived type identifier
class wsnt__FilterType
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotificationProducerRP is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Notify is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UseRaw is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Subscribe is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetMessages is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Renew is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":RenewResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is not used and was removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse
// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":Documentation is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":ExtensibleDocumented is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":QueryExpressionType is not used and was removed


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/media/wsdl":Capabilities is a complexType.
///
/// @note class trt__Capabilities operations:
/// - trt__Capabilities* soap_new_trt__Capabilities(soap*) allocate and default initialize
/// - trt__Capabilities* soap_new_trt__Capabilities(soap*, int num) allocate and default initialize an array
/// - trt__Capabilities* soap_new_req_trt__Capabilities(soap*, ...) allocate, set required members
/// - trt__Capabilities* soap_new_set_trt__Capabilities(soap*, ...) allocate, set all public members
/// - trt__Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_trt__Capabilities(soap*, trt__Capabilities*) deserialize from a stream
/// - int soap_write_trt__Capabilities(soap*, trt__Capabilities*) serialize to a stream
/// - trt__Capabilities* trt__Capabilities::soap_dup(soap*) returns deep copy of trt__Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - trt__Capabilities::soap_del() deep deletes trt__Capabilities data members, use only after trt__Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int trt__Capabilities::soap_type() returns SOAP_TYPE_trt__Capabilities or derived type identifier
class trt__Capabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   Media profile capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileCapabilities" of type "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities.
    trt__ProfileCapabilities*            ProfileCapabilities            1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Streaming capabilities.
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamingCapabilities" of type "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities.
    trt__StreamingCapabilities*          StreamingCapabilities          1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates if GetSnapshotUri is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "SnapshotUri" of type xs:boolean.
  @ bool*                                SnapshotUri                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not Rotation feature is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Rotation" of type xs:boolean.
  @ bool*                                Rotation                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for changing video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "VideoSourceMode" of type xs:boolean.
  @ bool*                                VideoSourceMode                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates if OSD is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "OSD" of type xs:boolean.
  @ bool*                                OSD                            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for temporary osd text configuration.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "TemporaryOSDText" of type xs:boolean.
  @ bool*                                TemporaryOSDText               0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the support for the Efficient XML Interchange (EXI) binary XML format.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EXICompression" of type xs:boolean.
  @ bool*                                EXICompression                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":ProfileCapabilities is a complexType.
///
/// @note class trt__ProfileCapabilities operations:
/// - trt__ProfileCapabilities* soap_new_trt__ProfileCapabilities(soap*) allocate and default initialize
/// - trt__ProfileCapabilities* soap_new_trt__ProfileCapabilities(soap*, int num) allocate and default initialize an array
/// - trt__ProfileCapabilities* soap_new_req_trt__ProfileCapabilities(soap*, ...) allocate, set required members
/// - trt__ProfileCapabilities* soap_new_set_trt__ProfileCapabilities(soap*, ...) allocate, set all public members
/// - trt__ProfileCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_trt__ProfileCapabilities(soap*, trt__ProfileCapabilities*) deserialize from a stream
/// - int soap_write_trt__ProfileCapabilities(soap*, trt__ProfileCapabilities*) serialize to a stream
/// - trt__ProfileCapabilities* trt__ProfileCapabilities::soap_dup(soap*) returns deep copy of trt__ProfileCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - trt__ProfileCapabilities::soap_del() deep deletes trt__ProfileCapabilities data members, use only after trt__ProfileCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int trt__ProfileCapabilities::soap_type() returns SOAP_TYPE_trt__ProfileCapabilities or derived type identifier
class trt__ProfileCapabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Maximum number of profiles supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MaximumNumberOfProfiles" of type xs:int.
  @ int*                                 MaximumNumberOfProfiles        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":StreamingCapabilities is a complexType.
///
/// @note class trt__StreamingCapabilities operations:
/// - trt__StreamingCapabilities* soap_new_trt__StreamingCapabilities(soap*) allocate and default initialize
/// - trt__StreamingCapabilities* soap_new_trt__StreamingCapabilities(soap*, int num) allocate and default initialize an array
/// - trt__StreamingCapabilities* soap_new_req_trt__StreamingCapabilities(soap*, ...) allocate, set required members
/// - trt__StreamingCapabilities* soap_new_set_trt__StreamingCapabilities(soap*, ...) allocate, set all public members
/// - trt__StreamingCapabilities::soap_default(soap*) default initialize members
/// - int soap_read_trt__StreamingCapabilities(soap*, trt__StreamingCapabilities*) deserialize from a stream
/// - int soap_write_trt__StreamingCapabilities(soap*, trt__StreamingCapabilities*) serialize to a stream
/// - trt__StreamingCapabilities* trt__StreamingCapabilities::soap_dup(soap*) returns deep copy of trt__StreamingCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - trt__StreamingCapabilities::soap_del() deep deletes trt__StreamingCapabilities data members, use only after trt__StreamingCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int trt__StreamingCapabilities::soap_type() returns SOAP_TYPE_trt__StreamingCapabilities or derived type identifier
class trt__StreamingCapabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP multicast.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTPMulticast" of type xs:boolean.
  @ bool*                                RTPMulticast                   0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP over TCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_TCP" of type xs:boolean.
  @ bool*                                RTP_USCORETCP                  0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for RTP/RTSP/TCP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "RTP_RTSP_TCP" of type xs:boolean.
  @ bool*                                RTP_USCORERTSP_USCORETCP       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for non aggregate RTSP control.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NonAggregateControl" of type xs:boolean.
  @ bool*                                NonAggregateControl            0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates the device does not support live media streaming via RTSP.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "NoRTSPStreaming" of type xs:boolean.
  @ bool*                                NoRTSPStreaming                0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceMode is a complexType.
///
/// @note class trt__VideoSourceMode operations:
/// - trt__VideoSourceMode* soap_new_trt__VideoSourceMode(soap*) allocate and default initialize
/// - trt__VideoSourceMode* soap_new_trt__VideoSourceMode(soap*, int num) allocate and default initialize an array
/// - trt__VideoSourceMode* soap_new_req_trt__VideoSourceMode(soap*, ...) allocate, set required members
/// - trt__VideoSourceMode* soap_new_set_trt__VideoSourceMode(soap*, ...) allocate, set all public members
/// - trt__VideoSourceMode::soap_default(soap*) default initialize members
/// - int soap_read_trt__VideoSourceMode(soap*, trt__VideoSourceMode*) deserialize from a stream
/// - int soap_write_trt__VideoSourceMode(soap*, trt__VideoSourceMode*) serialize to a stream
/// - trt__VideoSourceMode* trt__VideoSourceMode::soap_dup(soap*) returns deep copy of trt__VideoSourceMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - trt__VideoSourceMode::soap_del() deep deletes trt__VideoSourceMode data members, use only after trt__VideoSourceMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int trt__VideoSourceMode::soap_type() returns SOAP_TYPE_trt__VideoSourceMode or derived type identifier
class trt__VideoSourceMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Max frame rate in frames per second for this video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxFramerate" of type xs:float.
    float                                MaxFramerate                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Max horizontal and vertical resolution for this video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaxResolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 MaxResolution                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indication which encodings are supported for this video source. The list may contain one or more enumeration values of tt:VideoEncoding.
/// </BLOCKQUOTE></PRE>
///
/// Element "Encodings" of type "http://www.onvif.org/ver10/media/wsdl":EncodingTypes.
    trt__EncodingTypes                   Encodings                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   After setting the mode if a device starts to reboot this value is true. If a device change the mode without rebooting this value is false. If true, configured parameters may not be guaranteed by the device after rebooting.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    bool                                 Reboot                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Informative description of this video source mode. This field should be described in English.
/// </BLOCKQUOTE></PRE>
///
/// Element "Description" of type "http://www.onvif.org/ver10/schema":Description.
    tt__Description                      Description                    0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension.
    trt__VideoSourceModeExtension*       Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indicate token for video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of whether this mode is active. If active this value is true. In case of non-indication, it means as false. The value of true shall be had by only one video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Enabled" of type xs:boolean.
  @ bool*                                Enabled                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/media/wsdl":VideoSourceModeExtension is a complexType.
///
/// @note class trt__VideoSourceModeExtension operations:
/// - trt__VideoSourceModeExtension* soap_new_trt__VideoSourceModeExtension(soap*) allocate and default initialize
/// - trt__VideoSourceModeExtension* soap_new_trt__VideoSourceModeExtension(soap*, int num) allocate and default initialize an array
/// - trt__VideoSourceModeExtension* soap_new_req_trt__VideoSourceModeExtension(soap*, ...) allocate, set required members
/// - trt__VideoSourceModeExtension* soap_new_set_trt__VideoSourceModeExtension(soap*, ...) allocate, set all public members
/// - trt__VideoSourceModeExtension::soap_default(soap*) default initialize members
/// - int soap_read_trt__VideoSourceModeExtension(soap*, trt__VideoSourceModeExtension*) deserialize from a stream
/// - int soap_write_trt__VideoSourceModeExtension(soap*, trt__VideoSourceModeExtension*) serialize to a stream
/// - trt__VideoSourceModeExtension* trt__VideoSourceModeExtension::soap_dup(soap*) returns deep copy of trt__VideoSourceModeExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - trt__VideoSourceModeExtension::soap_del() deep deletes trt__VideoSourceModeExtension data members, use only after trt__VideoSourceModeExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int trt__VideoSourceModeExtension::soap_type() returns SOAP_TYPE_trt__VideoSourceModeExtension or derived type identifier
class trt__VideoSourceModeExtension
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilities is a complexType.
///
/// @note class _trt__GetServiceCapabilities operations:
/// - _trt__GetServiceCapabilities* soap_new__trt__GetServiceCapabilities(soap*) allocate and default initialize
/// - _trt__GetServiceCapabilities* soap_new__trt__GetServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - _trt__GetServiceCapabilities* soap_new_req__trt__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - _trt__GetServiceCapabilities* soap_new_set__trt__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - _trt__GetServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetServiceCapabilities(soap*, _trt__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__trt__GetServiceCapabilities(soap*, _trt__GetServiceCapabilities*) serialize to a stream
/// - _trt__GetServiceCapabilities* _trt__GetServiceCapabilities::soap_dup(soap*) returns deep copy of _trt__GetServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetServiceCapabilities::soap_del() deep deletes _trt__GetServiceCapabilities data members, use only after _trt__GetServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetServiceCapabilities::soap_type() returns SOAP_TYPE__trt__GetServiceCapabilities or derived type identifier
class _trt__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note class _trt__GetServiceCapabilitiesResponse operations:
/// - _trt__GetServiceCapabilitiesResponse* soap_new__trt__GetServiceCapabilitiesResponse(soap*) allocate and default initialize
/// - _trt__GetServiceCapabilitiesResponse* soap_new__trt__GetServiceCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetServiceCapabilitiesResponse* soap_new_req__trt__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _trt__GetServiceCapabilitiesResponse* soap_new_set__trt__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _trt__GetServiceCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetServiceCapabilitiesResponse(soap*, _trt__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__trt__GetServiceCapabilitiesResponse(soap*, _trt__GetServiceCapabilitiesResponse*) serialize to a stream
/// - _trt__GetServiceCapabilitiesResponse* _trt__GetServiceCapabilitiesResponse::soap_dup(soap*) returns deep copy of _trt__GetServiceCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetServiceCapabilitiesResponse::soap_del() deep deletes _trt__GetServiceCapabilitiesResponse data members, use only after _trt__GetServiceCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetServiceCapabilitiesResponse::soap_type() returns SOAP_TYPE__trt__GetServiceCapabilitiesResponse or derived type identifier
class _trt__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the media service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
    trt__Capabilities*                   Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSources is a complexType.
///
/// @note class _trt__GetVideoSources operations:
/// - _trt__GetVideoSources* soap_new__trt__GetVideoSources(soap*) allocate and default initialize
/// - _trt__GetVideoSources* soap_new__trt__GetVideoSources(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSources* soap_new_req__trt__GetVideoSources(soap*, ...) allocate, set required members
/// - _trt__GetVideoSources* soap_new_set__trt__GetVideoSources(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSources::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSources(soap*, _trt__GetVideoSources*) deserialize from a stream
/// - int soap_write__trt__GetVideoSources(soap*, _trt__GetVideoSources*) serialize to a stream
/// - _trt__GetVideoSources* _trt__GetVideoSources::soap_dup(soap*) returns deep copy of _trt__GetVideoSources, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSources::soap_del() deep deletes _trt__GetVideoSources data members, use only after _trt__GetVideoSources::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSources::soap_type() returns SOAP_TYPE__trt__GetVideoSources or derived type identifier
class _trt__GetVideoSources
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourcesResponse is a complexType.
///
/// @note class _trt__GetVideoSourcesResponse operations:
/// - _trt__GetVideoSourcesResponse* soap_new__trt__GetVideoSourcesResponse(soap*) allocate and default initialize
/// - _trt__GetVideoSourcesResponse* soap_new__trt__GetVideoSourcesResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourcesResponse* soap_new_req__trt__GetVideoSourcesResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourcesResponse* soap_new_set__trt__GetVideoSourcesResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourcesResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourcesResponse(soap*, _trt__GetVideoSourcesResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourcesResponse(soap*, _trt__GetVideoSourcesResponse*) serialize to a stream
/// - _trt__GetVideoSourcesResponse* _trt__GetVideoSourcesResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoSourcesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourcesResponse::soap_del() deep deletes _trt__GetVideoSourcesResponse data members, use only after _trt__GetVideoSourcesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourcesResponse::soap_type() returns SOAP_TYPE__trt__GetVideoSourcesResponse or derived type identifier
class _trt__GetVideoSourcesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Video Sources
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoSource* is 0..unbounded.
  $ int                                  __sizeVideoSources             0;
/// Pointer to array tt__VideoSource* of size 0..unbounded.
    tt__VideoSource*                    *VideoSources                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSources
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSources is a complexType.
///
/// @note class _trt__GetAudioSources operations:
/// - _trt__GetAudioSources* soap_new__trt__GetAudioSources(soap*) allocate and default initialize
/// - _trt__GetAudioSources* soap_new__trt__GetAudioSources(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioSources* soap_new_req__trt__GetAudioSources(soap*, ...) allocate, set required members
/// - _trt__GetAudioSources* soap_new_set__trt__GetAudioSources(soap*, ...) allocate, set all public members
/// - _trt__GetAudioSources::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioSources(soap*, _trt__GetAudioSources*) deserialize from a stream
/// - int soap_write__trt__GetAudioSources(soap*, _trt__GetAudioSources*) serialize to a stream
/// - _trt__GetAudioSources* _trt__GetAudioSources::soap_dup(soap*) returns deep copy of _trt__GetAudioSources, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioSources::soap_del() deep deletes _trt__GetAudioSources data members, use only after _trt__GetAudioSources::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioSources::soap_type() returns SOAP_TYPE__trt__GetAudioSources or derived type identifier
class _trt__GetAudioSources
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourcesResponse is a complexType.
///
/// @note class _trt__GetAudioSourcesResponse operations:
/// - _trt__GetAudioSourcesResponse* soap_new__trt__GetAudioSourcesResponse(soap*) allocate and default initialize
/// - _trt__GetAudioSourcesResponse* soap_new__trt__GetAudioSourcesResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioSourcesResponse* soap_new_req__trt__GetAudioSourcesResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioSourcesResponse* soap_new_set__trt__GetAudioSourcesResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioSourcesResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioSourcesResponse(soap*, _trt__GetAudioSourcesResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourcesResponse(soap*, _trt__GetAudioSourcesResponse*) serialize to a stream
/// - _trt__GetAudioSourcesResponse* _trt__GetAudioSourcesResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioSourcesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioSourcesResponse::soap_del() deep deletes _trt__GetAudioSourcesResponse data members, use only after _trt__GetAudioSourcesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioSourcesResponse::soap_type() returns SOAP_TYPE__trt__GetAudioSourcesResponse or derived type identifier
class _trt__GetAudioSourcesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Sources
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioSource* is 0..unbounded.
  $ int                                  __sizeAudioSources             0;
/// Pointer to array tt__AudioSource* of size 0..unbounded.
    tt__AudioSource*                    *AudioSources                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputs is a complexType.
///
/// @note class _trt__GetAudioOutputs operations:
/// - _trt__GetAudioOutputs* soap_new__trt__GetAudioOutputs(soap*) allocate and default initialize
/// - _trt__GetAudioOutputs* soap_new__trt__GetAudioOutputs(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputs* soap_new_req__trt__GetAudioOutputs(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputs* soap_new_set__trt__GetAudioOutputs(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputs::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputs(soap*, _trt__GetAudioOutputs*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputs(soap*, _trt__GetAudioOutputs*) serialize to a stream
/// - _trt__GetAudioOutputs* _trt__GetAudioOutputs::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputs, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputs::soap_del() deep deletes _trt__GetAudioOutputs data members, use only after _trt__GetAudioOutputs::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputs::soap_type() returns SOAP_TYPE__trt__GetAudioOutputs or derived type identifier
class _trt__GetAudioOutputs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputsResponse is a complexType.
///
/// @note class _trt__GetAudioOutputsResponse operations:
/// - _trt__GetAudioOutputsResponse* soap_new__trt__GetAudioOutputsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioOutputsResponse* soap_new__trt__GetAudioOutputsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputsResponse* soap_new_req__trt__GetAudioOutputsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputsResponse* soap_new_set__trt__GetAudioOutputsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputsResponse(soap*, _trt__GetAudioOutputsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputsResponse(soap*, _trt__GetAudioOutputsResponse*) serialize to a stream
/// - _trt__GetAudioOutputsResponse* _trt__GetAudioOutputsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputsResponse::soap_del() deep deletes _trt__GetAudioOutputsResponse data members, use only after _trt__GetAudioOutputsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioOutputsResponse or derived type identifier
class _trt__GetAudioOutputsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of existing Audio Outputs
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioOutput* is 0..unbounded.
  $ int                                  __sizeAudioOutputs             0;
/// Pointer to array tt__AudioOutput* of size 0..unbounded.
    tt__AudioOutput*                    *AudioOutputs                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfile is a complexType.
///
/// @note class _trt__CreateProfile operations:
/// - _trt__CreateProfile* soap_new__trt__CreateProfile(soap*) allocate and default initialize
/// - _trt__CreateProfile* soap_new__trt__CreateProfile(soap*, int num) allocate and default initialize an array
/// - _trt__CreateProfile* soap_new_req__trt__CreateProfile(soap*, ...) allocate, set required members
/// - _trt__CreateProfile* soap_new_set__trt__CreateProfile(soap*, ...) allocate, set all public members
/// - _trt__CreateProfile::soap_default(soap*) default initialize members
/// - int soap_read__trt__CreateProfile(soap*, _trt__CreateProfile*) deserialize from a stream
/// - int soap_write__trt__CreateProfile(soap*, _trt__CreateProfile*) serialize to a stream
/// - _trt__CreateProfile* _trt__CreateProfile::soap_dup(soap*) returns deep copy of _trt__CreateProfile, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__CreateProfile::soap_del() deep deletes _trt__CreateProfile data members, use only after _trt__CreateProfile::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__CreateProfile::soap_type() returns SOAP_TYPE__trt__CreateProfile or derived type identifier
class _trt__CreateProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   friendly name of the profile to be created
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional token, specifying the unique identifier of the new profile. <br/>A device supports at least a token length of 12 characters and characters "A-Z" | "a-z" | "0-9" | "-.".
/// </BLOCKQUOTE></PRE>
///
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateProfileResponse is a complexType.
///
/// @note class _trt__CreateProfileResponse operations:
/// - _trt__CreateProfileResponse* soap_new__trt__CreateProfileResponse(soap*) allocate and default initialize
/// - _trt__CreateProfileResponse* soap_new__trt__CreateProfileResponse(soap*, int num) allocate and default initialize an array
/// - _trt__CreateProfileResponse* soap_new_req__trt__CreateProfileResponse(soap*, ...) allocate, set required members
/// - _trt__CreateProfileResponse* soap_new_set__trt__CreateProfileResponse(soap*, ...) allocate, set all public members
/// - _trt__CreateProfileResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__CreateProfileResponse(soap*, _trt__CreateProfileResponse*) deserialize from a stream
/// - int soap_write__trt__CreateProfileResponse(soap*, _trt__CreateProfileResponse*) serialize to a stream
/// - _trt__CreateProfileResponse* _trt__CreateProfileResponse::soap_dup(soap*) returns deep copy of _trt__CreateProfileResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__CreateProfileResponse::soap_del() deep deletes _trt__CreateProfileResponse data members, use only after _trt__CreateProfileResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__CreateProfileResponse::soap_type() returns SOAP_TYPE__trt__CreateProfileResponse or derived type identifier
class _trt__CreateProfileResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   returns the new created profile
/// </BLOCKQUOTE></PRE>
///
/// Element "Profile" of type "http://www.onvif.org/ver10/schema":Profile.
    tt__Profile*                         Profile                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfile is a complexType.
///
/// @note class _trt__GetProfile operations:
/// - _trt__GetProfile* soap_new__trt__GetProfile(soap*) allocate and default initialize
/// - _trt__GetProfile* soap_new__trt__GetProfile(soap*, int num) allocate and default initialize an array
/// - _trt__GetProfile* soap_new_req__trt__GetProfile(soap*, ...) allocate, set required members
/// - _trt__GetProfile* soap_new_set__trt__GetProfile(soap*, ...) allocate, set all public members
/// - _trt__GetProfile::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetProfile(soap*, _trt__GetProfile*) deserialize from a stream
/// - int soap_write__trt__GetProfile(soap*, _trt__GetProfile*) serialize to a stream
/// - _trt__GetProfile* _trt__GetProfile::soap_dup(soap*) returns deep copy of _trt__GetProfile, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetProfile::soap_del() deep deletes _trt__GetProfile data members, use only after _trt__GetProfile::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetProfile::soap_type() returns SOAP_TYPE__trt__GetProfile or derived type identifier
class _trt__GetProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   this command requests a specific profile
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfileResponse is a complexType.
///
/// @note class _trt__GetProfileResponse operations:
/// - _trt__GetProfileResponse* soap_new__trt__GetProfileResponse(soap*) allocate and default initialize
/// - _trt__GetProfileResponse* soap_new__trt__GetProfileResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetProfileResponse* soap_new_req__trt__GetProfileResponse(soap*, ...) allocate, set required members
/// - _trt__GetProfileResponse* soap_new_set__trt__GetProfileResponse(soap*, ...) allocate, set all public members
/// - _trt__GetProfileResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetProfileResponse(soap*, _trt__GetProfileResponse*) deserialize from a stream
/// - int soap_write__trt__GetProfileResponse(soap*, _trt__GetProfileResponse*) serialize to a stream
/// - _trt__GetProfileResponse* _trt__GetProfileResponse::soap_dup(soap*) returns deep copy of _trt__GetProfileResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetProfileResponse::soap_del() deep deletes _trt__GetProfileResponse data members, use only after _trt__GetProfileResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetProfileResponse::soap_type() returns SOAP_TYPE__trt__GetProfileResponse or derived type identifier
class _trt__GetProfileResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   returns the requested media profile
/// </BLOCKQUOTE></PRE>
///
/// Element "Profile" of type "http://www.onvif.org/ver10/schema":Profile.
    tt__Profile*                         Profile                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfiles
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfiles is a complexType.
///
/// @note class _trt__GetProfiles operations:
/// - _trt__GetProfiles* soap_new__trt__GetProfiles(soap*) allocate and default initialize
/// - _trt__GetProfiles* soap_new__trt__GetProfiles(soap*, int num) allocate and default initialize an array
/// - _trt__GetProfiles* soap_new_req__trt__GetProfiles(soap*, ...) allocate, set required members
/// - _trt__GetProfiles* soap_new_set__trt__GetProfiles(soap*, ...) allocate, set all public members
/// - _trt__GetProfiles::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetProfiles(soap*, _trt__GetProfiles*) deserialize from a stream
/// - int soap_write__trt__GetProfiles(soap*, _trt__GetProfiles*) serialize to a stream
/// - _trt__GetProfiles* _trt__GetProfiles::soap_dup(soap*) returns deep copy of _trt__GetProfiles, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetProfiles::soap_del() deep deletes _trt__GetProfiles data members, use only after _trt__GetProfiles::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetProfiles::soap_type() returns SOAP_TYPE__trt__GetProfiles or derived type identifier
class _trt__GetProfiles
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetProfilesResponse is a complexType.
///
/// @note class _trt__GetProfilesResponse operations:
/// - _trt__GetProfilesResponse* soap_new__trt__GetProfilesResponse(soap*) allocate and default initialize
/// - _trt__GetProfilesResponse* soap_new__trt__GetProfilesResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetProfilesResponse* soap_new_req__trt__GetProfilesResponse(soap*, ...) allocate, set required members
/// - _trt__GetProfilesResponse* soap_new_set__trt__GetProfilesResponse(soap*, ...) allocate, set all public members
/// - _trt__GetProfilesResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetProfilesResponse(soap*, _trt__GetProfilesResponse*) deserialize from a stream
/// - int soap_write__trt__GetProfilesResponse(soap*, _trt__GetProfilesResponse*) serialize to a stream
/// - _trt__GetProfilesResponse* _trt__GetProfilesResponse::soap_dup(soap*) returns deep copy of _trt__GetProfilesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetProfilesResponse::soap_del() deep deletes _trt__GetProfilesResponse data members, use only after _trt__GetProfilesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetProfilesResponse::soap_type() returns SOAP_TYPE__trt__GetProfilesResponse or derived type identifier
class _trt__GetProfilesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   lists all profiles that exist in the media service
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Profile* is 0..unbounded.
  $ int                                  __sizeProfiles                 0;
/// Pointer to array tt__Profile* of size 0..unbounded.
    tt__Profile*                        *Profiles                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfiguration is a complexType.
///
/// @note class _trt__AddVideoEncoderConfiguration operations:
/// - _trt__AddVideoEncoderConfiguration* soap_new__trt__AddVideoEncoderConfiguration(soap*) allocate and default initialize
/// - _trt__AddVideoEncoderConfiguration* soap_new__trt__AddVideoEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddVideoEncoderConfiguration* soap_new_req__trt__AddVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddVideoEncoderConfiguration* soap_new_set__trt__AddVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddVideoEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddVideoEncoderConfiguration(soap*, _trt__AddVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoEncoderConfiguration(soap*, _trt__AddVideoEncoderConfiguration*) serialize to a stream
/// - _trt__AddVideoEncoderConfiguration* _trt__AddVideoEncoderConfiguration::soap_dup(soap*) returns deep copy of _trt__AddVideoEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddVideoEncoderConfiguration::soap_del() deep deletes _trt__AddVideoEncoderConfiguration data members, use only after _trt__AddVideoEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddVideoEncoderConfiguration::soap_type() returns SOAP_TYPE__trt__AddVideoEncoderConfiguration or derived type identifier
class _trt__AddVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoEncoderConfigurationResponse is a complexType.
///
/// @note class _trt__AddVideoEncoderConfigurationResponse operations:
/// - _trt__AddVideoEncoderConfigurationResponse* soap_new__trt__AddVideoEncoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddVideoEncoderConfigurationResponse* soap_new__trt__AddVideoEncoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddVideoEncoderConfigurationResponse* soap_new_req__trt__AddVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddVideoEncoderConfigurationResponse* soap_new_set__trt__AddVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddVideoEncoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddVideoEncoderConfigurationResponse(soap*, _trt__AddVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoEncoderConfigurationResponse(soap*, _trt__AddVideoEncoderConfigurationResponse*) serialize to a stream
/// - _trt__AddVideoEncoderConfigurationResponse* _trt__AddVideoEncoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddVideoEncoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddVideoEncoderConfigurationResponse::soap_del() deep deletes _trt__AddVideoEncoderConfigurationResponse data members, use only after _trt__AddVideoEncoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddVideoEncoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddVideoEncoderConfigurationResponse or derived type identifier
class _trt__AddVideoEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfiguration is a complexType.
///
/// @note class _trt__RemoveVideoEncoderConfiguration operations:
/// - _trt__RemoveVideoEncoderConfiguration* soap_new__trt__RemoveVideoEncoderConfiguration(soap*) allocate and default initialize
/// - _trt__RemoveVideoEncoderConfiguration* soap_new__trt__RemoveVideoEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveVideoEncoderConfiguration* soap_new_req__trt__RemoveVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemoveVideoEncoderConfiguration* soap_new_set__trt__RemoveVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemoveVideoEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveVideoEncoderConfiguration(soap*, _trt__RemoveVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoEncoderConfiguration(soap*, _trt__RemoveVideoEncoderConfiguration*) serialize to a stream
/// - _trt__RemoveVideoEncoderConfiguration* _trt__RemoveVideoEncoderConfiguration::soap_dup(soap*) returns deep copy of _trt__RemoveVideoEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveVideoEncoderConfiguration::soap_del() deep deletes _trt__RemoveVideoEncoderConfiguration data members, use only after _trt__RemoveVideoEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveVideoEncoderConfiguration::soap_type() returns SOAP_TYPE__trt__RemoveVideoEncoderConfiguration or derived type identifier
class _trt__RemoveVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoEncoderConfigurationResponse is a complexType.
///
/// @note class _trt__RemoveVideoEncoderConfigurationResponse operations:
/// - _trt__RemoveVideoEncoderConfigurationResponse* soap_new__trt__RemoveVideoEncoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemoveVideoEncoderConfigurationResponse* soap_new__trt__RemoveVideoEncoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveVideoEncoderConfigurationResponse* soap_new_req__trt__RemoveVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemoveVideoEncoderConfigurationResponse* soap_new_set__trt__RemoveVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemoveVideoEncoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveVideoEncoderConfigurationResponse(soap*, _trt__RemoveVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoEncoderConfigurationResponse(soap*, _trt__RemoveVideoEncoderConfigurationResponse*) serialize to a stream
/// - _trt__RemoveVideoEncoderConfigurationResponse* _trt__RemoveVideoEncoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemoveVideoEncoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveVideoEncoderConfigurationResponse::soap_del() deep deletes _trt__RemoveVideoEncoderConfigurationResponse data members, use only after _trt__RemoveVideoEncoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveVideoEncoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemoveVideoEncoderConfigurationResponse or derived type identifier
class _trt__RemoveVideoEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfiguration is a complexType.
///
/// @note class _trt__AddVideoSourceConfiguration operations:
/// - _trt__AddVideoSourceConfiguration* soap_new__trt__AddVideoSourceConfiguration(soap*) allocate and default initialize
/// - _trt__AddVideoSourceConfiguration* soap_new__trt__AddVideoSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddVideoSourceConfiguration* soap_new_req__trt__AddVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddVideoSourceConfiguration* soap_new_set__trt__AddVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddVideoSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddVideoSourceConfiguration(soap*, _trt__AddVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoSourceConfiguration(soap*, _trt__AddVideoSourceConfiguration*) serialize to a stream
/// - _trt__AddVideoSourceConfiguration* _trt__AddVideoSourceConfiguration::soap_dup(soap*) returns deep copy of _trt__AddVideoSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddVideoSourceConfiguration::soap_del() deep deletes _trt__AddVideoSourceConfiguration data members, use only after _trt__AddVideoSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddVideoSourceConfiguration::soap_type() returns SOAP_TYPE__trt__AddVideoSourceConfiguration or derived type identifier
class _trt__AddVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoSourceConfigurationResponse is a complexType.
///
/// @note class _trt__AddVideoSourceConfigurationResponse operations:
/// - _trt__AddVideoSourceConfigurationResponse* soap_new__trt__AddVideoSourceConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddVideoSourceConfigurationResponse* soap_new__trt__AddVideoSourceConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddVideoSourceConfigurationResponse* soap_new_req__trt__AddVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddVideoSourceConfigurationResponse* soap_new_set__trt__AddVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddVideoSourceConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddVideoSourceConfigurationResponse(soap*, _trt__AddVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoSourceConfigurationResponse(soap*, _trt__AddVideoSourceConfigurationResponse*) serialize to a stream
/// - _trt__AddVideoSourceConfigurationResponse* _trt__AddVideoSourceConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddVideoSourceConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddVideoSourceConfigurationResponse::soap_del() deep deletes _trt__AddVideoSourceConfigurationResponse data members, use only after _trt__AddVideoSourceConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddVideoSourceConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddVideoSourceConfigurationResponse or derived type identifier
class _trt__AddVideoSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfiguration is a complexType.
///
/// @note class _trt__RemoveVideoSourceConfiguration operations:
/// - _trt__RemoveVideoSourceConfiguration* soap_new__trt__RemoveVideoSourceConfiguration(soap*) allocate and default initialize
/// - _trt__RemoveVideoSourceConfiguration* soap_new__trt__RemoveVideoSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveVideoSourceConfiguration* soap_new_req__trt__RemoveVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemoveVideoSourceConfiguration* soap_new_set__trt__RemoveVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemoveVideoSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveVideoSourceConfiguration(soap*, _trt__RemoveVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoSourceConfiguration(soap*, _trt__RemoveVideoSourceConfiguration*) serialize to a stream
/// - _trt__RemoveVideoSourceConfiguration* _trt__RemoveVideoSourceConfiguration::soap_dup(soap*) returns deep copy of _trt__RemoveVideoSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveVideoSourceConfiguration::soap_del() deep deletes _trt__RemoveVideoSourceConfiguration data members, use only after _trt__RemoveVideoSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveVideoSourceConfiguration::soap_type() returns SOAP_TYPE__trt__RemoveVideoSourceConfiguration or derived type identifier
class _trt__RemoveVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoSourceConfigurationResponse is a complexType.
///
/// @note class _trt__RemoveVideoSourceConfigurationResponse operations:
/// - _trt__RemoveVideoSourceConfigurationResponse* soap_new__trt__RemoveVideoSourceConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemoveVideoSourceConfigurationResponse* soap_new__trt__RemoveVideoSourceConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveVideoSourceConfigurationResponse* soap_new_req__trt__RemoveVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemoveVideoSourceConfigurationResponse* soap_new_set__trt__RemoveVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemoveVideoSourceConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveVideoSourceConfigurationResponse(soap*, _trt__RemoveVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoSourceConfigurationResponse(soap*, _trt__RemoveVideoSourceConfigurationResponse*) serialize to a stream
/// - _trt__RemoveVideoSourceConfigurationResponse* _trt__RemoveVideoSourceConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemoveVideoSourceConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveVideoSourceConfigurationResponse::soap_del() deep deletes _trt__RemoveVideoSourceConfigurationResponse data members, use only after _trt__RemoveVideoSourceConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveVideoSourceConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemoveVideoSourceConfigurationResponse or derived type identifier
class _trt__RemoveVideoSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfiguration is a complexType.
///
/// @note class _trt__AddAudioEncoderConfiguration operations:
/// - _trt__AddAudioEncoderConfiguration* soap_new__trt__AddAudioEncoderConfiguration(soap*) allocate and default initialize
/// - _trt__AddAudioEncoderConfiguration* soap_new__trt__AddAudioEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddAudioEncoderConfiguration* soap_new_req__trt__AddAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddAudioEncoderConfiguration* soap_new_set__trt__AddAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddAudioEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddAudioEncoderConfiguration(soap*, _trt__AddAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioEncoderConfiguration(soap*, _trt__AddAudioEncoderConfiguration*) serialize to a stream
/// - _trt__AddAudioEncoderConfiguration* _trt__AddAudioEncoderConfiguration::soap_dup(soap*) returns deep copy of _trt__AddAudioEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddAudioEncoderConfiguration::soap_del() deep deletes _trt__AddAudioEncoderConfiguration data members, use only after _trt__AddAudioEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddAudioEncoderConfiguration::soap_type() returns SOAP_TYPE__trt__AddAudioEncoderConfiguration or derived type identifier
class _trt__AddAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioEncoderConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioEncoderConfigurationResponse is a complexType.
///
/// @note class _trt__AddAudioEncoderConfigurationResponse operations:
/// - _trt__AddAudioEncoderConfigurationResponse* soap_new__trt__AddAudioEncoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddAudioEncoderConfigurationResponse* soap_new__trt__AddAudioEncoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddAudioEncoderConfigurationResponse* soap_new_req__trt__AddAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddAudioEncoderConfigurationResponse* soap_new_set__trt__AddAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddAudioEncoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddAudioEncoderConfigurationResponse(soap*, _trt__AddAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioEncoderConfigurationResponse(soap*, _trt__AddAudioEncoderConfigurationResponse*) serialize to a stream
/// - _trt__AddAudioEncoderConfigurationResponse* _trt__AddAudioEncoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddAudioEncoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddAudioEncoderConfigurationResponse::soap_del() deep deletes _trt__AddAudioEncoderConfigurationResponse data members, use only after _trt__AddAudioEncoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddAudioEncoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddAudioEncoderConfigurationResponse or derived type identifier
class _trt__AddAudioEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfiguration is a complexType.
///
/// @note class _trt__RemoveAudioEncoderConfiguration operations:
/// - _trt__RemoveAudioEncoderConfiguration* soap_new__trt__RemoveAudioEncoderConfiguration(soap*) allocate and default initialize
/// - _trt__RemoveAudioEncoderConfiguration* soap_new__trt__RemoveAudioEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveAudioEncoderConfiguration* soap_new_req__trt__RemoveAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemoveAudioEncoderConfiguration* soap_new_set__trt__RemoveAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemoveAudioEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveAudioEncoderConfiguration(soap*, _trt__RemoveAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioEncoderConfiguration(soap*, _trt__RemoveAudioEncoderConfiguration*) serialize to a stream
/// - _trt__RemoveAudioEncoderConfiguration* _trt__RemoveAudioEncoderConfiguration::soap_dup(soap*) returns deep copy of _trt__RemoveAudioEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveAudioEncoderConfiguration::soap_del() deep deletes _trt__RemoveAudioEncoderConfiguration data members, use only after _trt__RemoveAudioEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveAudioEncoderConfiguration::soap_type() returns SOAP_TYPE__trt__RemoveAudioEncoderConfiguration or derived type identifier
class _trt__RemoveAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioEncoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioEncoderConfigurationResponse is a complexType.
///
/// @note class _trt__RemoveAudioEncoderConfigurationResponse operations:
/// - _trt__RemoveAudioEncoderConfigurationResponse* soap_new__trt__RemoveAudioEncoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemoveAudioEncoderConfigurationResponse* soap_new__trt__RemoveAudioEncoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveAudioEncoderConfigurationResponse* soap_new_req__trt__RemoveAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemoveAudioEncoderConfigurationResponse* soap_new_set__trt__RemoveAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemoveAudioEncoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveAudioEncoderConfigurationResponse(soap*, _trt__RemoveAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioEncoderConfigurationResponse(soap*, _trt__RemoveAudioEncoderConfigurationResponse*) serialize to a stream
/// - _trt__RemoveAudioEncoderConfigurationResponse* _trt__RemoveAudioEncoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemoveAudioEncoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveAudioEncoderConfigurationResponse::soap_del() deep deletes _trt__RemoveAudioEncoderConfigurationResponse data members, use only after _trt__RemoveAudioEncoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveAudioEncoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemoveAudioEncoderConfigurationResponse or derived type identifier
class _trt__RemoveAudioEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfiguration is a complexType.
///
/// @note class _trt__AddAudioSourceConfiguration operations:
/// - _trt__AddAudioSourceConfiguration* soap_new__trt__AddAudioSourceConfiguration(soap*) allocate and default initialize
/// - _trt__AddAudioSourceConfiguration* soap_new__trt__AddAudioSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddAudioSourceConfiguration* soap_new_req__trt__AddAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddAudioSourceConfiguration* soap_new_set__trt__AddAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddAudioSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddAudioSourceConfiguration(soap*, _trt__AddAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioSourceConfiguration(soap*, _trt__AddAudioSourceConfiguration*) serialize to a stream
/// - _trt__AddAudioSourceConfiguration* _trt__AddAudioSourceConfiguration::soap_dup(soap*) returns deep copy of _trt__AddAudioSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddAudioSourceConfiguration::soap_del() deep deletes _trt__AddAudioSourceConfiguration data members, use only after _trt__AddAudioSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddAudioSourceConfiguration::soap_type() returns SOAP_TYPE__trt__AddAudioSourceConfiguration or derived type identifier
class _trt__AddAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioSourceConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioSourceConfigurationResponse is a complexType.
///
/// @note class _trt__AddAudioSourceConfigurationResponse operations:
/// - _trt__AddAudioSourceConfigurationResponse* soap_new__trt__AddAudioSourceConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddAudioSourceConfigurationResponse* soap_new__trt__AddAudioSourceConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddAudioSourceConfigurationResponse* soap_new_req__trt__AddAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddAudioSourceConfigurationResponse* soap_new_set__trt__AddAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddAudioSourceConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddAudioSourceConfigurationResponse(soap*, _trt__AddAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioSourceConfigurationResponse(soap*, _trt__AddAudioSourceConfigurationResponse*) serialize to a stream
/// - _trt__AddAudioSourceConfigurationResponse* _trt__AddAudioSourceConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddAudioSourceConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddAudioSourceConfigurationResponse::soap_del() deep deletes _trt__AddAudioSourceConfigurationResponse data members, use only after _trt__AddAudioSourceConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddAudioSourceConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddAudioSourceConfigurationResponse or derived type identifier
class _trt__AddAudioSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfiguration is a complexType.
///
/// @note class _trt__RemoveAudioSourceConfiguration operations:
/// - _trt__RemoveAudioSourceConfiguration* soap_new__trt__RemoveAudioSourceConfiguration(soap*) allocate and default initialize
/// - _trt__RemoveAudioSourceConfiguration* soap_new__trt__RemoveAudioSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveAudioSourceConfiguration* soap_new_req__trt__RemoveAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemoveAudioSourceConfiguration* soap_new_set__trt__RemoveAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemoveAudioSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveAudioSourceConfiguration(soap*, _trt__RemoveAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioSourceConfiguration(soap*, _trt__RemoveAudioSourceConfiguration*) serialize to a stream
/// - _trt__RemoveAudioSourceConfiguration* _trt__RemoveAudioSourceConfiguration::soap_dup(soap*) returns deep copy of _trt__RemoveAudioSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveAudioSourceConfiguration::soap_del() deep deletes _trt__RemoveAudioSourceConfiguration data members, use only after _trt__RemoveAudioSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveAudioSourceConfiguration::soap_type() returns SOAP_TYPE__trt__RemoveAudioSourceConfiguration or derived type identifier
class _trt__RemoveAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioSourceConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioSourceConfigurationResponse is a complexType.
///
/// @note class _trt__RemoveAudioSourceConfigurationResponse operations:
/// - _trt__RemoveAudioSourceConfigurationResponse* soap_new__trt__RemoveAudioSourceConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemoveAudioSourceConfigurationResponse* soap_new__trt__RemoveAudioSourceConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveAudioSourceConfigurationResponse* soap_new_req__trt__RemoveAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemoveAudioSourceConfigurationResponse* soap_new_set__trt__RemoveAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemoveAudioSourceConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveAudioSourceConfigurationResponse(soap*, _trt__RemoveAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioSourceConfigurationResponse(soap*, _trt__RemoveAudioSourceConfigurationResponse*) serialize to a stream
/// - _trt__RemoveAudioSourceConfigurationResponse* _trt__RemoveAudioSourceConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemoveAudioSourceConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveAudioSourceConfigurationResponse::soap_del() deep deletes _trt__RemoveAudioSourceConfigurationResponse data members, use only after _trt__RemoveAudioSourceConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveAudioSourceConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemoveAudioSourceConfigurationResponse or derived type identifier
class _trt__RemoveAudioSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfiguration is a complexType.
///
/// @note class _trt__AddPTZConfiguration operations:
/// - _trt__AddPTZConfiguration* soap_new__trt__AddPTZConfiguration(soap*) allocate and default initialize
/// - _trt__AddPTZConfiguration* soap_new__trt__AddPTZConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddPTZConfiguration* soap_new_req__trt__AddPTZConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddPTZConfiguration* soap_new_set__trt__AddPTZConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddPTZConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddPTZConfiguration(soap*, _trt__AddPTZConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddPTZConfiguration(soap*, _trt__AddPTZConfiguration*) serialize to a stream
/// - _trt__AddPTZConfiguration* _trt__AddPTZConfiguration::soap_dup(soap*) returns deep copy of _trt__AddPTZConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddPTZConfiguration::soap_del() deep deletes _trt__AddPTZConfiguration data members, use only after _trt__AddPTZConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddPTZConfiguration::soap_type() returns SOAP_TYPE__trt__AddPTZConfiguration or derived type identifier
class _trt__AddPTZConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the PTZConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddPTZConfigurationResponse is a complexType.
///
/// @note class _trt__AddPTZConfigurationResponse operations:
/// - _trt__AddPTZConfigurationResponse* soap_new__trt__AddPTZConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddPTZConfigurationResponse* soap_new__trt__AddPTZConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddPTZConfigurationResponse* soap_new_req__trt__AddPTZConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddPTZConfigurationResponse* soap_new_set__trt__AddPTZConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddPTZConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddPTZConfigurationResponse(soap*, _trt__AddPTZConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddPTZConfigurationResponse(soap*, _trt__AddPTZConfigurationResponse*) serialize to a stream
/// - _trt__AddPTZConfigurationResponse* _trt__AddPTZConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddPTZConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddPTZConfigurationResponse::soap_del() deep deletes _trt__AddPTZConfigurationResponse data members, use only after _trt__AddPTZConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddPTZConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddPTZConfigurationResponse or derived type identifier
class _trt__AddPTZConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfiguration is a complexType.
///
/// @note class _trt__RemovePTZConfiguration operations:
/// - _trt__RemovePTZConfiguration* soap_new__trt__RemovePTZConfiguration(soap*) allocate and default initialize
/// - _trt__RemovePTZConfiguration* soap_new__trt__RemovePTZConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemovePTZConfiguration* soap_new_req__trt__RemovePTZConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemovePTZConfiguration* soap_new_set__trt__RemovePTZConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemovePTZConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemovePTZConfiguration(soap*, _trt__RemovePTZConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemovePTZConfiguration(soap*, _trt__RemovePTZConfiguration*) serialize to a stream
/// - _trt__RemovePTZConfiguration* _trt__RemovePTZConfiguration::soap_dup(soap*) returns deep copy of _trt__RemovePTZConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemovePTZConfiguration::soap_del() deep deletes _trt__RemovePTZConfiguration data members, use only after _trt__RemovePTZConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemovePTZConfiguration::soap_type() returns SOAP_TYPE__trt__RemovePTZConfiguration or derived type identifier
class _trt__RemovePTZConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   PTZConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemovePTZConfigurationResponse is a complexType.
///
/// @note class _trt__RemovePTZConfigurationResponse operations:
/// - _trt__RemovePTZConfigurationResponse* soap_new__trt__RemovePTZConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemovePTZConfigurationResponse* soap_new__trt__RemovePTZConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemovePTZConfigurationResponse* soap_new_req__trt__RemovePTZConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemovePTZConfigurationResponse* soap_new_set__trt__RemovePTZConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemovePTZConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemovePTZConfigurationResponse(soap*, _trt__RemovePTZConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemovePTZConfigurationResponse(soap*, _trt__RemovePTZConfigurationResponse*) serialize to a stream
/// - _trt__RemovePTZConfigurationResponse* _trt__RemovePTZConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemovePTZConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemovePTZConfigurationResponse::soap_del() deep deletes _trt__RemovePTZConfigurationResponse data members, use only after _trt__RemovePTZConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemovePTZConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemovePTZConfigurationResponse or derived type identifier
class _trt__RemovePTZConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfiguration is a complexType.
///
/// @note class _trt__AddVideoAnalyticsConfiguration operations:
/// - _trt__AddVideoAnalyticsConfiguration* soap_new__trt__AddVideoAnalyticsConfiguration(soap*) allocate and default initialize
/// - _trt__AddVideoAnalyticsConfiguration* soap_new__trt__AddVideoAnalyticsConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddVideoAnalyticsConfiguration* soap_new_req__trt__AddVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddVideoAnalyticsConfiguration* soap_new_set__trt__AddVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddVideoAnalyticsConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddVideoAnalyticsConfiguration(soap*, _trt__AddVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddVideoAnalyticsConfiguration(soap*, _trt__AddVideoAnalyticsConfiguration*) serialize to a stream
/// - _trt__AddVideoAnalyticsConfiguration* _trt__AddVideoAnalyticsConfiguration::soap_dup(soap*) returns deep copy of _trt__AddVideoAnalyticsConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddVideoAnalyticsConfiguration::soap_del() deep deletes _trt__AddVideoAnalyticsConfiguration data members, use only after _trt__AddVideoAnalyticsConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddVideoAnalyticsConfiguration::soap_type() returns SOAP_TYPE__trt__AddVideoAnalyticsConfiguration or derived type identifier
class _trt__AddVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the VideoAnalyticsConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddVideoAnalyticsConfigurationResponse is a complexType.
///
/// @note class _trt__AddVideoAnalyticsConfigurationResponse operations:
/// - _trt__AddVideoAnalyticsConfigurationResponse* soap_new__trt__AddVideoAnalyticsConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddVideoAnalyticsConfigurationResponse* soap_new__trt__AddVideoAnalyticsConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddVideoAnalyticsConfigurationResponse* soap_new_req__trt__AddVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddVideoAnalyticsConfigurationResponse* soap_new_set__trt__AddVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddVideoAnalyticsConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddVideoAnalyticsConfigurationResponse(soap*, _trt__AddVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddVideoAnalyticsConfigurationResponse(soap*, _trt__AddVideoAnalyticsConfigurationResponse*) serialize to a stream
/// - _trt__AddVideoAnalyticsConfigurationResponse* _trt__AddVideoAnalyticsConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddVideoAnalyticsConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddVideoAnalyticsConfigurationResponse::soap_del() deep deletes _trt__AddVideoAnalyticsConfigurationResponse data members, use only after _trt__AddVideoAnalyticsConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddVideoAnalyticsConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddVideoAnalyticsConfigurationResponse or derived type identifier
class _trt__AddVideoAnalyticsConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfiguration is a complexType.
///
/// @note class _trt__RemoveVideoAnalyticsConfiguration operations:
/// - _trt__RemoveVideoAnalyticsConfiguration* soap_new__trt__RemoveVideoAnalyticsConfiguration(soap*) allocate and default initialize
/// - _trt__RemoveVideoAnalyticsConfiguration* soap_new__trt__RemoveVideoAnalyticsConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveVideoAnalyticsConfiguration* soap_new_req__trt__RemoveVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemoveVideoAnalyticsConfiguration* soap_new_set__trt__RemoveVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemoveVideoAnalyticsConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveVideoAnalyticsConfiguration(soap*, _trt__RemoveVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoAnalyticsConfiguration(soap*, _trt__RemoveVideoAnalyticsConfiguration*) serialize to a stream
/// - _trt__RemoveVideoAnalyticsConfiguration* _trt__RemoveVideoAnalyticsConfiguration::soap_dup(soap*) returns deep copy of _trt__RemoveVideoAnalyticsConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveVideoAnalyticsConfiguration::soap_del() deep deletes _trt__RemoveVideoAnalyticsConfiguration data members, use only after _trt__RemoveVideoAnalyticsConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveVideoAnalyticsConfiguration::soap_type() returns SOAP_TYPE__trt__RemoveVideoAnalyticsConfiguration or derived type identifier
class _trt__RemoveVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   VideoAnalyticsConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveVideoAnalyticsConfigurationResponse is a complexType.
///
/// @note class _trt__RemoveVideoAnalyticsConfigurationResponse operations:
/// - _trt__RemoveVideoAnalyticsConfigurationResponse* soap_new__trt__RemoveVideoAnalyticsConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemoveVideoAnalyticsConfigurationResponse* soap_new__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveVideoAnalyticsConfigurationResponse* soap_new_req__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemoveVideoAnalyticsConfigurationResponse* soap_new_set__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemoveVideoAnalyticsConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*) serialize to a stream
/// - _trt__RemoveVideoAnalyticsConfigurationResponse* _trt__RemoveVideoAnalyticsConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemoveVideoAnalyticsConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveVideoAnalyticsConfigurationResponse::soap_del() deep deletes _trt__RemoveVideoAnalyticsConfigurationResponse data members, use only after _trt__RemoveVideoAnalyticsConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveVideoAnalyticsConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemoveVideoAnalyticsConfigurationResponse or derived type identifier
class _trt__RemoveVideoAnalyticsConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfiguration is a complexType.
///
/// @note class _trt__AddMetadataConfiguration operations:
/// - _trt__AddMetadataConfiguration* soap_new__trt__AddMetadataConfiguration(soap*) allocate and default initialize
/// - _trt__AddMetadataConfiguration* soap_new__trt__AddMetadataConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddMetadataConfiguration* soap_new_req__trt__AddMetadataConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddMetadataConfiguration* soap_new_set__trt__AddMetadataConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddMetadataConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddMetadataConfiguration(soap*, _trt__AddMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddMetadataConfiguration(soap*, _trt__AddMetadataConfiguration*) serialize to a stream
/// - _trt__AddMetadataConfiguration* _trt__AddMetadataConfiguration::soap_dup(soap*) returns deep copy of _trt__AddMetadataConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddMetadataConfiguration::soap_del() deep deletes _trt__AddMetadataConfiguration data members, use only after _trt__AddMetadataConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddMetadataConfiguration::soap_type() returns SOAP_TYPE__trt__AddMetadataConfiguration or derived type identifier
class _trt__AddMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the MetadataConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddMetadataConfigurationResponse is a complexType.
///
/// @note class _trt__AddMetadataConfigurationResponse operations:
/// - _trt__AddMetadataConfigurationResponse* soap_new__trt__AddMetadataConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddMetadataConfigurationResponse* soap_new__trt__AddMetadataConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddMetadataConfigurationResponse* soap_new_req__trt__AddMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddMetadataConfigurationResponse* soap_new_set__trt__AddMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddMetadataConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddMetadataConfigurationResponse(soap*, _trt__AddMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddMetadataConfigurationResponse(soap*, _trt__AddMetadataConfigurationResponse*) serialize to a stream
/// - _trt__AddMetadataConfigurationResponse* _trt__AddMetadataConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddMetadataConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddMetadataConfigurationResponse::soap_del() deep deletes _trt__AddMetadataConfigurationResponse data members, use only after _trt__AddMetadataConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddMetadataConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddMetadataConfigurationResponse or derived type identifier
class _trt__AddMetadataConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfiguration is a complexType.
///
/// @note class _trt__RemoveMetadataConfiguration operations:
/// - _trt__RemoveMetadataConfiguration* soap_new__trt__RemoveMetadataConfiguration(soap*) allocate and default initialize
/// - _trt__RemoveMetadataConfiguration* soap_new__trt__RemoveMetadataConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveMetadataConfiguration* soap_new_req__trt__RemoveMetadataConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemoveMetadataConfiguration* soap_new_set__trt__RemoveMetadataConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemoveMetadataConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveMetadataConfiguration(soap*, _trt__RemoveMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveMetadataConfiguration(soap*, _trt__RemoveMetadataConfiguration*) serialize to a stream
/// - _trt__RemoveMetadataConfiguration* _trt__RemoveMetadataConfiguration::soap_dup(soap*) returns deep copy of _trt__RemoveMetadataConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveMetadataConfiguration::soap_del() deep deletes _trt__RemoveMetadataConfiguration data members, use only after _trt__RemoveMetadataConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveMetadataConfiguration::soap_type() returns SOAP_TYPE__trt__RemoveMetadataConfiguration or derived type identifier
class _trt__RemoveMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   MetadataConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveMetadataConfigurationResponse is a complexType.
///
/// @note class _trt__RemoveMetadataConfigurationResponse operations:
/// - _trt__RemoveMetadataConfigurationResponse* soap_new__trt__RemoveMetadataConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemoveMetadataConfigurationResponse* soap_new__trt__RemoveMetadataConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveMetadataConfigurationResponse* soap_new_req__trt__RemoveMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemoveMetadataConfigurationResponse* soap_new_set__trt__RemoveMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemoveMetadataConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveMetadataConfigurationResponse(soap*, _trt__RemoveMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveMetadataConfigurationResponse(soap*, _trt__RemoveMetadataConfigurationResponse*) serialize to a stream
/// - _trt__RemoveMetadataConfigurationResponse* _trt__RemoveMetadataConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemoveMetadataConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveMetadataConfigurationResponse::soap_del() deep deletes _trt__RemoveMetadataConfigurationResponse data members, use only after _trt__RemoveMetadataConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveMetadataConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemoveMetadataConfigurationResponse or derived type identifier
class _trt__RemoveMetadataConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfiguration is a complexType.
///
/// @note class _trt__AddAudioOutputConfiguration operations:
/// - _trt__AddAudioOutputConfiguration* soap_new__trt__AddAudioOutputConfiguration(soap*) allocate and default initialize
/// - _trt__AddAudioOutputConfiguration* soap_new__trt__AddAudioOutputConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddAudioOutputConfiguration* soap_new_req__trt__AddAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddAudioOutputConfiguration* soap_new_set__trt__AddAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddAudioOutputConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddAudioOutputConfiguration(soap*, _trt__AddAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioOutputConfiguration(soap*, _trt__AddAudioOutputConfiguration*) serialize to a stream
/// - _trt__AddAudioOutputConfiguration* _trt__AddAudioOutputConfiguration::soap_dup(soap*) returns deep copy of _trt__AddAudioOutputConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddAudioOutputConfiguration::soap_del() deep deletes _trt__AddAudioOutputConfiguration data members, use only after _trt__AddAudioOutputConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddAudioOutputConfiguration::soap_type() returns SOAP_TYPE__trt__AddAudioOutputConfiguration or derived type identifier
class _trt__AddAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Reference to the profile where the configuration should be added
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the AudioOutputConfiguration to add
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioOutputConfigurationResponse is a complexType.
///
/// @note class _trt__AddAudioOutputConfigurationResponse operations:
/// - _trt__AddAudioOutputConfigurationResponse* soap_new__trt__AddAudioOutputConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddAudioOutputConfigurationResponse* soap_new__trt__AddAudioOutputConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddAudioOutputConfigurationResponse* soap_new_req__trt__AddAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddAudioOutputConfigurationResponse* soap_new_set__trt__AddAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddAudioOutputConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddAudioOutputConfigurationResponse(soap*, _trt__AddAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioOutputConfigurationResponse(soap*, _trt__AddAudioOutputConfigurationResponse*) serialize to a stream
/// - _trt__AddAudioOutputConfigurationResponse* _trt__AddAudioOutputConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddAudioOutputConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddAudioOutputConfigurationResponse::soap_del() deep deletes _trt__AddAudioOutputConfigurationResponse data members, use only after _trt__AddAudioOutputConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddAudioOutputConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddAudioOutputConfigurationResponse or derived type identifier
class _trt__AddAudioOutputConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfiguration is a complexType.
///
/// @note class _trt__RemoveAudioOutputConfiguration operations:
/// - _trt__RemoveAudioOutputConfiguration* soap_new__trt__RemoveAudioOutputConfiguration(soap*) allocate and default initialize
/// - _trt__RemoveAudioOutputConfiguration* soap_new__trt__RemoveAudioOutputConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveAudioOutputConfiguration* soap_new_req__trt__RemoveAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemoveAudioOutputConfiguration* soap_new_set__trt__RemoveAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemoveAudioOutputConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveAudioOutputConfiguration(soap*, _trt__RemoveAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioOutputConfiguration(soap*, _trt__RemoveAudioOutputConfiguration*) serialize to a stream
/// - _trt__RemoveAudioOutputConfiguration* _trt__RemoveAudioOutputConfiguration::soap_dup(soap*) returns deep copy of _trt__RemoveAudioOutputConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveAudioOutputConfiguration::soap_del() deep deletes _trt__RemoveAudioOutputConfiguration data members, use only after _trt__RemoveAudioOutputConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveAudioOutputConfiguration::soap_type() returns SOAP_TYPE__trt__RemoveAudioOutputConfiguration or derived type identifier
class _trt__RemoveAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a reference to the media profile from which the
///   AudioOutputConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioOutputConfigurationResponse is a complexType.
///
/// @note class _trt__RemoveAudioOutputConfigurationResponse operations:
/// - _trt__RemoveAudioOutputConfigurationResponse* soap_new__trt__RemoveAudioOutputConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemoveAudioOutputConfigurationResponse* soap_new__trt__RemoveAudioOutputConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveAudioOutputConfigurationResponse* soap_new_req__trt__RemoveAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemoveAudioOutputConfigurationResponse* soap_new_set__trt__RemoveAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemoveAudioOutputConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveAudioOutputConfigurationResponse(soap*, _trt__RemoveAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioOutputConfigurationResponse(soap*, _trt__RemoveAudioOutputConfigurationResponse*) serialize to a stream
/// - _trt__RemoveAudioOutputConfigurationResponse* _trt__RemoveAudioOutputConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemoveAudioOutputConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveAudioOutputConfigurationResponse::soap_del() deep deletes _trt__RemoveAudioOutputConfigurationResponse data members, use only after _trt__RemoveAudioOutputConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveAudioOutputConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemoveAudioOutputConfigurationResponse or derived type identifier
class _trt__RemoveAudioOutputConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfiguration is a complexType.
///
/// @note class _trt__AddAudioDecoderConfiguration operations:
/// - _trt__AddAudioDecoderConfiguration* soap_new__trt__AddAudioDecoderConfiguration(soap*) allocate and default initialize
/// - _trt__AddAudioDecoderConfiguration* soap_new__trt__AddAudioDecoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__AddAudioDecoderConfiguration* soap_new_req__trt__AddAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__AddAudioDecoderConfiguration* soap_new_set__trt__AddAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__AddAudioDecoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddAudioDecoderConfiguration(soap*, _trt__AddAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__AddAudioDecoderConfiguration(soap*, _trt__AddAudioDecoderConfiguration*) serialize to a stream
/// - _trt__AddAudioDecoderConfiguration* _trt__AddAudioDecoderConfiguration::soap_dup(soap*) returns deep copy of _trt__AddAudioDecoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddAudioDecoderConfiguration::soap_del() deep deletes _trt__AddAudioDecoderConfiguration data members, use only after _trt__AddAudioDecoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddAudioDecoderConfiguration::soap_type() returns SOAP_TYPE__trt__AddAudioDecoderConfiguration or derived type identifier
class _trt__AddAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile where the configuration should be added.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the AudioDecoderConfiguration to add.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":AddAudioDecoderConfigurationResponse is a complexType.
///
/// @note class _trt__AddAudioDecoderConfigurationResponse operations:
/// - _trt__AddAudioDecoderConfigurationResponse* soap_new__trt__AddAudioDecoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__AddAudioDecoderConfigurationResponse* soap_new__trt__AddAudioDecoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__AddAudioDecoderConfigurationResponse* soap_new_req__trt__AddAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__AddAudioDecoderConfigurationResponse* soap_new_set__trt__AddAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__AddAudioDecoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__AddAudioDecoderConfigurationResponse(soap*, _trt__AddAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__AddAudioDecoderConfigurationResponse(soap*, _trt__AddAudioDecoderConfigurationResponse*) serialize to a stream
/// - _trt__AddAudioDecoderConfigurationResponse* _trt__AddAudioDecoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__AddAudioDecoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__AddAudioDecoderConfigurationResponse::soap_del() deep deletes _trt__AddAudioDecoderConfigurationResponse data members, use only after _trt__AddAudioDecoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__AddAudioDecoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__AddAudioDecoderConfigurationResponse or derived type identifier
class _trt__AddAudioDecoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfiguration is a complexType.
///
/// @note class _trt__RemoveAudioDecoderConfiguration operations:
/// - _trt__RemoveAudioDecoderConfiguration* soap_new__trt__RemoveAudioDecoderConfiguration(soap*) allocate and default initialize
/// - _trt__RemoveAudioDecoderConfiguration* soap_new__trt__RemoveAudioDecoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveAudioDecoderConfiguration* soap_new_req__trt__RemoveAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__RemoveAudioDecoderConfiguration* soap_new_set__trt__RemoveAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__RemoveAudioDecoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveAudioDecoderConfiguration(soap*, _trt__RemoveAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioDecoderConfiguration(soap*, _trt__RemoveAudioDecoderConfiguration*) serialize to a stream
/// - _trt__RemoveAudioDecoderConfiguration* _trt__RemoveAudioDecoderConfiguration::soap_dup(soap*) returns deep copy of _trt__RemoveAudioDecoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveAudioDecoderConfiguration::soap_del() deep deletes _trt__RemoveAudioDecoderConfiguration data members, use only after _trt__RemoveAudioDecoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveAudioDecoderConfiguration::soap_type() returns SOAP_TYPE__trt__RemoveAudioDecoderConfiguration or derived type identifier
class _trt__RemoveAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the media profile from which the AudioDecoderConfiguration shall be removed.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":RemoveAudioDecoderConfigurationResponse is a complexType.
///
/// @note class _trt__RemoveAudioDecoderConfigurationResponse operations:
/// - _trt__RemoveAudioDecoderConfigurationResponse* soap_new__trt__RemoveAudioDecoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__RemoveAudioDecoderConfigurationResponse* soap_new__trt__RemoveAudioDecoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__RemoveAudioDecoderConfigurationResponse* soap_new_req__trt__RemoveAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__RemoveAudioDecoderConfigurationResponse* soap_new_set__trt__RemoveAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__RemoveAudioDecoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__RemoveAudioDecoderConfigurationResponse(soap*, _trt__RemoveAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__RemoveAudioDecoderConfigurationResponse(soap*, _trt__RemoveAudioDecoderConfigurationResponse*) serialize to a stream
/// - _trt__RemoveAudioDecoderConfigurationResponse* _trt__RemoveAudioDecoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__RemoveAudioDecoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__RemoveAudioDecoderConfigurationResponse::soap_del() deep deletes _trt__RemoveAudioDecoderConfigurationResponse data members, use only after _trt__RemoveAudioDecoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__RemoveAudioDecoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__RemoveAudioDecoderConfigurationResponse or derived type identifier
class _trt__RemoveAudioDecoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfile
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfile is a complexType.
///
/// @note class _trt__DeleteProfile operations:
/// - _trt__DeleteProfile* soap_new__trt__DeleteProfile(soap*) allocate and default initialize
/// - _trt__DeleteProfile* soap_new__trt__DeleteProfile(soap*, int num) allocate and default initialize an array
/// - _trt__DeleteProfile* soap_new_req__trt__DeleteProfile(soap*, ...) allocate, set required members
/// - _trt__DeleteProfile* soap_new_set__trt__DeleteProfile(soap*, ...) allocate, set all public members
/// - _trt__DeleteProfile::soap_default(soap*) default initialize members
/// - int soap_read__trt__DeleteProfile(soap*, _trt__DeleteProfile*) deserialize from a stream
/// - int soap_write__trt__DeleteProfile(soap*, _trt__DeleteProfile*) serialize to a stream
/// - _trt__DeleteProfile* _trt__DeleteProfile::soap_dup(soap*) returns deep copy of _trt__DeleteProfile, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__DeleteProfile::soap_del() deep deletes _trt__DeleteProfile data members, use only after _trt__DeleteProfile::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__DeleteProfile::soap_type() returns SOAP_TYPE__trt__DeleteProfile or derived type identifier
class _trt__DeleteProfile
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the profile that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteProfileResponse is a complexType.
///
/// @note class _trt__DeleteProfileResponse operations:
/// - _trt__DeleteProfileResponse* soap_new__trt__DeleteProfileResponse(soap*) allocate and default initialize
/// - _trt__DeleteProfileResponse* soap_new__trt__DeleteProfileResponse(soap*, int num) allocate and default initialize an array
/// - _trt__DeleteProfileResponse* soap_new_req__trt__DeleteProfileResponse(soap*, ...) allocate, set required members
/// - _trt__DeleteProfileResponse* soap_new_set__trt__DeleteProfileResponse(soap*, ...) allocate, set all public members
/// - _trt__DeleteProfileResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__DeleteProfileResponse(soap*, _trt__DeleteProfileResponse*) deserialize from a stream
/// - int soap_write__trt__DeleteProfileResponse(soap*, _trt__DeleteProfileResponse*) serialize to a stream
/// - _trt__DeleteProfileResponse* _trt__DeleteProfileResponse::soap_dup(soap*) returns deep copy of _trt__DeleteProfileResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__DeleteProfileResponse::soap_del() deep deletes _trt__DeleteProfileResponse data members, use only after _trt__DeleteProfileResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__DeleteProfileResponse::soap_type() returns SOAP_TYPE__trt__DeleteProfileResponse or derived type identifier
class _trt__DeleteProfileResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurations is a complexType.
///
/// @note class _trt__GetVideoEncoderConfigurations operations:
/// - _trt__GetVideoEncoderConfigurations* soap_new__trt__GetVideoEncoderConfigurations(soap*) allocate and default initialize
/// - _trt__GetVideoEncoderConfigurations* soap_new__trt__GetVideoEncoderConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoEncoderConfigurations* soap_new_req__trt__GetVideoEncoderConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetVideoEncoderConfigurations* soap_new_set__trt__GetVideoEncoderConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetVideoEncoderConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurations(soap*, _trt__GetVideoEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurations(soap*, _trt__GetVideoEncoderConfigurations*) serialize to a stream
/// - _trt__GetVideoEncoderConfigurations* _trt__GetVideoEncoderConfigurations::soap_dup(soap*) returns deep copy of _trt__GetVideoEncoderConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoEncoderConfigurations::soap_del() deep deletes _trt__GetVideoEncoderConfigurations data members, use only after _trt__GetVideoEncoderConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoEncoderConfigurations::soap_type() returns SOAP_TYPE__trt__GetVideoEncoderConfigurations or derived type identifier
class _trt__GetVideoEncoderConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationsResponse is a complexType.
///
/// @note class _trt__GetVideoEncoderConfigurationsResponse operations:
/// - _trt__GetVideoEncoderConfigurationsResponse* soap_new__trt__GetVideoEncoderConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetVideoEncoderConfigurationsResponse* soap_new__trt__GetVideoEncoderConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoEncoderConfigurationsResponse* soap_new_req__trt__GetVideoEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoEncoderConfigurationsResponse* soap_new_set__trt__GetVideoEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoEncoderConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurationsResponse(soap*, _trt__GetVideoEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationsResponse(soap*, _trt__GetVideoEncoderConfigurationsResponse*) serialize to a stream
/// - _trt__GetVideoEncoderConfigurationsResponse* _trt__GetVideoEncoderConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoEncoderConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoEncoderConfigurationsResponse::soap_del() deep deletes _trt__GetVideoEncoderConfigurationsResponse data members, use only after _trt__GetVideoEncoderConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoEncoderConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetVideoEncoderConfigurationsResponse or derived type identifier
class _trt__GetVideoEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video encoder configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoEncoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__VideoEncoderConfiguration* of size 0..unbounded.
    tt__VideoEncoderConfiguration*      *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurations is a complexType.
///
/// @note class _trt__GetVideoSourceConfigurations operations:
/// - _trt__GetVideoSourceConfigurations* soap_new__trt__GetVideoSourceConfigurations(soap*) allocate and default initialize
/// - _trt__GetVideoSourceConfigurations* soap_new__trt__GetVideoSourceConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceConfigurations* soap_new_req__trt__GetVideoSourceConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceConfigurations* soap_new_set__trt__GetVideoSourceConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurations(soap*, _trt__GetVideoSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurations(soap*, _trt__GetVideoSourceConfigurations*) serialize to a stream
/// - _trt__GetVideoSourceConfigurations* _trt__GetVideoSourceConfigurations::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceConfigurations::soap_del() deep deletes _trt__GetVideoSourceConfigurations data members, use only after _trt__GetVideoSourceConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceConfigurations::soap_type() returns SOAP_TYPE__trt__GetVideoSourceConfigurations or derived type identifier
class _trt__GetVideoSourceConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationsResponse is a complexType.
///
/// @note class _trt__GetVideoSourceConfigurationsResponse operations:
/// - _trt__GetVideoSourceConfigurationsResponse* soap_new__trt__GetVideoSourceConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetVideoSourceConfigurationsResponse* soap_new__trt__GetVideoSourceConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceConfigurationsResponse* soap_new_req__trt__GetVideoSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceConfigurationsResponse* soap_new_set__trt__GetVideoSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurationsResponse(soap*, _trt__GetVideoSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationsResponse(soap*, _trt__GetVideoSourceConfigurationsResponse*) serialize to a stream
/// - _trt__GetVideoSourceConfigurationsResponse* _trt__GetVideoSourceConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceConfigurationsResponse::soap_del() deep deletes _trt__GetVideoSourceConfigurationsResponse data members, use only after _trt__GetVideoSourceConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetVideoSourceConfigurationsResponse or derived type identifier
class _trt__GetVideoSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of video source configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__VideoSourceConfiguration* of size 0..unbounded.
    tt__VideoSourceConfiguration*       *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurations is a complexType.
///
/// @note class _trt__GetAudioEncoderConfigurations operations:
/// - _trt__GetAudioEncoderConfigurations* soap_new__trt__GetAudioEncoderConfigurations(soap*) allocate and default initialize
/// - _trt__GetAudioEncoderConfigurations* soap_new__trt__GetAudioEncoderConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioEncoderConfigurations* soap_new_req__trt__GetAudioEncoderConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetAudioEncoderConfigurations* soap_new_set__trt__GetAudioEncoderConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetAudioEncoderConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurations(soap*, _trt__GetAudioEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurations(soap*, _trt__GetAudioEncoderConfigurations*) serialize to a stream
/// - _trt__GetAudioEncoderConfigurations* _trt__GetAudioEncoderConfigurations::soap_dup(soap*) returns deep copy of _trt__GetAudioEncoderConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioEncoderConfigurations::soap_del() deep deletes _trt__GetAudioEncoderConfigurations data members, use only after _trt__GetAudioEncoderConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioEncoderConfigurations::soap_type() returns SOAP_TYPE__trt__GetAudioEncoderConfigurations or derived type identifier
class _trt__GetAudioEncoderConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationsResponse is a complexType.
///
/// @note class _trt__GetAudioEncoderConfigurationsResponse operations:
/// - _trt__GetAudioEncoderConfigurationsResponse* soap_new__trt__GetAudioEncoderConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioEncoderConfigurationsResponse* soap_new__trt__GetAudioEncoderConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioEncoderConfigurationsResponse* soap_new_req__trt__GetAudioEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioEncoderConfigurationsResponse* soap_new_set__trt__GetAudioEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioEncoderConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurationsResponse(soap*, _trt__GetAudioEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationsResponse(soap*, _trt__GetAudioEncoderConfigurationsResponse*) serialize to a stream
/// - _trt__GetAudioEncoderConfigurationsResponse* _trt__GetAudioEncoderConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioEncoderConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioEncoderConfigurationsResponse::soap_del() deep deletes _trt__GetAudioEncoderConfigurationsResponse data members, use only after _trt__GetAudioEncoderConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioEncoderConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioEncoderConfigurationsResponse or derived type identifier
class _trt__GetAudioEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio encoder configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioEncoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__AudioEncoderConfiguration* of size 0..unbounded.
    tt__AudioEncoderConfiguration*      *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurations is a complexType.
///
/// @note class _trt__GetAudioSourceConfigurations operations:
/// - _trt__GetAudioSourceConfigurations* soap_new__trt__GetAudioSourceConfigurations(soap*) allocate and default initialize
/// - _trt__GetAudioSourceConfigurations* soap_new__trt__GetAudioSourceConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioSourceConfigurations* soap_new_req__trt__GetAudioSourceConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetAudioSourceConfigurations* soap_new_set__trt__GetAudioSourceConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetAudioSourceConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurations(soap*, _trt__GetAudioSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurations(soap*, _trt__GetAudioSourceConfigurations*) serialize to a stream
/// - _trt__GetAudioSourceConfigurations* _trt__GetAudioSourceConfigurations::soap_dup(soap*) returns deep copy of _trt__GetAudioSourceConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioSourceConfigurations::soap_del() deep deletes _trt__GetAudioSourceConfigurations data members, use only after _trt__GetAudioSourceConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioSourceConfigurations::soap_type() returns SOAP_TYPE__trt__GetAudioSourceConfigurations or derived type identifier
class _trt__GetAudioSourceConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationsResponse is a complexType.
///
/// @note class _trt__GetAudioSourceConfigurationsResponse operations:
/// - _trt__GetAudioSourceConfigurationsResponse* soap_new__trt__GetAudioSourceConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioSourceConfigurationsResponse* soap_new__trt__GetAudioSourceConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioSourceConfigurationsResponse* soap_new_req__trt__GetAudioSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioSourceConfigurationsResponse* soap_new_set__trt__GetAudioSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioSourceConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurationsResponse(soap*, _trt__GetAudioSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationsResponse(soap*, _trt__GetAudioSourceConfigurationsResponse*) serialize to a stream
/// - _trt__GetAudioSourceConfigurationsResponse* _trt__GetAudioSourceConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioSourceConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioSourceConfigurationsResponse::soap_del() deep deletes _trt__GetAudioSourceConfigurationsResponse data members, use only after _trt__GetAudioSourceConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioSourceConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioSourceConfigurationsResponse or derived type identifier
class _trt__GetAudioSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio source configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__AudioSourceConfiguration* of size 0..unbounded.
    tt__AudioSourceConfiguration*       *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurations is a complexType.
///
/// @note class _trt__GetVideoAnalyticsConfigurations operations:
/// - _trt__GetVideoAnalyticsConfigurations* soap_new__trt__GetVideoAnalyticsConfigurations(soap*) allocate and default initialize
/// - _trt__GetVideoAnalyticsConfigurations* soap_new__trt__GetVideoAnalyticsConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoAnalyticsConfigurations* soap_new_req__trt__GetVideoAnalyticsConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetVideoAnalyticsConfigurations* soap_new_set__trt__GetVideoAnalyticsConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetVideoAnalyticsConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoAnalyticsConfigurations(soap*, _trt__GetVideoAnalyticsConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurations(soap*, _trt__GetVideoAnalyticsConfigurations*) serialize to a stream
/// - _trt__GetVideoAnalyticsConfigurations* _trt__GetVideoAnalyticsConfigurations::soap_dup(soap*) returns deep copy of _trt__GetVideoAnalyticsConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoAnalyticsConfigurations::soap_del() deep deletes _trt__GetVideoAnalyticsConfigurations data members, use only after _trt__GetVideoAnalyticsConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoAnalyticsConfigurations::soap_type() returns SOAP_TYPE__trt__GetVideoAnalyticsConfigurations or derived type identifier
class _trt__GetVideoAnalyticsConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationsResponse is a complexType.
///
/// @note class _trt__GetVideoAnalyticsConfigurationsResponse operations:
/// - _trt__GetVideoAnalyticsConfigurationsResponse* soap_new__trt__GetVideoAnalyticsConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetVideoAnalyticsConfigurationsResponse* soap_new__trt__GetVideoAnalyticsConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoAnalyticsConfigurationsResponse* soap_new_req__trt__GetVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoAnalyticsConfigurationsResponse* soap_new_set__trt__GetVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoAnalyticsConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoAnalyticsConfigurationsResponse(soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurationsResponse(soap*, _trt__GetVideoAnalyticsConfigurationsResponse*) serialize to a stream
/// - _trt__GetVideoAnalyticsConfigurationsResponse* _trt__GetVideoAnalyticsConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoAnalyticsConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoAnalyticsConfigurationsResponse::soap_del() deep deletes _trt__GetVideoAnalyticsConfigurationsResponse data members, use only after _trt__GetVideoAnalyticsConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoAnalyticsConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetVideoAnalyticsConfigurationsResponse or derived type identifier
class _trt__GetVideoAnalyticsConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of VideoAnalytics configurations.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoAnalyticsConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    tt__VideoAnalyticsConfiguration*    *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurations is a complexType.
///
/// @note class _trt__GetMetadataConfigurations operations:
/// - _trt__GetMetadataConfigurations* soap_new__trt__GetMetadataConfigurations(soap*) allocate and default initialize
/// - _trt__GetMetadataConfigurations* soap_new__trt__GetMetadataConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetMetadataConfigurations* soap_new_req__trt__GetMetadataConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetMetadataConfigurations* soap_new_set__trt__GetMetadataConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetMetadataConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurations(soap*, _trt__GetMetadataConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurations(soap*, _trt__GetMetadataConfigurations*) serialize to a stream
/// - _trt__GetMetadataConfigurations* _trt__GetMetadataConfigurations::soap_dup(soap*) returns deep copy of _trt__GetMetadataConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetMetadataConfigurations::soap_del() deep deletes _trt__GetMetadataConfigurations data members, use only after _trt__GetMetadataConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetMetadataConfigurations::soap_type() returns SOAP_TYPE__trt__GetMetadataConfigurations or derived type identifier
class _trt__GetMetadataConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationsResponse is a complexType.
///
/// @note class _trt__GetMetadataConfigurationsResponse operations:
/// - _trt__GetMetadataConfigurationsResponse* soap_new__trt__GetMetadataConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetMetadataConfigurationsResponse* soap_new__trt__GetMetadataConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetMetadataConfigurationsResponse* soap_new_req__trt__GetMetadataConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetMetadataConfigurationsResponse* soap_new_set__trt__GetMetadataConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetMetadataConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationsResponse(soap*, _trt__GetMetadataConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationsResponse(soap*, _trt__GetMetadataConfigurationsResponse*) serialize to a stream
/// - _trt__GetMetadataConfigurationsResponse* _trt__GetMetadataConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetMetadataConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetMetadataConfigurationsResponse::soap_del() deep deletes _trt__GetMetadataConfigurationsResponse data members, use only after _trt__GetMetadataConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetMetadataConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetMetadataConfigurationsResponse or derived type identifier
class _trt__GetMetadataConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of metadata configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__MetadataConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__MetadataConfiguration* of size 0..unbounded.
    tt__MetadataConfiguration*          *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurations is a complexType.
///
/// @note class _trt__GetAudioOutputConfigurations operations:
/// - _trt__GetAudioOutputConfigurations* soap_new__trt__GetAudioOutputConfigurations(soap*) allocate and default initialize
/// - _trt__GetAudioOutputConfigurations* soap_new__trt__GetAudioOutputConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputConfigurations* soap_new_req__trt__GetAudioOutputConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputConfigurations* soap_new_set__trt__GetAudioOutputConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurations(soap*, _trt__GetAudioOutputConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurations(soap*, _trt__GetAudioOutputConfigurations*) serialize to a stream
/// - _trt__GetAudioOutputConfigurations* _trt__GetAudioOutputConfigurations::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputConfigurations::soap_del() deep deletes _trt__GetAudioOutputConfigurations data members, use only after _trt__GetAudioOutputConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputConfigurations::soap_type() returns SOAP_TYPE__trt__GetAudioOutputConfigurations or derived type identifier
class _trt__GetAudioOutputConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationsResponse is a complexType.
///
/// @note class _trt__GetAudioOutputConfigurationsResponse operations:
/// - _trt__GetAudioOutputConfigurationsResponse* soap_new__trt__GetAudioOutputConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioOutputConfigurationsResponse* soap_new__trt__GetAudioOutputConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputConfigurationsResponse* soap_new_req__trt__GetAudioOutputConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputConfigurationsResponse* soap_new_set__trt__GetAudioOutputConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationsResponse(soap*, _trt__GetAudioOutputConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationsResponse(soap*, _trt__GetAudioOutputConfigurationsResponse*) serialize to a stream
/// - _trt__GetAudioOutputConfigurationsResponse* _trt__GetAudioOutputConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputConfigurationsResponse::soap_del() deep deletes _trt__GetAudioOutputConfigurationsResponse data members, use only after _trt__GetAudioOutputConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioOutputConfigurationsResponse or derived type identifier
class _trt__GetAudioOutputConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio output configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioOutputConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__AudioOutputConfiguration* of size 0..unbounded.
    tt__AudioOutputConfiguration*       *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurations is a complexType.
///
/// @note class _trt__GetAudioDecoderConfigurations operations:
/// - _trt__GetAudioDecoderConfigurations* soap_new__trt__GetAudioDecoderConfigurations(soap*) allocate and default initialize
/// - _trt__GetAudioDecoderConfigurations* soap_new__trt__GetAudioDecoderConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioDecoderConfigurations* soap_new_req__trt__GetAudioDecoderConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetAudioDecoderConfigurations* soap_new_set__trt__GetAudioDecoderConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetAudioDecoderConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurations(soap*, _trt__GetAudioDecoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurations(soap*, _trt__GetAudioDecoderConfigurations*) serialize to a stream
/// - _trt__GetAudioDecoderConfigurations* _trt__GetAudioDecoderConfigurations::soap_dup(soap*) returns deep copy of _trt__GetAudioDecoderConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioDecoderConfigurations::soap_del() deep deletes _trt__GetAudioDecoderConfigurations data members, use only after _trt__GetAudioDecoderConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioDecoderConfigurations::soap_type() returns SOAP_TYPE__trt__GetAudioDecoderConfigurations or derived type identifier
class _trt__GetAudioDecoderConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationsResponse is a complexType.
///
/// @note class _trt__GetAudioDecoderConfigurationsResponse operations:
/// - _trt__GetAudioDecoderConfigurationsResponse* soap_new__trt__GetAudioDecoderConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioDecoderConfigurationsResponse* soap_new__trt__GetAudioDecoderConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioDecoderConfigurationsResponse* soap_new_req__trt__GetAudioDecoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioDecoderConfigurationsResponse* soap_new_set__trt__GetAudioDecoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioDecoderConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationsResponse(soap*, _trt__GetAudioDecoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationsResponse(soap*, _trt__GetAudioDecoderConfigurationsResponse*) serialize to a stream
/// - _trt__GetAudioDecoderConfigurationsResponse* _trt__GetAudioDecoderConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioDecoderConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioDecoderConfigurationsResponse::soap_del() deep deletes _trt__GetAudioDecoderConfigurationsResponse data members, use only after _trt__GetAudioDecoderConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioDecoderConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioDecoderConfigurationsResponse or derived type identifier
class _trt__GetAudioDecoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of audio decoder configurations
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioDecoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__AudioDecoderConfiguration* of size 0..unbounded.
    tt__AudioDecoderConfiguration*      *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfiguration is a complexType.
///
/// @note class _trt__GetVideoSourceConfiguration operations:
/// - _trt__GetVideoSourceConfiguration* soap_new__trt__GetVideoSourceConfiguration(soap*) allocate and default initialize
/// - _trt__GetVideoSourceConfiguration* soap_new__trt__GetVideoSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceConfiguration* soap_new_req__trt__GetVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceConfiguration* soap_new_set__trt__GetVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfiguration(soap*, _trt__GetVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfiguration(soap*, _trt__GetVideoSourceConfiguration*) serialize to a stream
/// - _trt__GetVideoSourceConfiguration* _trt__GetVideoSourceConfiguration::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceConfiguration::soap_del() deep deletes _trt__GetVideoSourceConfiguration data members, use only after _trt__GetVideoSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceConfiguration::soap_type() returns SOAP_TYPE__trt__GetVideoSourceConfiguration or derived type identifier
class _trt__GetVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationResponse is a complexType.
///
/// @note class _trt__GetVideoSourceConfigurationResponse operations:
/// - _trt__GetVideoSourceConfigurationResponse* soap_new__trt__GetVideoSourceConfigurationResponse(soap*) allocate and default initialize
/// - _trt__GetVideoSourceConfigurationResponse* soap_new__trt__GetVideoSourceConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceConfigurationResponse* soap_new_req__trt__GetVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceConfigurationResponse* soap_new_set__trt__GetVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurationResponse(soap*, _trt__GetVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationResponse(soap*, _trt__GetVideoSourceConfigurationResponse*) serialize to a stream
/// - _trt__GetVideoSourceConfigurationResponse* _trt__GetVideoSourceConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceConfigurationResponse::soap_del() deep deletes _trt__GetVideoSourceConfigurationResponse data members, use only after _trt__GetVideoSourceConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceConfigurationResponse::soap_type() returns SOAP_TYPE__trt__GetVideoSourceConfigurationResponse or derived type identifier
class _trt__GetVideoSourceConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfiguration is a complexType.
///
/// @note class _trt__GetVideoEncoderConfiguration operations:
/// - _trt__GetVideoEncoderConfiguration* soap_new__trt__GetVideoEncoderConfiguration(soap*) allocate and default initialize
/// - _trt__GetVideoEncoderConfiguration* soap_new__trt__GetVideoEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoEncoderConfiguration* soap_new_req__trt__GetVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__GetVideoEncoderConfiguration* soap_new_set__trt__GetVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__GetVideoEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfiguration(soap*, _trt__GetVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfiguration(soap*, _trt__GetVideoEncoderConfiguration*) serialize to a stream
/// - _trt__GetVideoEncoderConfiguration* _trt__GetVideoEncoderConfiguration::soap_dup(soap*) returns deep copy of _trt__GetVideoEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoEncoderConfiguration::soap_del() deep deletes _trt__GetVideoEncoderConfiguration data members, use only after _trt__GetVideoEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoEncoderConfiguration::soap_type() returns SOAP_TYPE__trt__GetVideoEncoderConfiguration or derived type identifier
class _trt__GetVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationResponse is a complexType.
///
/// @note class _trt__GetVideoEncoderConfigurationResponse operations:
/// - _trt__GetVideoEncoderConfigurationResponse* soap_new__trt__GetVideoEncoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__GetVideoEncoderConfigurationResponse* soap_new__trt__GetVideoEncoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoEncoderConfigurationResponse* soap_new_req__trt__GetVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoEncoderConfigurationResponse* soap_new_set__trt__GetVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoEncoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurationResponse(soap*, _trt__GetVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationResponse(soap*, _trt__GetVideoEncoderConfigurationResponse*) serialize to a stream
/// - _trt__GetVideoEncoderConfigurationResponse* _trt__GetVideoEncoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoEncoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoEncoderConfigurationResponse::soap_del() deep deletes _trt__GetVideoEncoderConfigurationResponse data members, use only after _trt__GetVideoEncoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoEncoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__GetVideoEncoderConfigurationResponse or derived type identifier
class _trt__GetVideoEncoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfiguration is a complexType.
///
/// @note class _trt__GetAudioSourceConfiguration operations:
/// - _trt__GetAudioSourceConfiguration* soap_new__trt__GetAudioSourceConfiguration(soap*) allocate and default initialize
/// - _trt__GetAudioSourceConfiguration* soap_new__trt__GetAudioSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioSourceConfiguration* soap_new_req__trt__GetAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - _trt__GetAudioSourceConfiguration* soap_new_set__trt__GetAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - _trt__GetAudioSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfiguration(soap*, _trt__GetAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfiguration(soap*, _trt__GetAudioSourceConfiguration*) serialize to a stream
/// - _trt__GetAudioSourceConfiguration* _trt__GetAudioSourceConfiguration::soap_dup(soap*) returns deep copy of _trt__GetAudioSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioSourceConfiguration::soap_del() deep deletes _trt__GetAudioSourceConfiguration data members, use only after _trt__GetAudioSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioSourceConfiguration::soap_type() returns SOAP_TYPE__trt__GetAudioSourceConfiguration or derived type identifier
class _trt__GetAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationResponse is a complexType.
///
/// @note class _trt__GetAudioSourceConfigurationResponse operations:
/// - _trt__GetAudioSourceConfigurationResponse* soap_new__trt__GetAudioSourceConfigurationResponse(soap*) allocate and default initialize
/// - _trt__GetAudioSourceConfigurationResponse* soap_new__trt__GetAudioSourceConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioSourceConfigurationResponse* soap_new_req__trt__GetAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioSourceConfigurationResponse* soap_new_set__trt__GetAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioSourceConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurationResponse(soap*, _trt__GetAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationResponse(soap*, _trt__GetAudioSourceConfigurationResponse*) serialize to a stream
/// - _trt__GetAudioSourceConfigurationResponse* _trt__GetAudioSourceConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioSourceConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioSourceConfigurationResponse::soap_del() deep deletes _trt__GetAudioSourceConfigurationResponse data members, use only after _trt__GetAudioSourceConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioSourceConfigurationResponse::soap_type() returns SOAP_TYPE__trt__GetAudioSourceConfigurationResponse or derived type identifier
class _trt__GetAudioSourceConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfiguration is a complexType.
///
/// @note class _trt__GetAudioEncoderConfiguration operations:
/// - _trt__GetAudioEncoderConfiguration* soap_new__trt__GetAudioEncoderConfiguration(soap*) allocate and default initialize
/// - _trt__GetAudioEncoderConfiguration* soap_new__trt__GetAudioEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioEncoderConfiguration* soap_new_req__trt__GetAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__GetAudioEncoderConfiguration* soap_new_set__trt__GetAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__GetAudioEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfiguration(soap*, _trt__GetAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfiguration(soap*, _trt__GetAudioEncoderConfiguration*) serialize to a stream
/// - _trt__GetAudioEncoderConfiguration* _trt__GetAudioEncoderConfiguration::soap_dup(soap*) returns deep copy of _trt__GetAudioEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioEncoderConfiguration::soap_del() deep deletes _trt__GetAudioEncoderConfiguration data members, use only after _trt__GetAudioEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioEncoderConfiguration::soap_type() returns SOAP_TYPE__trt__GetAudioEncoderConfiguration or derived type identifier
class _trt__GetAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio encoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationResponse is a complexType.
///
/// @note class _trt__GetAudioEncoderConfigurationResponse operations:
/// - _trt__GetAudioEncoderConfigurationResponse* soap_new__trt__GetAudioEncoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__GetAudioEncoderConfigurationResponse* soap_new__trt__GetAudioEncoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioEncoderConfigurationResponse* soap_new_req__trt__GetAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioEncoderConfigurationResponse* soap_new_set__trt__GetAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioEncoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurationResponse(soap*, _trt__GetAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationResponse(soap*, _trt__GetAudioEncoderConfigurationResponse*) serialize to a stream
/// - _trt__GetAudioEncoderConfigurationResponse* _trt__GetAudioEncoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioEncoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioEncoderConfigurationResponse::soap_del() deep deletes _trt__GetAudioEncoderConfigurationResponse data members, use only after _trt__GetAudioEncoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioEncoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__GetAudioEncoderConfigurationResponse or derived type identifier
class _trt__GetAudioEncoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio encoder configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfiguration is a complexType.
///
/// @note class _trt__GetVideoAnalyticsConfiguration operations:
/// - _trt__GetVideoAnalyticsConfiguration* soap_new__trt__GetVideoAnalyticsConfiguration(soap*) allocate and default initialize
/// - _trt__GetVideoAnalyticsConfiguration* soap_new__trt__GetVideoAnalyticsConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoAnalyticsConfiguration* soap_new_req__trt__GetVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - _trt__GetVideoAnalyticsConfiguration* soap_new_set__trt__GetVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - _trt__GetVideoAnalyticsConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoAnalyticsConfiguration(soap*, _trt__GetVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfiguration(soap*, _trt__GetVideoAnalyticsConfiguration*) serialize to a stream
/// - _trt__GetVideoAnalyticsConfiguration* _trt__GetVideoAnalyticsConfiguration::soap_dup(soap*) returns deep copy of _trt__GetVideoAnalyticsConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoAnalyticsConfiguration::soap_del() deep deletes _trt__GetVideoAnalyticsConfiguration data members, use only after _trt__GetVideoAnalyticsConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoAnalyticsConfiguration::soap_type() returns SOAP_TYPE__trt__GetVideoAnalyticsConfiguration or derived type identifier
class _trt__GetVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoAnalyticsConfigurationResponse is a complexType.
///
/// @note class _trt__GetVideoAnalyticsConfigurationResponse operations:
/// - _trt__GetVideoAnalyticsConfigurationResponse* soap_new__trt__GetVideoAnalyticsConfigurationResponse(soap*) allocate and default initialize
/// - _trt__GetVideoAnalyticsConfigurationResponse* soap_new__trt__GetVideoAnalyticsConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoAnalyticsConfigurationResponse* soap_new_req__trt__GetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoAnalyticsConfigurationResponse* soap_new_set__trt__GetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoAnalyticsConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoAnalyticsConfigurationResponse(soap*, _trt__GetVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoAnalyticsConfigurationResponse(soap*, _trt__GetVideoAnalyticsConfigurationResponse*) serialize to a stream
/// - _trt__GetVideoAnalyticsConfigurationResponse* _trt__GetVideoAnalyticsConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoAnalyticsConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoAnalyticsConfigurationResponse::soap_del() deep deletes _trt__GetVideoAnalyticsConfigurationResponse data members, use only after _trt__GetVideoAnalyticsConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoAnalyticsConfigurationResponse::soap_type() returns SOAP_TYPE__trt__GetVideoAnalyticsConfigurationResponse or derived type identifier
class _trt__GetVideoAnalyticsConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested video analytics configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfiguration is a complexType.
///
/// @note class _trt__GetMetadataConfiguration operations:
/// - _trt__GetMetadataConfiguration* soap_new__trt__GetMetadataConfiguration(soap*) allocate and default initialize
/// - _trt__GetMetadataConfiguration* soap_new__trt__GetMetadataConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__GetMetadataConfiguration* soap_new_req__trt__GetMetadataConfiguration(soap*, ...) allocate, set required members
/// - _trt__GetMetadataConfiguration* soap_new_set__trt__GetMetadataConfiguration(soap*, ...) allocate, set all public members
/// - _trt__GetMetadataConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetMetadataConfiguration(soap*, _trt__GetMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfiguration(soap*, _trt__GetMetadataConfiguration*) serialize to a stream
/// - _trt__GetMetadataConfiguration* _trt__GetMetadataConfiguration::soap_dup(soap*) returns deep copy of _trt__GetMetadataConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetMetadataConfiguration::soap_del() deep deletes _trt__GetMetadataConfiguration data members, use only after _trt__GetMetadataConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetMetadataConfiguration::soap_type() returns SOAP_TYPE__trt__GetMetadataConfiguration or derived type identifier
class _trt__GetMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested metadata configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationResponse is a complexType.
///
/// @note class _trt__GetMetadataConfigurationResponse operations:
/// - _trt__GetMetadataConfigurationResponse* soap_new__trt__GetMetadataConfigurationResponse(soap*) allocate and default initialize
/// - _trt__GetMetadataConfigurationResponse* soap_new__trt__GetMetadataConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetMetadataConfigurationResponse* soap_new_req__trt__GetMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__GetMetadataConfigurationResponse* soap_new_set__trt__GetMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__GetMetadataConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationResponse(soap*, _trt__GetMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationResponse(soap*, _trt__GetMetadataConfigurationResponse*) serialize to a stream
/// - _trt__GetMetadataConfigurationResponse* _trt__GetMetadataConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__GetMetadataConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetMetadataConfigurationResponse::soap_del() deep deletes _trt__GetMetadataConfigurationResponse data members, use only after _trt__GetMetadataConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetMetadataConfigurationResponse::soap_type() returns SOAP_TYPE__trt__GetMetadataConfigurationResponse or derived type identifier
class _trt__GetMetadataConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested metadata configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfiguration is a complexType.
///
/// @note class _trt__GetAudioOutputConfiguration operations:
/// - _trt__GetAudioOutputConfiguration* soap_new__trt__GetAudioOutputConfiguration(soap*) allocate and default initialize
/// - _trt__GetAudioOutputConfiguration* soap_new__trt__GetAudioOutputConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputConfiguration* soap_new_req__trt__GetAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputConfiguration* soap_new_set__trt__GetAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfiguration(soap*, _trt__GetAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfiguration(soap*, _trt__GetAudioOutputConfiguration*) serialize to a stream
/// - _trt__GetAudioOutputConfiguration* _trt__GetAudioOutputConfiguration::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputConfiguration::soap_del() deep deletes _trt__GetAudioOutputConfiguration data members, use only after _trt__GetAudioOutputConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputConfiguration::soap_type() returns SOAP_TYPE__trt__GetAudioOutputConfiguration or derived type identifier
class _trt__GetAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio output configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationResponse is a complexType.
///
/// @note class _trt__GetAudioOutputConfigurationResponse operations:
/// - _trt__GetAudioOutputConfigurationResponse* soap_new__trt__GetAudioOutputConfigurationResponse(soap*) allocate and default initialize
/// - _trt__GetAudioOutputConfigurationResponse* soap_new__trt__GetAudioOutputConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputConfigurationResponse* soap_new_req__trt__GetAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputConfigurationResponse* soap_new_set__trt__GetAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationResponse(soap*, _trt__GetAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationResponse(soap*, _trt__GetAudioOutputConfigurationResponse*) serialize to a stream
/// - _trt__GetAudioOutputConfigurationResponse* _trt__GetAudioOutputConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputConfigurationResponse::soap_del() deep deletes _trt__GetAudioOutputConfigurationResponse data members, use only after _trt__GetAudioOutputConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputConfigurationResponse::soap_type() returns SOAP_TYPE__trt__GetAudioOutputConfigurationResponse or derived type identifier
class _trt__GetAudioOutputConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio output configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfiguration is a complexType.
///
/// @note class _trt__GetAudioDecoderConfiguration operations:
/// - _trt__GetAudioDecoderConfiguration* soap_new__trt__GetAudioDecoderConfiguration(soap*) allocate and default initialize
/// - _trt__GetAudioDecoderConfiguration* soap_new__trt__GetAudioDecoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioDecoderConfiguration* soap_new_req__trt__GetAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__GetAudioDecoderConfiguration* soap_new_set__trt__GetAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__GetAudioDecoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfiguration(soap*, _trt__GetAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfiguration(soap*, _trt__GetAudioDecoderConfiguration*) serialize to a stream
/// - _trt__GetAudioDecoderConfiguration* _trt__GetAudioDecoderConfiguration::soap_dup(soap*) returns deep copy of _trt__GetAudioDecoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioDecoderConfiguration::soap_del() deep deletes _trt__GetAudioDecoderConfiguration data members, use only after _trt__GetAudioDecoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioDecoderConfiguration::soap_type() returns SOAP_TYPE__trt__GetAudioDecoderConfiguration or derived type identifier
class _trt__GetAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested audio decoder configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationResponse is a complexType.
///
/// @note class _trt__GetAudioDecoderConfigurationResponse operations:
/// - _trt__GetAudioDecoderConfigurationResponse* soap_new__trt__GetAudioDecoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__GetAudioDecoderConfigurationResponse* soap_new__trt__GetAudioDecoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioDecoderConfigurationResponse* soap_new_req__trt__GetAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioDecoderConfigurationResponse* soap_new_set__trt__GetAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioDecoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationResponse(soap*, _trt__GetAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationResponse(soap*, _trt__GetAudioDecoderConfigurationResponse*) serialize to a stream
/// - _trt__GetAudioDecoderConfigurationResponse* _trt__GetAudioDecoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioDecoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioDecoderConfigurationResponse::soap_del() deep deletes _trt__GetAudioDecoderConfigurationResponse data members, use only after _trt__GetAudioDecoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioDecoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__GetAudioDecoderConfigurationResponse or derived type identifier
class _trt__GetAudioDecoderConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested audio decoder configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       Configuration                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurations is a complexType.
///
/// @note class _trt__GetCompatibleVideoEncoderConfigurations operations:
/// - _trt__GetCompatibleVideoEncoderConfigurations* soap_new__trt__GetCompatibleVideoEncoderConfigurations(soap*) allocate and default initialize
/// - _trt__GetCompatibleVideoEncoderConfigurations* soap_new__trt__GetCompatibleVideoEncoderConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleVideoEncoderConfigurations* soap_new_req__trt__GetCompatibleVideoEncoderConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleVideoEncoderConfigurations* soap_new_set__trt__GetCompatibleVideoEncoderConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleVideoEncoderConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurations(soap*, _trt__GetCompatibleVideoEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurations(soap*, _trt__GetCompatibleVideoEncoderConfigurations*) serialize to a stream
/// - _trt__GetCompatibleVideoEncoderConfigurations* _trt__GetCompatibleVideoEncoderConfigurations::soap_dup(soap*) returns deep copy of _trt__GetCompatibleVideoEncoderConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleVideoEncoderConfigurations::soap_del() deep deletes _trt__GetCompatibleVideoEncoderConfigurations data members, use only after _trt__GetCompatibleVideoEncoderConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleVideoEncoderConfigurations::soap_type() returns SOAP_TYPE__trt__GetCompatibleVideoEncoderConfigurations or derived type identifier
class _trt__GetCompatibleVideoEncoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoEncoderConfigurationsResponse is a complexType.
///
/// @note class _trt__GetCompatibleVideoEncoderConfigurationsResponse operations:
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse* soap_new__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse* soap_new__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse* soap_new_req__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse* soap_new_set__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*) serialize to a stream
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse* _trt__GetCompatibleVideoEncoderConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetCompatibleVideoEncoderConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleVideoEncoderConfigurationsResponse::soap_del() deep deletes _trt__GetCompatibleVideoEncoderConfigurationsResponse data members, use only after _trt__GetCompatibleVideoEncoderConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleVideoEncoderConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetCompatibleVideoEncoderConfigurationsResponse or derived type identifier
class _trt__GetCompatibleVideoEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoEncoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__VideoEncoderConfiguration* of size 0..unbounded.
    tt__VideoEncoderConfiguration*      *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurations is a complexType.
///
/// @note class _trt__GetCompatibleVideoSourceConfigurations operations:
/// - _trt__GetCompatibleVideoSourceConfigurations* soap_new__trt__GetCompatibleVideoSourceConfigurations(soap*) allocate and default initialize
/// - _trt__GetCompatibleVideoSourceConfigurations* soap_new__trt__GetCompatibleVideoSourceConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleVideoSourceConfigurations* soap_new_req__trt__GetCompatibleVideoSourceConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleVideoSourceConfigurations* soap_new_set__trt__GetCompatibleVideoSourceConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleVideoSourceConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurations(soap*, _trt__GetCompatibleVideoSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurations(soap*, _trt__GetCompatibleVideoSourceConfigurations*) serialize to a stream
/// - _trt__GetCompatibleVideoSourceConfigurations* _trt__GetCompatibleVideoSourceConfigurations::soap_dup(soap*) returns deep copy of _trt__GetCompatibleVideoSourceConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleVideoSourceConfigurations::soap_del() deep deletes _trt__GetCompatibleVideoSourceConfigurations data members, use only after _trt__GetCompatibleVideoSourceConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleVideoSourceConfigurations::soap_type() returns SOAP_TYPE__trt__GetCompatibleVideoSourceConfigurations or derived type identifier
class _trt__GetCompatibleVideoSourceConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoSourceConfigurationsResponse is a complexType.
///
/// @note class _trt__GetCompatibleVideoSourceConfigurationsResponse operations:
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse* soap_new__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse* soap_new__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse* soap_new_req__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse* soap_new_set__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*) serialize to a stream
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse* _trt__GetCompatibleVideoSourceConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetCompatibleVideoSourceConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleVideoSourceConfigurationsResponse::soap_del() deep deletes _trt__GetCompatibleVideoSourceConfigurationsResponse data members, use only after _trt__GetCompatibleVideoSourceConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleVideoSourceConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetCompatibleVideoSourceConfigurationsResponse or derived type identifier
class _trt__GetCompatibleVideoSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__VideoSourceConfiguration* of size 0..unbounded.
    tt__VideoSourceConfiguration*       *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurations is a complexType.
///
/// @note class _trt__GetCompatibleAudioEncoderConfigurations operations:
/// - _trt__GetCompatibleAudioEncoderConfigurations* soap_new__trt__GetCompatibleAudioEncoderConfigurations(soap*) allocate and default initialize
/// - _trt__GetCompatibleAudioEncoderConfigurations* soap_new__trt__GetCompatibleAudioEncoderConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleAudioEncoderConfigurations* soap_new_req__trt__GetCompatibleAudioEncoderConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleAudioEncoderConfigurations* soap_new_set__trt__GetCompatibleAudioEncoderConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleAudioEncoderConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurations(soap*, _trt__GetCompatibleAudioEncoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurations(soap*, _trt__GetCompatibleAudioEncoderConfigurations*) serialize to a stream
/// - _trt__GetCompatibleAudioEncoderConfigurations* _trt__GetCompatibleAudioEncoderConfigurations::soap_dup(soap*) returns deep copy of _trt__GetCompatibleAudioEncoderConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleAudioEncoderConfigurations::soap_del() deep deletes _trt__GetCompatibleAudioEncoderConfigurations data members, use only after _trt__GetCompatibleAudioEncoderConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleAudioEncoderConfigurations::soap_type() returns SOAP_TYPE__trt__GetCompatibleAudioEncoderConfigurations or derived type identifier
class _trt__GetCompatibleAudioEncoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioEncoderConfigurationsResponse is a complexType.
///
/// @note class _trt__GetCompatibleAudioEncoderConfigurationsResponse operations:
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse* soap_new__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse* soap_new__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse* soap_new_req__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse* soap_new_set__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*) serialize to a stream
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse* _trt__GetCompatibleAudioEncoderConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetCompatibleAudioEncoderConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleAudioEncoderConfigurationsResponse::soap_del() deep deletes _trt__GetCompatibleAudioEncoderConfigurationsResponse data members, use only after _trt__GetCompatibleAudioEncoderConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleAudioEncoderConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetCompatibleAudioEncoderConfigurationsResponse or derived type identifier
class _trt__GetCompatibleAudioEncoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio encoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioEncoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__AudioEncoderConfiguration* of size 0..unbounded.
    tt__AudioEncoderConfiguration*      *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurations is a complexType.
///
/// @note class _trt__GetCompatibleAudioSourceConfigurations operations:
/// - _trt__GetCompatibleAudioSourceConfigurations* soap_new__trt__GetCompatibleAudioSourceConfigurations(soap*) allocate and default initialize
/// - _trt__GetCompatibleAudioSourceConfigurations* soap_new__trt__GetCompatibleAudioSourceConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleAudioSourceConfigurations* soap_new_req__trt__GetCompatibleAudioSourceConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleAudioSourceConfigurations* soap_new_set__trt__GetCompatibleAudioSourceConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleAudioSourceConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurations(soap*, _trt__GetCompatibleAudioSourceConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurations(soap*, _trt__GetCompatibleAudioSourceConfigurations*) serialize to a stream
/// - _trt__GetCompatibleAudioSourceConfigurations* _trt__GetCompatibleAudioSourceConfigurations::soap_dup(soap*) returns deep copy of _trt__GetCompatibleAudioSourceConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleAudioSourceConfigurations::soap_del() deep deletes _trt__GetCompatibleAudioSourceConfigurations data members, use only after _trt__GetCompatibleAudioSourceConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleAudioSourceConfigurations::soap_type() returns SOAP_TYPE__trt__GetCompatibleAudioSourceConfigurations or derived type identifier
class _trt__GetCompatibleAudioSourceConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioSourceConfigurationsResponse is a complexType.
///
/// @note class _trt__GetCompatibleAudioSourceConfigurationsResponse operations:
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse* soap_new__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse* soap_new__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse* soap_new_req__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse* soap_new_set__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*) serialize to a stream
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse* _trt__GetCompatibleAudioSourceConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetCompatibleAudioSourceConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleAudioSourceConfigurationsResponse::soap_del() deep deletes _trt__GetCompatibleAudioSourceConfigurationsResponse data members, use only after _trt__GetCompatibleAudioSourceConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleAudioSourceConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetCompatibleAudioSourceConfigurationsResponse or derived type identifier
class _trt__GetCompatibleAudioSourceConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio source configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioSourceConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__AudioSourceConfiguration* of size 0..unbounded.
    tt__AudioSourceConfiguration*       *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurations is a complexType.
///
/// @note class _trt__GetCompatibleVideoAnalyticsConfigurations operations:
/// - _trt__GetCompatibleVideoAnalyticsConfigurations* soap_new__trt__GetCompatibleVideoAnalyticsConfigurations(soap*) allocate and default initialize
/// - _trt__GetCompatibleVideoAnalyticsConfigurations* soap_new__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleVideoAnalyticsConfigurations* soap_new_req__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleVideoAnalyticsConfigurations* soap_new_set__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleVideoAnalyticsConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*) serialize to a stream
/// - _trt__GetCompatibleVideoAnalyticsConfigurations* _trt__GetCompatibleVideoAnalyticsConfigurations::soap_dup(soap*) returns deep copy of _trt__GetCompatibleVideoAnalyticsConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleVideoAnalyticsConfigurations::soap_del() deep deletes _trt__GetCompatibleVideoAnalyticsConfigurations data members, use only after _trt__GetCompatibleVideoAnalyticsConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleVideoAnalyticsConfigurations::soap_type() returns SOAP_TYPE__trt__GetCompatibleVideoAnalyticsConfigurations or derived type identifier
class _trt__GetCompatibleVideoAnalyticsConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleVideoAnalyticsConfigurationsResponse is a complexType.
///
/// @note class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse operations:
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* soap_new__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* soap_new__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* soap_new_req__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* soap_new_set__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*) serialize to a stream
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse* _trt__GetCompatibleVideoAnalyticsConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetCompatibleVideoAnalyticsConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleVideoAnalyticsConfigurationsResponse::soap_del() deep deletes _trt__GetCompatibleVideoAnalyticsConfigurationsResponse data members, use only after _trt__GetCompatibleVideoAnalyticsConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleVideoAnalyticsConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetCompatibleVideoAnalyticsConfigurationsResponse or derived type identifier
class _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of video analytics configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoAnalyticsConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__VideoAnalyticsConfiguration* of size 0..unbounded.
    tt__VideoAnalyticsConfiguration*    *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurations is a complexType.
///
/// @note class _trt__GetCompatibleMetadataConfigurations operations:
/// - _trt__GetCompatibleMetadataConfigurations* soap_new__trt__GetCompatibleMetadataConfigurations(soap*) allocate and default initialize
/// - _trt__GetCompatibleMetadataConfigurations* soap_new__trt__GetCompatibleMetadataConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleMetadataConfigurations* soap_new_req__trt__GetCompatibleMetadataConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleMetadataConfigurations* soap_new_set__trt__GetCompatibleMetadataConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleMetadataConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleMetadataConfigurations(soap*, _trt__GetCompatibleMetadataConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleMetadataConfigurations(soap*, _trt__GetCompatibleMetadataConfigurations*) serialize to a stream
/// - _trt__GetCompatibleMetadataConfigurations* _trt__GetCompatibleMetadataConfigurations::soap_dup(soap*) returns deep copy of _trt__GetCompatibleMetadataConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleMetadataConfigurations::soap_del() deep deletes _trt__GetCompatibleMetadataConfigurations data members, use only after _trt__GetCompatibleMetadataConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleMetadataConfigurations::soap_type() returns SOAP_TYPE__trt__GetCompatibleMetadataConfigurations or derived type identifier
class _trt__GetCompatibleMetadataConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleMetadataConfigurationsResponse is a complexType.
///
/// @note class _trt__GetCompatibleMetadataConfigurationsResponse operations:
/// - _trt__GetCompatibleMetadataConfigurationsResponse* soap_new__trt__GetCompatibleMetadataConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetCompatibleMetadataConfigurationsResponse* soap_new__trt__GetCompatibleMetadataConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleMetadataConfigurationsResponse* soap_new_req__trt__GetCompatibleMetadataConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleMetadataConfigurationsResponse* soap_new_set__trt__GetCompatibleMetadataConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleMetadataConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleMetadataConfigurationsResponse(soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleMetadataConfigurationsResponse(soap*, _trt__GetCompatibleMetadataConfigurationsResponse*) serialize to a stream
/// - _trt__GetCompatibleMetadataConfigurationsResponse* _trt__GetCompatibleMetadataConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetCompatibleMetadataConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleMetadataConfigurationsResponse::soap_del() deep deletes _trt__GetCompatibleMetadataConfigurationsResponse data members, use only after _trt__GetCompatibleMetadataConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleMetadataConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetCompatibleMetadataConfigurationsResponse or derived type identifier
class _trt__GetCompatibleMetadataConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of metadata configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__MetadataConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__MetadataConfiguration* of size 0..unbounded.
    tt__MetadataConfiguration*          *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurations is a complexType.
///
/// @note class _trt__GetCompatibleAudioOutputConfigurations operations:
/// - _trt__GetCompatibleAudioOutputConfigurations* soap_new__trt__GetCompatibleAudioOutputConfigurations(soap*) allocate and default initialize
/// - _trt__GetCompatibleAudioOutputConfigurations* soap_new__trt__GetCompatibleAudioOutputConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleAudioOutputConfigurations* soap_new_req__trt__GetCompatibleAudioOutputConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleAudioOutputConfigurations* soap_new_set__trt__GetCompatibleAudioOutputConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleAudioOutputConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurations(soap*, _trt__GetCompatibleAudioOutputConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurations(soap*, _trt__GetCompatibleAudioOutputConfigurations*) serialize to a stream
/// - _trt__GetCompatibleAudioOutputConfigurations* _trt__GetCompatibleAudioOutputConfigurations::soap_dup(soap*) returns deep copy of _trt__GetCompatibleAudioOutputConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleAudioOutputConfigurations::soap_del() deep deletes _trt__GetCompatibleAudioOutputConfigurations data members, use only after _trt__GetCompatibleAudioOutputConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleAudioOutputConfigurations::soap_type() returns SOAP_TYPE__trt__GetCompatibleAudioOutputConfigurations or derived type identifier
class _trt__GetCompatibleAudioOutputConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioOutputConfigurationsResponse is a complexType.
///
/// @note class _trt__GetCompatibleAudioOutputConfigurationsResponse operations:
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse* soap_new__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse* soap_new__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse* soap_new_req__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse* soap_new_set__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*) serialize to a stream
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse* _trt__GetCompatibleAudioOutputConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetCompatibleAudioOutputConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleAudioOutputConfigurationsResponse::soap_del() deep deletes _trt__GetCompatibleAudioOutputConfigurationsResponse data members, use only after _trt__GetCompatibleAudioOutputConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleAudioOutputConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetCompatibleAudioOutputConfigurationsResponse or derived type identifier
class _trt__GetCompatibleAudioOutputConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio output configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioOutputConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__AudioOutputConfiguration* of size 0..unbounded.
    tt__AudioOutputConfiguration*       *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurations is a complexType.
///
/// @note class _trt__GetCompatibleAudioDecoderConfigurations operations:
/// - _trt__GetCompatibleAudioDecoderConfigurations* soap_new__trt__GetCompatibleAudioDecoderConfigurations(soap*) allocate and default initialize
/// - _trt__GetCompatibleAudioDecoderConfigurations* soap_new__trt__GetCompatibleAudioDecoderConfigurations(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleAudioDecoderConfigurations* soap_new_req__trt__GetCompatibleAudioDecoderConfigurations(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleAudioDecoderConfigurations* soap_new_set__trt__GetCompatibleAudioDecoderConfigurations(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleAudioDecoderConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurations(soap*, _trt__GetCompatibleAudioDecoderConfigurations*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurations(soap*, _trt__GetCompatibleAudioDecoderConfigurations*) serialize to a stream
/// - _trt__GetCompatibleAudioDecoderConfigurations* _trt__GetCompatibleAudioDecoderConfigurations::soap_dup(soap*) returns deep copy of _trt__GetCompatibleAudioDecoderConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleAudioDecoderConfigurations::soap_del() deep deletes _trt__GetCompatibleAudioDecoderConfigurations data members, use only after _trt__GetCompatibleAudioDecoderConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleAudioDecoderConfigurations::soap_type() returns SOAP_TYPE__trt__GetCompatibleAudioDecoderConfigurations or derived type identifier
class _trt__GetCompatibleAudioDecoderConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetCompatibleAudioDecoderConfigurationsResponse is a complexType.
///
/// @note class _trt__GetCompatibleAudioDecoderConfigurationsResponse operations:
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse* soap_new__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*) allocate and default initialize
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse* soap_new__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse* soap_new_req__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, ...) allocate, set required members
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse* soap_new_set__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) deserialize from a stream
/// - int soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*) serialize to a stream
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse* _trt__GetCompatibleAudioDecoderConfigurationsResponse::soap_dup(soap*) returns deep copy of _trt__GetCompatibleAudioDecoderConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetCompatibleAudioDecoderConfigurationsResponse::soap_del() deep deletes _trt__GetCompatibleAudioDecoderConfigurationsResponse data members, use only after _trt__GetCompatibleAudioDecoderConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetCompatibleAudioDecoderConfigurationsResponse::soap_type() returns SOAP_TYPE__trt__GetCompatibleAudioDecoderConfigurationsResponse or derived type identifier
class _trt__GetCompatibleAudioDecoderConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of audio decoder configurations that are compatible with the specified media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AudioDecoderConfiguration* is 0..unbounded.
  $ int                                  __sizeConfigurations           0;
/// Pointer to array tt__AudioDecoderConfiguration* of size 0..unbounded.
    tt__AudioDecoderConfiguration*      *Configurations                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfiguration is a complexType.
///
/// @note class _trt__SetVideoEncoderConfiguration operations:
/// - _trt__SetVideoEncoderConfiguration* soap_new__trt__SetVideoEncoderConfiguration(soap*) allocate and default initialize
/// - _trt__SetVideoEncoderConfiguration* soap_new__trt__SetVideoEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoEncoderConfiguration* soap_new_req__trt__SetVideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__SetVideoEncoderConfiguration* soap_new_set__trt__SetVideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__SetVideoEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoEncoderConfiguration(soap*, _trt__SetVideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoEncoderConfiguration(soap*, _trt__SetVideoEncoderConfiguration*) serialize to a stream
/// - _trt__SetVideoEncoderConfiguration* _trt__SetVideoEncoderConfiguration::soap_dup(soap*) returns deep copy of _trt__SetVideoEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoEncoderConfiguration::soap_del() deep deletes _trt__SetVideoEncoderConfiguration data members, use only after _trt__SetVideoEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoEncoderConfiguration::soap_type() returns SOAP_TYPE__trt__SetVideoEncoderConfiguration or derived type identifier
class _trt__SetVideoEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoEncoderConfigurationResponse is a complexType.
///
/// @note class _trt__SetVideoEncoderConfigurationResponse operations:
/// - _trt__SetVideoEncoderConfigurationResponse* soap_new__trt__SetVideoEncoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__SetVideoEncoderConfigurationResponse* soap_new__trt__SetVideoEncoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoEncoderConfigurationResponse* soap_new_req__trt__SetVideoEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__SetVideoEncoderConfigurationResponse* soap_new_set__trt__SetVideoEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__SetVideoEncoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoEncoderConfigurationResponse(soap*, _trt__SetVideoEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoEncoderConfigurationResponse(soap*, _trt__SetVideoEncoderConfigurationResponse*) serialize to a stream
/// - _trt__SetVideoEncoderConfigurationResponse* _trt__SetVideoEncoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__SetVideoEncoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoEncoderConfigurationResponse::soap_del() deep deletes _trt__SetVideoEncoderConfigurationResponse data members, use only after _trt__SetVideoEncoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoEncoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__SetVideoEncoderConfigurationResponse or derived type identifier
class _trt__SetVideoEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfiguration is a complexType.
///
/// @note class _trt__SetVideoSourceConfiguration operations:
/// - _trt__SetVideoSourceConfiguration* soap_new__trt__SetVideoSourceConfiguration(soap*) allocate and default initialize
/// - _trt__SetVideoSourceConfiguration* soap_new__trt__SetVideoSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoSourceConfiguration* soap_new_req__trt__SetVideoSourceConfiguration(soap*, ...) allocate, set required members
/// - _trt__SetVideoSourceConfiguration* soap_new_set__trt__SetVideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - _trt__SetVideoSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoSourceConfiguration(soap*, _trt__SetVideoSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceConfiguration(soap*, _trt__SetVideoSourceConfiguration*) serialize to a stream
/// - _trt__SetVideoSourceConfiguration* _trt__SetVideoSourceConfiguration::soap_dup(soap*) returns deep copy of _trt__SetVideoSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoSourceConfiguration::soap_del() deep deletes _trt__SetVideoSourceConfiguration data members, use only after _trt__SetVideoSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoSourceConfiguration::soap_type() returns SOAP_TYPE__trt__SetVideoSourceConfiguration or derived type identifier
class _trt__SetVideoSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceConfigurationResponse is a complexType.
///
/// @note class _trt__SetVideoSourceConfigurationResponse operations:
/// - _trt__SetVideoSourceConfigurationResponse* soap_new__trt__SetVideoSourceConfigurationResponse(soap*) allocate and default initialize
/// - _trt__SetVideoSourceConfigurationResponse* soap_new__trt__SetVideoSourceConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoSourceConfigurationResponse* soap_new_req__trt__SetVideoSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__SetVideoSourceConfigurationResponse* soap_new_set__trt__SetVideoSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__SetVideoSourceConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoSourceConfigurationResponse(soap*, _trt__SetVideoSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceConfigurationResponse(soap*, _trt__SetVideoSourceConfigurationResponse*) serialize to a stream
/// - _trt__SetVideoSourceConfigurationResponse* _trt__SetVideoSourceConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__SetVideoSourceConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoSourceConfigurationResponse::soap_del() deep deletes _trt__SetVideoSourceConfigurationResponse data members, use only after _trt__SetVideoSourceConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoSourceConfigurationResponse::soap_type() returns SOAP_TYPE__trt__SetVideoSourceConfigurationResponse or derived type identifier
class _trt__SetVideoSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfiguration is a complexType.
///
/// @note class _trt__SetAudioEncoderConfiguration operations:
/// - _trt__SetAudioEncoderConfiguration* soap_new__trt__SetAudioEncoderConfiguration(soap*) allocate and default initialize
/// - _trt__SetAudioEncoderConfiguration* soap_new__trt__SetAudioEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__SetAudioEncoderConfiguration* soap_new_req__trt__SetAudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__SetAudioEncoderConfiguration* soap_new_set__trt__SetAudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__SetAudioEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetAudioEncoderConfiguration(soap*, _trt__SetAudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioEncoderConfiguration(soap*, _trt__SetAudioEncoderConfiguration*) serialize to a stream
/// - _trt__SetAudioEncoderConfiguration* _trt__SetAudioEncoderConfiguration::soap_dup(soap*) returns deep copy of _trt__SetAudioEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetAudioEncoderConfiguration::soap_del() deep deletes _trt__SetAudioEncoderConfiguration data members, use only after _trt__SetAudioEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetAudioEncoderConfiguration::soap_type() returns SOAP_TYPE__trt__SetAudioEncoderConfiguration or derived type identifier
class _trt__SetAudioEncoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio encoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioEncoderConfigurationResponse is a complexType.
///
/// @note class _trt__SetAudioEncoderConfigurationResponse operations:
/// - _trt__SetAudioEncoderConfigurationResponse* soap_new__trt__SetAudioEncoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__SetAudioEncoderConfigurationResponse* soap_new__trt__SetAudioEncoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetAudioEncoderConfigurationResponse* soap_new_req__trt__SetAudioEncoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__SetAudioEncoderConfigurationResponse* soap_new_set__trt__SetAudioEncoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__SetAudioEncoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetAudioEncoderConfigurationResponse(soap*, _trt__SetAudioEncoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioEncoderConfigurationResponse(soap*, _trt__SetAudioEncoderConfigurationResponse*) serialize to a stream
/// - _trt__SetAudioEncoderConfigurationResponse* _trt__SetAudioEncoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__SetAudioEncoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetAudioEncoderConfigurationResponse::soap_del() deep deletes _trt__SetAudioEncoderConfigurationResponse data members, use only after _trt__SetAudioEncoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetAudioEncoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__SetAudioEncoderConfigurationResponse or derived type identifier
class _trt__SetAudioEncoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfiguration is a complexType.
///
/// @note class _trt__SetAudioSourceConfiguration operations:
/// - _trt__SetAudioSourceConfiguration* soap_new__trt__SetAudioSourceConfiguration(soap*) allocate and default initialize
/// - _trt__SetAudioSourceConfiguration* soap_new__trt__SetAudioSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__SetAudioSourceConfiguration* soap_new_req__trt__SetAudioSourceConfiguration(soap*, ...) allocate, set required members
/// - _trt__SetAudioSourceConfiguration* soap_new_set__trt__SetAudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - _trt__SetAudioSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetAudioSourceConfiguration(soap*, _trt__SetAudioSourceConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioSourceConfiguration(soap*, _trt__SetAudioSourceConfiguration*) serialize to a stream
/// - _trt__SetAudioSourceConfiguration* _trt__SetAudioSourceConfiguration::soap_dup(soap*) returns deep copy of _trt__SetAudioSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetAudioSourceConfiguration::soap_del() deep deletes _trt__SetAudioSourceConfiguration data members, use only after _trt__SetAudioSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetAudioSourceConfiguration::soap_type() returns SOAP_TYPE__trt__SetAudioSourceConfiguration or derived type identifier
class _trt__SetAudioSourceConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio source configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioSourceConfigurationResponse is a complexType.
///
/// @note class _trt__SetAudioSourceConfigurationResponse operations:
/// - _trt__SetAudioSourceConfigurationResponse* soap_new__trt__SetAudioSourceConfigurationResponse(soap*) allocate and default initialize
/// - _trt__SetAudioSourceConfigurationResponse* soap_new__trt__SetAudioSourceConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetAudioSourceConfigurationResponse* soap_new_req__trt__SetAudioSourceConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__SetAudioSourceConfigurationResponse* soap_new_set__trt__SetAudioSourceConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__SetAudioSourceConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetAudioSourceConfigurationResponse(soap*, _trt__SetAudioSourceConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioSourceConfigurationResponse(soap*, _trt__SetAudioSourceConfigurationResponse*) serialize to a stream
/// - _trt__SetAudioSourceConfigurationResponse* _trt__SetAudioSourceConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__SetAudioSourceConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetAudioSourceConfigurationResponse::soap_del() deep deletes _trt__SetAudioSourceConfigurationResponse data members, use only after _trt__SetAudioSourceConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetAudioSourceConfigurationResponse::soap_type() returns SOAP_TYPE__trt__SetAudioSourceConfigurationResponse or derived type identifier
class _trt__SetAudioSourceConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfiguration is a complexType.
///
/// @note class _trt__SetVideoAnalyticsConfiguration operations:
/// - _trt__SetVideoAnalyticsConfiguration* soap_new__trt__SetVideoAnalyticsConfiguration(soap*) allocate and default initialize
/// - _trt__SetVideoAnalyticsConfiguration* soap_new__trt__SetVideoAnalyticsConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoAnalyticsConfiguration* soap_new_req__trt__SetVideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - _trt__SetVideoAnalyticsConfiguration* soap_new_set__trt__SetVideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - _trt__SetVideoAnalyticsConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoAnalyticsConfiguration(soap*, _trt__SetVideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetVideoAnalyticsConfiguration(soap*, _trt__SetVideoAnalyticsConfiguration*) serialize to a stream
/// - _trt__SetVideoAnalyticsConfiguration* _trt__SetVideoAnalyticsConfiguration::soap_dup(soap*) returns deep copy of _trt__SetVideoAnalyticsConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoAnalyticsConfiguration::soap_del() deep deletes _trt__SetVideoAnalyticsConfiguration data members, use only after _trt__SetVideoAnalyticsConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoAnalyticsConfiguration::soap_type() returns SOAP_TYPE__trt__SetVideoAnalyticsConfiguration or derived type identifier
class _trt__SetVideoAnalyticsConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified video analytics configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoAnalyticsConfigurationResponse is a complexType.
///
/// @note class _trt__SetVideoAnalyticsConfigurationResponse operations:
/// - _trt__SetVideoAnalyticsConfigurationResponse* soap_new__trt__SetVideoAnalyticsConfigurationResponse(soap*) allocate and default initialize
/// - _trt__SetVideoAnalyticsConfigurationResponse* soap_new__trt__SetVideoAnalyticsConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoAnalyticsConfigurationResponse* soap_new_req__trt__SetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__SetVideoAnalyticsConfigurationResponse* soap_new_set__trt__SetVideoAnalyticsConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__SetVideoAnalyticsConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoAnalyticsConfigurationResponse(soap*, _trt__SetVideoAnalyticsConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoAnalyticsConfigurationResponse(soap*, _trt__SetVideoAnalyticsConfigurationResponse*) serialize to a stream
/// - _trt__SetVideoAnalyticsConfigurationResponse* _trt__SetVideoAnalyticsConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__SetVideoAnalyticsConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoAnalyticsConfigurationResponse::soap_del() deep deletes _trt__SetVideoAnalyticsConfigurationResponse data members, use only after _trt__SetVideoAnalyticsConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoAnalyticsConfigurationResponse::soap_type() returns SOAP_TYPE__trt__SetVideoAnalyticsConfigurationResponse or derived type identifier
class _trt__SetVideoAnalyticsConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfiguration is a complexType.
///
/// @note class _trt__SetMetadataConfiguration operations:
/// - _trt__SetMetadataConfiguration* soap_new__trt__SetMetadataConfiguration(soap*) allocate and default initialize
/// - _trt__SetMetadataConfiguration* soap_new__trt__SetMetadataConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__SetMetadataConfiguration* soap_new_req__trt__SetMetadataConfiguration(soap*, ...) allocate, set required members
/// - _trt__SetMetadataConfiguration* soap_new_set__trt__SetMetadataConfiguration(soap*, ...) allocate, set all public members
/// - _trt__SetMetadataConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetMetadataConfiguration(soap*, _trt__SetMetadataConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetMetadataConfiguration(soap*, _trt__SetMetadataConfiguration*) serialize to a stream
/// - _trt__SetMetadataConfiguration* _trt__SetMetadataConfiguration::soap_dup(soap*) returns deep copy of _trt__SetMetadataConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetMetadataConfiguration::soap_del() deep deletes _trt__SetMetadataConfiguration data members, use only after _trt__SetMetadataConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetMetadataConfiguration::soap_type() returns SOAP_TYPE__trt__SetMetadataConfiguration or derived type identifier
class _trt__SetMetadataConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified metadata configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetMetadataConfigurationResponse is a complexType.
///
/// @note class _trt__SetMetadataConfigurationResponse operations:
/// - _trt__SetMetadataConfigurationResponse* soap_new__trt__SetMetadataConfigurationResponse(soap*) allocate and default initialize
/// - _trt__SetMetadataConfigurationResponse* soap_new__trt__SetMetadataConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetMetadataConfigurationResponse* soap_new_req__trt__SetMetadataConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__SetMetadataConfigurationResponse* soap_new_set__trt__SetMetadataConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__SetMetadataConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetMetadataConfigurationResponse(soap*, _trt__SetMetadataConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetMetadataConfigurationResponse(soap*, _trt__SetMetadataConfigurationResponse*) serialize to a stream
/// - _trt__SetMetadataConfigurationResponse* _trt__SetMetadataConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__SetMetadataConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetMetadataConfigurationResponse::soap_del() deep deletes _trt__SetMetadataConfigurationResponse data members, use only after _trt__SetMetadataConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetMetadataConfigurationResponse::soap_type() returns SOAP_TYPE__trt__SetMetadataConfigurationResponse or derived type identifier
class _trt__SetMetadataConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfiguration is a complexType.
///
/// @note class _trt__SetAudioOutputConfiguration operations:
/// - _trt__SetAudioOutputConfiguration* soap_new__trt__SetAudioOutputConfiguration(soap*) allocate and default initialize
/// - _trt__SetAudioOutputConfiguration* soap_new__trt__SetAudioOutputConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__SetAudioOutputConfiguration* soap_new_req__trt__SetAudioOutputConfiguration(soap*, ...) allocate, set required members
/// - _trt__SetAudioOutputConfiguration* soap_new_set__trt__SetAudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - _trt__SetAudioOutputConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetAudioOutputConfiguration(soap*, _trt__SetAudioOutputConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioOutputConfiguration(soap*, _trt__SetAudioOutputConfiguration*) serialize to a stream
/// - _trt__SetAudioOutputConfiguration* _trt__SetAudioOutputConfiguration::soap_dup(soap*) returns deep copy of _trt__SetAudioOutputConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetAudioOutputConfiguration::soap_del() deep deletes _trt__SetAudioOutputConfiguration data members, use only after _trt__SetAudioOutputConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetAudioOutputConfiguration::soap_type() returns SOAP_TYPE__trt__SetAudioOutputConfiguration or derived type identifier
class _trt__SetAudioOutputConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio output configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioOutputConfigurationResponse is a complexType.
///
/// @note class _trt__SetAudioOutputConfigurationResponse operations:
/// - _trt__SetAudioOutputConfigurationResponse* soap_new__trt__SetAudioOutputConfigurationResponse(soap*) allocate and default initialize
/// - _trt__SetAudioOutputConfigurationResponse* soap_new__trt__SetAudioOutputConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetAudioOutputConfigurationResponse* soap_new_req__trt__SetAudioOutputConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__SetAudioOutputConfigurationResponse* soap_new_set__trt__SetAudioOutputConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__SetAudioOutputConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetAudioOutputConfigurationResponse(soap*, _trt__SetAudioOutputConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioOutputConfigurationResponse(soap*, _trt__SetAudioOutputConfigurationResponse*) serialize to a stream
/// - _trt__SetAudioOutputConfigurationResponse* _trt__SetAudioOutputConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__SetAudioOutputConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetAudioOutputConfigurationResponse::soap_del() deep deletes _trt__SetAudioOutputConfigurationResponse data members, use only after _trt__SetAudioOutputConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetAudioOutputConfigurationResponse::soap_type() returns SOAP_TYPE__trt__SetAudioOutputConfigurationResponse or derived type identifier
class _trt__SetAudioOutputConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfiguration is a complexType.
///
/// @note class _trt__SetAudioDecoderConfiguration operations:
/// - _trt__SetAudioDecoderConfiguration* soap_new__trt__SetAudioDecoderConfiguration(soap*) allocate and default initialize
/// - _trt__SetAudioDecoderConfiguration* soap_new__trt__SetAudioDecoderConfiguration(soap*, int num) allocate and default initialize an array
/// - _trt__SetAudioDecoderConfiguration* soap_new_req__trt__SetAudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - _trt__SetAudioDecoderConfiguration* soap_new_set__trt__SetAudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - _trt__SetAudioDecoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetAudioDecoderConfiguration(soap*, _trt__SetAudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write__trt__SetAudioDecoderConfiguration(soap*, _trt__SetAudioDecoderConfiguration*) serialize to a stream
/// - _trt__SetAudioDecoderConfiguration* _trt__SetAudioDecoderConfiguration::soap_dup(soap*) returns deep copy of _trt__SetAudioDecoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetAudioDecoderConfiguration::soap_del() deep deletes _trt__SetAudioDecoderConfiguration data members, use only after _trt__SetAudioDecoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetAudioDecoderConfiguration::soap_type() returns SOAP_TYPE__trt__SetAudioDecoderConfiguration or derived type identifier
class _trt__SetAudioDecoderConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified audio decoder configuration. The configuration shall exist in the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Configuration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       Configuration                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ForcePersistence element is obsolete and should always be assumed to be true.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetAudioDecoderConfigurationResponse is a complexType.
///
/// @note class _trt__SetAudioDecoderConfigurationResponse operations:
/// - _trt__SetAudioDecoderConfigurationResponse* soap_new__trt__SetAudioDecoderConfigurationResponse(soap*) allocate and default initialize
/// - _trt__SetAudioDecoderConfigurationResponse* soap_new__trt__SetAudioDecoderConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetAudioDecoderConfigurationResponse* soap_new_req__trt__SetAudioDecoderConfigurationResponse(soap*, ...) allocate, set required members
/// - _trt__SetAudioDecoderConfigurationResponse* soap_new_set__trt__SetAudioDecoderConfigurationResponse(soap*, ...) allocate, set all public members
/// - _trt__SetAudioDecoderConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetAudioDecoderConfigurationResponse(soap*, _trt__SetAudioDecoderConfigurationResponse*) deserialize from a stream
/// - int soap_write__trt__SetAudioDecoderConfigurationResponse(soap*, _trt__SetAudioDecoderConfigurationResponse*) serialize to a stream
/// - _trt__SetAudioDecoderConfigurationResponse* _trt__SetAudioDecoderConfigurationResponse::soap_dup(soap*) returns deep copy of _trt__SetAudioDecoderConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetAudioDecoderConfigurationResponse::soap_del() deep deletes _trt__SetAudioDecoderConfigurationResponse data members, use only after _trt__SetAudioDecoderConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetAudioDecoderConfigurationResponse::soap_type() returns SOAP_TYPE__trt__SetAudioDecoderConfigurationResponse or derived type identifier
class _trt__SetAudioDecoderConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptions is a complexType.
///
/// @note class _trt__GetVideoSourceConfigurationOptions operations:
/// - _trt__GetVideoSourceConfigurationOptions* soap_new__trt__GetVideoSourceConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetVideoSourceConfigurationOptions* soap_new__trt__GetVideoSourceConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceConfigurationOptions* soap_new_req__trt__GetVideoSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceConfigurationOptions* soap_new_set__trt__GetVideoSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurationOptions(soap*, _trt__GetVideoSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationOptions(soap*, _trt__GetVideoSourceConfigurationOptions*) serialize to a stream
/// - _trt__GetVideoSourceConfigurationOptions* _trt__GetVideoSourceConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceConfigurationOptions::soap_del() deep deletes _trt__GetVideoSourceConfigurationOptions data members, use only after _trt__GetVideoSourceConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetVideoSourceConfigurationOptions or derived type identifier
class _trt__GetVideoSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional video source configurationToken that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetVideoSourceConfigurationOptionsResponse operations:
/// - _trt__GetVideoSourceConfigurationOptionsResponse* soap_new__trt__GetVideoSourceConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetVideoSourceConfigurationOptionsResponse* soap_new__trt__GetVideoSourceConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceConfigurationOptionsResponse* soap_new_req__trt__GetVideoSourceConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceConfigurationOptionsResponse* soap_new_set__trt__GetVideoSourceConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceConfigurationOptionsResponse(soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceConfigurationOptionsResponse(soap*, _trt__GetVideoSourceConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetVideoSourceConfigurationOptionsResponse* _trt__GetVideoSourceConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceConfigurationOptionsResponse::soap_del() deep deletes _trt__GetVideoSourceConfigurationOptionsResponse data members, use only after _trt__GetVideoSourceConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetVideoSourceConfigurationOptionsResponse or derived type identifier
class _trt__GetVideoSourceConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the video source configuration options. If a video source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationOptions.
    tt__VideoSourceConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptions is a complexType.
///
/// @note class _trt__GetVideoEncoderConfigurationOptions operations:
/// - _trt__GetVideoEncoderConfigurationOptions* soap_new__trt__GetVideoEncoderConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetVideoEncoderConfigurationOptions* soap_new__trt__GetVideoEncoderConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoEncoderConfigurationOptions* soap_new_req__trt__GetVideoEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetVideoEncoderConfigurationOptions* soap_new_set__trt__GetVideoEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetVideoEncoderConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurationOptions(soap*, _trt__GetVideoEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationOptions(soap*, _trt__GetVideoEncoderConfigurationOptions*) serialize to a stream
/// - _trt__GetVideoEncoderConfigurationOptions* _trt__GetVideoEncoderConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetVideoEncoderConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoEncoderConfigurationOptions::soap_del() deep deletes _trt__GetVideoEncoderConfigurationOptions data members, use only after _trt__GetVideoEncoderConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoEncoderConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetVideoEncoderConfigurationOptions or derived type identifier
class _trt__GetVideoEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional video encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoEncoderConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetVideoEncoderConfigurationOptionsResponse operations:
/// - _trt__GetVideoEncoderConfigurationOptionsResponse* soap_new__trt__GetVideoEncoderConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetVideoEncoderConfigurationOptionsResponse* soap_new__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoEncoderConfigurationOptionsResponse* soap_new_req__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoEncoderConfigurationOptionsResponse* soap_new_set__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoEncoderConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetVideoEncoderConfigurationOptionsResponse* _trt__GetVideoEncoderConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoEncoderConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoEncoderConfigurationOptionsResponse::soap_del() deep deletes _trt__GetVideoEncoderConfigurationOptionsResponse data members, use only after _trt__GetVideoEncoderConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoEncoderConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetVideoEncoderConfigurationOptionsResponse or derived type identifier
class _trt__GetVideoEncoderConfigurationOptionsResponse
{ public:
/// Element "Options" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfigurationOptions.
    tt__VideoEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptions is a complexType.
///
/// @note class _trt__GetAudioSourceConfigurationOptions operations:
/// - _trt__GetAudioSourceConfigurationOptions* soap_new__trt__GetAudioSourceConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetAudioSourceConfigurationOptions* soap_new__trt__GetAudioSourceConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioSourceConfigurationOptions* soap_new_req__trt__GetAudioSourceConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetAudioSourceConfigurationOptions* soap_new_set__trt__GetAudioSourceConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetAudioSourceConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurationOptions(soap*, _trt__GetAudioSourceConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationOptions(soap*, _trt__GetAudioSourceConfigurationOptions*) serialize to a stream
/// - _trt__GetAudioSourceConfigurationOptions* _trt__GetAudioSourceConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetAudioSourceConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioSourceConfigurationOptions::soap_del() deep deletes _trt__GetAudioSourceConfigurationOptions data members, use only after _trt__GetAudioSourceConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioSourceConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetAudioSourceConfigurationOptions or derived type identifier
class _trt__GetAudioSourceConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio source configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioSourceConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetAudioSourceConfigurationOptionsResponse operations:
/// - _trt__GetAudioSourceConfigurationOptionsResponse* soap_new__trt__GetAudioSourceConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioSourceConfigurationOptionsResponse* soap_new__trt__GetAudioSourceConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioSourceConfigurationOptionsResponse* soap_new_req__trt__GetAudioSourceConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioSourceConfigurationOptionsResponse* soap_new_set__trt__GetAudioSourceConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioSourceConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioSourceConfigurationOptionsResponse(soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioSourceConfigurationOptionsResponse(soap*, _trt__GetAudioSourceConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetAudioSourceConfigurationOptionsResponse* _trt__GetAudioSourceConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioSourceConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioSourceConfigurationOptionsResponse::soap_del() deep deletes _trt__GetAudioSourceConfigurationOptionsResponse data members, use only after _trt__GetAudioSourceConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioSourceConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioSourceConfigurationOptionsResponse or derived type identifier
class _trt__GetAudioSourceConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio source configuration options. If a audio source configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioSourceConfigurationOptions.
    tt__AudioSourceConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptions is a complexType.
///
/// @note class _trt__GetAudioEncoderConfigurationOptions operations:
/// - _trt__GetAudioEncoderConfigurationOptions* soap_new__trt__GetAudioEncoderConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetAudioEncoderConfigurationOptions* soap_new__trt__GetAudioEncoderConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioEncoderConfigurationOptions* soap_new_req__trt__GetAudioEncoderConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetAudioEncoderConfigurationOptions* soap_new_set__trt__GetAudioEncoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetAudioEncoderConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurationOptions(soap*, _trt__GetAudioEncoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationOptions(soap*, _trt__GetAudioEncoderConfigurationOptions*) serialize to a stream
/// - _trt__GetAudioEncoderConfigurationOptions* _trt__GetAudioEncoderConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetAudioEncoderConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioEncoderConfigurationOptions::soap_del() deep deletes _trt__GetAudioEncoderConfigurationOptions data members, use only after _trt__GetAudioEncoderConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioEncoderConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetAudioEncoderConfigurationOptions or derived type identifier
class _trt__GetAudioEncoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio encoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioEncoderConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetAudioEncoderConfigurationOptionsResponse operations:
/// - _trt__GetAudioEncoderConfigurationOptionsResponse* soap_new__trt__GetAudioEncoderConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioEncoderConfigurationOptionsResponse* soap_new__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioEncoderConfigurationOptionsResponse* soap_new_req__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioEncoderConfigurationOptionsResponse* soap_new_set__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioEncoderConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetAudioEncoderConfigurationOptionsResponse* _trt__GetAudioEncoderConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioEncoderConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioEncoderConfigurationOptionsResponse::soap_del() deep deletes _trt__GetAudioEncoderConfigurationOptionsResponse data members, use only after _trt__GetAudioEncoderConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioEncoderConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioEncoderConfigurationOptionsResponse or derived type identifier
class _trt__GetAudioEncoderConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio encoder configuration options. If a audio encoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfigurationOptions.
    tt__AudioEncoderConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptions is a complexType.
///
/// @note class _trt__GetMetadataConfigurationOptions operations:
/// - _trt__GetMetadataConfigurationOptions* soap_new__trt__GetMetadataConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetMetadataConfigurationOptions* soap_new__trt__GetMetadataConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetMetadataConfigurationOptions* soap_new_req__trt__GetMetadataConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetMetadataConfigurationOptions* soap_new_set__trt__GetMetadataConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetMetadataConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationOptions(soap*, _trt__GetMetadataConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationOptions(soap*, _trt__GetMetadataConfigurationOptions*) serialize to a stream
/// - _trt__GetMetadataConfigurationOptions* _trt__GetMetadataConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetMetadataConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetMetadataConfigurationOptions::soap_del() deep deletes _trt__GetMetadataConfigurationOptions data members, use only after _trt__GetMetadataConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetMetadataConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetMetadataConfigurationOptions or derived type identifier
class _trt__GetMetadataConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetMetadataConfigurationOptionsResponse operations:
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new__trt__GetMetadataConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new__trt__GetMetadataConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new_req__trt__GetMetadataConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new_set__trt__GetMetadataConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetMetadataConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetMetadataConfigurationOptionsResponse* _trt__GetMetadataConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetMetadataConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetMetadataConfigurationOptionsResponse::soap_del() deep deletes _trt__GetMetadataConfigurationOptionsResponse data members, use only after _trt__GetMetadataConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetMetadataConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetMetadataConfigurationOptionsResponse or derived type identifier
class _trt__GetMetadataConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    tt__MetadataConfigurationOptions*    Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
/// @note class _trt__GetAudioOutputConfigurationOptions operations:
/// - _trt__GetAudioOutputConfigurationOptions* soap_new__trt__GetAudioOutputConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetAudioOutputConfigurationOptions* soap_new__trt__GetAudioOutputConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputConfigurationOptions* soap_new_req__trt__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputConfigurationOptions* soap_new_set__trt__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) serialize to a stream
/// - _trt__GetAudioOutputConfigurationOptions* _trt__GetAudioOutputConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputConfigurationOptions::soap_del() deep deletes _trt__GetAudioOutputConfigurationOptions data members, use only after _trt__GetAudioOutputConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetAudioOutputConfigurationOptions or derived type identifier
class _trt__GetAudioOutputConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetAudioOutputConfigurationOptionsResponse operations:
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new__trt__GetAudioOutputConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new__trt__GetAudioOutputConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new_req__trt__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new_set__trt__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetAudioOutputConfigurationOptionsResponse* _trt__GetAudioOutputConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputConfigurationOptionsResponse::soap_del() deep deletes _trt__GetAudioOutputConfigurationOptionsResponse data members, use only after _trt__GetAudioOutputConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioOutputConfigurationOptionsResponse or derived type identifier
class _trt__GetAudioOutputConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
///
/// @note class _trt__GetAudioDecoderConfigurationOptions operations:
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new__trt__GetAudioDecoderConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new__trt__GetAudioDecoderConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new_req__trt__GetAudioDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new_set__trt__GetAudioDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetAudioDecoderConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) serialize to a stream
/// - _trt__GetAudioDecoderConfigurationOptions* _trt__GetAudioDecoderConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetAudioDecoderConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioDecoderConfigurationOptions::soap_del() deep deletes _trt__GetAudioDecoderConfigurationOptions data members, use only after _trt__GetAudioDecoderConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioDecoderConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetAudioDecoderConfigurationOptions or derived type identifier
class _trt__GetAudioDecoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetAudioDecoderConfigurationOptionsResponse operations:
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new_req__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new_set__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioDecoderConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* _trt__GetAudioDecoderConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioDecoderConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioDecoderConfigurationOptionsResponse::soap_del() deep deletes _trt__GetAudioDecoderConfigurationOptionsResponse data members, use only after _trt__GetAudioDecoderConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioDecoderConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioDecoderConfigurationOptionsResponse or derived type identifier
class _trt__GetAudioDecoderConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
///
/// @note class _trt__GetGuaranteedNumberOfVideoEncoderInstances operations:
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*) allocate and default initialize
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, int num) allocate and default initialize an array
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new_req__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, ...) allocate, set required members
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new_set__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, ...) allocate, set all public members
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) deserialize from a stream
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) serialize to a stream
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_dup(soap*) returns deep copy of _trt__GetGuaranteedNumberOfVideoEncoderInstances, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_del() deep deletes _trt__GetGuaranteedNumberOfVideoEncoderInstances data members, use only after _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_type() returns SOAP_TYPE__trt__GetGuaranteedNumberOfVideoEncoderInstances or derived type identifier
class _trt__GetGuaranteedNumberOfVideoEncoderInstances
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the video source configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
///
/// @note class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse operations:
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*) allocate and default initialize
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new_req__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, ...) allocate, set required members
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new_set__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, ...) allocate, set all public members
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) deserialize from a stream
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) serialize to a stream
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_dup(soap*) returns deep copy of _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_del() deep deletes _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse data members, use only after _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_type() returns SOAP_TYPE__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse or derived type identifier
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// </BLOCKQUOTE></PRE>
///
/// Element "TotalNumber" of type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
///
/// @note class _trt__GetStreamUri operations:
/// - _trt__GetStreamUri* soap_new__trt__GetStreamUri(soap*) allocate and default initialize
/// - _trt__GetStreamUri* soap_new__trt__GetStreamUri(soap*, int num) allocate and default initialize an array
/// - _trt__GetStreamUri* soap_new_req__trt__GetStreamUri(soap*, ...) allocate, set required members
/// - _trt__GetStreamUri* soap_new_set__trt__GetStreamUri(soap*, ...) allocate, set all public members
/// - _trt__GetStreamUri::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetStreamUri(soap*, _trt__GetStreamUri*) deserialize from a stream
/// - int soap_write__trt__GetStreamUri(soap*, _trt__GetStreamUri*) serialize to a stream
/// - _trt__GetStreamUri* _trt__GetStreamUri::soap_dup(soap*) returns deep copy of _trt__GetStreamUri, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetStreamUri::soap_del() deep deletes _trt__GetStreamUri data members, use only after _trt__GetStreamUri::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetStreamUri::soap_type() returns SOAP_TYPE__trt__GetStreamUri or derived type identifier
class _trt__GetStreamUri
{ public:
/// <PRE><BLOCKQUOTE>
///   Stream Setup that should be used with the uri
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamSetup" of type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
///
/// @note class _trt__GetStreamUriResponse operations:
/// - _trt__GetStreamUriResponse* soap_new__trt__GetStreamUriResponse(soap*) allocate and default initialize
/// - _trt__GetStreamUriResponse* soap_new__trt__GetStreamUriResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetStreamUriResponse* soap_new_req__trt__GetStreamUriResponse(soap*, ...) allocate, set required members
/// - _trt__GetStreamUriResponse* soap_new_set__trt__GetStreamUriResponse(soap*, ...) allocate, set all public members
/// - _trt__GetStreamUriResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) deserialize from a stream
/// - int soap_write__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) serialize to a stream
/// - _trt__GetStreamUriResponse* _trt__GetStreamUriResponse::soap_dup(soap*) returns deep copy of _trt__GetStreamUriResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetStreamUriResponse::soap_del() deep deletes _trt__GetStreamUriResponse data members, use only after _trt__GetStreamUriResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetStreamUriResponse::soap_type() returns SOAP_TYPE__trt__GetStreamUriResponse or derived type identifier
class _trt__GetStreamUriResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
///
/// @note class _trt__StartMulticastStreaming operations:
/// - _trt__StartMulticastStreaming* soap_new__trt__StartMulticastStreaming(soap*) allocate and default initialize
/// - _trt__StartMulticastStreaming* soap_new__trt__StartMulticastStreaming(soap*, int num) allocate and default initialize an array
/// - _trt__StartMulticastStreaming* soap_new_req__trt__StartMulticastStreaming(soap*, ...) allocate, set required members
/// - _trt__StartMulticastStreaming* soap_new_set__trt__StartMulticastStreaming(soap*, ...) allocate, set all public members
/// - _trt__StartMulticastStreaming::soap_default(soap*) default initialize members
/// - int soap_read__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) deserialize from a stream
/// - int soap_write__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) serialize to a stream
/// - _trt__StartMulticastStreaming* _trt__StartMulticastStreaming::soap_dup(soap*) returns deep copy of _trt__StartMulticastStreaming, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__StartMulticastStreaming::soap_del() deep deletes _trt__StartMulticastStreaming data members, use only after _trt__StartMulticastStreaming::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__StartMulticastStreaming::soap_type() returns SOAP_TYPE__trt__StartMulticastStreaming or derived type identifier
class _trt__StartMulticastStreaming
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
///
/// @note class _trt__StartMulticastStreamingResponse operations:
/// - _trt__StartMulticastStreamingResponse* soap_new__trt__StartMulticastStreamingResponse(soap*) allocate and default initialize
/// - _trt__StartMulticastStreamingResponse* soap_new__trt__StartMulticastStreamingResponse(soap*, int num) allocate and default initialize an array
/// - _trt__StartMulticastStreamingResponse* soap_new_req__trt__StartMulticastStreamingResponse(soap*, ...) allocate, set required members
/// - _trt__StartMulticastStreamingResponse* soap_new_set__trt__StartMulticastStreamingResponse(soap*, ...) allocate, set all public members
/// - _trt__StartMulticastStreamingResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) deserialize from a stream
/// - int soap_write__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) serialize to a stream
/// - _trt__StartMulticastStreamingResponse* _trt__StartMulticastStreamingResponse::soap_dup(soap*) returns deep copy of _trt__StartMulticastStreamingResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__StartMulticastStreamingResponse::soap_del() deep deletes _trt__StartMulticastStreamingResponse data members, use only after _trt__StartMulticastStreamingResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__StartMulticastStreamingResponse::soap_type() returns SOAP_TYPE__trt__StartMulticastStreamingResponse or derived type identifier
class _trt__StartMulticastStreamingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
///
/// @note class _trt__StopMulticastStreaming operations:
/// - _trt__StopMulticastStreaming* soap_new__trt__StopMulticastStreaming(soap*) allocate and default initialize
/// - _trt__StopMulticastStreaming* soap_new__trt__StopMulticastStreaming(soap*, int num) allocate and default initialize an array
/// - _trt__StopMulticastStreaming* soap_new_req__trt__StopMulticastStreaming(soap*, ...) allocate, set required members
/// - _trt__StopMulticastStreaming* soap_new_set__trt__StopMulticastStreaming(soap*, ...) allocate, set all public members
/// - _trt__StopMulticastStreaming::soap_default(soap*) default initialize members
/// - int soap_read__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) deserialize from a stream
/// - int soap_write__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) serialize to a stream
/// - _trt__StopMulticastStreaming* _trt__StopMulticastStreaming::soap_dup(soap*) returns deep copy of _trt__StopMulticastStreaming, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__StopMulticastStreaming::soap_del() deep deletes _trt__StopMulticastStreaming data members, use only after _trt__StopMulticastStreaming::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__StopMulticastStreaming::soap_type() returns SOAP_TYPE__trt__StopMulticastStreaming or derived type identifier
class _trt__StopMulticastStreaming
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
///
/// @note class _trt__StopMulticastStreamingResponse operations:
/// - _trt__StopMulticastStreamingResponse* soap_new__trt__StopMulticastStreamingResponse(soap*) allocate and default initialize
/// - _trt__StopMulticastStreamingResponse* soap_new__trt__StopMulticastStreamingResponse(soap*, int num) allocate and default initialize an array
/// - _trt__StopMulticastStreamingResponse* soap_new_req__trt__StopMulticastStreamingResponse(soap*, ...) allocate, set required members
/// - _trt__StopMulticastStreamingResponse* soap_new_set__trt__StopMulticastStreamingResponse(soap*, ...) allocate, set all public members
/// - _trt__StopMulticastStreamingResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) deserialize from a stream
/// - int soap_write__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) serialize to a stream
/// - _trt__StopMulticastStreamingResponse* _trt__StopMulticastStreamingResponse::soap_dup(soap*) returns deep copy of _trt__StopMulticastStreamingResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__StopMulticastStreamingResponse::soap_del() deep deletes _trt__StopMulticastStreamingResponse data members, use only after _trt__StopMulticastStreamingResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__StopMulticastStreamingResponse::soap_type() returns SOAP_TYPE__trt__StopMulticastStreamingResponse or derived type identifier
class _trt__StopMulticastStreamingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
///
/// @note class _trt__SetSynchronizationPoint operations:
/// - _trt__SetSynchronizationPoint* soap_new__trt__SetSynchronizationPoint(soap*) allocate and default initialize
/// - _trt__SetSynchronizationPoint* soap_new__trt__SetSynchronizationPoint(soap*, int num) allocate and default initialize an array
/// - _trt__SetSynchronizationPoint* soap_new_req__trt__SetSynchronizationPoint(soap*, ...) allocate, set required members
/// - _trt__SetSynchronizationPoint* soap_new_set__trt__SetSynchronizationPoint(soap*, ...) allocate, set all public members
/// - _trt__SetSynchronizationPoint::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) deserialize from a stream
/// - int soap_write__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) serialize to a stream
/// - _trt__SetSynchronizationPoint* _trt__SetSynchronizationPoint::soap_dup(soap*) returns deep copy of _trt__SetSynchronizationPoint, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetSynchronizationPoint::soap_del() deep deletes _trt__SetSynchronizationPoint data members, use only after _trt__SetSynchronizationPoint::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetSynchronizationPoint::soap_type() returns SOAP_TYPE__trt__SetSynchronizationPoint or derived type identifier
class _trt__SetSynchronizationPoint
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// @note class _trt__SetSynchronizationPointResponse operations:
/// - _trt__SetSynchronizationPointResponse* soap_new__trt__SetSynchronizationPointResponse(soap*) allocate and default initialize
/// - _trt__SetSynchronizationPointResponse* soap_new__trt__SetSynchronizationPointResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetSynchronizationPointResponse* soap_new_req__trt__SetSynchronizationPointResponse(soap*, ...) allocate, set required members
/// - _trt__SetSynchronizationPointResponse* soap_new_set__trt__SetSynchronizationPointResponse(soap*, ...) allocate, set all public members
/// - _trt__SetSynchronizationPointResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) deserialize from a stream
/// - int soap_write__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) serialize to a stream
/// - _trt__SetSynchronizationPointResponse* _trt__SetSynchronizationPointResponse::soap_dup(soap*) returns deep copy of _trt__SetSynchronizationPointResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetSynchronizationPointResponse::soap_del() deep deletes _trt__SetSynchronizationPointResponse data members, use only after _trt__SetSynchronizationPointResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetSynchronizationPointResponse::soap_type() returns SOAP_TYPE__trt__SetSynchronizationPointResponse or derived type identifier
class _trt__SetSynchronizationPointResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
///
/// @note class _trt__GetSnapshotUri operations:
/// - _trt__GetSnapshotUri* soap_new__trt__GetSnapshotUri(soap*) allocate and default initialize
/// - _trt__GetSnapshotUri* soap_new__trt__GetSnapshotUri(soap*, int num) allocate and default initialize an array
/// - _trt__GetSnapshotUri* soap_new_req__trt__GetSnapshotUri(soap*, ...) allocate, set required members
/// - _trt__GetSnapshotUri* soap_new_set__trt__GetSnapshotUri(soap*, ...) allocate, set all public members
/// - _trt__GetSnapshotUri::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) deserialize from a stream
/// - int soap_write__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) serialize to a stream
/// - _trt__GetSnapshotUri* _trt__GetSnapshotUri::soap_dup(soap*) returns deep copy of _trt__GetSnapshotUri, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetSnapshotUri::soap_del() deep deletes _trt__GetSnapshotUri data members, use only after _trt__GetSnapshotUri::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetSnapshotUri::soap_type() returns SOAP_TYPE__trt__GetSnapshotUri or derived type identifier
class _trt__GetSnapshotUri
{ public:
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
///
/// @note class _trt__GetSnapshotUriResponse operations:
/// - _trt__GetSnapshotUriResponse* soap_new__trt__GetSnapshotUriResponse(soap*) allocate and default initialize
/// - _trt__GetSnapshotUriResponse* soap_new__trt__GetSnapshotUriResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetSnapshotUriResponse* soap_new_req__trt__GetSnapshotUriResponse(soap*, ...) allocate, set required members
/// - _trt__GetSnapshotUriResponse* soap_new_set__trt__GetSnapshotUriResponse(soap*, ...) allocate, set all public members
/// - _trt__GetSnapshotUriResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) deserialize from a stream
/// - int soap_write__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) serialize to a stream
/// - _trt__GetSnapshotUriResponse* _trt__GetSnapshotUriResponse::soap_dup(soap*) returns deep copy of _trt__GetSnapshotUriResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetSnapshotUriResponse::soap_del() deep deletes _trt__GetSnapshotUriResponse data members, use only after _trt__GetSnapshotUriResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetSnapshotUriResponse::soap_type() returns SOAP_TYPE__trt__GetSnapshotUriResponse or derived type identifier
class _trt__GetSnapshotUriResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes is a complexType.
///
/// @note class _trt__GetVideoSourceModes operations:
/// - _trt__GetVideoSourceModes* soap_new__trt__GetVideoSourceModes(soap*) allocate and default initialize
/// - _trt__GetVideoSourceModes* soap_new__trt__GetVideoSourceModes(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceModes* soap_new_req__trt__GetVideoSourceModes(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceModes* soap_new_set__trt__GetVideoSourceModes(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceModes::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes*) serialize to a stream
/// - _trt__GetVideoSourceModes* _trt__GetVideoSourceModes::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceModes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceModes::soap_del() deep deletes _trt__GetVideoSourceModes data members, use only after _trt__GetVideoSourceModes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceModes::soap_type() returns SOAP_TYPE__trt__GetVideoSourceModes or derived type identifier
class _trt__GetVideoSourceModes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse is a complexType.
///
/// @note class _trt__GetVideoSourceModesResponse operations:
/// - _trt__GetVideoSourceModesResponse* soap_new__trt__GetVideoSourceModesResponse(soap*) allocate and default initialize
/// - _trt__GetVideoSourceModesResponse* soap_new__trt__GetVideoSourceModesResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceModesResponse* soap_new_req__trt__GetVideoSourceModesResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceModesResponse* soap_new_set__trt__GetVideoSourceModesResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceModesResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse*) serialize to a stream
/// - _trt__GetVideoSourceModesResponse* _trt__GetVideoSourceModesResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceModesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceModesResponse::soap_del() deep deletes _trt__GetVideoSourceModesResponse data members, use only after _trt__GetVideoSourceModesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceModesResponse::soap_type() returns SOAP_TYPE__trt__GetVideoSourceModesResponse or derived type identifier
class _trt__GetVideoSourceModesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Return the information for specified video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of trt__VideoSourceMode* is 1..unbounded.
  $ int                                  __sizeVideoSourceModes         1;
/// Pointer to array trt__VideoSourceMode* of size 1..unbounded.
    trt__VideoSourceMode*               *VideoSourceModes               1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode is a complexType.
///
/// @note class _trt__SetVideoSourceMode operations:
/// - _trt__SetVideoSourceMode* soap_new__trt__SetVideoSourceMode(soap*) allocate and default initialize
/// - _trt__SetVideoSourceMode* soap_new__trt__SetVideoSourceMode(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoSourceMode* soap_new_req__trt__SetVideoSourceMode(soap*, ...) allocate, set required members
/// - _trt__SetVideoSourceMode* soap_new_set__trt__SetVideoSourceMode(soap*, ...) allocate, set all public members
/// - _trt__SetVideoSourceMode::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode*) serialize to a stream
/// - _trt__SetVideoSourceMode* _trt__SetVideoSourceMode::soap_dup(soap*) returns deep copy of _trt__SetVideoSourceMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoSourceMode::soap_del() deep deletes _trt__SetVideoSourceMode data members, use only after _trt__SetVideoSourceMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoSourceMode::soap_type() returns SOAP_TYPE__trt__SetVideoSourceMode or derived type identifier
class _trt__SetVideoSourceMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicate video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceModeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse is a complexType.
///
/// @note class _trt__SetVideoSourceModeResponse operations:
/// - _trt__SetVideoSourceModeResponse* soap_new__trt__SetVideoSourceModeResponse(soap*) allocate and default initialize
/// - _trt__SetVideoSourceModeResponse* soap_new__trt__SetVideoSourceModeResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoSourceModeResponse* soap_new_req__trt__SetVideoSourceModeResponse(soap*, ...) allocate, set required members
/// - _trt__SetVideoSourceModeResponse* soap_new_set__trt__SetVideoSourceModeResponse(soap*, ...) allocate, set all public members
/// - _trt__SetVideoSourceModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse*) serialize to a stream
/// - _trt__SetVideoSourceModeResponse* _trt__SetVideoSourceModeResponse::soap_dup(soap*) returns deep copy of _trt__SetVideoSourceModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoSourceModeResponse::soap_del() deep deletes _trt__SetVideoSourceModeResponse data members, use only after _trt__SetVideoSourceModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoSourceModeResponse::soap_type() returns SOAP_TYPE__trt__SetVideoSourceModeResponse or derived type identifier
class _trt__SetVideoSourceModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    bool                                 Reboot                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDs is a complexType.
///
/// @note class _trt__GetOSDs operations:
/// - _trt__GetOSDs* soap_new__trt__GetOSDs(soap*) allocate and default initialize
/// - _trt__GetOSDs* soap_new__trt__GetOSDs(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDs* soap_new_req__trt__GetOSDs(soap*, ...) allocate, set required members
/// - _trt__GetOSDs* soap_new_set__trt__GetOSDs(soap*, ...) allocate, set all public members
/// - _trt__GetOSDs::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDs(soap*, _trt__GetOSDs*) deserialize from a stream
/// - int soap_write__trt__GetOSDs(soap*, _trt__GetOSDs*) serialize to a stream
/// - _trt__GetOSDs* _trt__GetOSDs::soap_dup(soap*) returns deep copy of _trt__GetOSDs, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDs::soap_del() deep deletes _trt__GetOSDs data members, use only after _trt__GetOSDs::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDs::soap_type() returns SOAP_TYPE__trt__GetOSDs or derived type identifier
class _trt__GetOSDs
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse is a complexType.
///
/// @note class _trt__GetOSDsResponse operations:
/// - _trt__GetOSDsResponse* soap_new__trt__GetOSDsResponse(soap*) allocate and default initialize
/// - _trt__GetOSDsResponse* soap_new__trt__GetOSDsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDsResponse* soap_new_req__trt__GetOSDsResponse(soap*, ...) allocate, set required members
/// - _trt__GetOSDsResponse* soap_new_set__trt__GetOSDsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetOSDsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse*) serialize to a stream
/// - _trt__GetOSDsResponse* _trt__GetOSDsResponse::soap_dup(soap*) returns deep copy of _trt__GetOSDsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDsResponse::soap_del() deep deletes _trt__GetOSDsResponse data members, use only after _trt__GetOSDsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDsResponse::soap_type() returns SOAP_TYPE__trt__GetOSDsResponse or derived type identifier
class _trt__GetOSDsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of requested OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__OSDConfiguration* is 0..unbounded.
  $ int                                  __sizeOSDs                     0;
/// Pointer to array tt__OSDConfiguration* of size 0..unbounded.
    tt__OSDConfiguration*               *OSDs                           0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSD is a complexType.
///
/// @note class _trt__GetOSD operations:
/// - _trt__GetOSD* soap_new__trt__GetOSD(soap*) allocate and default initialize
/// - _trt__GetOSD* soap_new__trt__GetOSD(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSD* soap_new_req__trt__GetOSD(soap*, ...) allocate, set required members
/// - _trt__GetOSD* soap_new_set__trt__GetOSD(soap*, ...) allocate, set all public members
/// - _trt__GetOSD::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSD(soap*, _trt__GetOSD*) deserialize from a stream
/// - int soap_write__trt__GetOSD(soap*, _trt__GetOSD*) serialize to a stream
/// - _trt__GetOSD* _trt__GetOSD::soap_dup(soap*) returns deep copy of _trt__GetOSD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSD::soap_del() deep deletes _trt__GetOSD data members, use only after _trt__GetOSD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSD::soap_type() returns SOAP_TYPE__trt__GetOSD or derived type identifier
class _trt__GetOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   The GetOSD command fetches the OSD configuration if the OSD token is known.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse is a complexType.
///
/// @note class _trt__GetOSDResponse operations:
/// - _trt__GetOSDResponse* soap_new__trt__GetOSDResponse(soap*) allocate and default initialize
/// - _trt__GetOSDResponse* soap_new__trt__GetOSDResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDResponse* soap_new_req__trt__GetOSDResponse(soap*, ...) allocate, set required members
/// - _trt__GetOSDResponse* soap_new_set__trt__GetOSDResponse(soap*, ...) allocate, set all public members
/// - _trt__GetOSDResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDResponse(soap*, _trt__GetOSDResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDResponse(soap*, _trt__GetOSDResponse*) serialize to a stream
/// - _trt__GetOSDResponse* _trt__GetOSDResponse::soap_dup(soap*) returns deep copy of _trt__GetOSDResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDResponse::soap_del() deep deletes _trt__GetOSDResponse data members, use only after _trt__GetOSDResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDResponse::soap_type() returns SOAP_TYPE__trt__GetOSDResponse or derived type identifier
class _trt__GetOSDResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSD is a complexType.
///
/// @note class _trt__SetOSD operations:
/// - _trt__SetOSD* soap_new__trt__SetOSD(soap*) allocate and default initialize
/// - _trt__SetOSD* soap_new__trt__SetOSD(soap*, int num) allocate and default initialize an array
/// - _trt__SetOSD* soap_new_req__trt__SetOSD(soap*, ...) allocate, set required members
/// - _trt__SetOSD* soap_new_set__trt__SetOSD(soap*, ...) allocate, set all public members
/// - _trt__SetOSD::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetOSD(soap*, _trt__SetOSD*) deserialize from a stream
/// - int soap_write__trt__SetOSD(soap*, _trt__SetOSD*) serialize to a stream
/// - _trt__SetOSD* _trt__SetOSD::soap_dup(soap*) returns deep copy of _trt__SetOSD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetOSD::soap_del() deep deletes _trt__SetOSD data members, use only after _trt__SetOSD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetOSD::soap_type() returns SOAP_TYPE__trt__SetOSD or derived type identifier
class _trt__SetOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse is a complexType.
///
/// @note class _trt__SetOSDResponse operations:
/// - _trt__SetOSDResponse* soap_new__trt__SetOSDResponse(soap*) allocate and default initialize
/// - _trt__SetOSDResponse* soap_new__trt__SetOSDResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetOSDResponse* soap_new_req__trt__SetOSDResponse(soap*, ...) allocate, set required members
/// - _trt__SetOSDResponse* soap_new_set__trt__SetOSDResponse(soap*, ...) allocate, set all public members
/// - _trt__SetOSDResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetOSDResponse(soap*, _trt__SetOSDResponse*) deserialize from a stream
/// - int soap_write__trt__SetOSDResponse(soap*, _trt__SetOSDResponse*) serialize to a stream
/// - _trt__SetOSDResponse* _trt__SetOSDResponse::soap_dup(soap*) returns deep copy of _trt__SetOSDResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetOSDResponse::soap_del() deep deletes _trt__SetOSDResponse data members, use only after _trt__SetOSDResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetOSDResponse::soap_type() returns SOAP_TYPE__trt__SetOSDResponse or derived type identifier
class _trt__SetOSDResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions is a complexType.
///
/// @note class _trt__GetOSDOptions operations:
/// - _trt__GetOSDOptions* soap_new__trt__GetOSDOptions(soap*) allocate and default initialize
/// - _trt__GetOSDOptions* soap_new__trt__GetOSDOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDOptions* soap_new_req__trt__GetOSDOptions(soap*, ...) allocate, set required members
/// - _trt__GetOSDOptions* soap_new_set__trt__GetOSDOptions(soap*, ...) allocate, set all public members
/// - _trt__GetOSDOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDOptions(soap*, _trt__GetOSDOptions*) deserialize from a stream
/// - int soap_write__trt__GetOSDOptions(soap*, _trt__GetOSDOptions*) serialize to a stream
/// - _trt__GetOSDOptions* _trt__GetOSDOptions::soap_dup(soap*) returns deep copy of _trt__GetOSDOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDOptions::soap_del() deep deletes _trt__GetOSDOptions data members, use only after _trt__GetOSDOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDOptions::soap_type() returns SOAP_TYPE__trt__GetOSDOptions or derived type identifier
class _trt__GetOSDOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse is a complexType.
///
/// @note class _trt__GetOSDOptionsResponse operations:
/// - _trt__GetOSDOptionsResponse* soap_new__trt__GetOSDOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetOSDOptionsResponse* soap_new__trt__GetOSDOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDOptionsResponse* soap_new_req__trt__GetOSDOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetOSDOptionsResponse* soap_new_set__trt__GetOSDOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetOSDOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse*) serialize to a stream
/// - _trt__GetOSDOptionsResponse* _trt__GetOSDOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetOSDOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDOptionsResponse::soap_del() deep deletes _trt__GetOSDOptionsResponse data members, use only after _trt__GetOSDOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetOSDOptionsResponse or derived type identifier
class _trt__GetOSDOptionsResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "OSDOptions" of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    tt__OSDConfigurationOptions*         OSDOptions                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSD is a complexType.
///
/// @note class _trt__CreateOSD operations:
/// - _trt__CreateOSD* soap_new__trt__CreateOSD(soap*) allocate and default initialize
/// - _trt__CreateOSD* soap_new__trt__CreateOSD(soap*, int num) allocate and default initialize an array
/// - _trt__CreateOSD* soap_new_req__trt__CreateOSD(soap*, ...) allocate, set required members
/// - _trt__CreateOSD* soap_new_set__trt__CreateOSD(soap*, ...) allocate, set all public members
/// - _trt__CreateOSD::soap_default(soap*) default initialize members
/// - int soap_read__trt__CreateOSD(soap*, _trt__CreateOSD*) deserialize from a stream
/// - int soap_write__trt__CreateOSD(soap*, _trt__CreateOSD*) serialize to a stream
/// - _trt__CreateOSD* _trt__CreateOSD::soap_dup(soap*) returns deep copy of _trt__CreateOSD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__CreateOSD::soap_del() deep deletes _trt__CreateOSD data members, use only after _trt__CreateOSD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__CreateOSD::soap_type() returns SOAP_TYPE__trt__CreateOSD or derived type identifier
class _trt__CreateOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   Contain the initial OSD configuration for create.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse is a complexType.
///
/// @note class _trt__CreateOSDResponse operations:
/// - _trt__CreateOSDResponse* soap_new__trt__CreateOSDResponse(soap*) allocate and default initialize
/// - _trt__CreateOSDResponse* soap_new__trt__CreateOSDResponse(soap*, int num) allocate and default initialize an array
/// - _trt__CreateOSDResponse* soap_new_req__trt__CreateOSDResponse(soap*, ...) allocate, set required members
/// - _trt__CreateOSDResponse* soap_new_set__trt__CreateOSDResponse(soap*, ...) allocate, set all public members
/// - _trt__CreateOSDResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse*) deserialize from a stream
/// - int soap_write__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse*) serialize to a stream
/// - _trt__CreateOSDResponse* _trt__CreateOSDResponse::soap_dup(soap*) returns deep copy of _trt__CreateOSDResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__CreateOSDResponse::soap_del() deep deletes _trt__CreateOSDResponse data members, use only after _trt__CreateOSDResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__CreateOSDResponse::soap_type() returns SOAP_TYPE__trt__CreateOSDResponse or derived type identifier
class _trt__CreateOSDResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created OSD
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSD is a complexType.
///
/// @note class _trt__DeleteOSD operations:
/// - _trt__DeleteOSD* soap_new__trt__DeleteOSD(soap*) allocate and default initialize
/// - _trt__DeleteOSD* soap_new__trt__DeleteOSD(soap*, int num) allocate and default initialize an array
/// - _trt__DeleteOSD* soap_new_req__trt__DeleteOSD(soap*, ...) allocate, set required members
/// - _trt__DeleteOSD* soap_new_set__trt__DeleteOSD(soap*, ...) allocate, set all public members
/// - _trt__DeleteOSD::soap_default(soap*) default initialize members
/// - int soap_read__trt__DeleteOSD(soap*, _trt__DeleteOSD*) deserialize from a stream
/// - int soap_write__trt__DeleteOSD(soap*, _trt__DeleteOSD*) serialize to a stream
/// - _trt__DeleteOSD* _trt__DeleteOSD::soap_dup(soap*) returns deep copy of _trt__DeleteOSD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__DeleteOSD::soap_del() deep deletes _trt__DeleteOSD data members, use only after _trt__DeleteOSD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__DeleteOSD::soap_type() returns SOAP_TYPE__trt__DeleteOSD or derived type identifier
class _trt__DeleteOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the OSD configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse is a complexType.
///
/// @note class _trt__DeleteOSDResponse operations:
/// - _trt__DeleteOSDResponse* soap_new__trt__DeleteOSDResponse(soap*) allocate and default initialize
/// - _trt__DeleteOSDResponse* soap_new__trt__DeleteOSDResponse(soap*, int num) allocate and default initialize an array
/// - _trt__DeleteOSDResponse* soap_new_req__trt__DeleteOSDResponse(soap*, ...) allocate, set required members
/// - _trt__DeleteOSDResponse* soap_new_set__trt__DeleteOSDResponse(soap*, ...) allocate, set all public members
/// - _trt__DeleteOSDResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse*) deserialize from a stream
/// - int soap_write__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse*) serialize to a stream
/// - _trt__DeleteOSDResponse* _trt__DeleteOSDResponse::soap_dup(soap*) returns deep copy of _trt__DeleteOSDResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__DeleteOSDResponse::soap_del() deep deletes _trt__DeleteOSDResponse data members, use only after _trt__DeleteOSDResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__DeleteOSDResponse::soap_type() returns SOAP_TYPE__trt__DeleteOSDResponse or derived type identifier
class _trt__DeleteOSDResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
///
/// @note class tptz__Capabilities operations:
/// - tptz__Capabilities* soap_new_tptz__Capabilities(soap*) allocate and default initialize
/// - tptz__Capabilities* soap_new_tptz__Capabilities(soap*, int num) allocate and default initialize an array
/// - tptz__Capabilities* soap_new_req_tptz__Capabilities(soap*, ...) allocate, set required members
/// - tptz__Capabilities* soap_new_set_tptz__Capabilities(soap*, ...) allocate, set all public members
/// - tptz__Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_tptz__Capabilities(soap*, tptz__Capabilities*) deserialize from a stream
/// - int soap_write_tptz__Capabilities(soap*, tptz__Capabilities*) serialize to a stream
/// - tptz__Capabilities* tptz__Capabilities::soap_dup(soap*) returns deep copy of tptz__Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tptz__Capabilities::soap_del() deep deletes tptz__Capabilities data members, use only after tptz__Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tptz__Capabilities::soap_type() returns SOAP_TYPE_tptz__Capabilities or derived type identifier
class tptz__Capabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not EFlip is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EFlip" of type xs:boolean.
  @ bool*                                EFlip                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not reversing of PT control direction is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Reverse" of type xs:boolean.
  @ bool*                                Reverse                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the GetCompatibleConfigurations command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GetCompatibleConfigurations" of type xs:boolean.
  @ bool*                                GetCompatibleConfigurations    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZStatus includes MoveStatus information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveStatus" of type xs:boolean.
  @ bool*                                MoveStatus                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZStatus includes Position information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StatusPosition" of type xs:boolean.
  @ bool*                                StatusPosition                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of the methods of MoveAndTrack that are supported, acceptable values are defined in tt:MoveAndTrackMethod.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveAndTrack" of type "http://www.onvif.org/ver10/schema":StringList.
  @ tt__StringList                       MoveAndTrack                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
///
/// @note class _tptz__GetServiceCapabilities operations:
/// - _tptz__GetServiceCapabilities* soap_new__tptz__GetServiceCapabilities(soap*) allocate and default initialize
/// - _tptz__GetServiceCapabilities* soap_new__tptz__GetServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - _tptz__GetServiceCapabilities* soap_new_req__tptz__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - _tptz__GetServiceCapabilities* soap_new_set__tptz__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - _tptz__GetServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetServiceCapabilities(soap*, _tptz__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tptz__GetServiceCapabilities(soap*, _tptz__GetServiceCapabilities*) serialize to a stream
/// - _tptz__GetServiceCapabilities* _tptz__GetServiceCapabilities::soap_dup(soap*) returns deep copy of _tptz__GetServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetServiceCapabilities::soap_del() deep deletes _tptz__GetServiceCapabilities data members, use only after _tptz__GetServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetServiceCapabilities::soap_type() returns SOAP_TYPE__tptz__GetServiceCapabilities or derived type identifier
class _tptz__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note class _tptz__GetServiceCapabilitiesResponse operations:
/// - _tptz__GetServiceCapabilitiesResponse* soap_new__tptz__GetServiceCapabilitiesResponse(soap*) allocate and default initialize
/// - _tptz__GetServiceCapabilitiesResponse* soap_new__tptz__GetServiceCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetServiceCapabilitiesResponse* soap_new_req__tptz__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tptz__GetServiceCapabilitiesResponse* soap_new_set__tptz__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetServiceCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetServiceCapabilitiesResponse(soap*, _tptz__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tptz__GetServiceCapabilitiesResponse(soap*, _tptz__GetServiceCapabilitiesResponse*) serialize to a stream
/// - _tptz__GetServiceCapabilitiesResponse* _tptz__GetServiceCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tptz__GetServiceCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetServiceCapabilitiesResponse::soap_del() deep deletes _tptz__GetServiceCapabilitiesResponse data members, use only after _tptz__GetServiceCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetServiceCapabilitiesResponse::soap_type() returns SOAP_TYPE__tptz__GetServiceCapabilitiesResponse or derived type identifier
class _tptz__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the PTZ service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    tptz__Capabilities*                  Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
///
/// @note class _tptz__GetNodes operations:
/// - _tptz__GetNodes* soap_new__tptz__GetNodes(soap*) allocate and default initialize
/// - _tptz__GetNodes* soap_new__tptz__GetNodes(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodes* soap_new_req__tptz__GetNodes(soap*, ...) allocate, set required members
/// - _tptz__GetNodes* soap_new_set__tptz__GetNodes(soap*, ...) allocate, set all public members
/// - _tptz__GetNodes::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodes(soap*, _tptz__GetNodes*) deserialize from a stream
/// - int soap_write__tptz__GetNodes(soap*, _tptz__GetNodes*) serialize to a stream
/// - _tptz__GetNodes* _tptz__GetNodes::soap_dup(soap*) returns deep copy of _tptz__GetNodes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodes::soap_del() deep deletes _tptz__GetNodes data members, use only after _tptz__GetNodes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodes::soap_type() returns SOAP_TYPE__tptz__GetNodes or derived type identifier
class _tptz__GetNodes
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
///
/// @note class _tptz__GetNodesResponse operations:
/// - _tptz__GetNodesResponse* soap_new__tptz__GetNodesResponse(soap*) allocate and default initialize
/// - _tptz__GetNodesResponse* soap_new__tptz__GetNodesResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodesResponse* soap_new_req__tptz__GetNodesResponse(soap*, ...) allocate, set required members
/// - _tptz__GetNodesResponse* soap_new_set__tptz__GetNodesResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetNodesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodesResponse(soap*, _tptz__GetNodesResponse*) deserialize from a stream
/// - int soap_write__tptz__GetNodesResponse(soap*, _tptz__GetNodesResponse*) serialize to a stream
/// - _tptz__GetNodesResponse* _tptz__GetNodesResponse::soap_dup(soap*) returns deep copy of _tptz__GetNodesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodesResponse::soap_del() deep deletes _tptz__GetNodesResponse data members, use only after _tptz__GetNodesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodesResponse::soap_type() returns SOAP_TYPE__tptz__GetNodesResponse or derived type identifier
class _tptz__GetNodesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of the existing PTZ Nodes on the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZNode* is 0..unbounded.
  $ int                                  __sizePTZNode                  0;
/// Pointer to array tt__PTZNode* of size 0..unbounded.
    tt__PTZNode*                        *PTZNode                        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
///
/// @note class _tptz__GetNode operations:
/// - _tptz__GetNode* soap_new__tptz__GetNode(soap*) allocate and default initialize
/// - _tptz__GetNode* soap_new__tptz__GetNode(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNode* soap_new_req__tptz__GetNode(soap*, ...) allocate, set required members
/// - _tptz__GetNode* soap_new_set__tptz__GetNode(soap*, ...) allocate, set all public members
/// - _tptz__GetNode::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNode(soap*, _tptz__GetNode*) deserialize from a stream
/// - int soap_write__tptz__GetNode(soap*, _tptz__GetNode*) serialize to a stream
/// - _tptz__GetNode* _tptz__GetNode::soap_dup(soap*) returns deep copy of _tptz__GetNode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNode::soap_del() deep deletes _tptz__GetNode data members, use only after _tptz__GetNode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNode::soap_type() returns SOAP_TYPE__tptz__GetNode or derived type identifier
class _tptz__GetNode
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
///
/// @note class _tptz__GetNodeResponse operations:
/// - _tptz__GetNodeResponse* soap_new__tptz__GetNodeResponse(soap*) allocate and default initialize
/// - _tptz__GetNodeResponse* soap_new__tptz__GetNodeResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodeResponse* soap_new_req__tptz__GetNodeResponse(soap*, ...) allocate, set required members
/// - _tptz__GetNodeResponse* soap_new_set__tptz__GetNodeResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetNodeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodeResponse(soap*, _tptz__GetNodeResponse*) deserialize from a stream
/// - int soap_write__tptz__GetNodeResponse(soap*, _tptz__GetNodeResponse*) serialize to a stream
/// - _tptz__GetNodeResponse* _tptz__GetNodeResponse::soap_dup(soap*) returns deep copy of _tptz__GetNodeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodeResponse::soap_del() deep deletes _tptz__GetNodeResponse data members, use only after _tptz__GetNodeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodeResponse::soap_type() returns SOAP_TYPE__tptz__GetNodeResponse or derived type identifier
class _tptz__GetNodeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZNode" of type "http://www.onvif.org/ver10/schema":PTZNode.
    tt__PTZNode*                         PTZNode                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
///
/// @note class _tptz__GetConfigurations operations:
/// - _tptz__GetConfigurations* soap_new__tptz__GetConfigurations(soap*) allocate and default initialize
/// - _tptz__GetConfigurations* soap_new__tptz__GetConfigurations(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurations* soap_new_req__tptz__GetConfigurations(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurations* soap_new_set__tptz__GetConfigurations(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurations(soap*, _tptz__GetConfigurations*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurations(soap*, _tptz__GetConfigurations*) serialize to a stream
/// - _tptz__GetConfigurations* _tptz__GetConfigurations::soap_dup(soap*) returns deep copy of _tptz__GetConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurations::soap_del() deep deletes _tptz__GetConfigurations data members, use only after _tptz__GetConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurations::soap_type() returns SOAP_TYPE__tptz__GetConfigurations or derived type identifier
class _tptz__GetConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
///
/// @note class _tptz__GetConfigurationsResponse operations:
/// - _tptz__GetConfigurationsResponse* soap_new__tptz__GetConfigurationsResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationsResponse* soap_new__tptz__GetConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationsResponse* soap_new_req__tptz__GetConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationsResponse* soap_new_set__tptz__GetConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationsResponse(soap*, _tptz__GetConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationsResponse(soap*, _tptz__GetConfigurationsResponse*) serialize to a stream
/// - _tptz__GetConfigurationsResponse* _tptz__GetConfigurationsResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationsResponse::soap_del() deep deletes _tptz__GetConfigurationsResponse data members, use only after _tptz__GetConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationsResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationsResponse or derived type identifier
class _tptz__GetConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZConfiguration* is 0..unbounded.
  $ int                                  __sizePTZConfiguration         0;
/// Pointer to array tt__PTZConfiguration* of size 0..unbounded.
    tt__PTZConfiguration*               *PTZConfiguration               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
///
/// @note class _tptz__GetConfiguration operations:
/// - _tptz__GetConfiguration* soap_new__tptz__GetConfiguration(soap*) allocate and default initialize
/// - _tptz__GetConfiguration* soap_new__tptz__GetConfiguration(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfiguration* soap_new_req__tptz__GetConfiguration(soap*, ...) allocate, set required members
/// - _tptz__GetConfiguration* soap_new_set__tptz__GetConfiguration(soap*, ...) allocate, set all public members
/// - _tptz__GetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfiguration(soap*, _tptz__GetConfiguration*) deserialize from a stream
/// - int soap_write__tptz__GetConfiguration(soap*, _tptz__GetConfiguration*) serialize to a stream
/// - _tptz__GetConfiguration* _tptz__GetConfiguration::soap_dup(soap*) returns deep copy of _tptz__GetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfiguration::soap_del() deep deletes _tptz__GetConfiguration data members, use only after _tptz__GetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfiguration::soap_type() returns SOAP_TYPE__tptz__GetConfiguration or derived type identifier
class _tptz__GetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PTZConfigurationToken          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
///
/// @note class _tptz__GetConfigurationResponse operations:
/// - _tptz__GetConfigurationResponse* soap_new__tptz__GetConfigurationResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationResponse* soap_new__tptz__GetConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationResponse* soap_new_req__tptz__GetConfigurationResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationResponse* soap_new_set__tptz__GetConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationResponse(soap*, _tptz__GetConfigurationResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationResponse(soap*, _tptz__GetConfigurationResponse*) serialize to a stream
/// - _tptz__GetConfigurationResponse* _tptz__GetConfigurationResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationResponse::soap_del() deep deletes _tptz__GetConfigurationResponse data members, use only after _tptz__GetConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationResponse or derived type identifier
class _tptz__GetConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
///
/// @note class _tptz__SetConfiguration operations:
/// - _tptz__SetConfiguration* soap_new__tptz__SetConfiguration(soap*) allocate and default initialize
/// - _tptz__SetConfiguration* soap_new__tptz__SetConfiguration(soap*, int num) allocate and default initialize an array
/// - _tptz__SetConfiguration* soap_new_req__tptz__SetConfiguration(soap*, ...) allocate, set required members
/// - _tptz__SetConfiguration* soap_new_set__tptz__SetConfiguration(soap*, ...) allocate, set all public members
/// - _tptz__SetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetConfiguration(soap*, _tptz__SetConfiguration*) deserialize from a stream
/// - int soap_write__tptz__SetConfiguration(soap*, _tptz__SetConfiguration*) serialize to a stream
/// - _tptz__SetConfiguration* _tptz__SetConfiguration::soap_dup(soap*) returns deep copy of _tptz__SetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetConfiguration::soap_del() deep deletes _tptz__SetConfiguration data members, use only after _tptz__SetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetConfiguration::soap_type() returns SOAP_TYPE__tptz__SetConfiguration or derived type identifier
class _tptz__SetConfiguration
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
///
/// @note class _tptz__SetConfigurationResponse operations:
/// - _tptz__SetConfigurationResponse* soap_new__tptz__SetConfigurationResponse(soap*) allocate and default initialize
/// - _tptz__SetConfigurationResponse* soap_new__tptz__SetConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetConfigurationResponse* soap_new_req__tptz__SetConfigurationResponse(soap*, ...) allocate, set required members
/// - _tptz__SetConfigurationResponse* soap_new_set__tptz__SetConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetConfigurationResponse(soap*, _tptz__SetConfigurationResponse*) deserialize from a stream
/// - int soap_write__tptz__SetConfigurationResponse(soap*, _tptz__SetConfigurationResponse*) serialize to a stream
/// - _tptz__SetConfigurationResponse* _tptz__SetConfigurationResponse::soap_dup(soap*) returns deep copy of _tptz__SetConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetConfigurationResponse::soap_del() deep deletes _tptz__SetConfigurationResponse data members, use only after _tptz__SetConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetConfigurationResponse::soap_type() returns SOAP_TYPE__tptz__SetConfigurationResponse or derived type identifier
class _tptz__SetConfigurationResponse
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    struct __tptz__SetConfigurationResponse_sequence
    {
    }                                   *__SetConfigurationResponse_sequence 0;
//  END OF SEQUENCE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
///
/// @note class _tptz__GetConfigurationOptions operations:
/// - _tptz__GetConfigurationOptions* soap_new__tptz__GetConfigurationOptions(soap*) allocate and default initialize
/// - _tptz__GetConfigurationOptions* soap_new__tptz__GetConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationOptions* soap_new_req__tptz__GetConfigurationOptions(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationOptions* soap_new_set__tptz__GetConfigurationOptions(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationOptions(soap*, _tptz__GetConfigurationOptions*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationOptions(soap*, _tptz__GetConfigurationOptions*) serialize to a stream
/// - _tptz__GetConfigurationOptions* _tptz__GetConfigurationOptions::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationOptions::soap_del() deep deletes _tptz__GetConfigurationOptions data members, use only after _tptz__GetConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationOptions::soap_type() returns SOAP_TYPE__tptz__GetConfigurationOptions or derived type identifier
class _tptz__GetConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
///
/// @note class _tptz__GetConfigurationOptionsResponse operations:
/// - _tptz__GetConfigurationOptionsResponse* soap_new__tptz__GetConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationOptionsResponse* soap_new__tptz__GetConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationOptionsResponse* soap_new_req__tptz__GetConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationOptionsResponse* soap_new_set__tptz__GetConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationOptionsResponse(soap*, _tptz__GetConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationOptionsResponse(soap*, _tptz__GetConfigurationOptionsResponse*) serialize to a stream
/// - _tptz__GetConfigurationOptionsResponse* _tptz__GetConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationOptionsResponse::soap_del() deep deletes _tptz__GetConfigurationOptionsResponse data members, use only after _tptz__GetConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationOptionsResponse or derived type identifier
class _tptz__GetConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested PTZ configuration options.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationOptions" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    tt__PTZConfigurationOptions*         PTZConfigurationOptions        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note class _tptz__SendAuxiliaryCommand operations:
/// - _tptz__SendAuxiliaryCommand* soap_new__tptz__SendAuxiliaryCommand(soap*) allocate and default initialize
/// - _tptz__SendAuxiliaryCommand* soap_new__tptz__SendAuxiliaryCommand(soap*, int num) allocate and default initialize an array
/// - _tptz__SendAuxiliaryCommand* soap_new_req__tptz__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - _tptz__SendAuxiliaryCommand* soap_new_set__tptz__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - _tptz__SendAuxiliaryCommand::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SendAuxiliaryCommand(soap*, _tptz__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tptz__SendAuxiliaryCommand(soap*, _tptz__SendAuxiliaryCommand*) serialize to a stream
/// - _tptz__SendAuxiliaryCommand* _tptz__SendAuxiliaryCommand::soap_dup(soap*) returns deep copy of _tptz__SendAuxiliaryCommand, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SendAuxiliaryCommand::soap_del() deep deletes _tptz__SendAuxiliaryCommand data members, use only after _tptz__SendAuxiliaryCommand::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SendAuxiliaryCommand::soap_type() returns SOAP_TYPE__tptz__SendAuxiliaryCommand or derived type identifier
class _tptz__SendAuxiliaryCommand
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The Auxiliary request data.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryData" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryData                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note class _tptz__SendAuxiliaryCommandResponse operations:
/// - _tptz__SendAuxiliaryCommandResponse* soap_new__tptz__SendAuxiliaryCommandResponse(soap*) allocate and default initialize
/// - _tptz__SendAuxiliaryCommandResponse* soap_new__tptz__SendAuxiliaryCommandResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SendAuxiliaryCommandResponse* soap_new_req__tptz__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - _tptz__SendAuxiliaryCommandResponse* soap_new_set__tptz__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - _tptz__SendAuxiliaryCommandResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SendAuxiliaryCommandResponse(soap*, _tptz__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tptz__SendAuxiliaryCommandResponse(soap*, _tptz__SendAuxiliaryCommandResponse*) serialize to a stream
/// - _tptz__SendAuxiliaryCommandResponse* _tptz__SendAuxiliaryCommandResponse::soap_dup(soap*) returns deep copy of _tptz__SendAuxiliaryCommandResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SendAuxiliaryCommandResponse::soap_del() deep deletes _tptz__SendAuxiliaryCommandResponse data members, use only after _tptz__SendAuxiliaryCommandResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SendAuxiliaryCommandResponse::soap_type() returns SOAP_TYPE__tptz__SendAuxiliaryCommandResponse or derived type identifier
class _tptz__SendAuxiliaryCommandResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The response contains the auxiliary response.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryResponse              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
///
/// @note class _tptz__GetPresets operations:
/// - _tptz__GetPresets* soap_new__tptz__GetPresets(soap*) allocate and default initialize
/// - _tptz__GetPresets* soap_new__tptz__GetPresets(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresets* soap_new_req__tptz__GetPresets(soap*, ...) allocate, set required members
/// - _tptz__GetPresets* soap_new_set__tptz__GetPresets(soap*, ...) allocate, set all public members
/// - _tptz__GetPresets::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresets(soap*, _tptz__GetPresets*) deserialize from a stream
/// - int soap_write__tptz__GetPresets(soap*, _tptz__GetPresets*) serialize to a stream
/// - _tptz__GetPresets* _tptz__GetPresets::soap_dup(soap*) returns deep copy of _tptz__GetPresets, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresets::soap_del() deep deletes _tptz__GetPresets data members, use only after _tptz__GetPresets::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresets::soap_type() returns SOAP_TYPE__tptz__GetPresets or derived type identifier
class _tptz__GetPresets
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
///
/// @note class _tptz__GetPresetsResponse operations:
/// - _tptz__GetPresetsResponse* soap_new__tptz__GetPresetsResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetsResponse* soap_new__tptz__GetPresetsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetsResponse* soap_new_req__tptz__GetPresetsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetsResponse* soap_new_set__tptz__GetPresetsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetsResponse(soap*, _tptz__GetPresetsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetsResponse(soap*, _tptz__GetPresetsResponse*) serialize to a stream
/// - _tptz__GetPresetsResponse* _tptz__GetPresetsResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetsResponse::soap_del() deep deletes _tptz__GetPresetsResponse data members, use only after _tptz__GetPresetsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetsResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetsResponse or derived type identifier
class _tptz__GetPresetsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of presets which are available for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZPreset* is 0..unbounded.
  $ int                                  __sizePreset                   0;
/// Pointer to array tt__PTZPreset* of size 0..unbounded.
    tt__PTZPreset*                      *Preset                         0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
///
/// @note class _tptz__SetPreset operations:
/// - _tptz__SetPreset* soap_new__tptz__SetPreset(soap*) allocate and default initialize
/// - _tptz__SetPreset* soap_new__tptz__SetPreset(soap*, int num) allocate and default initialize an array
/// - _tptz__SetPreset* soap_new_req__tptz__SetPreset(soap*, ...) allocate, set required members
/// - _tptz__SetPreset* soap_new_set__tptz__SetPreset(soap*, ...) allocate, set all public members
/// - _tptz__SetPreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetPreset(soap*, _tptz__SetPreset*) deserialize from a stream
/// - int soap_write__tptz__SetPreset(soap*, _tptz__SetPreset*) serialize to a stream
/// - _tptz__SetPreset* _tptz__SetPreset::soap_dup(soap*) returns deep copy of _tptz__SetPreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetPreset::soap_del() deep deletes _tptz__SetPreset data members, use only after _tptz__SetPreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetPreset::soap_type() returns SOAP_TYPE__tptz__SetPreset or derived type identifier
class _tptz__SetPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset name.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetName" of type xs:string.
    char*                                PresetName                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
///
/// @note class _tptz__SetPresetResponse operations:
/// - _tptz__SetPresetResponse* soap_new__tptz__SetPresetResponse(soap*) allocate and default initialize
/// - _tptz__SetPresetResponse* soap_new__tptz__SetPresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetPresetResponse* soap_new_req__tptz__SetPresetResponse(soap*, ...) allocate, set required members
/// - _tptz__SetPresetResponse* soap_new_set__tptz__SetPresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetPresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetPresetResponse(soap*, _tptz__SetPresetResponse*) deserialize from a stream
/// - int soap_write__tptz__SetPresetResponse(soap*, _tptz__SetPresetResponse*) serialize to a stream
/// - _tptz__SetPresetResponse* _tptz__SetPresetResponse::soap_dup(soap*) returns deep copy of _tptz__SetPresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetPresetResponse::soap_del() deep deletes _tptz__SetPresetResponse data members, use only after _tptz__SetPresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetPresetResponse::soap_type() returns SOAP_TYPE__tptz__SetPresetResponse or derived type identifier
class _tptz__SetPresetResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A token to the Preset which has been set.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
///
/// @note class _tptz__RemovePreset operations:
/// - _tptz__RemovePreset* soap_new__tptz__RemovePreset(soap*) allocate and default initialize
/// - _tptz__RemovePreset* soap_new__tptz__RemovePreset(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePreset* soap_new_req__tptz__RemovePreset(soap*, ...) allocate, set required members
/// - _tptz__RemovePreset* soap_new_set__tptz__RemovePreset(soap*, ...) allocate, set all public members
/// - _tptz__RemovePreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePreset(soap*, _tptz__RemovePreset*) deserialize from a stream
/// - int soap_write__tptz__RemovePreset(soap*, _tptz__RemovePreset*) serialize to a stream
/// - _tptz__RemovePreset* _tptz__RemovePreset::soap_dup(soap*) returns deep copy of _tptz__RemovePreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePreset::soap_del() deep deletes _tptz__RemovePreset data members, use only after _tptz__RemovePreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePreset::soap_type() returns SOAP_TYPE__tptz__RemovePreset or derived type identifier
class _tptz__RemovePreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
///
/// @note class _tptz__RemovePresetResponse operations:
/// - _tptz__RemovePresetResponse* soap_new__tptz__RemovePresetResponse(soap*) allocate and default initialize
/// - _tptz__RemovePresetResponse* soap_new__tptz__RemovePresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetResponse* soap_new_req__tptz__RemovePresetResponse(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetResponse* soap_new_set__tptz__RemovePresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetResponse(soap*, _tptz__RemovePresetResponse*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetResponse(soap*, _tptz__RemovePresetResponse*) serialize to a stream
/// - _tptz__RemovePresetResponse* _tptz__RemovePresetResponse::soap_dup(soap*) returns deep copy of _tptz__RemovePresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetResponse::soap_del() deep deletes _tptz__RemovePresetResponse data members, use only after _tptz__RemovePresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetResponse::soap_type() returns SOAP_TYPE__tptz__RemovePresetResponse or derived type identifier
class _tptz__RemovePresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
///
/// @note class _tptz__GotoPreset operations:
/// - _tptz__GotoPreset* soap_new__tptz__GotoPreset(soap*) allocate and default initialize
/// - _tptz__GotoPreset* soap_new__tptz__GotoPreset(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoPreset* soap_new_req__tptz__GotoPreset(soap*, ...) allocate, set required members
/// - _tptz__GotoPreset* soap_new_set__tptz__GotoPreset(soap*, ...) allocate, set all public members
/// - _tptz__GotoPreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoPreset(soap*, _tptz__GotoPreset*) deserialize from a stream
/// - int soap_write__tptz__GotoPreset(soap*, _tptz__GotoPreset*) serialize to a stream
/// - _tptz__GotoPreset* _tptz__GotoPreset::soap_dup(soap*) returns deep copy of _tptz__GotoPreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoPreset::soap_del() deep deletes _tptz__GotoPreset data members, use only after _tptz__GotoPreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoPreset::soap_type() returns SOAP_TYPE__tptz__GotoPreset or derived type identifier
class _tptz__GotoPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
///
/// @note class _tptz__GotoPresetResponse operations:
/// - _tptz__GotoPresetResponse* soap_new__tptz__GotoPresetResponse(soap*) allocate and default initialize
/// - _tptz__GotoPresetResponse* soap_new__tptz__GotoPresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoPresetResponse* soap_new_req__tptz__GotoPresetResponse(soap*, ...) allocate, set required members
/// - _tptz__GotoPresetResponse* soap_new_set__tptz__GotoPresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__GotoPresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoPresetResponse(soap*, _tptz__GotoPresetResponse*) deserialize from a stream
/// - int soap_write__tptz__GotoPresetResponse(soap*, _tptz__GotoPresetResponse*) serialize to a stream
/// - _tptz__GotoPresetResponse* _tptz__GotoPresetResponse::soap_dup(soap*) returns deep copy of _tptz__GotoPresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoPresetResponse::soap_del() deep deletes _tptz__GotoPresetResponse data members, use only after _tptz__GotoPresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoPresetResponse::soap_type() returns SOAP_TYPE__tptz__GotoPresetResponse or derived type identifier
class _tptz__GotoPresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
///
/// @note class _tptz__GetStatus operations:
/// - _tptz__GetStatus* soap_new__tptz__GetStatus(soap*) allocate and default initialize
/// - _tptz__GetStatus* soap_new__tptz__GetStatus(soap*, int num) allocate and default initialize an array
/// - _tptz__GetStatus* soap_new_req__tptz__GetStatus(soap*, ...) allocate, set required members
/// - _tptz__GetStatus* soap_new_set__tptz__GetStatus(soap*, ...) allocate, set all public members
/// - _tptz__GetStatus::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetStatus(soap*, _tptz__GetStatus*) deserialize from a stream
/// - int soap_write__tptz__GetStatus(soap*, _tptz__GetStatus*) serialize to a stream
/// - _tptz__GetStatus* _tptz__GetStatus::soap_dup(soap*) returns deep copy of _tptz__GetStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetStatus::soap_del() deep deletes _tptz__GetStatus data members, use only after _tptz__GetStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetStatus::soap_type() returns SOAP_TYPE__tptz__GetStatus or derived type identifier
class _tptz__GetStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the PTZStatus should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
///
/// @note class _tptz__GetStatusResponse operations:
/// - _tptz__GetStatusResponse* soap_new__tptz__GetStatusResponse(soap*) allocate and default initialize
/// - _tptz__GetStatusResponse* soap_new__tptz__GetStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetStatusResponse* soap_new_req__tptz__GetStatusResponse(soap*, ...) allocate, set required members
/// - _tptz__GetStatusResponse* soap_new_set__tptz__GetStatusResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetStatusResponse(soap*, _tptz__GetStatusResponse*) deserialize from a stream
/// - int soap_write__tptz__GetStatusResponse(soap*, _tptz__GetStatusResponse*) serialize to a stream
/// - _tptz__GetStatusResponse* _tptz__GetStatusResponse::soap_dup(soap*) returns deep copy of _tptz__GetStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetStatusResponse::soap_del() deep deletes _tptz__GetStatusResponse data members, use only after _tptz__GetStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetStatusResponse::soap_type() returns SOAP_TYPE__tptz__GetStatusResponse or derived type identifier
class _tptz__GetStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The PTZStatus for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
///
/// @note class _tptz__GotoHomePosition operations:
/// - _tptz__GotoHomePosition* soap_new__tptz__GotoHomePosition(soap*) allocate and default initialize
/// - _tptz__GotoHomePosition* soap_new__tptz__GotoHomePosition(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoHomePosition* soap_new_req__tptz__GotoHomePosition(soap*, ...) allocate, set required members
/// - _tptz__GotoHomePosition* soap_new_set__tptz__GotoHomePosition(soap*, ...) allocate, set all public members
/// - _tptz__GotoHomePosition::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoHomePosition(soap*, _tptz__GotoHomePosition*) deserialize from a stream
/// - int soap_write__tptz__GotoHomePosition(soap*, _tptz__GotoHomePosition*) serialize to a stream
/// - _tptz__GotoHomePosition* _tptz__GotoHomePosition::soap_dup(soap*) returns deep copy of _tptz__GotoHomePosition, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoHomePosition::soap_del() deep deletes _tptz__GotoHomePosition data members, use only after _tptz__GotoHomePosition::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoHomePosition::soap_type() returns SOAP_TYPE__tptz__GotoHomePosition or derived type identifier
class _tptz__GotoHomePosition
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
///
/// @note class _tptz__GotoHomePositionResponse operations:
/// - _tptz__GotoHomePositionResponse* soap_new__tptz__GotoHomePositionResponse(soap*) allocate and default initialize
/// - _tptz__GotoHomePositionResponse* soap_new__tptz__GotoHomePositionResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoHomePositionResponse* soap_new_req__tptz__GotoHomePositionResponse(soap*, ...) allocate, set required members
/// - _tptz__GotoHomePositionResponse* soap_new_set__tptz__GotoHomePositionResponse(soap*, ...) allocate, set all public members
/// - _tptz__GotoHomePositionResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoHomePositionResponse(soap*, _tptz__GotoHomePositionResponse*) deserialize from a stream
/// - int soap_write__tptz__GotoHomePositionResponse(soap*, _tptz__GotoHomePositionResponse*) serialize to a stream
/// - _tptz__GotoHomePositionResponse* _tptz__GotoHomePositionResponse::soap_dup(soap*) returns deep copy of _tptz__GotoHomePositionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoHomePositionResponse::soap_del() deep deletes _tptz__GotoHomePositionResponse data members, use only after _tptz__GotoHomePositionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoHomePositionResponse::soap_type() returns SOAP_TYPE__tptz__GotoHomePositionResponse or derived type identifier
class _tptz__GotoHomePositionResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
///
/// @note class _tptz__SetHomePosition operations:
/// - _tptz__SetHomePosition* soap_new__tptz__SetHomePosition(soap*) allocate and default initialize
/// - _tptz__SetHomePosition* soap_new__tptz__SetHomePosition(soap*, int num) allocate and default initialize an array
/// - _tptz__SetHomePosition* soap_new_req__tptz__SetHomePosition(soap*, ...) allocate, set required members
/// - _tptz__SetHomePosition* soap_new_set__tptz__SetHomePosition(soap*, ...) allocate, set all public members
/// - _tptz__SetHomePosition::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetHomePosition(soap*, _tptz__SetHomePosition*) deserialize from a stream
/// - int soap_write__tptz__SetHomePosition(soap*, _tptz__SetHomePosition*) serialize to a stream
/// - _tptz__SetHomePosition* _tptz__SetHomePosition::soap_dup(soap*) returns deep copy of _tptz__SetHomePosition, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetHomePosition::soap_del() deep deletes _tptz__SetHomePosition data members, use only after _tptz__SetHomePosition::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetHomePosition::soap_type() returns SOAP_TYPE__tptz__SetHomePosition or derived type identifier
class _tptz__SetHomePosition
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the home position should be set.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
///
/// @note class _tptz__SetHomePositionResponse operations:
/// - _tptz__SetHomePositionResponse* soap_new__tptz__SetHomePositionResponse(soap*) allocate and default initialize
/// - _tptz__SetHomePositionResponse* soap_new__tptz__SetHomePositionResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetHomePositionResponse* soap_new_req__tptz__SetHomePositionResponse(soap*, ...) allocate, set required members
/// - _tptz__SetHomePositionResponse* soap_new_set__tptz__SetHomePositionResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetHomePositionResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetHomePositionResponse(soap*, _tptz__SetHomePositionResponse*) deserialize from a stream
/// - int soap_write__tptz__SetHomePositionResponse(soap*, _tptz__SetHomePositionResponse*) serialize to a stream
/// - _tptz__SetHomePositionResponse* _tptz__SetHomePositionResponse::soap_dup(soap*) returns deep copy of _tptz__SetHomePositionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetHomePositionResponse::soap_del() deep deletes _tptz__SetHomePositionResponse data members, use only after _tptz__SetHomePositionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetHomePositionResponse::soap_type() returns SOAP_TYPE__tptz__SetHomePositionResponse or derived type identifier
class _tptz__SetHomePositionResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
///
/// @note class _tptz__ContinuousMove operations:
/// - _tptz__ContinuousMove* soap_new__tptz__ContinuousMove(soap*) allocate and default initialize
/// - _tptz__ContinuousMove* soap_new__tptz__ContinuousMove(soap*, int num) allocate and default initialize an array
/// - _tptz__ContinuousMove* soap_new_req__tptz__ContinuousMove(soap*, ...) allocate, set required members
/// - _tptz__ContinuousMove* soap_new_set__tptz__ContinuousMove(soap*, ...) allocate, set all public members
/// - _tptz__ContinuousMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ContinuousMove(soap*, _tptz__ContinuousMove*) deserialize from a stream
/// - int soap_write__tptz__ContinuousMove(soap*, _tptz__ContinuousMove*) serialize to a stream
/// - _tptz__ContinuousMove* _tptz__ContinuousMove::soap_dup(soap*) returns deep copy of _tptz__ContinuousMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ContinuousMove::soap_del() deep deletes _tptz__ContinuousMove data members, use only after _tptz__ContinuousMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ContinuousMove::soap_type() returns SOAP_TYPE__tptz__ContinuousMove or derived type identifier
class _tptz__ContinuousMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Velocity vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
///
/// Element "Velocity" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Velocity                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Timeout parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
///
/// @note class _tptz__ContinuousMoveResponse operations:
/// - _tptz__ContinuousMoveResponse* soap_new__tptz__ContinuousMoveResponse(soap*) allocate and default initialize
/// - _tptz__ContinuousMoveResponse* soap_new__tptz__ContinuousMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__ContinuousMoveResponse* soap_new_req__tptz__ContinuousMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__ContinuousMoveResponse* soap_new_set__tptz__ContinuousMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__ContinuousMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ContinuousMoveResponse(soap*, _tptz__ContinuousMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__ContinuousMoveResponse(soap*, _tptz__ContinuousMoveResponse*) serialize to a stream
/// - _tptz__ContinuousMoveResponse* _tptz__ContinuousMoveResponse::soap_dup(soap*) returns deep copy of _tptz__ContinuousMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ContinuousMoveResponse::soap_del() deep deletes _tptz__ContinuousMoveResponse data members, use only after _tptz__ContinuousMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ContinuousMoveResponse::soap_type() returns SOAP_TYPE__tptz__ContinuousMoveResponse or derived type identifier
class _tptz__ContinuousMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
///
/// @note class _tptz__RelativeMove operations:
/// - _tptz__RelativeMove* soap_new__tptz__RelativeMove(soap*) allocate and default initialize
/// - _tptz__RelativeMove* soap_new__tptz__RelativeMove(soap*, int num) allocate and default initialize an array
/// - _tptz__RelativeMove* soap_new_req__tptz__RelativeMove(soap*, ...) allocate, set required members
/// - _tptz__RelativeMove* soap_new_set__tptz__RelativeMove(soap*, ...) allocate, set all public members
/// - _tptz__RelativeMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RelativeMove(soap*, _tptz__RelativeMove*) deserialize from a stream
/// - int soap_write__tptz__RelativeMove(soap*, _tptz__RelativeMove*) serialize to a stream
/// - _tptz__RelativeMove* _tptz__RelativeMove::soap_dup(soap*) returns deep copy of _tptz__RelativeMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RelativeMove::soap_del() deep deletes _tptz__RelativeMove data members, use only after _tptz__RelativeMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RelativeMove::soap_type() returns SOAP_TYPE__tptz__RelativeMove or derived type identifier
class _tptz__RelativeMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A positional Translation relative to the current position
/// </BLOCKQUOTE></PRE>
///
/// Element "Translation" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Translation                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
///
/// @note class _tptz__RelativeMoveResponse operations:
/// - _tptz__RelativeMoveResponse* soap_new__tptz__RelativeMoveResponse(soap*) allocate and default initialize
/// - _tptz__RelativeMoveResponse* soap_new__tptz__RelativeMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RelativeMoveResponse* soap_new_req__tptz__RelativeMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__RelativeMoveResponse* soap_new_set__tptz__RelativeMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__RelativeMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RelativeMoveResponse(soap*, _tptz__RelativeMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__RelativeMoveResponse(soap*, _tptz__RelativeMoveResponse*) serialize to a stream
/// - _tptz__RelativeMoveResponse* _tptz__RelativeMoveResponse::soap_dup(soap*) returns deep copy of _tptz__RelativeMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RelativeMoveResponse::soap_del() deep deletes _tptz__RelativeMoveResponse data members, use only after _tptz__RelativeMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RelativeMoveResponse::soap_type() returns SOAP_TYPE__tptz__RelativeMoveResponse or derived type identifier
class _tptz__RelativeMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
///
/// @note class _tptz__AbsoluteMove operations:
/// - _tptz__AbsoluteMove* soap_new__tptz__AbsoluteMove(soap*) allocate and default initialize
/// - _tptz__AbsoluteMove* soap_new__tptz__AbsoluteMove(soap*, int num) allocate and default initialize an array
/// - _tptz__AbsoluteMove* soap_new_req__tptz__AbsoluteMove(soap*, ...) allocate, set required members
/// - _tptz__AbsoluteMove* soap_new_set__tptz__AbsoluteMove(soap*, ...) allocate, set all public members
/// - _tptz__AbsoluteMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__AbsoluteMove(soap*, _tptz__AbsoluteMove*) deserialize from a stream
/// - int soap_write__tptz__AbsoluteMove(soap*, _tptz__AbsoluteMove*) serialize to a stream
/// - _tptz__AbsoluteMove* _tptz__AbsoluteMove::soap_dup(soap*) returns deep copy of _tptz__AbsoluteMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__AbsoluteMove::soap_del() deep deletes _tptz__AbsoluteMove data members, use only after _tptz__AbsoluteMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__AbsoluteMove::soap_type() returns SOAP_TYPE__tptz__AbsoluteMove or derived type identifier
class _tptz__AbsoluteMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
///
/// @note class _tptz__AbsoluteMoveResponse operations:
/// - _tptz__AbsoluteMoveResponse* soap_new__tptz__AbsoluteMoveResponse(soap*) allocate and default initialize
/// - _tptz__AbsoluteMoveResponse* soap_new__tptz__AbsoluteMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__AbsoluteMoveResponse* soap_new_req__tptz__AbsoluteMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__AbsoluteMoveResponse* soap_new_set__tptz__AbsoluteMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__AbsoluteMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__AbsoluteMoveResponse(soap*, _tptz__AbsoluteMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__AbsoluteMoveResponse(soap*, _tptz__AbsoluteMoveResponse*) serialize to a stream
/// - _tptz__AbsoluteMoveResponse* _tptz__AbsoluteMoveResponse::soap_dup(soap*) returns deep copy of _tptz__AbsoluteMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__AbsoluteMoveResponse::soap_del() deep deletes _tptz__AbsoluteMoveResponse data members, use only after _tptz__AbsoluteMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__AbsoluteMoveResponse::soap_type() returns SOAP_TYPE__tptz__AbsoluteMoveResponse or derived type identifier
class _tptz__AbsoluteMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GeoMove is a complexType.
///
/// @note class _tptz__GeoMove operations:
/// - _tptz__GeoMove* soap_new__tptz__GeoMove(soap*) allocate and default initialize
/// - _tptz__GeoMove* soap_new__tptz__GeoMove(soap*, int num) allocate and default initialize an array
/// - _tptz__GeoMove* soap_new_req__tptz__GeoMove(soap*, ...) allocate, set required members
/// - _tptz__GeoMove* soap_new_set__tptz__GeoMove(soap*, ...) allocate, set all public members
/// - _tptz__GeoMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GeoMove(soap*, _tptz__GeoMove*) deserialize from a stream
/// - int soap_write__tptz__GeoMove(soap*, _tptz__GeoMove*) serialize to a stream
/// - _tptz__GeoMove* _tptz__GeoMove::soap_dup(soap*) returns deep copy of _tptz__GeoMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GeoMove::soap_del() deep deletes _tptz__GeoMove data members, use only after _tptz__GeoMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GeoMove::soap_type() returns SOAP_TYPE__tptz__GeoMove or derived type identifier
class _tptz__GeoMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The geolocation of the target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Target" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     Target                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional indication of the height of the target/area.
/// </BLOCKQUOTE></PRE>
///
/// Element "AreaHeight" of type xs:float.
    float*                               AreaHeight                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional indication of the width of the target/area.
/// </BLOCKQUOTE></PRE>
///
/// Element "AreaWidth" of type xs:float.
    float*                               AreaWidth                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse is a complexType.
///
/// @note class _tptz__GeoMoveResponse operations:
/// - _tptz__GeoMoveResponse* soap_new__tptz__GeoMoveResponse(soap*) allocate and default initialize
/// - _tptz__GeoMoveResponse* soap_new__tptz__GeoMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GeoMoveResponse* soap_new_req__tptz__GeoMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__GeoMoveResponse* soap_new_set__tptz__GeoMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__GeoMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GeoMoveResponse(soap*, _tptz__GeoMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__GeoMoveResponse(soap*, _tptz__GeoMoveResponse*) serialize to a stream
/// - _tptz__GeoMoveResponse* _tptz__GeoMoveResponse::soap_dup(soap*) returns deep copy of _tptz__GeoMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GeoMoveResponse::soap_del() deep deletes _tptz__GeoMoveResponse data members, use only after _tptz__GeoMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GeoMoveResponse::soap_type() returns SOAP_TYPE__tptz__GeoMoveResponse or derived type identifier
class _tptz__GeoMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
///
/// @note class _tptz__Stop operations:
/// - _tptz__Stop* soap_new__tptz__Stop(soap*) allocate and default initialize
/// - _tptz__Stop* soap_new__tptz__Stop(soap*, int num) allocate and default initialize an array
/// - _tptz__Stop* soap_new_req__tptz__Stop(soap*, ...) allocate, set required members
/// - _tptz__Stop* soap_new_set__tptz__Stop(soap*, ...) allocate, set all public members
/// - _tptz__Stop::soap_default(soap*) default initialize members
/// - int soap_read__tptz__Stop(soap*, _tptz__Stop*) deserialize from a stream
/// - int soap_write__tptz__Stop(soap*, _tptz__Stop*) serialize to a stream
/// - _tptz__Stop* _tptz__Stop::soap_dup(soap*) returns deep copy of _tptz__Stop, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__Stop::soap_del() deep deletes _tptz__Stop data members, use only after _tptz__Stop::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__Stop::soap_type() returns SOAP_TYPE__tptz__Stop or derived type identifier
class _tptz__Stop
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile that indicate what should be stopped.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type xs:boolean.
    bool*                                PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type xs:boolean.
    bool*                                Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
///
/// @note class _tptz__StopResponse operations:
/// - _tptz__StopResponse* soap_new__tptz__StopResponse(soap*) allocate and default initialize
/// - _tptz__StopResponse* soap_new__tptz__StopResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__StopResponse* soap_new_req__tptz__StopResponse(soap*, ...) allocate, set required members
/// - _tptz__StopResponse* soap_new_set__tptz__StopResponse(soap*, ...) allocate, set all public members
/// - _tptz__StopResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__StopResponse(soap*, _tptz__StopResponse*) deserialize from a stream
/// - int soap_write__tptz__StopResponse(soap*, _tptz__StopResponse*) serialize to a stream
/// - _tptz__StopResponse* _tptz__StopResponse::soap_dup(soap*) returns deep copy of _tptz__StopResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__StopResponse::soap_del() deep deletes _tptz__StopResponse data members, use only after _tptz__StopResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__StopResponse::soap_type() returns SOAP_TYPE__tptz__StopResponse or derived type identifier
class _tptz__StopResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
///
/// @note class _tptz__GetPresetTours operations:
/// - _tptz__GetPresetTours* soap_new__tptz__GetPresetTours(soap*) allocate and default initialize
/// - _tptz__GetPresetTours* soap_new__tptz__GetPresetTours(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTours* soap_new_req__tptz__GetPresetTours(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTours* soap_new_set__tptz__GetPresetTours(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTours::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTours(soap*, _tptz__GetPresetTours*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTours(soap*, _tptz__GetPresetTours*) serialize to a stream
/// - _tptz__GetPresetTours* _tptz__GetPresetTours::soap_dup(soap*) returns deep copy of _tptz__GetPresetTours, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTours::soap_del() deep deletes _tptz__GetPresetTours data members, use only after _tptz__GetPresetTours::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTours::soap_type() returns SOAP_TYPE__tptz__GetPresetTours or derived type identifier
class _tptz__GetPresetTours
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
///
/// @note class _tptz__GetPresetToursResponse operations:
/// - _tptz__GetPresetToursResponse* soap_new__tptz__GetPresetToursResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetToursResponse* soap_new__tptz__GetPresetToursResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetToursResponse* soap_new_req__tptz__GetPresetToursResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetToursResponse* soap_new_set__tptz__GetPresetToursResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetToursResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetToursResponse(soap*, _tptz__GetPresetToursResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetToursResponse(soap*, _tptz__GetPresetToursResponse*) serialize to a stream
/// - _tptz__GetPresetToursResponse* _tptz__GetPresetToursResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetToursResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetToursResponse::soap_del() deep deletes _tptz__GetPresetToursResponse data members, use only after _tptz__GetPresetToursResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetToursResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetToursResponse or derived type identifier
class _tptz__GetPresetToursResponse
{ public:
/// Size of array of tt__PresetTour* is 0..unbounded.
  $ int                                  __sizePresetTour               0;
/// Pointer to array tt__PresetTour* of size 0..unbounded.
    tt__PresetTour*                     *PresetTour                     0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
///
/// @note class _tptz__GetPresetTour operations:
/// - _tptz__GetPresetTour* soap_new__tptz__GetPresetTour(soap*) allocate and default initialize
/// - _tptz__GetPresetTour* soap_new__tptz__GetPresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTour* soap_new_req__tptz__GetPresetTour(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTour* soap_new_set__tptz__GetPresetTour(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTour(soap*, _tptz__GetPresetTour*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTour(soap*, _tptz__GetPresetTour*) serialize to a stream
/// - _tptz__GetPresetTour* _tptz__GetPresetTour::soap_dup(soap*) returns deep copy of _tptz__GetPresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTour::soap_del() deep deletes _tptz__GetPresetTour data members, use only after _tptz__GetPresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTour::soap_type() returns SOAP_TYPE__tptz__GetPresetTour or derived type identifier
class _tptz__GetPresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
///
/// @note class _tptz__GetPresetTourResponse operations:
/// - _tptz__GetPresetTourResponse* soap_new__tptz__GetPresetTourResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetTourResponse* soap_new__tptz__GetPresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourResponse* soap_new_req__tptz__GetPresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourResponse* soap_new_set__tptz__GetPresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourResponse(soap*, _tptz__GetPresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourResponse(soap*, _tptz__GetPresetTourResponse*) serialize to a stream
/// - _tptz__GetPresetTourResponse* _tptz__GetPresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourResponse::soap_del() deep deletes _tptz__GetPresetTourResponse data members, use only after _tptz__GetPresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetTourResponse or derived type identifier
class _tptz__GetPresetTourResponse
{ public:
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
///
/// @note class _tptz__GetPresetTourOptions operations:
/// - _tptz__GetPresetTourOptions* soap_new__tptz__GetPresetTourOptions(soap*) allocate and default initialize
/// - _tptz__GetPresetTourOptions* soap_new__tptz__GetPresetTourOptions(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourOptions* soap_new_req__tptz__GetPresetTourOptions(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourOptions* soap_new_set__tptz__GetPresetTourOptions(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourOptions::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourOptions(soap*, _tptz__GetPresetTourOptions*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourOptions(soap*, _tptz__GetPresetTourOptions*) serialize to a stream
/// - _tptz__GetPresetTourOptions* _tptz__GetPresetTourOptions::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourOptions::soap_del() deep deletes _tptz__GetPresetTourOptions data members, use only after _tptz__GetPresetTourOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourOptions::soap_type() returns SOAP_TYPE__tptz__GetPresetTourOptions or derived type identifier
class _tptz__GetPresetTourOptions
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
///
/// @note class _tptz__GetPresetTourOptionsResponse operations:
/// - _tptz__GetPresetTourOptionsResponse* soap_new__tptz__GetPresetTourOptionsResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetTourOptionsResponse* soap_new__tptz__GetPresetTourOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourOptionsResponse* soap_new_req__tptz__GetPresetTourOptionsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourOptionsResponse* soap_new_set__tptz__GetPresetTourOptionsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourOptionsResponse(soap*, _tptz__GetPresetTourOptionsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourOptionsResponse(soap*, _tptz__GetPresetTourOptionsResponse*) serialize to a stream
/// - _tptz__GetPresetTourOptionsResponse* _tptz__GetPresetTourOptionsResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourOptionsResponse::soap_del() deep deletes _tptz__GetPresetTourOptionsResponse data members, use only after _tptz__GetPresetTourOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourOptionsResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetTourOptionsResponse or derived type identifier
class _tptz__GetPresetTourOptionsResponse
{ public:
/// Element "Options" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    tt__PTZPresetTourOptions*            Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
///
/// @note class _tptz__CreatePresetTour operations:
/// - _tptz__CreatePresetTour* soap_new__tptz__CreatePresetTour(soap*) allocate and default initialize
/// - _tptz__CreatePresetTour* soap_new__tptz__CreatePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__CreatePresetTour* soap_new_req__tptz__CreatePresetTour(soap*, ...) allocate, set required members
/// - _tptz__CreatePresetTour* soap_new_set__tptz__CreatePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__CreatePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__CreatePresetTour(soap*, _tptz__CreatePresetTour*) deserialize from a stream
/// - int soap_write__tptz__CreatePresetTour(soap*, _tptz__CreatePresetTour*) serialize to a stream
/// - _tptz__CreatePresetTour* _tptz__CreatePresetTour::soap_dup(soap*) returns deep copy of _tptz__CreatePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__CreatePresetTour::soap_del() deep deletes _tptz__CreatePresetTour data members, use only after _tptz__CreatePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__CreatePresetTour::soap_type() returns SOAP_TYPE__tptz__CreatePresetTour or derived type identifier
class _tptz__CreatePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
///
/// @note class _tptz__CreatePresetTourResponse operations:
/// - _tptz__CreatePresetTourResponse* soap_new__tptz__CreatePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__CreatePresetTourResponse* soap_new__tptz__CreatePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__CreatePresetTourResponse* soap_new_req__tptz__CreatePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__CreatePresetTourResponse* soap_new_set__tptz__CreatePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__CreatePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__CreatePresetTourResponse(soap*, _tptz__CreatePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__CreatePresetTourResponse(soap*, _tptz__CreatePresetTourResponse*) serialize to a stream
/// - _tptz__CreatePresetTourResponse* _tptz__CreatePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__CreatePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__CreatePresetTourResponse::soap_del() deep deletes _tptz__CreatePresetTourResponse data members, use only after _tptz__CreatePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__CreatePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__CreatePresetTourResponse or derived type identifier
class _tptz__CreatePresetTourResponse
{ public:
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
///
/// @note class _tptz__ModifyPresetTour operations:
/// - _tptz__ModifyPresetTour* soap_new__tptz__ModifyPresetTour(soap*) allocate and default initialize
/// - _tptz__ModifyPresetTour* soap_new__tptz__ModifyPresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__ModifyPresetTour* soap_new_req__tptz__ModifyPresetTour(soap*, ...) allocate, set required members
/// - _tptz__ModifyPresetTour* soap_new_set__tptz__ModifyPresetTour(soap*, ...) allocate, set all public members
/// - _tptz__ModifyPresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ModifyPresetTour(soap*, _tptz__ModifyPresetTour*) deserialize from a stream
/// - int soap_write__tptz__ModifyPresetTour(soap*, _tptz__ModifyPresetTour*) serialize to a stream
/// - _tptz__ModifyPresetTour* _tptz__ModifyPresetTour::soap_dup(soap*) returns deep copy of _tptz__ModifyPresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ModifyPresetTour::soap_del() deep deletes _tptz__ModifyPresetTour data members, use only after _tptz__ModifyPresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ModifyPresetTour::soap_type() returns SOAP_TYPE__tptz__ModifyPresetTour or derived type identifier
class _tptz__ModifyPresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
///
/// @note class _tptz__ModifyPresetTourResponse operations:
/// - _tptz__ModifyPresetTourResponse* soap_new__tptz__ModifyPresetTourResponse(soap*) allocate and default initialize
/// - _tptz__ModifyPresetTourResponse* soap_new__tptz__ModifyPresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__ModifyPresetTourResponse* soap_new_req__tptz__ModifyPresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__ModifyPresetTourResponse* soap_new_set__tptz__ModifyPresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__ModifyPresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ModifyPresetTourResponse(soap*, _tptz__ModifyPresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__ModifyPresetTourResponse(soap*, _tptz__ModifyPresetTourResponse*) serialize to a stream
/// - _tptz__ModifyPresetTourResponse* _tptz__ModifyPresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__ModifyPresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ModifyPresetTourResponse::soap_del() deep deletes _tptz__ModifyPresetTourResponse data members, use only after _tptz__ModifyPresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ModifyPresetTourResponse::soap_type() returns SOAP_TYPE__tptz__ModifyPresetTourResponse or derived type identifier
class _tptz__ModifyPresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
///
/// @note class _tptz__OperatePresetTour operations:
/// - _tptz__OperatePresetTour* soap_new__tptz__OperatePresetTour(soap*) allocate and default initialize
/// - _tptz__OperatePresetTour* soap_new__tptz__OperatePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__OperatePresetTour* soap_new_req__tptz__OperatePresetTour(soap*, ...) allocate, set required members
/// - _tptz__OperatePresetTour* soap_new_set__tptz__OperatePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__OperatePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__OperatePresetTour(soap*, _tptz__OperatePresetTour*) deserialize from a stream
/// - int soap_write__tptz__OperatePresetTour(soap*, _tptz__OperatePresetTour*) serialize to a stream
/// - _tptz__OperatePresetTour* _tptz__OperatePresetTour::soap_dup(soap*) returns deep copy of _tptz__OperatePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__OperatePresetTour::soap_del() deep deletes _tptz__OperatePresetTour data members, use only after _tptz__OperatePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__OperatePresetTour::soap_type() returns SOAP_TYPE__tptz__OperatePresetTour or derived type identifier
class _tptz__OperatePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Element "Operation" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum tt__PTZPresetTourOperation      Operation                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
///
/// @note class _tptz__OperatePresetTourResponse operations:
/// - _tptz__OperatePresetTourResponse* soap_new__tptz__OperatePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__OperatePresetTourResponse* soap_new__tptz__OperatePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__OperatePresetTourResponse* soap_new_req__tptz__OperatePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__OperatePresetTourResponse* soap_new_set__tptz__OperatePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__OperatePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__OperatePresetTourResponse(soap*, _tptz__OperatePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__OperatePresetTourResponse(soap*, _tptz__OperatePresetTourResponse*) serialize to a stream
/// - _tptz__OperatePresetTourResponse* _tptz__OperatePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__OperatePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__OperatePresetTourResponse::soap_del() deep deletes _tptz__OperatePresetTourResponse data members, use only after _tptz__OperatePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__OperatePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__OperatePresetTourResponse or derived type identifier
class _tptz__OperatePresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
///
/// @note class _tptz__RemovePresetTour operations:
/// - _tptz__RemovePresetTour* soap_new__tptz__RemovePresetTour(soap*) allocate and default initialize
/// - _tptz__RemovePresetTour* soap_new__tptz__RemovePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetTour* soap_new_req__tptz__RemovePresetTour(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetTour* soap_new_set__tptz__RemovePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetTour(soap*, _tptz__RemovePresetTour*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetTour(soap*, _tptz__RemovePresetTour*) serialize to a stream
/// - _tptz__RemovePresetTour* _tptz__RemovePresetTour::soap_dup(soap*) returns deep copy of _tptz__RemovePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetTour::soap_del() deep deletes _tptz__RemovePresetTour data members, use only after _tptz__RemovePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetTour::soap_type() returns SOAP_TYPE__tptz__RemovePresetTour or derived type identifier
class _tptz__RemovePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
///
/// @note class _tptz__RemovePresetTourResponse operations:
/// - _tptz__RemovePresetTourResponse* soap_new__tptz__RemovePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__RemovePresetTourResponse* soap_new__tptz__RemovePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetTourResponse* soap_new_req__tptz__RemovePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetTourResponse* soap_new_set__tptz__RemovePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetTourResponse(soap*, _tptz__RemovePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetTourResponse(soap*, _tptz__RemovePresetTourResponse*) serialize to a stream
/// - _tptz__RemovePresetTourResponse* _tptz__RemovePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__RemovePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetTourResponse::soap_del() deep deletes _tptz__RemovePresetTourResponse data members, use only after _tptz__RemovePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__RemovePresetTourResponse or derived type identifier
class _tptz__RemovePresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations is a complexType.
///
/// @note class _tptz__GetCompatibleConfigurations operations:
/// - _tptz__GetCompatibleConfigurations* soap_new__tptz__GetCompatibleConfigurations(soap*) allocate and default initialize
/// - _tptz__GetCompatibleConfigurations* soap_new__tptz__GetCompatibleConfigurations(soap*, int num) allocate and default initialize an array
/// - _tptz__GetCompatibleConfigurations* soap_new_req__tptz__GetCompatibleConfigurations(soap*, ...) allocate, set required members
/// - _tptz__GetCompatibleConfigurations* soap_new_set__tptz__GetCompatibleConfigurations(soap*, ...) allocate, set all public members
/// - _tptz__GetCompatibleConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetCompatibleConfigurations(soap*, _tptz__GetCompatibleConfigurations*) deserialize from a stream
/// - int soap_write__tptz__GetCompatibleConfigurations(soap*, _tptz__GetCompatibleConfigurations*) serialize to a stream
/// - _tptz__GetCompatibleConfigurations* _tptz__GetCompatibleConfigurations::soap_dup(soap*) returns deep copy of _tptz__GetCompatibleConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetCompatibleConfigurations::soap_del() deep deletes _tptz__GetCompatibleConfigurations data members, use only after _tptz__GetCompatibleConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetCompatibleConfigurations::soap_type() returns SOAP_TYPE__tptz__GetCompatibleConfigurations or derived type identifier
class _tptz__GetCompatibleConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse is a complexType.
///
/// @note class _tptz__GetCompatibleConfigurationsResponse operations:
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new__tptz__GetCompatibleConfigurationsResponse(soap*) allocate and default initialize
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new__tptz__GetCompatibleConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new_req__tptz__GetCompatibleConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new_set__tptz__GetCompatibleConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetCompatibleConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetCompatibleConfigurationsResponse(soap*, _tptz__GetCompatibleConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetCompatibleConfigurationsResponse(soap*, _tptz__GetCompatibleConfigurationsResponse*) serialize to a stream
/// - _tptz__GetCompatibleConfigurationsResponse* _tptz__GetCompatibleConfigurationsResponse::soap_dup(soap*) returns deep copy of _tptz__GetCompatibleConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetCompatibleConfigurationsResponse::soap_del() deep deletes _tptz__GetCompatibleConfigurationsResponse data members, use only after _tptz__GetCompatibleConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetCompatibleConfigurationsResponse::soap_type() returns SOAP_TYPE__tptz__GetCompatibleConfigurationsResponse or derived type identifier
class _tptz__GetCompatibleConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZConfiguration* is 0..unbounded.
  $ int                                  __sizePTZConfiguration         0;
/// Pointer to array tt__PTZConfiguration* of size 0..unbounded.
    tt__PTZConfiguration*               *PTZConfiguration               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTracking
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTracking is a complexType.
///
/// @note class _tptz__MoveAndStartTracking operations:
/// - _tptz__MoveAndStartTracking* soap_new__tptz__MoveAndStartTracking(soap*) allocate and default initialize
/// - _tptz__MoveAndStartTracking* soap_new__tptz__MoveAndStartTracking(soap*, int num) allocate and default initialize an array
/// - _tptz__MoveAndStartTracking* soap_new_req__tptz__MoveAndStartTracking(soap*, ...) allocate, set required members
/// - _tptz__MoveAndStartTracking* soap_new_set__tptz__MoveAndStartTracking(soap*, ...) allocate, set all public members
/// - _tptz__MoveAndStartTracking::soap_default(soap*) default initialize members
/// - int soap_read__tptz__MoveAndStartTracking(soap*, _tptz__MoveAndStartTracking*) deserialize from a stream
/// - int soap_write__tptz__MoveAndStartTracking(soap*, _tptz__MoveAndStartTracking*) serialize to a stream
/// - _tptz__MoveAndStartTracking* _tptz__MoveAndStartTracking::soap_dup(soap*) returns deep copy of _tptz__MoveAndStartTracking, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__MoveAndStartTracking::soap_del() deep deletes _tptz__MoveAndStartTracking data members, use only after _tptz__MoveAndStartTracking::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__MoveAndStartTracking::soap_type() returns SOAP_TYPE__tptz__MoveAndStartTracking or derived type identifier
class _tptz__MoveAndStartTracking
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The geolocation of the target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoLocation" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     GeoLocation                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "TargetPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       TargetPosition                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Speed vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Object ID of the object to track.
/// </BLOCKQUOTE></PRE>
///
/// Element "ObjectID" of type xs:integer.
    xsd__integer                         ObjectID                       0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTrackingResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTrackingResponse is a complexType.
///
/// @note class _tptz__MoveAndStartTrackingResponse operations:
/// - _tptz__MoveAndStartTrackingResponse* soap_new__tptz__MoveAndStartTrackingResponse(soap*) allocate and default initialize
/// - _tptz__MoveAndStartTrackingResponse* soap_new__tptz__MoveAndStartTrackingResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__MoveAndStartTrackingResponse* soap_new_req__tptz__MoveAndStartTrackingResponse(soap*, ...) allocate, set required members
/// - _tptz__MoveAndStartTrackingResponse* soap_new_set__tptz__MoveAndStartTrackingResponse(soap*, ...) allocate, set all public members
/// - _tptz__MoveAndStartTrackingResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__MoveAndStartTrackingResponse(soap*, _tptz__MoveAndStartTrackingResponse*) deserialize from a stream
/// - int soap_write__tptz__MoveAndStartTrackingResponse(soap*, _tptz__MoveAndStartTrackingResponse*) serialize to a stream
/// - _tptz__MoveAndStartTrackingResponse* _tptz__MoveAndStartTrackingResponse::soap_dup(soap*) returns deep copy of _tptz__MoveAndStartTrackingResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__MoveAndStartTrackingResponse::soap_del() deep deletes _tptz__MoveAndStartTrackingResponse data members, use only after _tptz__MoveAndStartTrackingResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__MoveAndStartTrackingResponse::soap_type() returns SOAP_TYPE__tptz__MoveAndStartTrackingResponse or derived type identifier
class _tptz__MoveAndStartTrackingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tds__StorageConfiguration operations:
/// - tds__StorageConfiguration* soap_new_tds__StorageConfiguration(soap*) allocate and default initialize
/// - tds__StorageConfiguration* soap_new_tds__StorageConfiguration(soap*, int num) allocate and default initialize an array
/// - tds__StorageConfiguration* soap_new_req_tds__StorageConfiguration(soap*, ...) allocate, set required members
/// - tds__StorageConfiguration* soap_new_set_tds__StorageConfiguration(soap*, ...) allocate, set all public members
/// - tds__StorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tds__StorageConfiguration(soap*, tds__StorageConfiguration*) deserialize from a stream
/// - int soap_write_tds__StorageConfiguration(soap*, tds__StorageConfiguration*) serialize to a stream
/// - tds__StorageConfiguration* tds__StorageConfiguration::soap_dup(soap*) returns deep copy of tds__StorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__StorageConfiguration::soap_del() deep deletes tds__StorageConfiguration data members, use only after tds__StorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__StorageConfiguration::soap_type() returns SOAP_TYPE_tds__StorageConfiguration or derived type identifier
class tds__StorageConfiguration : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Data" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video input.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__VideoSource operations:
/// - tt__VideoSource* soap_new_tt__VideoSource(soap*) allocate and default initialize
/// - tt__VideoSource* soap_new_tt__VideoSource(soap*, int num) allocate and default initialize an array
/// - tt__VideoSource* soap_new_req_tt__VideoSource(soap*, ...) allocate, set required members
/// - tt__VideoSource* soap_new_set_tt__VideoSource(soap*, ...) allocate, set all public members
/// - tt__VideoSource::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSource(soap*, tt__VideoSource*) deserialize from a stream
/// - int soap_write_tt__VideoSource(soap*, tt__VideoSource*) serialize to a stream
/// - tt__VideoSource* tt__VideoSource::soap_dup(soap*) returns deep copy of tt__VideoSource, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSource::soap_del() deep deletes tt__VideoSource data members, use only after tt__VideoSource::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSource::soap_type() returns SOAP_TYPE_tt__VideoSource or derived type identifier
class tt__VideoSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Frame rate in frames per second.
/// </BLOCKQUOTE></PRE>
///
/// Element "Framerate" of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Horizontal and vertical resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor.
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    tt__ImagingSettings*                 Imaging                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    tt__VideoSourceExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio input.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__AudioSource operations:
/// - tt__AudioSource* soap_new_tt__AudioSource(soap*) allocate and default initialize
/// - tt__AudioSource* soap_new_tt__AudioSource(soap*, int num) allocate and default initialize an array
/// - tt__AudioSource* soap_new_req_tt__AudioSource(soap*, ...) allocate, set required members
/// - tt__AudioSource* soap_new_set_tt__AudioSource(soap*, ...) allocate, set all public members
/// - tt__AudioSource::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioSource(soap*, tt__AudioSource*) deserialize from a stream
/// - int soap_write_tt__AudioSource(soap*, tt__AudioSource*) serialize to a stream
/// - tt__AudioSource* tt__AudioSource::soap_dup(soap*) returns deep copy of tt__AudioSource, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioSource::soap_del() deep deletes tt__AudioSource data members, use only after tt__AudioSource::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioSource::soap_type() returns SOAP_TYPE_tt__AudioSource or derived type identifier
class tt__AudioSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   number of available audio channels. (1: mono, 2: stereo)
/// </BLOCKQUOTE></PRE>
///
/// Element "Channels" of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__VideoSourceConfiguration operations:
/// - tt__VideoSourceConfiguration* soap_new_tt__VideoSourceConfiguration(soap*) allocate and default initialize
/// - tt__VideoSourceConfiguration* soap_new_tt__VideoSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfiguration* soap_new_req_tt__VideoSourceConfiguration(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfiguration* soap_new_set_tt__VideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) serialize to a stream
/// - tt__VideoSourceConfiguration* tt__VideoSourceConfiguration::soap_dup(soap*) returns deep copy of tt__VideoSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfiguration::soap_del() deep deletes tt__VideoSourceConfiguration data members, use only after tt__VideoSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfiguration::soap_type() returns SOAP_TYPE_tt__VideoSourceConfiguration or derived type identifier
class tt__VideoSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Reference to the physical input.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bounds" of type "http://www.onvif.org/ver10/schema":IntRectangle.
    tt__IntRectangle*                    Bounds                         1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Readonly parameter signalling Source configuration's view mode, for devices supporting different view modes as defined in tt:viewModes.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ViewMode" of type xs:string.
  @ char*                                ViewMode                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__VideoEncoderConfiguration operations:
/// - tt__VideoEncoderConfiguration* soap_new_tt__VideoEncoderConfiguration(soap*) allocate and default initialize
/// - tt__VideoEncoderConfiguration* soap_new_tt__VideoEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__VideoEncoderConfiguration* soap_new_req_tt__VideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - tt__VideoEncoderConfiguration* soap_new_set_tt__VideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - tt__VideoEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) serialize to a stream
/// - tt__VideoEncoderConfiguration* tt__VideoEncoderConfiguration::soap_dup(soap*) returns deep copy of tt__VideoEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoEncoderConfiguration::soap_del() deep deletes tt__VideoEncoderConfiguration data members, use only after tt__VideoEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoEncoderConfiguration::soap_type() returns SOAP_TYPE_tt__VideoEncoderConfiguration or derived type identifier
class tt__VideoEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
///
/// Element "Quality" of type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "RateControl" of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    tt__VideoRateControl*                RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    tt__Mpeg4Configuration*              MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Configuration.
    tt__H264Configuration*               H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   A value of true indicates that frame rate is a fixed value rather than an upper limit,
///   and that the video encoder shall prioritize frame rate over all other adaptable
///   configuration values such as bitrate. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRate" of type xs:boolean.
  @ bool*                                GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":JpegOptions.
///
/// @note class tt__JpegOptions2 operations:
/// - tt__JpegOptions2* soap_new_tt__JpegOptions2(soap*) allocate and default initialize
/// - tt__JpegOptions2* soap_new_tt__JpegOptions2(soap*, int num) allocate and default initialize an array
/// - tt__JpegOptions2* soap_new_req_tt__JpegOptions2(soap*, ...) allocate, set required members
/// - tt__JpegOptions2* soap_new_set_tt__JpegOptions2(soap*, ...) allocate, set all public members
/// - tt__JpegOptions2::soap_default(soap*) default initialize members
/// - int soap_read_tt__JpegOptions2(soap*, tt__JpegOptions2*) deserialize from a stream
/// - int soap_write_tt__JpegOptions2(soap*, tt__JpegOptions2*) serialize to a stream
/// - tt__JpegOptions2* tt__JpegOptions2::soap_dup(soap*) returns deep copy of tt__JpegOptions2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__JpegOptions2::soap_del() deep deletes tt__JpegOptions2 data members, use only after tt__JpegOptions2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__JpegOptions2::soap_type() returns SOAP_TYPE_tt__JpegOptions2 or derived type identifier
class tt__JpegOptions2 : public tt__JpegOptions
{ public:
/*  INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
    END OF INHERITED FROM tt__JpegOptions */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
/// @note class tt__Mpeg4Options2 operations:
/// - tt__Mpeg4Options2* soap_new_tt__Mpeg4Options2(soap*) allocate and default initialize
/// - tt__Mpeg4Options2* soap_new_tt__Mpeg4Options2(soap*, int num) allocate and default initialize an array
/// - tt__Mpeg4Options2* soap_new_req_tt__Mpeg4Options2(soap*, ...) allocate, set required members
/// - tt__Mpeg4Options2* soap_new_set_tt__Mpeg4Options2(soap*, ...) allocate, set all public members
/// - tt__Mpeg4Options2::soap_default(soap*) default initialize members
/// - int soap_read_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) serialize to a stream
/// - tt__Mpeg4Options2* tt__Mpeg4Options2::soap_dup(soap*) returns deep copy of tt__Mpeg4Options2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Mpeg4Options2::soap_del() deep deletes tt__Mpeg4Options2 data members, use only after tt__Mpeg4Options2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Mpeg4Options2::soap_type() returns SOAP_TYPE_tt__Mpeg4Options2 or derived type identifier
class tt__Mpeg4Options2 : public tt__Mpeg4Options
{ public:
/*  INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Mpeg4Profile is 1..unbounded.
  $ int                                  __sizeMpeg4ProfilesSupported   1;
/// Pointer to array enum tt__Mpeg4Profile of size 1..unbounded.
    enum tt__Mpeg4Profile               *Mpeg4ProfilesSupported         1;	///< Multiple elements.
    END OF INHERITED FROM tt__Mpeg4Options */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":H264Options.
///
/// @note class tt__H264Options2 operations:
/// - tt__H264Options2* soap_new_tt__H264Options2(soap*) allocate and default initialize
/// - tt__H264Options2* soap_new_tt__H264Options2(soap*, int num) allocate and default initialize an array
/// - tt__H264Options2* soap_new_req_tt__H264Options2(soap*, ...) allocate, set required members
/// - tt__H264Options2* soap_new_set_tt__H264Options2(soap*, ...) allocate, set all public members
/// - tt__H264Options2::soap_default(soap*) default initialize members
/// - int soap_read_tt__H264Options2(soap*, tt__H264Options2*) deserialize from a stream
/// - int soap_write_tt__H264Options2(soap*, tt__H264Options2*) serialize to a stream
/// - tt__H264Options2* tt__H264Options2::soap_dup(soap*) returns deep copy of tt__H264Options2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__H264Options2::soap_del() deep deletes tt__H264Options2 data members, use only after tt__H264Options2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__H264Options2::soap_type() returns SOAP_TYPE_tt__H264Options2 or derived type identifier
class tt__H264Options2 : public tt__H264Options
{ public:
/*  INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__H264Profile is 1..unbounded.
  $ int                                  __sizeH264ProfilesSupported    1;
/// Pointer to array enum tt__H264Profile of size 1..unbounded.
    enum tt__H264Profile                *H264ProfilesSupported          1;	///< Multiple elements.
    END OF INHERITED FROM tt__H264Options */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__AudioSourceConfiguration operations:
/// - tt__AudioSourceConfiguration* soap_new_tt__AudioSourceConfiguration(soap*) allocate and default initialize
/// - tt__AudioSourceConfiguration* soap_new_tt__AudioSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__AudioSourceConfiguration* soap_new_req_tt__AudioSourceConfiguration(soap*, ...) allocate, set required members
/// - tt__AudioSourceConfiguration* soap_new_set_tt__AudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - tt__AudioSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) serialize to a stream
/// - tt__AudioSourceConfiguration* tt__AudioSourceConfiguration::soap_dup(soap*) returns deep copy of tt__AudioSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioSourceConfiguration::soap_del() deep deletes tt__AudioSourceConfiguration data members, use only after tt__AudioSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioSourceConfiguration::soap_type() returns SOAP_TYPE_tt__AudioSourceConfiguration or derived type identifier
class tt__AudioSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the Audio Source the configuration applies to
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__AudioEncoderConfiguration operations:
/// - tt__AudioEncoderConfiguration* soap_new_tt__AudioEncoderConfiguration(soap*) allocate and default initialize
/// - tt__AudioEncoderConfiguration* soap_new_tt__AudioEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__AudioEncoderConfiguration* soap_new_req_tt__AudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - tt__AudioEncoderConfiguration* soap_new_set_tt__AudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - tt__AudioEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) serialize to a stream
/// - tt__AudioEncoderConfiguration* tt__AudioEncoderConfiguration::soap_dup(soap*) returns deep copy of tt__AudioEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioEncoderConfiguration::soap_del() deep deletes tt__AudioEncoderConfiguration data members, use only after tt__AudioEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioEncoderConfiguration::soap_type() returns SOAP_TYPE_tt__AudioEncoderConfiguration or derived type identifier
class tt__AudioEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRate" of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__VideoAnalyticsConfiguration operations:
/// - tt__VideoAnalyticsConfiguration* soap_new_tt__VideoAnalyticsConfiguration(soap*) allocate and default initialize
/// - tt__VideoAnalyticsConfiguration* soap_new_tt__VideoAnalyticsConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__VideoAnalyticsConfiguration* soap_new_req_tt__VideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - tt__VideoAnalyticsConfiguration* soap_new_set_tt__VideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - tt__VideoAnalyticsConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) serialize to a stream
/// - tt__VideoAnalyticsConfiguration* tt__VideoAnalyticsConfiguration::soap_dup(soap*) returns deep copy of tt__VideoAnalyticsConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoAnalyticsConfiguration::soap_del() deep deletes tt__VideoAnalyticsConfiguration data members, use only after tt__VideoAnalyticsConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoAnalyticsConfiguration::soap_type() returns SOAP_TYPE_tt__VideoAnalyticsConfiguration or derived type identifier
class tt__VideoAnalyticsConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   1;	///< Required element.
/// Element "RuleEngineConfiguration" of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    tt__RuleEngineConfiguration*         RuleEngineConfiguration        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__MetadataConfiguration operations:
/// - tt__MetadataConfiguration* soap_new_tt__MetadataConfiguration(soap*) allocate and default initialize
/// - tt__MetadataConfiguration* soap_new_tt__MetadataConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__MetadataConfiguration* soap_new_req_tt__MetadataConfiguration(soap*, ...) allocate, set required members
/// - tt__MetadataConfiguration* soap_new_set_tt__MetadataConfiguration(soap*, ...) allocate, set all public members
/// - tt__MetadataConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) deserialize from a stream
/// - int soap_write_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) serialize to a stream
/// - tt__MetadataConfiguration* tt__MetadataConfiguration::soap_dup(soap*) returns deep copy of tt__MetadataConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MetadataConfiguration::soap_del() deep deletes tt__MetadataConfiguration data members, use only after tt__MetadataConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MetadataConfiguration::soap_type() returns SOAP_TYPE_tt__MetadataConfiguration or derived type identifier
class tt__MetadataConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   optional element to configure which PTZ related data is to include in the metadata stream
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZFilter.
    tt__PTZFilter*                       PTZStatus                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul>
///   <li>To get all events: Include the Events element but do not include a filter.</li>
///   <li>To get no events: Do not include the Events element.</li>
///   <li>To get only some events: Include the Events element and include a filter in the element.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventSubscription.
    tt__EventSubscription*               Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream (when using Media2 Service, this value is deprecated and ignored)
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indication which AnalyticsModules shall output metadata.
///   Note that the streaming behavior is undefined if the list includes items that are not part of the associated AnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "CompressionType" of type xs:string.
  @ char*                                CompressionType                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure if the metadata stream shall contain the Geo Location coordinates of each target.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocation" of type xs:boolean.
  @ bool*                                GeoLocation                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure if the generated metadata stream should contain shape information as polygon.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ShapePolygon" of type xs:boolean.
  @ bool*                                ShapePolygon                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio outputs.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__AudioOutput operations:
/// - tt__AudioOutput* soap_new_tt__AudioOutput(soap*) allocate and default initialize
/// - tt__AudioOutput* soap_new_tt__AudioOutput(soap*, int num) allocate and default initialize an array
/// - tt__AudioOutput* soap_new_req_tt__AudioOutput(soap*, ...) allocate, set required members
/// - tt__AudioOutput* soap_new_set_tt__AudioOutput(soap*, ...) allocate, set all public members
/// - tt__AudioOutput::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioOutput(soap*, tt__AudioOutput*) deserialize from a stream
/// - int soap_write_tt__AudioOutput(soap*, tt__AudioOutput*) serialize to a stream
/// - tt__AudioOutput* tt__AudioOutput::soap_dup(soap*) returns deep copy of tt__AudioOutput, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioOutput::soap_del() deep deletes tt__AudioOutput data members, use only after tt__AudioOutput::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioOutput::soap_type() returns SOAP_TYPE_tt__AudioOutput or derived type identifier
class tt__AudioOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__AudioOutputConfiguration operations:
/// - tt__AudioOutputConfiguration* soap_new_tt__AudioOutputConfiguration(soap*) allocate and default initialize
/// - tt__AudioOutputConfiguration* soap_new_tt__AudioOutputConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__AudioOutputConfiguration* soap_new_req_tt__AudioOutputConfiguration(soap*, ...) allocate, set required members
/// - tt__AudioOutputConfiguration* soap_new_set_tt__AudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - tt__AudioOutputConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) serialize to a stream
/// - tt__AudioOutputConfiguration* tt__AudioOutputConfiguration::soap_dup(soap*) returns deep copy of tt__AudioOutputConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioOutputConfiguration::soap_del() deep deletes tt__AudioOutputConfiguration data members, use only after tt__AudioOutputConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioOutputConfiguration::soap_type() returns SOAP_TYPE_tt__AudioOutputConfiguration or derived type identifier
class tt__AudioOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the phsycial Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An audio channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
///
/// Element "SendPrimacy" of type xs:anyURI.
    xsd__anyURI                          SendPrimacy                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.OutputLevelRange.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputLevel" of type xs:int.
    int                                  OutputLevel                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// <PRE><BLOCKQUOTE>
///   The Audio Decoder Configuration does not contain any that parameter to configure the
///   decoding .A decoder shall decode every data it receives (according to its capabilities).
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__AudioDecoderConfiguration operations:
/// - tt__AudioDecoderConfiguration* soap_new_tt__AudioDecoderConfiguration(soap*) allocate and default initialize
/// - tt__AudioDecoderConfiguration* soap_new_tt__AudioDecoderConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__AudioDecoderConfiguration* soap_new_req_tt__AudioDecoderConfiguration(soap*, ...) allocate, set required members
/// - tt__AudioDecoderConfiguration* soap_new_set_tt__AudioDecoderConfiguration(soap*, ...) allocate, set all public members
/// - tt__AudioDecoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioDecoderConfiguration(soap*, tt__AudioDecoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioDecoderConfiguration(soap*, tt__AudioDecoderConfiguration*) serialize to a stream
/// - tt__AudioDecoderConfiguration* tt__AudioDecoderConfiguration::soap_dup(soap*) returns deep copy of tt__AudioDecoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioDecoderConfiguration::soap_del() deep deletes tt__AudioDecoderConfiguration data members, use only after tt__AudioDecoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioDecoderConfiguration::soap_type() returns SOAP_TYPE_tt__AudioDecoderConfiguration or derived type identifier
class tt__AudioDecoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":NetworkInterface is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tt__NetworkInterface operations:
/// - tt__NetworkInterface* soap_new_tt__NetworkInterface(soap*) allocate and default initialize
/// - tt__NetworkInterface* soap_new_tt__NetworkInterface(soap*, int num) allocate and default initialize an array
/// - tt__NetworkInterface* soap_new_req_tt__NetworkInterface(soap*, ...) allocate, set required members
/// - tt__NetworkInterface* soap_new_set_tt__NetworkInterface(soap*, ...) allocate, set all public members
/// - tt__NetworkInterface::soap_default(soap*) default initialize members
/// - int soap_read_tt__NetworkInterface(soap*, tt__NetworkInterface*) deserialize from a stream
/// - int soap_write_tt__NetworkInterface(soap*, tt__NetworkInterface*) serialize to a stream
/// - tt__NetworkInterface* tt__NetworkInterface::soap_dup(soap*) returns deep copy of tt__NetworkInterface, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__NetworkInterface::soap_del() deep deletes tt__NetworkInterface data members, use only after tt__NetworkInterface::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__NetworkInterface::soap_type() returns SOAP_TYPE_tt__NetworkInterface or derived type identifier
class tt__NetworkInterface : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not an interface is enabled.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface information
/// </BLOCKQUOTE></PRE>
///
/// Element "Info" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceInfo.
    tt__NetworkInterfaceInfo*            Info                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Link configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "Link" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceLink.
    tt__NetworkInterfaceLink*            Link                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv4 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv4" of type "http://www.onvif.org/ver10/schema":IPv4NetworkInterface.
    tt__IPv4NetworkInterface*            IPv4                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   IPv6 network interface configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "IPv6" of type "http://www.onvif.org/ver10/schema":IPv6NetworkInterface.
    tt__IPv6NetworkInterface*            IPv6                           0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceExtension.
    tt__NetworkInterfaceExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":CertificateUsage is a complexType with simpleContent extension of type xs:string.
///
/// @note class tt__CertificateUsage operations:
/// - tt__CertificateUsage* soap_new_tt__CertificateUsage(soap*) allocate and default initialize
/// - tt__CertificateUsage* soap_new_tt__CertificateUsage(soap*, int num) allocate and default initialize an array
/// - tt__CertificateUsage* soap_new_req_tt__CertificateUsage(soap*, ...) allocate, set required members
/// - tt__CertificateUsage* soap_new_set_tt__CertificateUsage(soap*, ...) allocate, set all public members
/// - tt__CertificateUsage::soap_default(soap*) default initialize members
/// - int soap_read_tt__CertificateUsage(soap*, tt__CertificateUsage*) deserialize from a stream
/// - int soap_write_tt__CertificateUsage(soap*, tt__CertificateUsage*) serialize to a stream
/// - tt__CertificateUsage* tt__CertificateUsage::soap_dup(soap*) returns deep copy of tt__CertificateUsage, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__CertificateUsage::soap_del() deep deletes tt__CertificateUsage data members, use only after tt__CertificateUsage::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__CertificateUsage::soap_type() returns SOAP_TYPE_tt__CertificateUsage or derived type identifier
class tt__CertificateUsage
{ public:
/// __item wraps simpleContent of type xs:string.
    char*                                __item                        ;
/// Attribute "Critical" of type xs:boolean.
  @ bool                                 Critical                       1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RelayOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tt__RelayOutput operations:
/// - tt__RelayOutput* soap_new_tt__RelayOutput(soap*) allocate and default initialize
/// - tt__RelayOutput* soap_new_tt__RelayOutput(soap*, int num) allocate and default initialize an array
/// - tt__RelayOutput* soap_new_req_tt__RelayOutput(soap*, ...) allocate, set required members
/// - tt__RelayOutput* soap_new_set_tt__RelayOutput(soap*, ...) allocate, set all public members
/// - tt__RelayOutput::soap_default(soap*) default initialize members
/// - int soap_read_tt__RelayOutput(soap*, tt__RelayOutput*) deserialize from a stream
/// - int soap_write_tt__RelayOutput(soap*, tt__RelayOutput*) serialize to a stream
/// - tt__RelayOutput* tt__RelayOutput::soap_dup(soap*) returns deep copy of tt__RelayOutput, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RelayOutput::soap_del() deep deletes tt__RelayOutput data members, use only after tt__RelayOutput::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RelayOutput::soap_type() returns SOAP_TYPE_tt__RelayOutput or derived type identifier
class tt__RelayOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":DigitalInput is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":PTZNode is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tt__PTZNode operations:
/// - tt__PTZNode* soap_new_tt__PTZNode(soap*) allocate and default initialize
/// - tt__PTZNode* soap_new_tt__PTZNode(soap*, int num) allocate and default initialize an array
/// - tt__PTZNode* soap_new_req_tt__PTZNode(soap*, ...) allocate, set required members
/// - tt__PTZNode* soap_new_set_tt__PTZNode(soap*, ...) allocate, set all public members
/// - tt__PTZNode::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZNode(soap*, tt__PTZNode*) deserialize from a stream
/// - int soap_write_tt__PTZNode(soap*, tt__PTZNode*) serialize to a stream
/// - tt__PTZNode* tt__PTZNode::soap_dup(soap*) returns deep copy of tt__PTZNode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZNode::soap_del() deep deletes tt__PTZNode data members, use only after tt__PTZNode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZNode::soap_type() returns SOAP_TYPE_tt__PTZNode or derived type identifier
class tt__PTZNode : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   A unique identifier that is used to reference PTZ Nodes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A list of Coordinate Systems available for the PTZ Node. For each Coordinate System, the PTZ Node MUST specify its allowed range.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportedPTZSpaces" of type "http://www.onvif.org/ver10/schema":PTZSpaces.
    tt__PTZSpaces*                       SupportedPTZSpaces             1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   All preset operations MUST be available for this PTZ Node if one preset is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "MaximumNumberOfPresets" of type xs:int.
    int                                  MaximumNumberOfPresets         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A boolean operator specifying the availability of a home position. If set to true, the Home Position Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "HomeSupported" of type xs:boolean.
    bool                                 HomeSupported                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A list of supported Auxiliary commands. If the list is not empty, the Auxiliary Operations MUST be available for this PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__AuxiliaryData is 0..unbounded.
  $ int                                  __sizeAuxiliaryCommands        0;
/// Pointer to array tt__AuxiliaryData of size 0..unbounded.
    tt__AuxiliaryData                   *AuxiliaryCommands              0;	///< Multiple elements.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZNodeExtension.
    tt__PTZNodeExtension*                Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Indication whether the HomePosition of a Node is fixed or it can be changed via the SetHomePosition command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "FixedHomePosition" of type xs:boolean.
  @ bool*                                FixedHomePosition              0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication whether the Node supports the geo-referenced move command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoMove" of type xs:boolean.
  @ bool*                                GeoMove                        0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":PTZConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__PTZConfiguration operations:
/// - tt__PTZConfiguration* soap_new_tt__PTZConfiguration(soap*) allocate and default initialize
/// - tt__PTZConfiguration* soap_new_tt__PTZConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__PTZConfiguration* soap_new_req_tt__PTZConfiguration(soap*, ...) allocate, set required members
/// - tt__PTZConfiguration* soap_new_set_tt__PTZConfiguration(soap*, ...) allocate, set all public members
/// - tt__PTZConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) deserialize from a stream
/// - int soap_write_tt__PTZConfiguration(soap*, tt__PTZConfiguration*) serialize to a stream
/// - tt__PTZConfiguration* tt__PTZConfiguration::soap_dup(soap*) returns deep copy of tt__PTZConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__PTZConfiguration::soap_del() deep deletes tt__PTZConfiguration data members, use only after tt__PTZConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__PTZConfiguration::soap_type() returns SOAP_TYPE_tt__PTZConfiguration or derived type identifier
class tt__PTZConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   A mandatory reference to the PTZ Node that the PTZ Configuration belongs to.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute Pan/Tilt movements, it shall specify one Absolute Pan/Tilt Position Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultAbsolutePantTiltPositionSpace" of type xs:anyURI.
    xsd__anyURI                          DefaultAbsolutePantTiltPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute zoom movements, it shall specify one Absolute Zoom Position Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultAbsoluteZoomPositionSpace" of type xs:anyURI.
    xsd__anyURI                          DefaultAbsoluteZoomPositionSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative Pan/Tilt movements, it shall specify one RelativePan/Tilt Translation Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultRelativePanTiltTranslationSpace" of type xs:anyURI.
    xsd__anyURI                          DefaultRelativePanTiltTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports relative zoom movements, it shall specify one Relative Zoom Translation Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultRelativeZoomTranslationSpace" of type xs:anyURI.
    xsd__anyURI                          DefaultRelativeZoomTranslationSpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous Pan/Tilt movements, it shall specify one Continuous Pan/Tilt Velocity Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultContinuousPanTiltVelocitySpace" of type xs:anyURI.
    xsd__anyURI                          DefaultContinuousPanTiltVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous zoom movements, it shall specify one Continuous Zoom Velocity Space as default.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultContinuousZoomVelocitySpace" of type xs:anyURI.
    xsd__anyURI                          DefaultContinuousZoomVelocitySpace 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports absolute or relative PTZ movements, it shall specify corresponding default Pan/Tilt and Zoom speeds.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultPTZSpeed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        DefaultPTZSpeed                0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If the PTZ Node supports continuous movements, it shall specify a default timeout, after which the movement stops.
/// </BLOCKQUOTE></PRE>
///
/// Element "DefaultPTZTimeout" of type xs:duration.
    xsd__duration                        DefaultPTZTimeout              0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Pan/Tilt limits element should be present for a PTZ Node that supports an absolute Pan/Tilt. If the element is present it signals the support for configurable Pan/Tilt limits. If limits are enabled, the Pan/Tilt movements shall always stay within the specified range. The Pan/Tilt limits are disabled by setting the limits to INF or +INF.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTiltLimits" of type "http://www.onvif.org/ver10/schema":PanTiltLimits.
    tt__PanTiltLimits*                   PanTiltLimits                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The Zoom limits element should be present for a PTZ Node that supports absolute zoom. If the element is present it signals the supports for configurable Zoom limits. If limits are enabled the zoom movements shall always stay within the specified range. The Zoom limits are disabled by settings the limits to -INF and +INF.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZoomLimits" of type "http://www.onvif.org/ver10/schema":ZoomLimits.
    tt__ZoomLimits*                      ZoomLimits                     0;	///< Optional element.

/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":PTZConfigurationExtension.
    tt__PTZConfigurationExtension*       Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when moving.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveRamp" of type xs:int.
  @ int*                                 MoveRamp                       0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when recalling presets.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PresetRamp" of type xs:int.
  @ int*                                 PresetRamp                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   The optional acceleration ramp used by the device when executing PresetTours.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "PresetTourRamp" of type xs:int.
  @ int*                                 PresetTourRamp                 0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":EventFilter is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngine is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineInput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnalyticsEngineControl is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":OSDConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tt__OSDConfiguration operations:
/// - tt__OSDConfiguration* soap_new_tt__OSDConfiguration(soap*) allocate and default initialize
/// - tt__OSDConfiguration* soap_new_tt__OSDConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__OSDConfiguration* soap_new_req_tt__OSDConfiguration(soap*, ...) allocate, set required members
/// - tt__OSDConfiguration* soap_new_set_tt__OSDConfiguration(soap*, ...) allocate, set all public members
/// - tt__OSDConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDConfiguration(soap*, tt__OSDConfiguration*) deserialize from a stream
/// - int soap_write_tt__OSDConfiguration(soap*, tt__OSDConfiguration*) serialize to a stream
/// - tt__OSDConfiguration* tt__OSDConfiguration::soap_dup(soap*) returns deep copy of tt__OSDConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDConfiguration::soap_del() deep deletes tt__OSDConfiguration data members, use only after tt__OSDConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDConfiguration::soap_type() returns SOAP_TYPE_tt__OSDConfiguration or derived type identifier
class tt__OSDConfiguration : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Reference to the video source configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfigurationToken" of type "http://www.onvif.org/ver10/schema":OSDReference.
    tt__OSDReference*                    VideoSourceConfigurationToken  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Type of OSD.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":OSDType.
    enum tt__OSDType                     Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Position configuration of OSD.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":OSDPosConfiguration.
    tt__OSDPosConfiguration*             Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Text configuration of OSD. It shall be present when the value of Type field is Text.
/// </BLOCKQUOTE></PRE>
///
/// Element "TextString" of type "http://www.onvif.org/ver10/schema":OSDTextConfiguration.
    tt__OSDTextConfiguration*            TextString                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Image configuration of OSD. It shall be present when the value of Type field is Image
/// </BLOCKQUOTE></PRE>
///
/// Element "Image" of type "http://www.onvif.org/ver10/schema":OSDImgConfiguration.
    tt__OSDImgConfiguration*             Image                          0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":OSDConfigurationExtension.
    tt__OSDConfigurationExtension*       Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicType is not used and was removed

// Optimization: complexType "http://docs.oasis-open.org/wsn/t-1":TopicSetType is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":OSDReference is a complexType with simpleContent extension of type "http://www.onvif.org/ver10/schema":ReferenceToken.
///
/// @note class tt__OSDReference operations:
/// - tt__OSDReference* soap_new_tt__OSDReference(soap*) allocate and default initialize
/// - tt__OSDReference* soap_new_tt__OSDReference(soap*, int num) allocate and default initialize an array
/// - tt__OSDReference* soap_new_req_tt__OSDReference(soap*, ...) allocate, set required members
/// - tt__OSDReference* soap_new_set_tt__OSDReference(soap*, ...) allocate, set all public members
/// - tt__OSDReference::soap_default(soap*) default initialize members
/// - int soap_read_tt__OSDReference(soap*, tt__OSDReference*) deserialize from a stream
/// - int soap_write_tt__OSDReference(soap*, tt__OSDReference*) serialize to a stream
/// - tt__OSDReference* tt__OSDReference::soap_dup(soap*) returns deep copy of tt__OSDReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__OSDReference::soap_del() deep deletes tt__OSDReference data members, use only after tt__OSDReference::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__OSDReference::soap_type() returns SOAP_TYPE_tt__OSDReference or derived type identifier
class tt__OSDReference
{ public:
/// __item wraps simpleContent of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   __item                        ;
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":Capabilities of type "http://www.onvif.org/ver10/device/wsdl":DeviceServiceCapabilities.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/device/wsdl                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":StringList of type "http://www.onvif.org/ver10/schema":StringList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRange of type "http://www.onvif.org/ver10/schema":IntRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntList of type "http://www.onvif.org/ver10/schema":IntAttrList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatRange of type "http://www.onvif.org/ver10/schema":FloatRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":FloatList of type "http://www.onvif.org/ver10/schema":FloatAttrList.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":DurationRange of type "http://www.onvif.org/ver10/schema":DurationRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":IntRectangleRange of type "http://www.onvif.org/ver10/schema":IntRectangleRange.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoSourceConfiguration of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioSourceConfiguration of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PTZConfiguration of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":MetadataConfiguration of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioOutputConfiguration of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polyline of type "http://www.onvif.org/ver10/schema":Polyline.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":PolygonOptions of type "http://www.onvif.org/ver10/schema":PolygonOptions.
// Optimization: element not used and removed

/// @brief Top-level root element "http://www.onvif.org/ver10/schema":Polygon of type "http://www.onvif.org/ver10/schema":Polygon.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicNamespace of type "http://docs.oasis-open.org/wsn/t-1":TopicNamespaceType.
// Optimization: element not used and removed

/// @brief Top-level root element "http://docs.oasis-open.org/wsn/t-1":TopicSet of type "http://docs.oasis-open.org/wsn/t-1":TopicSetType.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/t-1                                       *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topicNamespaceLocation of simpleType xs:anyURI.
// Optimization: attribute not used and removed

/// @brief Top-level attribute "http://docs.oasis-open.org/wsn/t-1":topic of simpleType xs:boolean.
// Optimization: attribute not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":Capabilities of type "http://www.onvif.org/ver10/media/wsdl":Capabilities.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver10/media/wsdl                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Capabilities of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
// Optimization: element not used and removed


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tds  service name:	DeviceBinding 
//gsoap tds  service type:	Device 
//gsoap tds  service namespace:	http://www.onvif.org/ver10/device/wsdl 
//gsoap tds  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap tptz service name:	PTZBinding 
//gsoap tptz service type:	PTZ 
//gsoap tptz service namespace:	http://www.onvif.org/ver20/ptz/wsdl 
//gsoap tptz service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap trt  service name:	MediaBinding 
//gsoap trt  service type:	Media 
//gsoap trt  service namespace:	http://www.onvif.org/ver10/media/wsdl 
//gsoap trt  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WSDL Definitions

@section WSDL_bindings Service Bindings

  - @ref DeviceBinding

  - @ref PTZBinding

  - @ref MediaBinding

@section WSDL_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_operations Operations of Binding "DeviceBinding"

  - @ref __tds__GetServices

  - @ref __tds__GetServiceCapabilities

  - @ref __tds__GetDeviceInformation

  - @ref __tds__SetSystemDateAndTime

  - @ref __tds__GetSystemDateAndTime

  - @ref __tds__SetSystemFactoryDefault

  - @ref __tds__UpgradeSystemFirmware

  - @ref __tds__SystemReboot

  - @ref __tds__RestoreSystem

  - @ref __tds__GetSystemBackup

  - @ref __tds__GetSystemLog

  - @ref __tds__GetSystemSupportInformation

  - @ref __tds__GetScopes

  - @ref __tds__SetScopes

  - @ref __tds__AddScopes

  - @ref __tds__RemoveScopes

  - @ref __tds__GetDiscoveryMode

  - @ref __tds__SetDiscoveryMode

  - @ref __tds__GetRemoteDiscoveryMode

  - @ref __tds__SetRemoteDiscoveryMode

  - @ref __tds__GetDPAddresses

  - @ref __tds__GetEndpointReference

  - @ref __tds__GetRemoteUser

  - @ref __tds__SetRemoteUser

  - @ref __tds__GetUsers

  - @ref __tds__CreateUsers

  - @ref __tds__DeleteUsers

  - @ref __tds__SetUser

  - @ref __tds__GetWsdlUrl

  - @ref __tds__GetCapabilities

  - @ref __tds__SetDPAddresses

  - @ref __tds__GetHostname

  - @ref __tds__SetHostname

  - @ref __tds__SetHostnameFromDHCP

  - @ref __tds__GetDNS

  - @ref __tds__SetDNS

  - @ref __tds__GetNTP

  - @ref __tds__SetNTP

  - @ref __tds__GetDynamicDNS

  - @ref __tds__SetDynamicDNS

  - @ref __tds__GetNetworkInterfaces

  - @ref __tds__SetNetworkInterfaces

  - @ref __tds__GetNetworkProtocols

  - @ref __tds__SetNetworkProtocols

  - @ref __tds__GetNetworkDefaultGateway

  - @ref __tds__SetNetworkDefaultGateway

  - @ref __tds__GetZeroConfiguration

  - @ref __tds__SetZeroConfiguration

  - @ref __tds__GetIPAddressFilter

  - @ref __tds__SetIPAddressFilter

  - @ref __tds__AddIPAddressFilter

  - @ref __tds__RemoveIPAddressFilter

  - @ref __tds__GetAccessPolicy

  - @ref __tds__SetAccessPolicy

  - @ref __tds__CreateCertificate

  - @ref __tds__GetCertificates

  - @ref __tds__GetCertificatesStatus

  - @ref __tds__SetCertificatesStatus

  - @ref __tds__DeleteCertificates

  - @ref __tds__GetPkcs10Request

  - @ref __tds__LoadCertificates

  - @ref __tds__GetClientCertificateMode

  - @ref __tds__SetClientCertificateMode

  - @ref __tds__GetRelayOutputs

  - @ref __tds__SetRelayOutputSettings

  - @ref __tds__SetRelayOutputState

  - @ref __tds__SendAuxiliaryCommand

  - @ref __tds__GetCACertificates

  - @ref __tds__LoadCertificateWithPrivateKey

  - @ref __tds__GetCertificateInformation

  - @ref __tds__LoadCACertificates

  - @ref __tds__CreateDot1XConfiguration

  - @ref __tds__SetDot1XConfiguration

  - @ref __tds__GetDot1XConfiguration

  - @ref __tds__GetDot1XConfigurations

  - @ref __tds__DeleteDot1XConfiguration

  - @ref __tds__GetDot11Capabilities

  - @ref __tds__GetDot11Status

  - @ref __tds__ScanAvailableDot11Networks

  - @ref __tds__GetSystemUris

  - @ref __tds__StartFirmwareUpgrade

  - @ref __tds__StartSystemRestore

  - @ref __tds__GetStorageConfigurations

  - @ref __tds__CreateStorageConfiguration

  - @ref __tds__GetStorageConfiguration

  - @ref __tds__SetStorageConfiguration

  - @ref __tds__DeleteStorageConfiguration

  - @ref __tds__GetGeoLocation

  - @ref __tds__SetGeoLocation

  - @ref __tds__DeleteGeoLocation

@section DeviceBinding_ports Default endpoints of Binding "DeviceBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page PTZBinding Binding "PTZBinding"

@section PTZBinding_operations Operations of Binding "PTZBinding"

  - @ref __tptz__GetServiceCapabilities

  - @ref __tptz__GetConfigurations

  - @ref __tptz__GetPresets

  - @ref __tptz__SetPreset

  - @ref __tptz__RemovePreset

  - @ref __tptz__GotoPreset

  - @ref __tptz__GetStatus

  - @ref __tptz__GetConfiguration

  - @ref __tptz__GetNodes

  - @ref __tptz__GetNode

  - @ref __tptz__SetConfiguration

  - @ref __tptz__GetConfigurationOptions

  - @ref __tptz__GotoHomePosition

  - @ref __tptz__SetHomePosition

  - @ref __tptz__ContinuousMove

  - @ref __tptz__RelativeMove

  - @ref __tptz__SendAuxiliaryCommand

  - @ref __tptz__AbsoluteMove

  - @ref __tptz__GeoMove

  - @ref __tptz__Stop

  - @ref __tptz__GetPresetTours

  - @ref __tptz__GetPresetTour

  - @ref __tptz__GetPresetTourOptions

  - @ref __tptz__CreatePresetTour

  - @ref __tptz__ModifyPresetTour

  - @ref __tptz__OperatePresetTour

  - @ref __tptz__RemovePresetTour

  - @ref __tptz__GetCompatibleConfigurations

  - @ref __tptz__MoveAndStartTracking

@section PTZBinding_ports Default endpoints of Binding "PTZBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/** @page MediaBinding Binding "MediaBinding"

@section MediaBinding_operations Operations of Binding "MediaBinding"

  - @ref __trt__GetServiceCapabilities

  - @ref __trt__GetVideoSources

  - @ref __trt__GetAudioSources

  - @ref __trt__GetAudioOutputs

  - @ref __trt__CreateProfile

  - @ref __trt__GetProfile

  - @ref __trt__GetProfiles

  - @ref __trt__AddVideoEncoderConfiguration

  - @ref __trt__AddVideoSourceConfiguration

  - @ref __trt__AddAudioEncoderConfiguration

  - @ref __trt__AddAudioSourceConfiguration

  - @ref __trt__AddPTZConfiguration

  - @ref __trt__AddVideoAnalyticsConfiguration

  - @ref __trt__AddMetadataConfiguration

  - @ref __trt__AddAudioOutputConfiguration

  - @ref __trt__AddAudioDecoderConfiguration

  - @ref __trt__RemoveVideoEncoderConfiguration

  - @ref __trt__RemoveVideoSourceConfiguration

  - @ref __trt__RemoveAudioEncoderConfiguration

  - @ref __trt__RemoveAudioSourceConfiguration

  - @ref __trt__RemovePTZConfiguration

  - @ref __trt__RemoveVideoAnalyticsConfiguration

  - @ref __trt__RemoveMetadataConfiguration

  - @ref __trt__RemoveAudioOutputConfiguration

  - @ref __trt__RemoveAudioDecoderConfiguration

  - @ref __trt__DeleteProfile

  - @ref __trt__GetVideoSourceConfigurations

  - @ref __trt__GetVideoEncoderConfigurations

  - @ref __trt__GetAudioSourceConfigurations

  - @ref __trt__GetAudioEncoderConfigurations

  - @ref __trt__GetVideoAnalyticsConfigurations

  - @ref __trt__GetMetadataConfigurations

  - @ref __trt__GetAudioOutputConfigurations

  - @ref __trt__GetAudioDecoderConfigurations

  - @ref __trt__GetVideoSourceConfiguration

  - @ref __trt__GetVideoEncoderConfiguration

  - @ref __trt__GetAudioSourceConfiguration

  - @ref __trt__GetAudioEncoderConfiguration

  - @ref __trt__GetVideoAnalyticsConfiguration

  - @ref __trt__GetMetadataConfiguration

  - @ref __trt__GetAudioOutputConfiguration

  - @ref __trt__GetAudioDecoderConfiguration

  - @ref __trt__GetCompatibleVideoEncoderConfigurations

  - @ref __trt__GetCompatibleVideoSourceConfigurations

  - @ref __trt__GetCompatibleAudioEncoderConfigurations

  - @ref __trt__GetCompatibleAudioSourceConfigurations

  - @ref __trt__GetCompatibleVideoAnalyticsConfigurations

  - @ref __trt__GetCompatibleMetadataConfigurations

  - @ref __trt__GetCompatibleAudioOutputConfigurations

  - @ref __trt__GetCompatibleAudioDecoderConfigurations

  - @ref __trt__SetVideoSourceConfiguration

  - @ref __trt__SetVideoEncoderConfiguration

  - @ref __trt__SetAudioSourceConfiguration

  - @ref __trt__SetAudioEncoderConfiguration

  - @ref __trt__SetVideoAnalyticsConfiguration

  - @ref __trt__SetMetadataConfiguration

  - @ref __trt__SetAudioOutputConfiguration

  - @ref __trt__SetAudioDecoderConfiguration

  - @ref __trt__GetVideoSourceConfigurationOptions

  - @ref __trt__GetVideoEncoderConfigurationOptions

  - @ref __trt__GetAudioSourceConfigurationOptions

  - @ref __trt__GetAudioEncoderConfigurationOptions

  - @ref __trt__GetMetadataConfigurationOptions

  - @ref __trt__GetAudioOutputConfigurationOptions

  - @ref __trt__GetAudioDecoderConfigurationOptions

  - @ref __trt__GetGuaranteedNumberOfVideoEncoderInstances

  - @ref __trt__GetStreamUri

  - @ref __trt__StartMulticastStreaming

  - @ref __trt__StopMulticastStreaming

  - @ref __trt__SetSynchronizationPoint

  - @ref __trt__GetSnapshotUri

  - @ref __trt__GetVideoSourceModes

  - @ref __trt__SetVideoSourceMode

  - @ref __trt__GetOSDs

  - @ref __trt__GetOSD

  - @ref __trt__GetOSDOptions

  - @ref __trt__SetOSD

  - @ref __trt__CreateOSD

  - @ref __trt__DeleteOSD

@section MediaBinding_ports Default endpoints of Binding "MediaBinding"

@note Use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   DeviceBinding                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServices                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServices" of service binding "DeviceBinding".
Returns information about services on the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServices"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServicesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServices(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetServices*                  tds__GetServices,
    // output parameters:
    _tds__GetServicesResponse          &tds__GetServicesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServices(
    struct soap *soap,
    // input parameters:
    _tds__GetServices*                  tds__GetServices,
    // output parameters:
    _tds__GetServicesResponse          &tds__GetServicesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetServices SOAP
//gsoap tds  service method-style:	GetServices document
//gsoap tds  service method-encoding:	GetServices literal
//gsoap tds  service method-input-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServices
//gsoap tds  service method-output-action:	GetServices http://www.onvif.org/ver10/device/wsdl/GetServicesResponse
int __tds__GetServices(
    _tds__GetServices*                  tds__GetServices,	///< Input parameter
    _tds__GetServicesResponse          &tds__GetServicesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetServiceCapabilities" of service binding "DeviceBinding".
Returns the capabilities of the device service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,
    // output parameters:
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,
    // output parameters:
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetServiceCapabilities SOAP
//gsoap tds  service method-style:	GetServiceCapabilities document
//gsoap tds  service method-encoding:	GetServiceCapabilities literal
//gsoap tds  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities
//gsoap tds  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilitiesResponse
int __tds__GetServiceCapabilities(
    _tds__GetServiceCapabilities*       tds__GetServiceCapabilities,	///< Input parameter
    _tds__GetServiceCapabilitiesResponse&tds__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDeviceInformation                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDeviceInformation" of service binding "DeviceBinding".
This operation gets basic device information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDeviceInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // output parameters:
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDeviceInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,
    // output parameters:
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDeviceInformation SOAP
//gsoap tds  service method-style:	GetDeviceInformation document
//gsoap tds  service method-encoding:	GetDeviceInformation literal
//gsoap tds  service method-input-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation
//gsoap tds  service method-output-action:	GetDeviceInformation http://www.onvif.org/ver10/device/wsdl/GetDeviceInformationResponse
int __tds__GetDeviceInformation(
    _tds__GetDeviceInformation*         tds__GetDeviceInformation,	///< Input parameter
    _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemDateAndTime" of service binding "DeviceBinding".
This operation sets the device system date and time. The device shall support the
				configuration of the daylight saving setting and
of the manual system date and time (if
				applicable) or indication of NTP time (if applicable)
through the SetSystemDateAndTime
				command. <br/>
				If system time and date are set manually, the client
shall include UTCDateTime in the request.<br/>
				A TimeZone token which is not formed according to
the rules of IEEE 1003.1 section 8.3 is considered as invalid timezone.<br/>
				The DayLightSavings flag should be set to true to
activate any DST settings of the TimeZone string. 
				Clear the DayLightSavings flag if the DST portion
of the TimeZone settings should be ignored.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // output parameters:
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,
    // output parameters:
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetSystemDateAndTime SOAP
//gsoap tds  service method-style:	SetSystemDateAndTime document
//gsoap tds  service method-encoding:	SetSystemDateAndTime literal
//gsoap tds  service method-input-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime
//gsoap tds  service method-output-action:	SetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTimeResponse
int __tds__SetSystemDateAndTime(
    _tds__SetSystemDateAndTime*         tds__SetSystemDateAndTime,	///< Input parameter
    _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemDateAndTime                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemDateAndTime" of service binding "DeviceBinding".
This operation gets the device system date and time. The device shall support the
return of
				the daylight saving setting and of the manual system
date and time (if applicable) or indication
				of NTP time (if applicable) through the GetSystemDateAndTime
command.<br/>
				A device shall provide the UTCDateTime information.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemDateAndTime(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // output parameters:
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemDateAndTime(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,
    // output parameters:
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemDateAndTime SOAP
//gsoap tds  service method-style:	GetSystemDateAndTime document
//gsoap tds  service method-encoding:	GetSystemDateAndTime literal
//gsoap tds  service method-input-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime
//gsoap tds  service method-output-action:	GetSystemDateAndTime http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTimeResponse
int __tds__GetSystemDateAndTime(
    _tds__GetSystemDateAndTime*         tds__GetSystemDateAndTime,	///< Input parameter
    _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetSystemFactoryDefault                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetSystemFactoryDefault" of service binding "DeviceBinding".
This operation reloads the parameters on the device to their factory default values.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetSystemFactoryDefault(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // output parameters:
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetSystemFactoryDefault(
    struct soap *soap,
    // input parameters:
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,
    // output parameters:
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetSystemFactoryDefault SOAP
//gsoap tds  service method-style:	SetSystemFactoryDefault document
//gsoap tds  service method-encoding:	SetSystemFactoryDefault literal
//gsoap tds  service method-input-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault
//gsoap tds  service method-output-action:	SetSystemFactoryDefault http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefaultResponse
int __tds__SetSystemFactoryDefault(
    _tds__SetSystemFactoryDefault*      tds__SetSystemFactoryDefault,	///< Input parameter
    _tds__SetSystemFactoryDefaultResponse&tds__SetSystemFactoryDefaultResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__UpgradeSystemFirmware                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__UpgradeSystemFirmware" of service binding "DeviceBinding".
This operation upgrades a device firmware version. After a successful upgrade the
response
				message is sent before the device reboots. The device
should support firmware upgrade
				through the UpgradeSystemFirmware command. The exact
format of the firmware data is
				outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__UpgradeSystemFirmware(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // output parameters:
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__UpgradeSystemFirmware(
    struct soap *soap,
    // input parameters:
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,
    // output parameters:
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	UpgradeSystemFirmware SOAP
//gsoap tds  service method-style:	UpgradeSystemFirmware document
//gsoap tds  service method-encoding:	UpgradeSystemFirmware literal
//gsoap tds  service method-input-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware
//gsoap tds  service method-output-action:	UpgradeSystemFirmware http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmwareResponse
int __tds__UpgradeSystemFirmware(
    _tds__UpgradeSystemFirmware*        tds__UpgradeSystemFirmware,	///< Input parameter
    _tds__UpgradeSystemFirmwareResponse&tds__UpgradeSystemFirmwareResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SystemReboot                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SystemReboot" of service binding "DeviceBinding".
This operation reboots the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SystemReboot"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SystemReboot(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // output parameters:
    _tds__SystemRebootResponse         &tds__SystemRebootResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SystemReboot(
    struct soap *soap,
    // input parameters:
    _tds__SystemReboot*                 tds__SystemReboot,
    // output parameters:
    _tds__SystemRebootResponse         &tds__SystemRebootResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SystemReboot SOAP
//gsoap tds  service method-style:	SystemReboot document
//gsoap tds  service method-encoding:	SystemReboot literal
//gsoap tds  service method-input-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemReboot
//gsoap tds  service method-output-action:	SystemReboot http://www.onvif.org/ver10/device/wsdl/SystemRebootResponse
int __tds__SystemReboot(
    _tds__SystemReboot*                 tds__SystemReboot,	///< Input parameter
    _tds__SystemRebootResponse         &tds__SystemRebootResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RestoreSystem                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RestoreSystem" of service binding "DeviceBinding".
This operation restores the system backup configuration files(s) previously retrieved
from a
				device. The device should support restore of backup
configuration file(s) through the
				RestoreSystem command. The exact format of the backup
configuration file(s) is outside the
				scope of this standard. If the command is supported,
it shall accept backup files returned by
				the GetSystemBackup command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystem"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RestoreSystem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // output parameters:
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RestoreSystem(
    struct soap *soap,
    // input parameters:
    _tds__RestoreSystem*                tds__RestoreSystem,
    // output parameters:
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RestoreSystem SOAP
//gsoap tds  service method-style:	RestoreSystem document
//gsoap tds  service method-encoding:	RestoreSystem literal
//gsoap tds  service method-input-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystem
//gsoap tds  service method-output-action:	RestoreSystem http://www.onvif.org/ver10/device/wsdl/RestoreSystemResponse
int __tds__RestoreSystem(
    _tds__RestoreSystem*                tds__RestoreSystem,	///< Input parameter
    _tds__RestoreSystemResponse        &tds__RestoreSystemResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemBackup                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemBackup" of service binding "DeviceBinding".
This operation is retrieves system backup configuration file(s) from a device. The
device
				should support return of back up configuration file(s)
through the GetSystemBackup command.
				The backup is returned with reference to a name
and mime-type together with binary data.
				The exact format of the backup configuration files
is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemBackup(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // output parameters:
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemBackup(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemBackup*              tds__GetSystemBackup,
    // output parameters:
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemBackup SOAP
//gsoap tds  service method-style:	GetSystemBackup document
//gsoap tds  service method-encoding:	GetSystemBackup literal
//gsoap tds  service method-input-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackup
//gsoap tds  service method-output-action:	GetSystemBackup http://www.onvif.org/ver10/device/wsdl/GetSystemBackupResponse
int __tds__GetSystemBackup(
    _tds__GetSystemBackup*              tds__GetSystemBackup,	///< Input parameter
    _tds__GetSystemBackupResponse      &tds__GetSystemBackupResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemLog                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemLog" of service binding "DeviceBinding".
This operation gets a system log from the device. The exact format of the system
logs is outside the scope of this standard.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLog"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemLog(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // output parameters:
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemLog(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemLog*                 tds__GetSystemLog,
    // output parameters:
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemLog SOAP
//gsoap tds  service method-style:	GetSystemLog document
//gsoap tds  service method-encoding:	GetSystemLog literal
//gsoap tds  service method-input-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLog
//gsoap tds  service method-output-action:	GetSystemLog http://www.onvif.org/ver10/device/wsdl/GetSystemLogResponse
int __tds__GetSystemLog(
    _tds__GetSystemLog*                 tds__GetSystemLog,	///< Input parameter
    _tds__GetSystemLogResponse         &tds__GetSystemLogResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemSupportInformation                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemSupportInformation" of service binding "DeviceBinding".
This operation gets arbitary device diagnostics information from the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemSupportInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // output parameters:
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemSupportInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,
    // output parameters:
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemSupportInformation SOAP
//gsoap tds  service method-style:	GetSystemSupportInformation document
//gsoap tds  service method-encoding:	GetSystemSupportInformation literal
//gsoap tds  service method-input-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation
//gsoap tds  service method-output-action:	GetSystemSupportInformation http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformationResponse
int __tds__GetSystemSupportInformation(
    _tds__GetSystemSupportInformation*  tds__GetSystemSupportInformation,	///< Input parameter
    _tds__GetSystemSupportInformationResponse&tds__GetSystemSupportInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetScopes" of service binding "DeviceBinding".
This operation requests the scope parameters of a device. The scope parameters are
used in
				the device discovery to match a probe message, see
Section 7. The Scope parameters are of
				two different types: <ul>
					<li>Fixed</li>
					<li>Configurable</li>
				</ul>
				Fixed scope parameters are permanent device characteristics
and cannot be removed through the device management interface. 
				The scope type is indicated in the scope list returned
in the get scope parameters response. A device shall support 
				retrieval of discovery scope parameters through
the GetScopes command. As some scope parameters are mandatory, 
				the device shall return a non-empty scope list in
the response.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // output parameters:
    _tds__GetScopesResponse            &tds__GetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetScopes(
    struct soap *soap,
    // input parameters:
    _tds__GetScopes*                    tds__GetScopes,
    // output parameters:
    _tds__GetScopesResponse            &tds__GetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetScopes SOAP
//gsoap tds  service method-style:	GetScopes document
//gsoap tds  service method-encoding:	GetScopes literal
//gsoap tds  service method-input-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopes
//gsoap tds  service method-output-action:	GetScopes http://www.onvif.org/ver10/device/wsdl/GetScopesResponse
int __tds__GetScopes(
    _tds__GetScopes*                    tds__GetScopes,	///< Input parameter
    _tds__GetScopesResponse            &tds__GetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetScopes" of service binding "DeviceBinding".
This operation sets the scope parameters of a device. The scope parameters are used
in the
				device discovery to match a probe message.
				This operation replaces all existing configurable
scope parameters (not fixed parameters). If
				this shall be avoided, one should use the scope
add command instead. The device shall
				support configuration of discovery scope parameters
through the SetScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // output parameters:
    _tds__SetScopesResponse            &tds__SetScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetScopes(
    struct soap *soap,
    // input parameters:
    _tds__SetScopes*                    tds__SetScopes,
    // output parameters:
    _tds__SetScopesResponse            &tds__SetScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetScopes SOAP
//gsoap tds  service method-style:	SetScopes document
//gsoap tds  service method-encoding:	SetScopes literal
//gsoap tds  service method-input-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopes
//gsoap tds  service method-output-action:	SetScopes http://www.onvif.org/ver10/device/wsdl/SetScopesResponse
int __tds__SetScopes(
    _tds__SetScopes*                    tds__SetScopes,	///< Input parameter
    _tds__SetScopesResponse            &tds__SetScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddScopes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddScopes" of service binding "DeviceBinding".
This operation adds new configurable scope parameters to a device. The scope parameters
				are used in the device discovery to match a probe
message. The device shall
				support addition of discovery scope parameters through
the AddScopes command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // output parameters:
    _tds__AddScopesResponse            &tds__AddScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddScopes(
    struct soap *soap,
    // input parameters:
    _tds__AddScopes*                    tds__AddScopes,
    // output parameters:
    _tds__AddScopesResponse            &tds__AddScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	AddScopes SOAP
//gsoap tds  service method-style:	AddScopes document
//gsoap tds  service method-encoding:	AddScopes literal
//gsoap tds  service method-input-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopes
//gsoap tds  service method-output-action:	AddScopes http://www.onvif.org/ver10/device/wsdl/AddScopesResponse
int __tds__AddScopes(
    _tds__AddScopes*                    tds__AddScopes,	///< Input parameter
    _tds__AddScopesResponse            &tds__AddScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveScopes                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveScopes" of service binding "DeviceBinding".
This operation deletes scope-configurable scope parameters from a device. The scope
				parameters are used in the device discovery to match
a probe message, see Section 7. The
				device shall support deletion of discovery scope
parameters through the RemoveScopes
				command.
				Table

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopes"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveScopes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // output parameters:
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveScopes(
    struct soap *soap,
    // input parameters:
    _tds__RemoveScopes*                 tds__RemoveScopes,
    // output parameters:
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RemoveScopes SOAP
//gsoap tds  service method-style:	RemoveScopes document
//gsoap tds  service method-encoding:	RemoveScopes literal
//gsoap tds  service method-input-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopes
//gsoap tds  service method-output-action:	RemoveScopes http://www.onvif.org/ver10/device/wsdl/RemoveScopesResponse
int __tds__RemoveScopes(
    _tds__RemoveScopes*                 tds__RemoveScopes,	///< Input parameter
    _tds__RemoveScopesResponse         &tds__RemoveScopesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDiscoveryMode" of service binding "DeviceBinding".
This operation gets the discovery mode of a device. See Section 7.2 for the definition
of the
				different device discovery modes. The device shall
support retrieval of the discovery mode
				setting through the GetDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // output parameters:
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,
    // output parameters:
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDiscoveryMode SOAP
//gsoap tds  service method-style:	GetDiscoveryMode document
//gsoap tds  service method-encoding:	GetDiscoveryMode literal
//gsoap tds  service method-input-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode
//gsoap tds  service method-output-action:	GetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetDiscoveryModeResponse
int __tds__GetDiscoveryMode(
    _tds__GetDiscoveryMode*             tds__GetDiscoveryMode,	///< Input parameter
    _tds__GetDiscoveryModeResponse     &tds__GetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDiscoveryMode                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDiscoveryMode" of service binding "DeviceBinding".
This operation sets the discovery mode operation of a device. See Section 7.2 for
the
				definition of the different device discovery modes.
The device shall support configuration of
				the discovery mode setting through the SetDiscoveryMode
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // output parameters:
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,
    // output parameters:
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDiscoveryMode SOAP
//gsoap tds  service method-style:	SetDiscoveryMode document
//gsoap tds  service method-encoding:	SetDiscoveryMode literal
//gsoap tds  service method-input-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode
//gsoap tds  service method-output-action:	SetDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetDiscoveryModeResponse
int __tds__SetDiscoveryMode(
    _tds__SetDiscoveryMode*             tds__SetDiscoveryMode,	///< Input parameter
    _tds__SetDiscoveryModeResponse     &tds__SetDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation gets the remote discovery mode of a device. See Section 7.4 for the
definition
				of remote discovery extensions. A device that supports
remote discovery shall support
				retrieval of the remote discovery mode setting through
the GetRemoteDiscoveryMode
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // output parameters:
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,
    // output parameters:
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	GetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	GetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	GetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryModeResponse
int __tds__GetRemoteDiscoveryMode(
    _tds__GetRemoteDiscoveryMode*       tds__GetRemoteDiscoveryMode,	///< Input parameter
    _tds__GetRemoteDiscoveryModeResponse&tds__GetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteDiscoveryMode                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteDiscoveryMode" of service binding "DeviceBinding".
This operation sets the remote discovery mode of operation of a device. See Section
7.4 for
				the definition of remote discovery remote extensions.
A device that supports remote discovery
				shall support configuration of the discovery mode
setting through the
				SetRemoteDiscoveryMode command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // output parameters:
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteDiscoveryMode(
    struct soap *soap,
    // input parameters:
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,
    // output parameters:
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRemoteDiscoveryMode SOAP
//gsoap tds  service method-style:	SetRemoteDiscoveryMode document
//gsoap tds  service method-encoding:	SetRemoteDiscoveryMode literal
//gsoap tds  service method-input-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode
//gsoap tds  service method-output-action:	SetRemoteDiscoveryMode http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryModeResponse
int __tds__SetRemoteDiscoveryMode(
    _tds__SetRemoteDiscoveryMode*       tds__SetRemoteDiscoveryMode,	///< Input parameter
    _tds__SetRemoteDiscoveryModeResponse&tds__SetRemoteDiscoveryModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDPAddresses" of service binding "DeviceBinding".
This operation gets the remote DP address or addresses from a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support retrieval of the remote
				DP address(es) through the GetDPAddresses command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // output parameters:
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDPAddresses(
    struct soap *soap,
    // input parameters:
    _tds__GetDPAddresses*               tds__GetDPAddresses,
    // output parameters:
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDPAddresses SOAP
//gsoap tds  service method-style:	GetDPAddresses document
//gsoap tds  service method-encoding:	GetDPAddresses literal
//gsoap tds  service method-input-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddresses
//gsoap tds  service method-output-action:	GetDPAddresses http://www.onvif.org/ver10/device/wsdl/GetDPAddressesResponse
int __tds__GetDPAddresses(
    _tds__GetDPAddresses*               tds__GetDPAddresses,	///< Input parameter
    _tds__GetDPAddressesResponse       &tds__GetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetEndpointReference                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetEndpointReference" of service binding "DeviceBinding".
A client can ask for the device service endpoint reference address property that
can be used
				to derive the password equivalent for remote user
operation. The device shall support the
				GetEndpointReference command returning the address
property of the device service
				endpoint reference.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetEndpointReference(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetEndpointReference*         tds__GetEndpointReference,
    // output parameters:
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetEndpointReference(
    struct soap *soap,
    // input parameters:
    _tds__GetEndpointReference*         tds__GetEndpointReference,
    // output parameters:
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetEndpointReference SOAP
//gsoap tds  service method-style:	GetEndpointReference document
//gsoap tds  service method-encoding:	GetEndpointReference literal
//gsoap tds  service method-input-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReference
//gsoap tds  service method-output-action:	GetEndpointReference http://www.onvif.org/ver10/device/wsdl/GetEndpointReferenceResponse
int __tds__GetEndpointReference(
    _tds__GetEndpointReference*         tds__GetEndpointReference,	///< Input parameter
    _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRemoteUser" of service binding "DeviceBinding".
This operation returns the configured remote user (if any). A device supporting
remote user
				handling shall support this operation. The user
is only valid for the WS-UserToken profile or
				as a HTTP / RTSP user.<br/>
				The algorithm to use for deriving the password is
described in section 5.12.2.1 of the core specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRemoteUser*                tds__GetRemoteUser,
    // output parameters:
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRemoteUser(
    struct soap *soap,
    // input parameters:
    _tds__GetRemoteUser*                tds__GetRemoteUser,
    // output parameters:
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRemoteUser SOAP
//gsoap tds  service method-style:	GetRemoteUser document
//gsoap tds  service method-encoding:	GetRemoteUser literal
//gsoap tds  service method-input-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUser
//gsoap tds  service method-output-action:	GetRemoteUser http://www.onvif.org/ver10/device/wsdl/GetRemoteUserResponse
int __tds__GetRemoteUser(
    _tds__GetRemoteUser*                tds__GetRemoteUser,	///< Input parameter
    _tds__GetRemoteUserResponse        &tds__GetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRemoteUser                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRemoteUser" of service binding "DeviceBinding".
This operation sets the remote user. A device supporting remote user handling shall
support this
				operation. The user is only valid for the WS-UserToken
profile or as a HTTP / RTSP user.<br/>
				The password that is set shall always be the original
(not derived) password.<br/>
				If UseDerivedPassword is set password derivation
shall be done by the device when connecting to a
				remote device.The algorithm to use for deriving
the password is described in section 5.12.2.1 of the core specification.<br/>
				To remove the remote user SetRemoteUser should be
called without the RemoteUser parameter.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRemoteUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRemoteUser*                tds__SetRemoteUser,
    // output parameters:
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRemoteUser(
    struct soap *soap,
    // input parameters:
    _tds__SetRemoteUser*                tds__SetRemoteUser,
    // output parameters:
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRemoteUser SOAP
//gsoap tds  service method-style:	SetRemoteUser document
//gsoap tds  service method-encoding:	SetRemoteUser literal
//gsoap tds  service method-input-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUser
//gsoap tds  service method-output-action:	SetRemoteUser http://www.onvif.org/ver10/device/wsdl/SetRemoteUserResponse
int __tds__SetRemoteUser(
    _tds__SetRemoteUser*                tds__SetRemoteUser,	///< Input parameter
    _tds__SetRemoteUserResponse        &tds__SetRemoteUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetUsers                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetUsers" of service binding "DeviceBinding".
This operation lists the registered users and corresponding credentials on a device.
The
				device shall support retrieval of registered device
users and their credentials for the user
				token through the GetUsers command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // output parameters:
    _tds__GetUsersResponse             &tds__GetUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetUsers(
    struct soap *soap,
    // input parameters:
    _tds__GetUsers*                     tds__GetUsers,
    // output parameters:
    _tds__GetUsersResponse             &tds__GetUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetUsers SOAP
//gsoap tds  service method-style:	GetUsers document
//gsoap tds  service method-encoding:	GetUsers literal
//gsoap tds  service method-input-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsers
//gsoap tds  service method-output-action:	GetUsers http://www.onvif.org/ver10/device/wsdl/GetUsersResponse
int __tds__GetUsers(
    _tds__GetUsers*                     tds__GetUsers,	///< Input parameter
    _tds__GetUsersResponse             &tds__GetUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateUsers" of service binding "DeviceBinding".
This operation creates new device users and corresponding credentials on a device
for authentication purposes. 
				The device shall support creation of device users
and their credentials through the CreateUsers
				command. Either all users are created successfully
or a fault message shall be returned
				without creating any user.<br/>
				ONVIF compliant devices are recommended to support
password length of at least 28 bytes,
				as clients may follow the password derivation mechanism
which results in 'password
				equivalent' of length 28 bytes, as described in
section 3.1.2 of the ONVIF security white paper.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // output parameters:
    _tds__CreateUsersResponse          &tds__CreateUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateUsers(
    struct soap *soap,
    // input parameters:
    _tds__CreateUsers*                  tds__CreateUsers,
    // output parameters:
    _tds__CreateUsersResponse          &tds__CreateUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateUsers SOAP
//gsoap tds  service method-style:	CreateUsers document
//gsoap tds  service method-encoding:	CreateUsers literal
//gsoap tds  service method-input-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsers
//gsoap tds  service method-output-action:	CreateUsers http://www.onvif.org/ver10/device/wsdl/CreateUsersResponse
int __tds__CreateUsers(
    _tds__CreateUsers*                  tds__CreateUsers,	///< Input parameter
    _tds__CreateUsersResponse          &tds__CreateUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteUsers                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteUsers" of service binding "DeviceBinding".
This operation deletes users on a device. The device shall support deletion of device
users and their credentials 
				through the DeleteUsers command. A device may have
one or more fixed users
				that cannot be deleted to ensure access to the unit.
Either all users are deleted successfully or a
				fault message shall be returned and no users be
deleted.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsers"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteUsers(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // output parameters:
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteUsers(
    struct soap *soap,
    // input parameters:
    _tds__DeleteUsers*                  tds__DeleteUsers,
    // output parameters:
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteUsers SOAP
//gsoap tds  service method-style:	DeleteUsers document
//gsoap tds  service method-encoding:	DeleteUsers literal
//gsoap tds  service method-input-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsers
//gsoap tds  service method-output-action:	DeleteUsers http://www.onvif.org/ver10/device/wsdl/DeleteUsersResponse
int __tds__DeleteUsers(
    _tds__DeleteUsers*                  tds__DeleteUsers,	///< Input parameter
    _tds__DeleteUsersResponse          &tds__DeleteUsersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetUser                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetUser" of service binding "DeviceBinding".
This operation updates the settings for one or several users on a device for authentication
purposes.
				The device shall support update of device users
and their credentials through the SetUser command. 
				Either all change requests are processed successfully
or a fault message shall be returned and no change requests be processed.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetUser"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetUserResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetUser*                      tds__SetUser,
    // output parameters:
    _tds__SetUserResponse              &tds__SetUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetUser(
    struct soap *soap,
    // input parameters:
    _tds__SetUser*                      tds__SetUser,
    // output parameters:
    _tds__SetUserResponse              &tds__SetUserResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetUser SOAP
//gsoap tds  service method-style:	SetUser document
//gsoap tds  service method-encoding:	SetUser literal
//gsoap tds  service method-input-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUser
//gsoap tds  service method-output-action:	SetUser http://www.onvif.org/ver10/device/wsdl/SetUserResponse
int __tds__SetUser(
    _tds__SetUser*                      tds__SetUser,	///< Input parameter
    _tds__SetUserResponse              &tds__SetUserResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetWsdlUrl                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetWsdlUrl" of service binding "DeviceBinding".
It is possible for an endpoint to request a URL that can be used to retrieve the
complete
				schema and WSDL definitions of a device. The command
gives in return a URL entry point
				where all the necessary product specific WSDL and
schema definitions can be retrieved. The
				device shall provide a URL for WSDL and schema download
through the GetWsdlUrl command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetWsdlUrl(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // output parameters:
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetWsdlUrl(
    struct soap *soap,
    // input parameters:
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,
    // output parameters:
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetWsdlUrl SOAP
//gsoap tds  service method-style:	GetWsdlUrl document
//gsoap tds  service method-encoding:	GetWsdlUrl literal
//gsoap tds  service method-input-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl
//gsoap tds  service method-output-action:	GetWsdlUrl http://www.onvif.org/ver10/device/wsdl/GetWsdlUrlResponse
int __tds__GetWsdlUrl(
    _tds__GetWsdlUrl*                   tds__GetWsdlUrl,	///< Input parameter
    _tds__GetWsdlUrlResponse           &tds__GetWsdlUrlResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCapabilities                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCapabilities" of service binding "DeviceBinding".
This method has been replaced by the more generic GetServices method.
			 For capabilities of individual services refer to the GetServiceCapabilities
methods.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // output parameters:
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCapabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetCapabilities*              tds__GetCapabilities,
    // output parameters:
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCapabilities SOAP
//gsoap tds  service method-style:	GetCapabilities document
//gsoap tds  service method-encoding:	GetCapabilities literal
//gsoap tds  service method-input-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilities
//gsoap tds  service method-output-action:	GetCapabilities http://www.onvif.org/ver10/device/wsdl/GetCapabilitiesResponse
int __tds__GetCapabilities(
    _tds__GetCapabilities*              tds__GetCapabilities,	///< Input parameter
    _tds__GetCapabilitiesResponse      &tds__GetCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDPAddresses                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDPAddresses" of service binding "DeviceBinding".
This operation sets the remote DP address or addresses on a device. If the device
supports
				remote discovery, as specified in Section 7.4, the
device shall support configuration of the
				remote DP address(es) through the SetDPAddresses
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDPAddresses(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // output parameters:
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDPAddresses(
    struct soap *soap,
    // input parameters:
    _tds__SetDPAddresses*               tds__SetDPAddresses,
    // output parameters:
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDPAddresses SOAP
//gsoap tds  service method-style:	SetDPAddresses document
//gsoap tds  service method-encoding:	SetDPAddresses literal
//gsoap tds  service method-input-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddresses
//gsoap tds  service method-output-action:	SetDPAddresses http://www.onvif.org/ver10/device/wsdl/SetDPAddressesResponse
int __tds__SetDPAddresses(
    _tds__SetDPAddresses*               tds__SetDPAddresses,	///< Input parameter
    _tds__SetDPAddressesResponse       &tds__SetDPAddressesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetHostname" of service binding "DeviceBinding".
This operation is used by an endpoint to get the hostname from a device. The device
shall
				return its hostname configurations through the GetHostname
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // output parameters:
    _tds__GetHostnameResponse          &tds__GetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetHostname(
    struct soap *soap,
    // input parameters:
    _tds__GetHostname*                  tds__GetHostname,
    // output parameters:
    _tds__GetHostnameResponse          &tds__GetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetHostname SOAP
//gsoap tds  service method-style:	GetHostname document
//gsoap tds  service method-encoding:	GetHostname literal
//gsoap tds  service method-input-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostname
//gsoap tds  service method-output-action:	GetHostname http://www.onvif.org/ver10/device/wsdl/GetHostnameResponse
int __tds__GetHostname(
    _tds__GetHostname*                  tds__GetHostname,	///< Input parameter
    _tds__GetHostnameResponse          &tds__GetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostname                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostname" of service binding "DeviceBinding".
This operation sets the hostname on a device. It shall be possible to set the device
hostname
				configurations through the SetHostname command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.

			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostname"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostname(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // output parameters:
    _tds__SetHostnameResponse          &tds__SetHostnameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostname(
    struct soap *soap,
    // input parameters:
    _tds__SetHostname*                  tds__SetHostname,
    // output parameters:
    _tds__SetHostnameResponse          &tds__SetHostnameResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHostname SOAP
//gsoap tds  service method-style:	SetHostname document
//gsoap tds  service method-encoding:	SetHostname literal
//gsoap tds  service method-input-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostname
//gsoap tds  service method-output-action:	SetHostname http://www.onvif.org/ver10/device/wsdl/SetHostnameResponse
int __tds__SetHostname(
    _tds__SetHostname*                  tds__SetHostname,	///< Input parameter
    _tds__SetHostnameResponse          &tds__SetHostnameResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetHostnameFromDHCP                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetHostnameFromDHCP" of service binding "DeviceBinding".
This operation controls whether the hostname is set manually or retrieved via DHCP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetHostnameFromDHCP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,
    // output parameters:
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetHostnameFromDHCP(
    struct soap *soap,
    // input parameters:
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,
    // output parameters:
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetHostnameFromDHCP SOAP
//gsoap tds  service method-style:	SetHostnameFromDHCP document
//gsoap tds  service method-encoding:	SetHostnameFromDHCP literal
//gsoap tds  service method-input-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP
//gsoap tds  service method-output-action:	SetHostnameFromDHCP http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCPResponse
int __tds__SetHostnameFromDHCP(
    _tds__SetHostnameFromDHCP*          tds__SetHostnameFromDHCP,	///< Input parameter
    _tds__SetHostnameFromDHCPResponse  &tds__SetHostnameFromDHCPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDNS" of service binding "DeviceBinding".
This operation gets the DNS settings from a device. The device shall return its
DNS
				configurations through the GetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // output parameters:
    _tds__GetDNSResponse               &tds__GetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDNS(
    struct soap *soap,
    // input parameters:
    _tds__GetDNS*                       tds__GetDNS,
    // output parameters:
    _tds__GetDNSResponse               &tds__GetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDNS SOAP
//gsoap tds  service method-style:	GetDNS document
//gsoap tds  service method-encoding:	GetDNS literal
//gsoap tds  service method-input-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNS
//gsoap tds  service method-output-action:	GetDNS http://www.onvif.org/ver10/device/wsdl/GetDNSResponse
int __tds__GetDNS(
    _tds__GetDNS*                       tds__GetDNS,	///< Input parameter
    _tds__GetDNSResponse               &tds__GetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDNS                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDNS" of service binding "DeviceBinding".
This operation sets the DNS settings on a device. It shall be possible to set the
device DNS
				configurations through the SetDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // output parameters:
    _tds__SetDNSResponse               &tds__SetDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDNS(
    struct soap *soap,
    // input parameters:
    _tds__SetDNS*                       tds__SetDNS,
    // output parameters:
    _tds__SetDNSResponse               &tds__SetDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDNS SOAP
//gsoap tds  service method-style:	SetDNS document
//gsoap tds  service method-encoding:	SetDNS literal
//gsoap tds  service method-input-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNS
//gsoap tds  service method-output-action:	SetDNS http://www.onvif.org/ver10/device/wsdl/SetDNSResponse
int __tds__SetDNS(
    _tds__SetDNS*                       tds__SetDNS,	///< Input parameter
    _tds__SetDNSResponse               &tds__SetDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNTP" of service binding "DeviceBinding".
This operation gets the NTP settings from a device. If the device supports NTP,
it shall be
				possible to get the NTP server settings through
the GetNTP command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // output parameters:
    _tds__GetNTPResponse               &tds__GetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNTP(
    struct soap *soap,
    // input parameters:
    _tds__GetNTP*                       tds__GetNTP,
    // output parameters:
    _tds__GetNTPResponse               &tds__GetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNTP SOAP
//gsoap tds  service method-style:	GetNTP document
//gsoap tds  service method-encoding:	GetNTP literal
//gsoap tds  service method-input-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTP
//gsoap tds  service method-output-action:	GetNTP http://www.onvif.org/ver10/device/wsdl/GetNTPResponse
int __tds__GetNTP(
    _tds__GetNTP*                       tds__GetNTP,	///< Input parameter
    _tds__GetNTPResponse               &tds__GetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNTP                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNTP" of service binding "DeviceBinding".
This operation sets the NTP settings on a device. If the device supports NTP, it
shall be
				possible to set the NTP server settings through
the SetNTP command.<br/>
				A device shall accept string formated according
to RFC 1123 section 2.1 or alternatively to RFC 952, 
				other string shall be considered as invalid strings.
<br/>
				Changes to the NTP server list will not affect the
clock mode DateTimeType. Use SetSystemDateAndTime to activate NTP operation.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNTP"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNTPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // output parameters:
    _tds__SetNTPResponse               &tds__SetNTPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNTP(
    struct soap *soap,
    // input parameters:
    _tds__SetNTP*                       tds__SetNTP,
    // output parameters:
    _tds__SetNTPResponse               &tds__SetNTPResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNTP SOAP
//gsoap tds  service method-style:	SetNTP document
//gsoap tds  service method-encoding:	SetNTP literal
//gsoap tds  service method-input-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTP
//gsoap tds  service method-output-action:	SetNTP http://www.onvif.org/ver10/device/wsdl/SetNTPResponse
int __tds__SetNTP(
    _tds__SetNTP*                       tds__SetNTP,	///< Input parameter
    _tds__SetNTPResponse               &tds__SetNTPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDynamicDNS" of service binding "DeviceBinding".
This operation gets the dynamic DNS settings from a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to get the type, name
				and TTL through the GetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // output parameters:
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDynamicDNS(
    struct soap *soap,
    // input parameters:
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,
    // output parameters:
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDynamicDNS SOAP
//gsoap tds  service method-style:	GetDynamicDNS document
//gsoap tds  service method-encoding:	GetDynamicDNS literal
//gsoap tds  service method-input-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS
//gsoap tds  service method-output-action:	GetDynamicDNS http://www.onvif.org/ver10/device/wsdl/GetDynamicDNSResponse
int __tds__GetDynamicDNS(
    _tds__GetDynamicDNS*                tds__GetDynamicDNS,	///< Input parameter
    _tds__GetDynamicDNSResponse        &tds__GetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDynamicDNS                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDynamicDNS" of service binding "DeviceBinding".
This operation sets the dynamic DNS settings on a device. If the device supports
dynamic
				DNS as specified in [RFC 2136] and [RFC 4702], it
shall be possible to set the type, name
				and TTL through the SetDynamicDNS command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDynamicDNS(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // output parameters:
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDynamicDNS(
    struct soap *soap,
    // input parameters:
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,
    // output parameters:
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDynamicDNS SOAP
//gsoap tds  service method-style:	SetDynamicDNS document
//gsoap tds  service method-encoding:	SetDynamicDNS literal
//gsoap tds  service method-input-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS
//gsoap tds  service method-output-action:	SetDynamicDNS http://www.onvif.org/ver10/device/wsdl/SetDynamicDNSResponse
int __tds__SetDynamicDNS(
    _tds__SetDynamicDNS*                tds__SetDynamicDNS,	///< Input parameter
    _tds__SetDynamicDNSResponse        &tds__SetDynamicDNSResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkInterfaces" of service binding "DeviceBinding".
This operation gets the network interface configuration from a device. The device
shall
				support return of network interface configuration
settings as defined by the NetworkInterface
				type through the GetNetworkInterfaces command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // output parameters:
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,
    // output parameters:
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkInterfaces SOAP
//gsoap tds  service method-style:	GetNetworkInterfaces document
//gsoap tds  service method-encoding:	GetNetworkInterfaces literal
//gsoap tds  service method-input-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces
//gsoap tds  service method-output-action:	GetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfacesResponse
int __tds__GetNetworkInterfaces(
    _tds__GetNetworkInterfaces*         tds__GetNetworkInterfaces,	///< Input parameter
    _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkInterfaces                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkInterfaces" of service binding "DeviceBinding".
This operation sets the network interface configuration on a device. The device
shall support
				network configuration of supported network interfaces
through the SetNetworkInterfaces
				command.<br/>
				For interoperability with a client unaware of the
IEEE 802.11 extension a device shall retain
				its IEEE 802.11 configuration if the IEEE 802.11
configuration element isnt present in the
				request.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkInterfaces(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // output parameters:
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkInterfaces(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,
    // output parameters:
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkInterfaces SOAP
//gsoap tds  service method-style:	SetNetworkInterfaces document
//gsoap tds  service method-encoding:	SetNetworkInterfaces literal
//gsoap tds  service method-input-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces
//gsoap tds  service method-output-action:	SetNetworkInterfaces http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfacesResponse
int __tds__SetNetworkInterfaces(
    _tds__SetNetworkInterfaces*         tds__SetNetworkInterfaces,	///< Input parameter
    _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkProtocols" of service binding "DeviceBinding".
This operation gets defined network protocols from a device. The device shall support
the
				GetNetworkProtocols command returning configured
network protocols.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // output parameters:
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,
    // output parameters:
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkProtocols SOAP
//gsoap tds  service method-style:	GetNetworkProtocols document
//gsoap tds  service method-encoding:	GetNetworkProtocols literal
//gsoap tds  service method-input-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols
//gsoap tds  service method-output-action:	GetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocolsResponse
int __tds__GetNetworkProtocols(
    _tds__GetNetworkProtocols*          tds__GetNetworkProtocols,	///< Input parameter
    _tds__GetNetworkProtocolsResponse  &tds__GetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkProtocols                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkProtocols" of service binding "DeviceBinding".
This operation configures defined network protocols on a device. The device shall
support
				configuration of defined network protocols through
the SetNetworkProtocols command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkProtocols(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // output parameters:
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkProtocols(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,
    // output parameters:
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkProtocols SOAP
//gsoap tds  service method-style:	SetNetworkProtocols document
//gsoap tds  service method-encoding:	SetNetworkProtocols literal
//gsoap tds  service method-input-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols
//gsoap tds  service method-output-action:	SetNetworkProtocols http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocolsResponse
int __tds__SetNetworkProtocols(
    _tds__SetNetworkProtocols*          tds__SetNetworkProtocols,	///< Input parameter
    _tds__SetNetworkProtocolsResponse  &tds__SetNetworkProtocolsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation gets the default gateway settings from a device. The device shall
support the
				GetNetworkDefaultGateway command returning configured
default gateway address(es).

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // output parameters:
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,
    // output parameters:
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	GetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	GetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway
//gsoap tds  service method-output-action:	GetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGatewayResponse
int __tds__GetNetworkDefaultGateway(
    _tds__GetNetworkDefaultGateway*     tds__GetNetworkDefaultGateway,	///< Input parameter
    _tds__GetNetworkDefaultGatewayResponse&tds__GetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetNetworkDefaultGateway                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetNetworkDefaultGateway" of service binding "DeviceBinding".
This operation sets the default gateway settings on a device. The device shall support
				configuration of default gateway through the SetNetworkDefaultGateway
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetNetworkDefaultGateway(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // output parameters:
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetNetworkDefaultGateway(
    struct soap *soap,
    // input parameters:
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,
    // output parameters:
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetNetworkDefaultGateway SOAP
//gsoap tds  service method-style:	SetNetworkDefaultGateway document
//gsoap tds  service method-encoding:	SetNetworkDefaultGateway literal
//gsoap tds  service method-input-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway
//gsoap tds  service method-output-action:	SetNetworkDefaultGateway http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGatewayResponse
int __tds__SetNetworkDefaultGateway(
    _tds__SetNetworkDefaultGateway*     tds__SetNetworkDefaultGateway,	///< Input parameter
    _tds__SetNetworkDefaultGatewayResponse&tds__SetNetworkDefaultGatewayResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetZeroConfiguration" of service binding "DeviceBinding".
This operation gets the zero-configuration from a device. If the device supports
dynamic IP
				configuration according to [RFC3927], it shall support
the return of IPv4 zero configuration
				address and status through the GetZeroConfiguration
command.<br/>
			Devices supporting zero configuration on more than one interface
shall use the extension to list the additional interface settings.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // output parameters:
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,
    // output parameters:
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetZeroConfiguration SOAP
//gsoap tds  service method-style:	GetZeroConfiguration document
//gsoap tds  service method-encoding:	GetZeroConfiguration literal
//gsoap tds  service method-input-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration
//gsoap tds  service method-output-action:	GetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/GetZeroConfigurationResponse
int __tds__GetZeroConfiguration(
    _tds__GetZeroConfiguration*         tds__GetZeroConfiguration,	///< Input parameter
    _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetZeroConfiguration                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetZeroConfiguration" of service binding "DeviceBinding".
This operation sets the zero-configuration. Use GetCapalities to get if zero-zero-configuration
is supported or not.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetZeroConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // output parameters:
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetZeroConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,
    // output parameters:
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetZeroConfiguration SOAP
//gsoap tds  service method-style:	SetZeroConfiguration document
//gsoap tds  service method-encoding:	SetZeroConfiguration literal
//gsoap tds  service method-input-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration
//gsoap tds  service method-output-action:	SetZeroConfiguration http://www.onvif.org/ver10/device/wsdl/SetZeroConfigurationResponse
int __tds__SetZeroConfiguration(
    _tds__SetZeroConfiguration*         tds__SetZeroConfiguration,	///< Input parameter
    _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetIPAddressFilter" of service binding "DeviceBinding".
This operation gets the IP address filter settings from a device. If the device
supports device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support the GetIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // output parameters:
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,
    // output parameters:
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetIPAddressFilter SOAP
//gsoap tds  service method-style:	GetIPAddressFilter document
//gsoap tds  service method-encoding:	GetIPAddressFilter literal
//gsoap tds  service method-input-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter
//gsoap tds  service method-output-action:	GetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilterResponse
int __tds__GetIPAddressFilter(
    _tds__GetIPAddressFilter*           tds__GetIPAddressFilter,	///< Input parameter
    _tds__GetIPAddressFilterResponse   &tds__GetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetIPAddressFilter" of service binding "DeviceBinding".
This operation sets the IP address filter settings on a device. If the device supports
device
				access control based on IP filtering rules (denied
or accepted ranges of IP addresses), the
				device shall support configuration of IP filtering
rules through the SetIPAddressFilter
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // output parameters:
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,
    // output parameters:
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetIPAddressFilter SOAP
//gsoap tds  service method-style:	SetIPAddressFilter document
//gsoap tds  service method-encoding:	SetIPAddressFilter literal
//gsoap tds  service method-input-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter
//gsoap tds  service method-output-action:	SetIPAddressFilter http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilterResponse
int __tds__SetIPAddressFilter(
    _tds__SetIPAddressFilter*           tds__SetIPAddressFilter,	///< Input parameter
    _tds__SetIPAddressFilterResponse   &tds__SetIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__AddIPAddressFilter                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__AddIPAddressFilter" of service binding "DeviceBinding".
This operation adds an IP filter address to a device. If the device supports device
access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support adding of IP filtering addresses through
the AddIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__AddIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // output parameters:
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__AddIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,
    // output parameters:
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	AddIPAddressFilter SOAP
//gsoap tds  service method-style:	AddIPAddressFilter document
//gsoap tds  service method-encoding:	AddIPAddressFilter literal
//gsoap tds  service method-input-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter
//gsoap tds  service method-output-action:	AddIPAddressFilter http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilterResponse
int __tds__AddIPAddressFilter(
    _tds__AddIPAddressFilter*           tds__AddIPAddressFilter,	///< Input parameter
    _tds__AddIPAddressFilterResponse   &tds__AddIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__RemoveIPAddressFilter                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__RemoveIPAddressFilter" of service binding "DeviceBinding".
This operation deletes an IP filter address from a device. If the device supports
device access
				control based on IP filtering rules (denied or accepted
ranges of IP addresses), the device
				shall support deletion of IP filtering addresses
through the RemoveIPAddressFilter command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__RemoveIPAddressFilter(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // output parameters:
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__RemoveIPAddressFilter(
    struct soap *soap,
    // input parameters:
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,
    // output parameters:
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	RemoveIPAddressFilter SOAP
//gsoap tds  service method-style:	RemoveIPAddressFilter document
//gsoap tds  service method-encoding:	RemoveIPAddressFilter literal
//gsoap tds  service method-input-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter
//gsoap tds  service method-output-action:	RemoveIPAddressFilter http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilterResponse
int __tds__RemoveIPAddressFilter(
    _tds__RemoveIPAddressFilter*        tds__RemoveIPAddressFilter,	///< Input parameter
    _tds__RemoveIPAddressFilterResponse&tds__RemoveIPAddressFilterResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetAccessPolicy" of service binding "DeviceBinding".
Access to different services and sub-sets of services should be subject to access
control. The
				WS-Security framework gives the prerequisite for
end-point authentication. Authorization
				decisions can then be taken using an access security
policy. This standard does not mandate
				any particular policy description format or security
policy but this is up to the device
				manufacturer or system provider to choose policy
and policy description format of choice.
				However, an access policy (in arbitrary format)
can be requested using this command. If the
				device supports access policy settings based on
WS-Security authentication, then the device
				shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // output parameters:
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetAccessPolicy(
    struct soap *soap,
    // input parameters:
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,
    // output parameters:
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetAccessPolicy SOAP
//gsoap tds  service method-style:	GetAccessPolicy document
//gsoap tds  service method-encoding:	GetAccessPolicy literal
//gsoap tds  service method-input-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy
//gsoap tds  service method-output-action:	GetAccessPolicy http://www.onvif.org/ver10/device/wsdl/GetAccessPolicyResponse
int __tds__GetAccessPolicy(
    _tds__GetAccessPolicy*              tds__GetAccessPolicy,	///< Input parameter
    _tds__GetAccessPolicyResponse      &tds__GetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetAccessPolicy                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetAccessPolicy" of service binding "DeviceBinding".
This command sets the device access security policy (for more details on the access
security
				policy see the Get command). If the device supports
access policy settings
				based on WS-Security authentication, then the device
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetAccessPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // output parameters:
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetAccessPolicy(
    struct soap *soap,
    // input parameters:
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,
    // output parameters:
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetAccessPolicy SOAP
//gsoap tds  service method-style:	SetAccessPolicy document
//gsoap tds  service method-encoding:	SetAccessPolicy literal
//gsoap tds  service method-input-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy
//gsoap tds  service method-output-action:	SetAccessPolicy http://www.onvif.org/ver10/device/wsdl/SetAccessPolicyResponse
int __tds__SetAccessPolicy(
    _tds__SetAccessPolicy*              tds__SetAccessPolicy,	///< Input parameter
    _tds__SetAccessPolicyResponse      &tds__SetAccessPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateCertificate                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateCertificate" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificate"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateCertificate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // output parameters:
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateCertificate(
    struct soap *soap,
    // input parameters:
    _tds__CreateCertificate*            tds__CreateCertificate,
    // output parameters:
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateCertificate SOAP
//gsoap tds  service method-style:	CreateCertificate document
//gsoap tds  service method-encoding:	CreateCertificate literal
//gsoap tds  service method-input-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificate
//gsoap tds  service method-output-action:	CreateCertificate http://www.onvif.org/ver10/device/wsdl/CreateCertificateResponse
int __tds__CreateCertificate(
    _tds__CreateCertificate*            tds__CreateCertificate,	///< Input parameter
    _tds__CreateCertificateResponse    &tds__CreateCertificateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificates                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // output parameters:
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificates(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificates*              tds__GetCertificates,
    // output parameters:
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificates SOAP
//gsoap tds  service method-style:	GetCertificates document
//gsoap tds  service method-encoding:	GetCertificates literal
//gsoap tds  service method-input-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificates
//gsoap tds  service method-output-action:	GetCertificates http://www.onvif.org/ver10/device/wsdl/GetCertificatesResponse
int __tds__GetCertificates(
    _tds__GetCertificates*              tds__GetCertificates,	///< Input parameter
    _tds__GetCertificatesResponse      &tds__GetCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // output parameters:
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,
    // output parameters:
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificatesStatus SOAP
//gsoap tds  service method-style:	GetCertificatesStatus document
//gsoap tds  service method-encoding:	GetCertificatesStatus literal
//gsoap tds  service method-input-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus
//gsoap tds  service method-output-action:	GetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatusResponse
int __tds__GetCertificatesStatus(
    _tds__GetCertificatesStatus*        tds__GetCertificatesStatus,	///< Input parameter
    _tds__GetCertificatesStatusResponse&tds__GetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetCertificatesStatus                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetCertificatesStatus" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetCertificatesStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // output parameters:
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetCertificatesStatus(
    struct soap *soap,
    // input parameters:
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,
    // output parameters:
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetCertificatesStatus SOAP
//gsoap tds  service method-style:	SetCertificatesStatus document
//gsoap tds  service method-encoding:	SetCertificatesStatus literal
//gsoap tds  service method-input-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus
//gsoap tds  service method-output-action:	SetCertificatesStatus http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatusResponse
int __tds__SetCertificatesStatus(
    _tds__SetCertificatesStatus*        tds__SetCertificatesStatus,	///< Input parameter
    _tds__SetCertificatesStatusResponse&tds__SetCertificatesStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteCertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // output parameters:
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteCertificates(
    struct soap *soap,
    // input parameters:
    _tds__DeleteCertificates*           tds__DeleteCertificates,
    // output parameters:
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteCertificates SOAP
//gsoap tds  service method-style:	DeleteCertificates document
//gsoap tds  service method-encoding:	DeleteCertificates literal
//gsoap tds  service method-input-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificates
//gsoap tds  service method-output-action:	DeleteCertificates http://www.onvif.org/ver10/device/wsdl/DeleteCertificatesResponse
int __tds__DeleteCertificates(
    _tds__DeleteCertificates*           tds__DeleteCertificates,	///< Input parameter
    _tds__DeleteCertificatesResponse   &tds__DeleteCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetPkcs10Request                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetPkcs10Request" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetPkcs10Request(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // output parameters:
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetPkcs10Request(
    struct soap *soap,
    // input parameters:
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,
    // output parameters:
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetPkcs10Request SOAP
//gsoap tds  service method-style:	GetPkcs10Request document
//gsoap tds  service method-encoding:	GetPkcs10Request literal
//gsoap tds  service method-input-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request
//gsoap tds  service method-output-action:	GetPkcs10Request http://www.onvif.org/ver10/device/wsdl/GetPkcs10RequestResponse
int __tds__GetPkcs10Request(
    _tds__GetPkcs10Request*             tds__GetPkcs10Request,	///< Input parameter
    _tds__GetPkcs10RequestResponse     &tds__GetPkcs10RequestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificates                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // output parameters:
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificates(
    struct soap *soap,
    // input parameters:
    _tds__LoadCertificates*             tds__LoadCertificates,
    // output parameters:
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCertificates SOAP
//gsoap tds  service method-style:	LoadCertificates document
//gsoap tds  service method-encoding:	LoadCertificates literal
//gsoap tds  service method-input-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificates
//gsoap tds  service method-output-action:	LoadCertificates http://www.onvif.org/ver10/device/wsdl/LoadCertificatesResponse
int __tds__LoadCertificates(
    _tds__LoadCertificates*             tds__LoadCertificates,	///< Input parameter
    _tds__LoadCertificatesResponse     &tds__LoadCertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // output parameters:
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,
    // output parameters:
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetClientCertificateMode SOAP
//gsoap tds  service method-style:	GetClientCertificateMode document
//gsoap tds  service method-encoding:	GetClientCertificateMode literal
//gsoap tds  service method-input-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode
//gsoap tds  service method-output-action:	GetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/GetClientCertificateModeResponse
int __tds__GetClientCertificateMode(
    _tds__GetClientCertificateMode*     tds__GetClientCertificateMode,	///< Input parameter
    _tds__GetClientCertificateModeResponse&tds__GetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetClientCertificateMode                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetClientCertificateMode" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetClientCertificateMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // output parameters:
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetClientCertificateMode(
    struct soap *soap,
    // input parameters:
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,
    // output parameters:
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetClientCertificateMode SOAP
//gsoap tds  service method-style:	SetClientCertificateMode document
//gsoap tds  service method-encoding:	SetClientCertificateMode literal
//gsoap tds  service method-input-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode
//gsoap tds  service method-output-action:	SetClientCertificateMode http://www.onvif.org/ver10/device/wsdl/SetClientCertificateModeResponse
int __tds__SetClientCertificateMode(
    _tds__SetClientCertificateMode*     tds__SetClientCertificateMode,	///< Input parameter
    _tds__SetClientCertificateModeResponse&tds__SetClientCertificateModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetRelayOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetRelayOutputs" of service binding "DeviceBinding".
This operation gets a list of all available relay outputs and their settings.<br/>
				This method has been depricated with version 2.0.
Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetRelayOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetRelayOutputs(
    struct soap *soap,
    // input parameters:
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,
    // output parameters:
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetRelayOutputs SOAP
//gsoap tds  service method-style:	GetRelayOutputs document
//gsoap tds  service method-encoding:	GetRelayOutputs literal
//gsoap tds  service method-input-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs
//gsoap tds  service method-output-action:	GetRelayOutputs http://www.onvif.org/ver10/device/wsdl/GetRelayOutputsResponse
int __tds__GetRelayOutputs(
    _tds__GetRelayOutputs*              tds__GetRelayOutputs,	///< Input parameter
    _tds__GetRelayOutputsResponse      &tds__GetRelayOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputSettings                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputSettings" of service binding "DeviceBinding".
This operation sets the settings of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputSettings(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // output parameters:
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputSettings(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,
    // output parameters:
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRelayOutputSettings SOAP
//gsoap tds  service method-style:	SetRelayOutputSettings document
//gsoap tds  service method-encoding:	SetRelayOutputSettings literal
//gsoap tds  service method-input-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings
//gsoap tds  service method-output-action:	SetRelayOutputSettings http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettingsResponse
int __tds__SetRelayOutputSettings(
    _tds__SetRelayOutputSettings*       tds__SetRelayOutputSettings,	///< Input parameter
    _tds__SetRelayOutputSettingsResponse&tds__SetRelayOutputSettingsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetRelayOutputState                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetRelayOutputState" of service binding "DeviceBinding".
This operation sets the state of a relay output.
				<br/>This method has been depricated with version
2.0. Refer to the DeviceIO service.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetRelayOutputState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetRelayOutputState(
    struct soap *soap,
    // input parameters:
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,
    // output parameters:
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetRelayOutputState SOAP
//gsoap tds  service method-style:	SetRelayOutputState document
//gsoap tds  service method-encoding:	SetRelayOutputState literal
//gsoap tds  service method-input-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState
//gsoap tds  service method-output-action:	SetRelayOutputState http://www.onvif.org/ver10/device/wsdl/SetRelayOutputStateResponse
int __tds__SetRelayOutputState(
    _tds__SetRelayOutputState*          tds__SetRelayOutputState,	///< Input parameter
    _tds__SetRelayOutputStateResponse  &tds__SetRelayOutputStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SendAuxiliaryCommand                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SendAuxiliaryCommand" of service binding "DeviceBinding".
Manage auxiliary commands supported by a device, such as controlling an Infrared
(IR) lamp, 
				a heater or a wiper or a thermometer that is connected
to the device.<br/>
				The supported commands can be retrieved via the
AuxiliaryCommands capability.<br/>
				Although the name of the auxiliary commands can
be freely defined, commands starting with the prefix tt: are 
				reserved to define frequently used commands and
these reserved commands shall all share the "tt:command|parameter" syntax.
				<ul>
					<li>tt:Wiper|On  Request to start the
wiper.</li>
					<li>tt:Wiper|Off  Request to stop the
wiper.</li>
					<li>tt:Washer|On  Request to start the
washer.</li>
					<li>tt:Washer|Off  Request to stop the
washer.</li>
					<li>tt:WashingProcedure|On  Request to
start the washing procedure.</li>
					<li>tt: WashingProcedure |Off  Request
to stop the washing procedure.</li>
					<li>tt:IRLamp|On  Request to turn ON
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Off  Request to turn OFF
an IR illuminator attached to the unit.</li>
					<li>tt:IRLamp|Auto  Request to configure
an IR illuminator attached to the unit so that it automatically turns ON and OFF.</li>
				</ul>
				A device that indicates auxiliary service capability
shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,
    // output parameters:
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,
    // output parameters:
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tds  service method-style:	SendAuxiliaryCommand document
//gsoap tds  service method-encoding:	SendAuxiliaryCommand literal
//gsoap tds  service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand
//gsoap tds  service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommandResponse
int __tds__SendAuxiliaryCommand(
    _tds__SendAuxiliaryCommand*         tds__SendAuxiliaryCommand,	///< Input parameter
    _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCACertificates                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCACertificates*            tds__GetCACertificates,
    // output parameters:
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCACertificates(
    struct soap *soap,
    // input parameters:
    _tds__GetCACertificates*            tds__GetCACertificates,
    // output parameters:
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCACertificates SOAP
//gsoap tds  service method-style:	GetCACertificates document
//gsoap tds  service method-encoding:	GetCACertificates literal
//gsoap tds  service method-input-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificates
//gsoap tds  service method-output-action:	GetCACertificates http://www.onvif.org/ver10/device/wsdl/GetCACertificatesResponse
int __tds__GetCACertificates(
    _tds__GetCACertificates*            tds__GetCACertificates,	///< Input parameter
    _tds__GetCACertificatesResponse    &tds__GetCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCertificateWithPrivateKey                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCertificateWithPrivateKey" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCertificateWithPrivateKey(
    struct soap *soap,
    // input parameters:
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,
    // output parameters:
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCertificateWithPrivateKey SOAP
//gsoap tds  service method-style:	LoadCertificateWithPrivateKey document
//gsoap tds  service method-encoding:	LoadCertificateWithPrivateKey literal
//gsoap tds  service method-input-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey
//gsoap tds  service method-output-action:	LoadCertificateWithPrivateKey http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKeyResponse
int __tds__LoadCertificateWithPrivateKey(
    _tds__LoadCertificateWithPrivateKey* tds__LoadCertificateWithPrivateKey,	///< Input parameter
    _tds__LoadCertificateWithPrivateKeyResponse&tds__LoadCertificateWithPrivateKeyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetCertificateInformation                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetCertificateInformation" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetCertificateInformation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,
    // output parameters:
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetCertificateInformation(
    struct soap *soap,
    // input parameters:
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,
    // output parameters:
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetCertificateInformation SOAP
//gsoap tds  service method-style:	GetCertificateInformation document
//gsoap tds  service method-encoding:	GetCertificateInformation literal
//gsoap tds  service method-input-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation
//gsoap tds  service method-output-action:	GetCertificateInformation http://www.onvif.org/ver10/device/wsdl/GetCertificateInformationResponse
int __tds__GetCertificateInformation(
    _tds__GetCertificateInformation*    tds__GetCertificateInformation,	///< Input parameter
    _tds__GetCertificateInformationResponse&tds__GetCertificateInformationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__LoadCACertificates                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__LoadCACertificates" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__LoadCACertificates(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__LoadCACertificates*           tds__LoadCACertificates,
    // output parameters:
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__LoadCACertificates(
    struct soap *soap,
    // input parameters:
    _tds__LoadCACertificates*           tds__LoadCACertificates,
    // output parameters:
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	LoadCACertificates SOAP
//gsoap tds  service method-style:	LoadCACertificates document
//gsoap tds  service method-encoding:	LoadCACertificates literal
//gsoap tds  service method-input-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificates
//gsoap tds  service method-output-action:	LoadCACertificates http://www.onvif.org/ver10/device/wsdl/LoadCACertificatesResponse
int __tds__LoadCACertificates(
    _tds__LoadCACertificates*           tds__LoadCACertificates,	///< Input parameter
    _tds__LoadCACertificatesResponse   &tds__LoadCACertificatesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,
    // output parameters:
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,
    // output parameters:
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateDot1XConfiguration SOAP
//gsoap tds  service method-style:	CreateDot1XConfiguration document
//gsoap tds  service method-encoding:	CreateDot1XConfiguration literal
//gsoap tds  service method-input-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration
//gsoap tds  service method-output-action:	CreateDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfigurationResponse
int __tds__CreateDot1XConfiguration(
    _tds__CreateDot1XConfiguration*     tds__CreateDot1XConfiguration,	///< Input parameter
    _tds__CreateDot1XConfigurationResponse&tds__CreateDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,
    // output parameters:
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,
    // output parameters:
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetDot1XConfiguration SOAP
//gsoap tds  service method-style:	SetDot1XConfiguration document
//gsoap tds  service method-encoding:	SetDot1XConfiguration literal
//gsoap tds  service method-input-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration
//gsoap tds  service method-output-action:	SetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/SetDot1XConfigurationResponse
int __tds__SetDot1XConfiguration(
    _tds__SetDot1XConfiguration*        tds__SetDot1XConfiguration,	///< Input parameter
    _tds__SetDot1XConfigurationResponse&tds__SetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfiguration                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,
    // output parameters:
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,
    // output parameters:
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot1XConfiguration SOAP
//gsoap tds  service method-style:	GetDot1XConfiguration document
//gsoap tds  service method-encoding:	GetDot1XConfiguration literal
//gsoap tds  service method-input-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration
//gsoap tds  service method-output-action:	GetDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationResponse
int __tds__GetDot1XConfiguration(
    _tds__GetDot1XConfiguration*        tds__GetDot1XConfiguration,	///< Input parameter
    _tds__GetDot1XConfigurationResponse&tds__GetDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot1XConfigurations                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot1XConfigurations" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot1XConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,
    // output parameters:
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot1XConfigurations(
    struct soap *soap,
    // input parameters:
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,
    // output parameters:
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot1XConfigurations SOAP
//gsoap tds  service method-style:	GetDot1XConfigurations document
//gsoap tds  service method-encoding:	GetDot1XConfigurations literal
//gsoap tds  service method-input-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations
//gsoap tds  service method-output-action:	GetDot1XConfigurations http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurationsResponse
int __tds__GetDot1XConfigurations(
    _tds__GetDot1XConfigurations*       tds__GetDot1XConfigurations,	///< Input parameter
    _tds__GetDot1XConfigurationsResponse&tds__GetDot1XConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteDot1XConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteDot1XConfiguration" of service binding "DeviceBinding".

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteDot1XConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,
    // output parameters:
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteDot1XConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,
    // output parameters:
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteDot1XConfiguration SOAP
//gsoap tds  service method-style:	DeleteDot1XConfiguration document
//gsoap tds  service method-encoding:	DeleteDot1XConfiguration literal
//gsoap tds  service method-input-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration
//gsoap tds  service method-output-action:	DeleteDot1XConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfigurationResponse
int __tds__DeleteDot1XConfiguration(
    _tds__DeleteDot1XConfiguration*     tds__DeleteDot1XConfiguration,	///< Input parameter
    _tds__DeleteDot1XConfigurationResponse&tds__DeleteDot1XConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Capabilities                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Capabilities" of service binding "DeviceBinding".
This operation returns the IEEE802.11 capabilities. The device shall support
				this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Capabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,
    // output parameters:
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Capabilities(
    struct soap *soap,
    // input parameters:
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,
    // output parameters:
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot11Capabilities SOAP
//gsoap tds  service method-style:	GetDot11Capabilities document
//gsoap tds  service method-encoding:	GetDot11Capabilities literal
//gsoap tds  service method-input-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities
//gsoap tds  service method-output-action:	GetDot11Capabilities http://www.onvif.org/ver10/device/wsdl/GetDot11CapabilitiesResponse
int __tds__GetDot11Capabilities(
    _tds__GetDot11Capabilities*         tds__GetDot11Capabilities,	///< Input parameter
    _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetDot11Status                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetDot11Status" of service binding "DeviceBinding".
This operation returns the status of a wireless network interface. The device shall
support this
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetDot11Status"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetDot11Status(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetDot11Status*               tds__GetDot11Status,
    // output parameters:
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetDot11Status(
    struct soap *soap,
    // input parameters:
    _tds__GetDot11Status*               tds__GetDot11Status,
    // output parameters:
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetDot11Status SOAP
//gsoap tds  service method-style:	GetDot11Status document
//gsoap tds  service method-encoding:	GetDot11Status literal
//gsoap tds  service method-input-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11Status
//gsoap tds  service method-output-action:	GetDot11Status http://www.onvif.org/ver10/device/wsdl/GetDot11StatusResponse
int __tds__GetDot11Status(
    _tds__GetDot11Status*               tds__GetDot11Status,	///< Input parameter
    _tds__GetDot11StatusResponse       &tds__GetDot11StatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__ScanAvailableDot11Networks                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__ScanAvailableDot11Networks" of service binding "DeviceBinding".
This operation returns a lists of the wireless networks in range of the device.
A device should
				support this operation.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__ScanAvailableDot11Networks(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,
    // output parameters:
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__ScanAvailableDot11Networks(
    struct soap *soap,
    // input parameters:
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,
    // output parameters:
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	ScanAvailableDot11Networks SOAP
//gsoap tds  service method-style:	ScanAvailableDot11Networks document
//gsoap tds  service method-encoding:	ScanAvailableDot11Networks literal
//gsoap tds  service method-input-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks
//gsoap tds  service method-output-action:	ScanAvailableDot11Networks http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11NetworksResponse
int __tds__ScanAvailableDot11Networks(
    _tds__ScanAvailableDot11Networks*   tds__ScanAvailableDot11Networks,	///< Input parameter
    _tds__ScanAvailableDot11NetworksResponse&tds__ScanAvailableDot11NetworksResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetSystemUris                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetSystemUris" of service binding "DeviceBinding".
This operation is used to retrieve URIs from which system information may be downloaded
				using HTTP. URIs may be returned for the following
system information:<br/>
				System Logs. Multiple system logs may be returned,
of different types. The exact format of
				the system logs is outside the scope of this specification.<br/>
				Support Information. This consists of arbitrary
device diagnostics information from a device.
				The exact format of the diagnostic information is
outside the scope of this specification.<br/>
				System Backup. The received file is a backup file
that can be used to restore the current
				device configuration at a later date. The exact
format of the backup configuration file is
				outside the scope of this specification.<br/>
				If the device allows retrieval of system logs, support
information or system backup data, it
				should make them available via HTTP GET. If it does,
it shall support the GetSystemUris
				command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUris"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetSystemUris(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetSystemUris*                tds__GetSystemUris,
    // output parameters:
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetSystemUris(
    struct soap *soap,
    // input parameters:
    _tds__GetSystemUris*                tds__GetSystemUris,
    // output parameters:
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetSystemUris SOAP
//gsoap tds  service method-style:	GetSystemUris document
//gsoap tds  service method-encoding:	GetSystemUris literal
//gsoap tds  service method-input-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUris
//gsoap tds  service method-output-action:	GetSystemUris http://www.onvif.org/ver10/device/wsdl/GetSystemUrisResponse
int __tds__GetSystemUris(
    _tds__GetSystemUris*                tds__GetSystemUris,	///< Input parameter
    _tds__GetSystemUrisResponse        &tds__GetSystemUrisResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartFirmwareUpgrade                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartFirmwareUpgrade" of service binding "DeviceBinding".
This operation initiates a firmware upgrade using the HTTP POST mechanism. The response
				to the command includes an HTTP URL to which the
upgrade file may be uploaded. The
				actual upgrade takes place as soon as the HTTP POST
operation has completed. The device
				should support firmware upgrade through the StartFirmwareUpgrade
command. The exact
				format of the firmware data is outside the scope
of this specification.
				Firmware upgrade over HTTP may be achieved using
the following steps:<ol>
					<li>Client calls StartFirmwareUpgrade.</li>
					<li>Server responds with upload URI and
optional delay value.</li>
					<li>Client waits for delay duration if specified
by server.</li>
					<li>Client transmits the firmware image
to the upload URI using HTTP POST.</li>
					<li>Server reprograms itself using the uploaded
image, then reboots.</li>
				</ol>
				If the firmware upgrade fails because the upgrade
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
firmware upgrade fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartFirmwareUpgrade(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,
    // output parameters:
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartFirmwareUpgrade(
    struct soap *soap,
    // input parameters:
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,
    // output parameters:
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	StartFirmwareUpgrade SOAP
//gsoap tds  service method-style:	StartFirmwareUpgrade document
//gsoap tds  service method-encoding:	StartFirmwareUpgrade literal
//gsoap tds  service method-input-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade
//gsoap tds  service method-output-action:	StartFirmwareUpgrade http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgradeResponse
int __tds__StartFirmwareUpgrade(
    _tds__StartFirmwareUpgrade*         tds__StartFirmwareUpgrade,	///< Input parameter
    _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__StartSystemRestore                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__StartSystemRestore" of service binding "DeviceBinding".
This operation initiates a system restore from backed up configuration data using
the HTTP
				POST mechanism. The response to the command includes
an HTTP URL to which the backup
				file may be uploaded. The actual restore takes place
as soon as the HTTP POST operation
				has completed. Devices should support system restore
through the StartSystemRestore
				command. The exact format of the backup configuration
data is outside the scope of this
				specification.<br/>
				System restore over HTTP may be achieved using the
following steps:<ol>
					<li>Client calls StartSystemRestore.</li>
					<li>Server responds with upload URI.</li>
					<li>Client transmits the configuration data
to the upload URI using HTTP POST.</li>
					<li>Server applies the uploaded configuration,
then reboots if necessary.</li>
				</ol>
				If the system restore fails because the uploaded
file was invalid, the HTTP POST response
				shall be 415 Unsupported Media Type. If the
system restore fails due to an error at the
				device, the HTTP POST response shall be 500 Internal
Server Error.<br/>
				The value of the Content-Type header in the HTTP
POST request shall be application/octetstream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__StartSystemRestore(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__StartSystemRestore*           tds__StartSystemRestore,
    // output parameters:
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__StartSystemRestore(
    struct soap *soap,
    // input parameters:
    _tds__StartSystemRestore*           tds__StartSystemRestore,
    // output parameters:
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	StartSystemRestore SOAP
//gsoap tds  service method-style:	StartSystemRestore document
//gsoap tds  service method-encoding:	StartSystemRestore literal
//gsoap tds  service method-input-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestore
//gsoap tds  service method-output-action:	StartSystemRestore http://www.onvif.org/ver10/device/wsdl/StartSystemRestoreResponse
int __tds__StartSystemRestore(
    _tds__StartSystemRestore*           tds__StartSystemRestore,	///< Input parameter
    _tds__StartSystemRestoreResponse   &tds__StartSystemRestoreResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfigurations                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfigurations" of service binding "DeviceBinding".

			This operation lists all existing storage configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,
    // output parameters:
    _tds__GetStorageConfigurationsResponse&tds__GetStorageConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfigurations(
    struct soap *soap,
    // input parameters:
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,
    // output parameters:
    _tds__GetStorageConfigurationsResponse&tds__GetStorageConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetStorageConfigurations SOAP
//gsoap tds  service method-style:	GetStorageConfigurations document
//gsoap tds  service method-encoding:	GetStorageConfigurations literal
//gsoap tds  service method-input-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations
//gsoap tds  service method-output-action:	GetStorageConfigurations http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationsResponse
int __tds__GetStorageConfigurations(
    _tds__GetStorageConfigurations*     tds__GetStorageConfigurations,	///< Input parameter
    _tds__GetStorageConfigurationsResponse&tds__GetStorageConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__CreateStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__CreateStorageConfiguration" of service binding "DeviceBinding".

			This operation creates a new storage configuration. 
			The configuration data shall be created in the device and
shall be persistent (remain after reboot).
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__CreateStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,
    // output parameters:
    _tds__CreateStorageConfigurationResponse&tds__CreateStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__CreateStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,
    // output parameters:
    _tds__CreateStorageConfigurationResponse&tds__CreateStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	CreateStorageConfiguration SOAP
//gsoap tds  service method-style:	CreateStorageConfiguration document
//gsoap tds  service method-encoding:	CreateStorageConfiguration literal
//gsoap tds  service method-input-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration
//gsoap tds  service method-output-action:	CreateStorageConfiguration http://www.onvif.org/ver10/device/wsdl/CreateStorageConfigurationResponse
int __tds__CreateStorageConfiguration(
    _tds__CreateStorageConfiguration*   tds__CreateStorageConfiguration,	///< Input parameter
    _tds__CreateStorageConfigurationResponse&tds__CreateStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetStorageConfiguration" of service binding "DeviceBinding".

			This operation retrieves the Storage configuration associated
with the given storage configuration token.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,
    // output parameters:
    _tds__GetStorageConfigurationResponse&tds__GetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,
    // output parameters:
    _tds__GetStorageConfigurationResponse&tds__GetStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetStorageConfiguration SOAP
//gsoap tds  service method-style:	GetStorageConfiguration document
//gsoap tds  service method-encoding:	GetStorageConfiguration literal
//gsoap tds  service method-input-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration
//gsoap tds  service method-output-action:	GetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurationResponse
int __tds__GetStorageConfiguration(
    _tds__GetStorageConfiguration*      tds__GetStorageConfiguration,	///< Input parameter
    _tds__GetStorageConfigurationResponse&tds__GetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetStorageConfiguration                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetStorageConfiguration" of service binding "DeviceBinding".

			This operation modifies an existing Storage configuration.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,
    // output parameters:
    _tds__SetStorageConfigurationResponse&tds__SetStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,
    // output parameters:
    _tds__SetStorageConfigurationResponse&tds__SetStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetStorageConfiguration SOAP
//gsoap tds  service method-style:	SetStorageConfiguration document
//gsoap tds  service method-encoding:	SetStorageConfiguration literal
//gsoap tds  service method-input-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration
//gsoap tds  service method-output-action:	SetStorageConfiguration http://www.onvif.org/ver10/device/wsdl/SetStorageConfigurationResponse
int __tds__SetStorageConfiguration(
    _tds__SetStorageConfiguration*      tds__SetStorageConfiguration,	///< Input parameter
    _tds__SetStorageConfigurationResponse&tds__SetStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteStorageConfiguration                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteStorageConfiguration" of service binding "DeviceBinding".

			This operation deletes the given storage configuration and
configuration change shall always be persistent.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteStorageConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,
    // output parameters:
    _tds__DeleteStorageConfigurationResponse&tds__DeleteStorageConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteStorageConfiguration(
    struct soap *soap,
    // input parameters:
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,
    // output parameters:
    _tds__DeleteStorageConfigurationResponse&tds__DeleteStorageConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteStorageConfiguration SOAP
//gsoap tds  service method-style:	DeleteStorageConfiguration document
//gsoap tds  service method-encoding:	DeleteStorageConfiguration literal
//gsoap tds  service method-input-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration
//gsoap tds  service method-output-action:	DeleteStorageConfiguration http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfigurationResponse
int __tds__DeleteStorageConfiguration(
    _tds__DeleteStorageConfiguration*   tds__DeleteStorageConfiguration,	///< Input parameter
    _tds__DeleteStorageConfigurationResponse&tds__DeleteStorageConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__GetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__GetGeoLocation" of service binding "DeviceBinding".

				This operation lists all existing geo location configurations
for the device. 
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__GetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__GetGeoLocation*               tds__GetGeoLocation,
    // output parameters:
    _tds__GetGeoLocationResponse       &tds__GetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__GetGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__GetGeoLocation*               tds__GetGeoLocation,
    // output parameters:
    _tds__GetGeoLocationResponse       &tds__GetGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	GetGeoLocation SOAP
//gsoap tds  service method-style:	GetGeoLocation document
//gsoap tds  service method-encoding:	GetGeoLocation literal
//gsoap tds  service method-input-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocation
//gsoap tds  service method-output-action:	GetGeoLocation http://www.onvif.org/ver10/device/wsdl/GetGeoLocationResponse
int __tds__GetGeoLocation(
    _tds__GetGeoLocation*               tds__GetGeoLocation,	///< Input parameter
    _tds__GetGeoLocationResponse       &tds__GetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__SetGeoLocation                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__SetGeoLocation" of service binding "DeviceBinding".

				This operation allows to modify one or more geo
configuration entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__SetGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__SetGeoLocation*               tds__SetGeoLocation,
    // output parameters:
    _tds__SetGeoLocationResponse       &tds__SetGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__SetGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__SetGeoLocation*               tds__SetGeoLocation,
    // output parameters:
    _tds__SetGeoLocationResponse       &tds__SetGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	SetGeoLocation SOAP
//gsoap tds  service method-style:	SetGeoLocation document
//gsoap tds  service method-encoding:	SetGeoLocation literal
//gsoap tds  service method-input-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocation
//gsoap tds  service method-output-action:	SetGeoLocation http://www.onvif.org/ver10/device/wsdl/SetGeoLocationResponse
int __tds__SetGeoLocation(
    _tds__SetGeoLocation*               tds__SetGeoLocation,	///< Input parameter
    _tds__SetGeoLocationResponse       &tds__SetGeoLocationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tds__DeleteGeoLocation                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tds__DeleteGeoLocation" of service binding "DeviceBinding".

				This operation deletes the given geo location entries.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing input action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation"

  - Addressing output action: "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tds__DeleteGeoLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,
    // output parameters:
    _tds__DeleteGeoLocationResponse    &tds__DeleteGeoLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tds__DeleteGeoLocation(
    struct soap *soap,
    // input parameters:
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,
    // output parameters:
    _tds__DeleteGeoLocationResponse    &tds__DeleteGeoLocationResponse
  );
@endcode

C++ proxy class (defined in soapDeviceBindingProxy.h generated with soapcpp2):
@code
  class DeviceBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapDeviceBindingService.h generated with soapcpp2):
@code
  class DeviceBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tds  service method-protocol:	DeleteGeoLocation SOAP
//gsoap tds  service method-style:	DeleteGeoLocation document
//gsoap tds  service method-encoding:	DeleteGeoLocation literal
//gsoap tds  service method-input-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation
//gsoap tds  service method-output-action:	DeleteGeoLocation http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocationResponse
int __tds__DeleteGeoLocation(
    _tds__DeleteGeoLocation*            tds__DeleteGeoLocation,	///< Input parameter
    _tds__DeleteGeoLocationResponse    &tds__DeleteGeoLocationResponse	///< Output parameter
);

/** @page DeviceBinding Binding "DeviceBinding"

@section DeviceBinding_policy_enablers Policy Enablers of Binding "DeviceBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PTZBinding                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetServiceCapabilities                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetServiceCapabilities" of service binding "PTZBinding".
Returns the capabilities of the PTZ service. The result is returned in a typed answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,
    // output parameters:
    _tptz__GetServiceCapabilitiesResponse&tptz__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,
    // output parameters:
    _tptz__GetServiceCapabilitiesResponse&tptz__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetServiceCapabilities SOAP
//gsoap tptz service method-style:	GetServiceCapabilities document
//gsoap tptz service method-encoding:	GetServiceCapabilities literal
//gsoap tptz service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities
//gsoap tptz service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilitiesResponse
int __tptz__GetServiceCapabilities(
    _tptz__GetServiceCapabilities*      tptz__GetServiceCapabilities,	///< Input parameter
    _tptz__GetServiceCapabilitiesResponse&tptz__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurations                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurations" of service binding "PTZBinding".
		        Get all the existing PTZConfigurations from the device.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfigurations*           tptz__GetConfigurations,
    // output parameters:
    _tptz__GetConfigurationsResponse   &tptz__GetConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurations(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfigurations*           tptz__GetConfigurations,
    // output parameters:
    _tptz__GetConfigurationsResponse   &tptz__GetConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfigurations SOAP
//gsoap tptz service method-style:	GetConfigurations document
//gsoap tptz service method-encoding:	GetConfigurations literal
//gsoap tptz service method-input-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations
//gsoap tptz service method-output-action:	GetConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationsResponse
int __tptz__GetConfigurations(
    _tptz__GetConfigurations*           tptz__GetConfigurations,	///< Input parameter
    _tptz__GetConfigurationsResponse   &tptz__GetConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresets                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresets" of service binding "PTZBinding".
        Operation to request all PTZ presets for the PTZNode
        in the selected profile. The operation is supported if there is support
        for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresets"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresets(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresets*                  tptz__GetPresets,
    // output parameters:
    _tptz__GetPresetsResponse          &tptz__GetPresetsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresets(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresets*                  tptz__GetPresets,
    // output parameters:
    _tptz__GetPresetsResponse          &tptz__GetPresetsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresets SOAP
//gsoap tptz service method-style:	GetPresets document
//gsoap tptz service method-encoding:	GetPresets literal
//gsoap tptz service method-input-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresets
//gsoap tptz service method-output-action:	GetPresets http://www.onvif.org/ver20/ptz/wsdl/GetPresetsResponse
int __tptz__GetPresets(
    _tptz__GetPresets*                  tptz__GetPresets,	///< Input parameter
    _tptz__GetPresetsResponse          &tptz__GetPresetsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetPreset                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetPreset" of service binding "PTZBinding".
				The SetPreset command saves the current device position
parameters so that the device can
				move to the saved preset position through the GotoPreset
operation.
				In order to create a new preset, the SetPresetRequest
contains no PresetToken. If creation is
				successful, the Response contains the PresetToken
which uniquely identifies the Preset. An
				existing Preset can be overwritten by specifying
the PresetToken of the corresponding Preset.
				In both cases (overwriting or creation) an optional
PresetName can be specified. The
				operation fails if the PTZ device is moving during
the SetPreset operation.
				The device MAY internally save additional states
such as imaging properties in the PTZ
				Preset which then should be recalled in the GotoPreset
operation.      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetPreset*                   tptz__SetPreset,
    // output parameters:
    _tptz__SetPresetResponse           &tptz__SetPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetPreset(
    struct soap *soap,
    // input parameters:
    _tptz__SetPreset*                   tptz__SetPreset,
    // output parameters:
    _tptz__SetPresetResponse           &tptz__SetPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetPreset SOAP
//gsoap tptz service method-style:	SetPreset document
//gsoap tptz service method-encoding:	SetPreset literal
//gsoap tptz service method-input-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPreset
//gsoap tptz service method-output-action:	SetPreset http://www.onvif.org/ver20/ptz/wsdl/SetPresetResponse
int __tptz__SetPreset(
    _tptz__SetPreset*                   tptz__SetPreset,	///< Input parameter
    _tptz__SetPresetResponse           &tptz__SetPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePreset                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePreset" of service binding "PTZBinding".
        Operation to remove a PTZ preset for the Node in
        the
        selected profile. The operation is supported if the
        PresetPosition
        capability exists for teh Node in the
        selected profile.
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RemovePreset*                tptz__RemovePreset,
    // output parameters:
    _tptz__RemovePresetResponse        &tptz__RemovePresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePreset(
    struct soap *soap,
    // input parameters:
    _tptz__RemovePreset*                tptz__RemovePreset,
    // output parameters:
    _tptz__RemovePresetResponse        &tptz__RemovePresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RemovePreset SOAP
//gsoap tptz service method-style:	RemovePreset document
//gsoap tptz service method-encoding:	RemovePreset literal
//gsoap tptz service method-input-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePreset
//gsoap tptz service method-output-action:	RemovePreset http://www.onvif.org/ver20/ptz/wsdl/RemovePresetResponse
int __tptz__RemovePreset(
    _tptz__RemovePreset*                tptz__RemovePreset,	///< Input parameter
    _tptz__RemovePresetResponse        &tptz__RemovePresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoPreset                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoPreset" of service binding "PTZBinding".
        Operation to go to a saved preset position for the
        PTZNode in the selected profile. The operation is supported if there is
        support for at least on PTZ preset by the PTZNode.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoPreset(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GotoPreset*                  tptz__GotoPreset,
    // output parameters:
    _tptz__GotoPresetResponse          &tptz__GotoPresetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoPreset(
    struct soap *soap,
    // input parameters:
    _tptz__GotoPreset*                  tptz__GotoPreset,
    // output parameters:
    _tptz__GotoPresetResponse          &tptz__GotoPresetResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GotoPreset SOAP
//gsoap tptz service method-style:	GotoPreset document
//gsoap tptz service method-encoding:	GotoPreset literal
//gsoap tptz service method-input-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPreset
//gsoap tptz service method-output-action:	GotoPreset http://www.onvif.org/ver20/ptz/wsdl/GotoPresetResponse
int __tptz__GotoPreset(
    _tptz__GotoPreset*                  tptz__GotoPreset,	///< Input parameter
    _tptz__GotoPresetResponse          &tptz__GotoPresetResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetStatus                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetStatus" of service binding "PTZBinding".
				Operation to request PTZ status for the Node in
the
				selected profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatus"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetStatus*                   tptz__GetStatus,
    // output parameters:
    _tptz__GetStatusResponse           &tptz__GetStatusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetStatus(
    struct soap *soap,
    // input parameters:
    _tptz__GetStatus*                   tptz__GetStatus,
    // output parameters:
    _tptz__GetStatusResponse           &tptz__GetStatusResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetStatus SOAP
//gsoap tptz service method-style:	GetStatus document
//gsoap tptz service method-encoding:	GetStatus literal
//gsoap tptz service method-input-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatus
//gsoap tptz service method-output-action:	GetStatus http://www.onvif.org/ver20/ptz/wsdl/GetStatusResponse
int __tptz__GetStatus(
    _tptz__GetStatus*                   tptz__GetStatus,	///< Input parameter
    _tptz__GetStatusResponse           &tptz__GetStatusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfiguration" of service binding "PTZBinding".
Get a specific PTZconfiguration from the device, identified by its reference token
or name.
				<br/>
				The default Position/Translation/Velocity Spaces
are introduced to allow NVCs sending move
				requests without the need to specify a certain coordinate
system. The default Speeds are
				introduced to control the speed of move requests
(absolute, relative, preset), where no
				explicit speed has been set.<br/>
				The allowed pan and tilt range for Pan/Tilt Limits
is defined by a two-dimensional space range
				that is mapped to a specific Absolute Pan/Tilt Position
Space. At least one Pan/Tilt Position
				Space is required by the PTZNode to support Pan/Tilt
limits. The limits apply to all supported
				absolute, relative and continuous Pan/Tilt movements.
The limits shall be checked within the
				coordinate system for which the limits have been
specified. That means that even if
				movements are specified in a different coordinate
system, the requested movements shall be
				transformed to the coordinate system of the limits
where the limits can be checked. When a
				relative or continuous movements is specified, which
would leave the specified limits, the PTZ
				unit has to move along the specified limits. The
Zoom Limits have to be interpreted
				accordingly.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfiguration*            tptz__GetConfiguration,
    // output parameters:
    _tptz__GetConfigurationResponse    &tptz__GetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfiguration(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfiguration*            tptz__GetConfiguration,
    // output parameters:
    _tptz__GetConfigurationResponse    &tptz__GetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfiguration SOAP
//gsoap tptz service method-style:	GetConfiguration document
//gsoap tptz service method-encoding:	GetConfiguration literal
//gsoap tptz service method-input-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration
//gsoap tptz service method-output-action:	GetConfiguration http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationResponse
int __tptz__GetConfiguration(
    _tptz__GetConfiguration*            tptz__GetConfiguration,	///< Input parameter
    _tptz__GetConfigurationResponse    &tptz__GetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNodes                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNodes" of service binding "PTZBinding".
				Get the descriptions of the available PTZ Nodes.
				<br/>
				A PTZ-capable device may have multiple PTZ Nodes.
The PTZ Nodes may represent
				mechanical PTZ drivers, uploaded PTZ drivers or
digital PTZ drivers. PTZ Nodes are the
				lowest level entities in the PTZ control API and
reflect the supported PTZ capabilities. The
				PTZ Node is referenced either by its name or by
its reference token. 
      		

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodes"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNodes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetNodes*                    tptz__GetNodes,
    // output parameters:
    _tptz__GetNodesResponse            &tptz__GetNodesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNodes(
    struct soap *soap,
    // input parameters:
    _tptz__GetNodes*                    tptz__GetNodes,
    // output parameters:
    _tptz__GetNodesResponse            &tptz__GetNodesResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetNodes SOAP
//gsoap tptz service method-style:	GetNodes document
//gsoap tptz service method-encoding:	GetNodes literal
//gsoap tptz service method-input-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodes
//gsoap tptz service method-output-action:	GetNodes http://www.onvif.org/ver20/ptz/wsdl/GetNodesResponse
int __tptz__GetNodes(
    _tptz__GetNodes*                    tptz__GetNodes,	///< Input parameter
    _tptz__GetNodesResponse            &tptz__GetNodesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetNode                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetNode" of service binding "PTZBinding".
Get a specific PTZ Node identified by a reference
        token or a name.
	  

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetNode"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetNode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetNode*                     tptz__GetNode,
    // output parameters:
    _tptz__GetNodeResponse             &tptz__GetNodeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetNode(
    struct soap *soap,
    // input parameters:
    _tptz__GetNode*                     tptz__GetNode,
    // output parameters:
    _tptz__GetNodeResponse             &tptz__GetNodeResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetNode SOAP
//gsoap tptz service method-style:	GetNode document
//gsoap tptz service method-encoding:	GetNode literal
//gsoap tptz service method-input-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNode
//gsoap tptz service method-output-action:	GetNode http://www.onvif.org/ver20/ptz/wsdl/GetNodeResponse
int __tptz__GetNode(
    _tptz__GetNode*                     tptz__GetNode,	///< Input parameter
    _tptz__GetNodeResponse             &tptz__GetNodeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetConfiguration                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetConfiguration" of service binding "PTZBinding".
        Set/update a existing PTZConfiguration on the device.
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetConfiguration*            tptz__SetConfiguration,
    // output parameters:
    _tptz__SetConfigurationResponse    &tptz__SetConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetConfiguration(
    struct soap *soap,
    // input parameters:
    _tptz__SetConfiguration*            tptz__SetConfiguration,
    // output parameters:
    _tptz__SetConfigurationResponse    &tptz__SetConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetConfiguration SOAP
//gsoap tptz service method-style:	SetConfiguration document
//gsoap tptz service method-encoding:	SetConfiguration literal
//gsoap tptz service method-input-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration
//gsoap tptz service method-output-action:	SetConfiguration http://www.onvif.org/ver20/ptz/wsdl/SetConfigurationResponse
int __tptz__SetConfiguration(
    _tptz__SetConfiguration*            tptz__SetConfiguration,	///< Input parameter
    _tptz__SetConfigurationResponse    &tptz__SetConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetConfigurationOptions                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetConfigurationOptions" of service binding "PTZBinding".
				List supported coordinate systems including their
range limitations. Therefore, the options
				MAY differ depending on whether the PTZ Configuration
is assigned to a Profile containing a
				Video Source Configuration. In that case, the options
may additionally contain coordinate
				systems referring to the image coordinate system
described by the Video Source
				Configuration. If the PTZ Node supports continuous
movements, it shall return a Timeout Range within
				which Timeouts are accepted by the PTZ Node.				
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,
    // output parameters:
    _tptz__GetConfigurationOptionsResponse&tptz__GetConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,
    // output parameters:
    _tptz__GetConfigurationOptionsResponse&tptz__GetConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetConfigurationOptions SOAP
//gsoap tptz service method-style:	GetConfigurationOptions document
//gsoap tptz service method-encoding:	GetConfigurationOptions literal
//gsoap tptz service method-input-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions
//gsoap tptz service method-output-action:	GetConfigurationOptions http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptionsResponse
int __tptz__GetConfigurationOptions(
    _tptz__GetConfigurationOptions*     tptz__GetConfigurationOptions,	///< Input parameter
    _tptz__GetConfigurationOptionsResponse&tptz__GetConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GotoHomePosition                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GotoHomePosition" of service binding "PTZBinding".
        Operation to move the PTZ device to it's "home" position. The operation
is supported if the HomeSupported element in the PTZNode is true.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GotoHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,
    // output parameters:
    _tptz__GotoHomePositionResponse    &tptz__GotoHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GotoHomePosition(
    struct soap *soap,
    // input parameters:
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,
    // output parameters:
    _tptz__GotoHomePositionResponse    &tptz__GotoHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GotoHomePosition SOAP
//gsoap tptz service method-style:	GotoHomePosition document
//gsoap tptz service method-encoding:	GotoHomePosition literal
//gsoap tptz service method-input-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition
//gsoap tptz service method-output-action:	GotoHomePosition http://www.onvif.org/ver20/ptz/wsdl/GotoHomePositionResponse
int __tptz__GotoHomePosition(
    _tptz__GotoHomePosition*            tptz__GotoHomePosition,	///< Input parameter
    _tptz__GotoHomePositionResponse    &tptz__GotoHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SetHomePosition                                                  *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SetHomePosition" of service binding "PTZBinding".
Operation to save current position as the home position.
				The SetHomePosition command returns with a failure
if the home position is fixed and
				cannot be overwritten. If the SetHomePosition is
successful, it is possible to recall the
				Home Position with the GotoHomePosition command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SetHomePosition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SetHomePosition*             tptz__SetHomePosition,
    // output parameters:
    _tptz__SetHomePositionResponse     &tptz__SetHomePositionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SetHomePosition(
    struct soap *soap,
    // input parameters:
    _tptz__SetHomePosition*             tptz__SetHomePosition,
    // output parameters:
    _tptz__SetHomePositionResponse     &tptz__SetHomePositionResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SetHomePosition SOAP
//gsoap tptz service method-style:	SetHomePosition document
//gsoap tptz service method-encoding:	SetHomePosition literal
//gsoap tptz service method-input-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition
//gsoap tptz service method-output-action:	SetHomePosition http://www.onvif.org/ver20/ptz/wsdl/SetHomePositionResponse
int __tptz__SetHomePosition(
    _tptz__SetHomePosition*             tptz__SetHomePosition,	///< Input parameter
    _tptz__SetHomePositionResponse     &tptz__SetHomePositionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ContinuousMove                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ContinuousMove" of service binding "PTZBinding".
Operation for continuous Pan/Tilt and Zoom movements. The operation is supported
if the PTZNode supports at least one continuous Pan/Tilt or Zoom space. If the
space argument is omitted, the default space set by the PTZConfiguration will be
used.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ContinuousMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__ContinuousMove*              tptz__ContinuousMove,
    // output parameters:
    _tptz__ContinuousMoveResponse      &tptz__ContinuousMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ContinuousMove(
    struct soap *soap,
    // input parameters:
    _tptz__ContinuousMove*              tptz__ContinuousMove,
    // output parameters:
    _tptz__ContinuousMoveResponse      &tptz__ContinuousMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	ContinuousMove SOAP
//gsoap tptz service method-style:	ContinuousMove document
//gsoap tptz service method-encoding:	ContinuousMove literal
//gsoap tptz service method-input-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove
//gsoap tptz service method-output-action:	ContinuousMove http://www.onvif.org/ver20/ptz/wsdl/ContinuousMoveResponse
int __tptz__ContinuousMove(
    _tptz__ContinuousMove*              tptz__ContinuousMove,	///< Input parameter
    _tptz__ContinuousMoveResponse      &tptz__ContinuousMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RelativeMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RelativeMove" of service binding "PTZBinding".
Operation for Relative Pan/Tilt and Zoom Move. The operation is supported if the
PTZNode supports at least one relative Pan/Tilt or Zoom space.<br/> 
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RelativeMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RelativeMove*                tptz__RelativeMove,
    // output parameters:
    _tptz__RelativeMoveResponse        &tptz__RelativeMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RelativeMove(
    struct soap *soap,
    // input parameters:
    _tptz__RelativeMove*                tptz__RelativeMove,
    // output parameters:
    _tptz__RelativeMoveResponse        &tptz__RelativeMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RelativeMove SOAP
//gsoap tptz service method-style:	RelativeMove document
//gsoap tptz service method-encoding:	RelativeMove literal
//gsoap tptz service method-input-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMove
//gsoap tptz service method-output-action:	RelativeMove http://www.onvif.org/ver20/ptz/wsdl/RelativeMoveResponse
int __tptz__RelativeMove(
    _tptz__RelativeMove*                tptz__RelativeMove,	///< Input parameter
    _tptz__RelativeMoveResponse        &tptz__RelativeMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__SendAuxiliaryCommand                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__SendAuxiliaryCommand" of service binding "PTZBinding".
        Operation to send auxiliary commands to the PTZ device
        mapped by the PTZNode in the selected profile. The
        operation is supported
        if the AuxiliarySupported element of the PTZNode is true
      

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__SendAuxiliaryCommand(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,
    // output parameters:
    _tptz__SendAuxiliaryCommandResponse&tptz__SendAuxiliaryCommandResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__SendAuxiliaryCommand(
    struct soap *soap,
    // input parameters:
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,
    // output parameters:
    _tptz__SendAuxiliaryCommandResponse&tptz__SendAuxiliaryCommandResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	SendAuxiliaryCommand SOAP
//gsoap tptz service method-style:	SendAuxiliaryCommand document
//gsoap tptz service method-encoding:	SendAuxiliaryCommand literal
//gsoap tptz service method-input-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand
//gsoap tptz service method-output-action:	SendAuxiliaryCommand http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommandResponse
int __tptz__SendAuxiliaryCommand(
    _tptz__SendAuxiliaryCommand*        tptz__SendAuxiliaryCommand,	///< Input parameter
    _tptz__SendAuxiliaryCommandResponse&tptz__SendAuxiliaryCommandResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__AbsoluteMove                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__AbsoluteMove" of service binding "PTZBinding".
Operation to move pan,tilt or zoom to a absolute destination. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__AbsoluteMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,
    // output parameters:
    _tptz__AbsoluteMoveResponse        &tptz__AbsoluteMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__AbsoluteMove(
    struct soap *soap,
    // input parameters:
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,
    // output parameters:
    _tptz__AbsoluteMoveResponse        &tptz__AbsoluteMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	AbsoluteMove SOAP
//gsoap tptz service method-style:	AbsoluteMove document
//gsoap tptz service method-encoding:	AbsoluteMove literal
//gsoap tptz service method-input-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove
//gsoap tptz service method-output-action:	AbsoluteMove http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMoveResponse
int __tptz__AbsoluteMove(
    _tptz__AbsoluteMove*                tptz__AbsoluteMove,	///< Input parameter
    _tptz__AbsoluteMoveResponse        &tptz__AbsoluteMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GeoMove                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GeoMove" of service binding "PTZBinding".
Operation to move pan,tilt or zoom to point to a destination based on the geolocation
of the target. <br/>
				The speed argument is optional. If an x/y speed
value is given it is up to the device to either use 
				the x value as absolute resoluting speed vector
or to map x and y to the component speed. 
				If the speed argument is omitted, the default speed
set by the PTZConfiguration will be used.
				The area height and area dwidth parameters are optional,
they can be used independently and may be used
				by the device to automatically determine the best
zoom level to show the target.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GeoMove"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMove"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GeoMoveResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GeoMove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GeoMove*                     tptz__GeoMove,
    // output parameters:
    _tptz__GeoMoveResponse             &tptz__GeoMoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GeoMove(
    struct soap *soap,
    // input parameters:
    _tptz__GeoMove*                     tptz__GeoMove,
    // output parameters:
    _tptz__GeoMoveResponse             &tptz__GeoMoveResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GeoMove SOAP
//gsoap tptz service method-style:	GeoMove document
//gsoap tptz service method-encoding:	GeoMove literal
//gsoap tptz service method-input-action:	GeoMove http://www.onvif.org/ver20/ptz/wsdl/GeoMove
//gsoap tptz service method-output-action:	GeoMove http://www.onvif.org/ver20/ptz/wsdl/GeoMoveResponse
int __tptz__GeoMove(
    _tptz__GeoMove*                     tptz__GeoMove,	///< Input parameter
    _tptz__GeoMoveResponse             &tptz__GeoMoveResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__Stop                                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__Stop" of service binding "PTZBinding".
Operation to stop ongoing pan, tilt and zoom movements of absolute relative and
continuous type.
If no stop argument for pan, tilt or zoom is set, the device will stop all ongoing
pan, tilt and zoom movements.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/Stop"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/StopResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__Stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__Stop*                        tptz__Stop,
    // output parameters:
    _tptz__StopResponse                &tptz__StopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__Stop(
    struct soap *soap,
    // input parameters:
    _tptz__Stop*                        tptz__Stop,
    // output parameters:
    _tptz__StopResponse                &tptz__StopResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	Stop SOAP
//gsoap tptz service method-style:	Stop document
//gsoap tptz service method-encoding:	Stop literal
//gsoap tptz service method-input-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/Stop
//gsoap tptz service method-output-action:	Stop http://www.onvif.org/ver20/ptz/wsdl/StopResponse
int __tptz__Stop(
    _tptz__Stop*                        tptz__Stop,	///< Input parameter
    _tptz__StopResponse                &tptz__StopResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTours                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTours" of service binding "PTZBinding".
Operation to request PTZ preset tours in the selected media profiles.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTours(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTours*              tptz__GetPresetTours,
    // output parameters:
    _tptz__GetPresetToursResponse      &tptz__GetPresetToursResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTours(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTours*              tptz__GetPresetTours,
    // output parameters:
    _tptz__GetPresetToursResponse      &tptz__GetPresetToursResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTours SOAP
//gsoap tptz service method-style:	GetPresetTours document
//gsoap tptz service method-encoding:	GetPresetTours literal
//gsoap tptz service method-input-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours
//gsoap tptz service method-output-action:	GetPresetTours http://www.onvif.org/ver20/ptz/wsdl/GetPresetToursResponse
int __tptz__GetPresetTours(
    _tptz__GetPresetTours*              tptz__GetPresetTours,	///< Input parameter
    _tptz__GetPresetToursResponse      &tptz__GetPresetToursResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTour                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTour" of service binding "PTZBinding".
Operation to request a specific PTZ preset tour in the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTour*               tptz__GetPresetTour,
    // output parameters:
    _tptz__GetPresetTourResponse       &tptz__GetPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTour*               tptz__GetPresetTour,
    // output parameters:
    _tptz__GetPresetTourResponse       &tptz__GetPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTour SOAP
//gsoap tptz service method-style:	GetPresetTour document
//gsoap tptz service method-encoding:	GetPresetTour literal
//gsoap tptz service method-input-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour
//gsoap tptz service method-output-action:	GetPresetTour http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourResponse
int __tptz__GetPresetTour(
    _tptz__GetPresetTour*               tptz__GetPresetTour,	///< Input parameter
    _tptz__GetPresetTourResponse       &tptz__GetPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetPresetTourOptions                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetPresetTourOptions" of service binding "PTZBinding".
Operation to request available options to configure PTZ preset tour.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetPresetTourOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,
    // output parameters:
    _tptz__GetPresetTourOptionsResponse&tptz__GetPresetTourOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetPresetTourOptions(
    struct soap *soap,
    // input parameters:
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,
    // output parameters:
    _tptz__GetPresetTourOptionsResponse&tptz__GetPresetTourOptionsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetPresetTourOptions SOAP
//gsoap tptz service method-style:	GetPresetTourOptions document
//gsoap tptz service method-encoding:	GetPresetTourOptions literal
//gsoap tptz service method-input-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions
//gsoap tptz service method-output-action:	GetPresetTourOptions http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptionsResponse
int __tptz__GetPresetTourOptions(
    _tptz__GetPresetTourOptions*        tptz__GetPresetTourOptions,	///< Input parameter
    _tptz__GetPresetTourOptionsResponse&tptz__GetPresetTourOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__CreatePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__CreatePresetTour" of service binding "PTZBinding".
Operation to create a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__CreatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,
    // output parameters:
    _tptz__CreatePresetTourResponse    &tptz__CreatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__CreatePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,
    // output parameters:
    _tptz__CreatePresetTourResponse    &tptz__CreatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	CreatePresetTour SOAP
//gsoap tptz service method-style:	CreatePresetTour document
//gsoap tptz service method-encoding:	CreatePresetTour literal
//gsoap tptz service method-input-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour
//gsoap tptz service method-output-action:	CreatePresetTour http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTourResponse
int __tptz__CreatePresetTour(
    _tptz__CreatePresetTour*            tptz__CreatePresetTour,	///< Input parameter
    _tptz__CreatePresetTourResponse    &tptz__CreatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__ModifyPresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__ModifyPresetTour" of service binding "PTZBinding".
Operation to modify a preset tour for the selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__ModifyPresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,
    // output parameters:
    _tptz__ModifyPresetTourResponse    &tptz__ModifyPresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__ModifyPresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,
    // output parameters:
    _tptz__ModifyPresetTourResponse    &tptz__ModifyPresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	ModifyPresetTour SOAP
//gsoap tptz service method-style:	ModifyPresetTour document
//gsoap tptz service method-encoding:	ModifyPresetTour literal
//gsoap tptz service method-input-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour
//gsoap tptz service method-output-action:	ModifyPresetTour http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTourResponse
int __tptz__ModifyPresetTour(
    _tptz__ModifyPresetTour*            tptz__ModifyPresetTour,	///< Input parameter
    _tptz__ModifyPresetTourResponse    &tptz__ModifyPresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__OperatePresetTour                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__OperatePresetTour" of service binding "PTZBinding".
Operation to perform specific operation on the preset tour in selected media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__OperatePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,
    // output parameters:
    _tptz__OperatePresetTourResponse   &tptz__OperatePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__OperatePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,
    // output parameters:
    _tptz__OperatePresetTourResponse   &tptz__OperatePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	OperatePresetTour SOAP
//gsoap tptz service method-style:	OperatePresetTour document
//gsoap tptz service method-encoding:	OperatePresetTour literal
//gsoap tptz service method-input-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour
//gsoap tptz service method-output-action:	OperatePresetTour http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTourResponse
int __tptz__OperatePresetTour(
    _tptz__OperatePresetTour*           tptz__OperatePresetTour,	///< Input parameter
    _tptz__OperatePresetTourResponse   &tptz__OperatePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__RemovePresetTour                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__RemovePresetTour" of service binding "PTZBinding".
Operation to delete a specific preset tour from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__RemovePresetTour(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,
    // output parameters:
    _tptz__RemovePresetTourResponse    &tptz__RemovePresetTourResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__RemovePresetTour(
    struct soap *soap,
    // input parameters:
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,
    // output parameters:
    _tptz__RemovePresetTourResponse    &tptz__RemovePresetTourResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	RemovePresetTour SOAP
//gsoap tptz service method-style:	RemovePresetTour document
//gsoap tptz service method-encoding:	RemovePresetTour literal
//gsoap tptz service method-input-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour
//gsoap tptz service method-output-action:	RemovePresetTour http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTourResponse
int __tptz__RemovePresetTour(
    _tptz__RemovePresetTour*            tptz__RemovePresetTour,	///< Input parameter
    _tptz__RemovePresetTourResponse    &tptz__RemovePresetTourResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__GetCompatibleConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__GetCompatibleConfigurations" of service binding "PTZBinding".
Operation to get all available PTZConfigurations that can be added to the referenced
media profile. <br/>
				A device providing more than one PTZConfiguration
or more than one VideoSourceConfiguration or which has any other resource
				interdependency between PTZConfiguration entities
and other resources listable in a media profile should implement this operation.
				PTZConfiguration entities returned by this operation
shall not fail on adding them to the referenced media profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__GetCompatibleConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    _tptz__GetCompatibleConfigurationsResponse&tptz__GetCompatibleConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__GetCompatibleConfigurations(
    struct soap *soap,
    // input parameters:
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,
    // output parameters:
    _tptz__GetCompatibleConfigurationsResponse&tptz__GetCompatibleConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	GetCompatibleConfigurations SOAP
//gsoap tptz service method-style:	GetCompatibleConfigurations document
//gsoap tptz service method-encoding:	GetCompatibleConfigurations literal
//gsoap tptz service method-input-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations
//gsoap tptz service method-output-action:	GetCompatibleConfigurations http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurationsResponse
int __tptz__GetCompatibleConfigurations(
    _tptz__GetCompatibleConfigurations* tptz__GetCompatibleConfigurations,	///< Input parameter
    _tptz__GetCompatibleConfigurationsResponse&tptz__GetCompatibleConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tptz__MoveAndStartTracking                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tptz__MoveAndStartTracking" of service binding "PTZBinding".
Operation to send an an atomic command to the device: move the camera to a wanted
position and then delegate the PTZ control to the tracking algorithm. <br/>
                    An existing Speed argument overrides DefaultSpeed of the corresponding
PTZ configuration during movement to the requested position. 
                    If spaces are referenced within the Speed argument, they shall
be speed spaces supported by the PTZ node. <br/>
                    If the detection and the tracking are done in the same device,
an ObjectID reference can be passed as an argument, in order to specify which object
should be tracked. <br/>
                    The operation shall fail if the requested absolute position
is not reachable.
            

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTracking"

  - Addressing input action: "http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTracking"

  - Addressing output action: "http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTrackingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tptz__MoveAndStartTracking(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tptz__MoveAndStartTracking*        tptz__MoveAndStartTracking,
    // output parameters:
    _tptz__MoveAndStartTrackingResponse&tptz__MoveAndStartTrackingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tptz__MoveAndStartTracking(
    struct soap *soap,
    // input parameters:
    _tptz__MoveAndStartTracking*        tptz__MoveAndStartTracking,
    // output parameters:
    _tptz__MoveAndStartTrackingResponse&tptz__MoveAndStartTrackingResponse
  );
@endcode

C++ proxy class (defined in soapPTZBindingProxy.h generated with soapcpp2):
@code
  class PTZBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapPTZBindingService.h generated with soapcpp2):
@code
  class PTZBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap tptz service method-protocol:	MoveAndStartTracking SOAP
//gsoap tptz service method-style:	MoveAndStartTracking document
//gsoap tptz service method-encoding:	MoveAndStartTracking literal
//gsoap tptz service method-input-action:	MoveAndStartTracking http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTracking
//gsoap tptz service method-output-action:	MoveAndStartTracking http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTrackingResponse
int __tptz__MoveAndStartTracking(
    _tptz__MoveAndStartTracking*        tptz__MoveAndStartTracking,	///< Input parameter
    _tptz__MoveAndStartTrackingResponse&tptz__MoveAndStartTrackingResponse	///< Output parameter
);

/** @page PTZBinding Binding "PTZBinding"

@section PTZBinding_policy_enablers Policy Enablers of Binding "PTZBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MediaBinding                                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetServiceCapabilities                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetServiceCapabilities" of service binding "MediaBinding".
Returns the capabilities of the media service. The result is returned in a typed
answer.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetServiceCapabilities(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,
    // output parameters:
    _trt__GetServiceCapabilitiesResponse&trt__GetServiceCapabilitiesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetServiceCapabilities(
    struct soap *soap,
    // input parameters:
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,
    // output parameters:
    _trt__GetServiceCapabilitiesResponse&trt__GetServiceCapabilitiesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetServiceCapabilities SOAP
//gsoap trt  service method-style:	GetServiceCapabilities document
//gsoap trt  service method-encoding:	GetServiceCapabilities literal
//gsoap trt  service method-input-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities
//gsoap trt  service method-output-action:	GetServiceCapabilities http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilitiesResponse
int __trt__GetServiceCapabilities(
    _trt__GetServiceCapabilities*       trt__GetServiceCapabilities,	///< Input parameter
    _trt__GetServiceCapabilitiesResponse&trt__GetServiceCapabilitiesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSources" of service binding "MediaBinding".
This command lists all available physical video inputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSources*              trt__GetVideoSources,
    // output parameters:
    _trt__GetVideoSourcesResponse      &trt__GetVideoSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSources(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSources*              trt__GetVideoSources,
    // output parameters:
    _trt__GetVideoSourcesResponse      &trt__GetVideoSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSources SOAP
//gsoap trt  service method-style:	GetVideoSources document
//gsoap trt  service method-encoding:	GetVideoSources literal
//gsoap trt  service method-input-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/
//gsoap trt  service method-output-action:	GetVideoSources http://www.onvif.org/ver10/media/wsdlGetVideoSources/Response
int __trt__GetVideoSources(
    _trt__GetVideoSources*              trt__GetVideoSources,	///< Input parameter
    _trt__GetVideoSourcesResponse      &trt__GetVideoSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSources                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSources" of service binding "MediaBinding".
This command lists all available physical audio inputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSources"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSources(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSources*              trt__GetAudioSources,
    // output parameters:
    _trt__GetAudioSourcesResponse      &trt__GetAudioSourcesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSources(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSources*              trt__GetAudioSources,
    // output parameters:
    _trt__GetAudioSourcesResponse      &trt__GetAudioSourcesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSources SOAP
//gsoap trt  service method-style:	GetAudioSources document
//gsoap trt  service method-encoding:	GetAudioSources literal
//gsoap trt  service method-input-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSources
//gsoap trt  service method-output-action:	GetAudioSources http://www.onvif.org/ver10/media/wsdl/GetAudioSourcesResponse
int __trt__GetAudioSources(
    _trt__GetAudioSources*              trt__GetAudioSources,	///< Input parameter
    _trt__GetAudioSourcesResponse      &trt__GetAudioSourcesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputs                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputs" of service binding "MediaBinding".
This command lists all available physical audio outputs of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,
    // output parameters:
    _trt__GetAudioOutputsResponse      &trt__GetAudioOutputsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputs(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,
    // output parameters:
    _trt__GetAudioOutputsResponse      &trt__GetAudioOutputsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputs SOAP
//gsoap trt  service method-style:	GetAudioOutputs document
//gsoap trt  service method-encoding:	GetAudioOutputs literal
//gsoap trt  service method-input-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs
//gsoap trt  service method-output-action:	GetAudioOutputs http://www.onvif.org/ver10/media/wsdl/GetAudioOutputsResponse
int __trt__GetAudioOutputs(
    _trt__GetAudioOutputs*              trt__GetAudioOutputs,	///< Input parameter
    _trt__GetAudioOutputsResponse      &trt__GetAudioOutputsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateProfile" of service binding "MediaBinding".
This operation creates a new empty media profile. The media profile shall be created
in the
device and shall be persistent (remain after reboot). A created profile shall be
deletable and a device shall set the fixed attribute to false in the
returned Profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__CreateProfile*                trt__CreateProfile,
    // output parameters:
    _trt__CreateProfileResponse        &trt__CreateProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateProfile(
    struct soap *soap,
    // input parameters:
    _trt__CreateProfile*                trt__CreateProfile,
    // output parameters:
    _trt__CreateProfileResponse        &trt__CreateProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	CreateProfile SOAP
//gsoap trt  service method-style:	CreateProfile document
//gsoap trt  service method-encoding:	CreateProfile literal
//gsoap trt  service method-input-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfile
//gsoap trt  service method-output-action:	CreateProfile http://www.onvif.org/ver10/media/wsdl/CreateProfileResponse
int __trt__CreateProfile(
    _trt__CreateProfile*                trt__CreateProfile,	///< Input parameter
    _trt__CreateProfileResponse        &trt__CreateProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfile                                                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfile" of service binding "MediaBinding".
If the profile token is already known, a profile can be fetched through the GetProfile
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetProfile/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetProfile/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetProfile*                   trt__GetProfile,
    // output parameters:
    _trt__GetProfileResponse           &trt__GetProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfile(
    struct soap *soap,
    // input parameters:
    _trt__GetProfile*                   trt__GetProfile,
    // output parameters:
    _trt__GetProfileResponse           &trt__GetProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetProfile SOAP
//gsoap trt  service method-style:	GetProfile document
//gsoap trt  service method-encoding:	GetProfile literal
//gsoap trt  service method-input-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/
//gsoap trt  service method-output-action:	GetProfile http://www.onvif.org/ver10/media/wsdlGetProfile/Response
int __trt__GetProfile(
    _trt__GetProfile*                   trt__GetProfile,	///< Input parameter
    _trt__GetProfileResponse           &trt__GetProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetProfiles                                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetProfiles" of service binding "MediaBinding".
Any endpoint can ask for the existing media profiles of a device using the GetProfiles
command. Pre-configured or dynamically configured profiles can be retrieved using
this
command. This command lists all configured profiles in a device. The client does
not need to
know the media profile in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetProfiles"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetProfiles(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetProfiles*                  trt__GetProfiles,
    // output parameters:
    _trt__GetProfilesResponse          &trt__GetProfilesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetProfiles(
    struct soap *soap,
    // input parameters:
    _trt__GetProfiles*                  trt__GetProfiles,
    // output parameters:
    _trt__GetProfilesResponse          &trt__GetProfilesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetProfiles SOAP
//gsoap trt  service method-style:	GetProfiles document
//gsoap trt  service method-encoding:	GetProfiles literal
//gsoap trt  service method-input-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfiles
//gsoap trt  service method-output-action:	GetProfiles http://www.onvif.org/ver10/media/wsdl/GetProfilesResponse
int __trt__GetProfiles(
    _trt__GetProfiles*                  trt__GetProfiles,	///< Input parameter
    _trt__GetProfilesResponse          &trt__GetProfilesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoEncoderConfiguration" of service binding "MediaBinding".
This operation adds a VideoEncoderConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible VideoEncoderConfiguration to a Profile containing a
VideoSourceConfiguration and shall
support streaming video data of such a profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    _trt__AddVideoEncoderConfigurationResponse&trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,
    // output parameters:
    _trt__AddVideoEncoderConfigurationResponse&trt__AddVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	AddVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration
//gsoap trt  service method-output-action:	AddVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfigurationResponse
int __trt__AddVideoEncoderConfiguration(
    _trt__AddVideoEncoderConfiguration* trt__AddVideoEncoderConfiguration,	///< Input parameter
    _trt__AddVideoEncoderConfigurationResponse&trt__AddVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoSourceConfiguration" of service binding "MediaBinding".
This operation adds a VideoSourceConfiguration to an existing media profile. If
such a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,
    // output parameters:
    _trt__AddVideoSourceConfigurationResponse&trt__AddVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,
    // output parameters:
    _trt__AddVideoSourceConfigurationResponse&trt__AddVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	AddVideoSourceConfiguration document
//gsoap trt  service method-encoding:	AddVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration
//gsoap trt  service method-output-action:	AddVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfigurationResponse
int __trt__AddVideoSourceConfiguration(
    _trt__AddVideoSourceConfiguration*  trt__AddVideoSourceConfiguration,	///< Input parameter
    _trt__AddVideoSourceConfigurationResponse&trt__AddVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioEncoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioEncoderConfiguration to an existing media profile. If
a 
configuration exists in the media profile, it will be replaced. The change shall
be persistent. A device shall
support adding a compatible AudioEncoderConfiguration to a profile containing an
AudioSourceConfiguration and shall
support streaming audio data of such a profile.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    _trt__AddAudioEncoderConfigurationResponse&trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,
    // output parameters:
    _trt__AddAudioEncoderConfigurationResponse&trt__AddAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration
//gsoap trt  service method-output-action:	AddAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfigurationResponse
int __trt__AddAudioEncoderConfiguration(
    _trt__AddAudioEncoderConfiguration* trt__AddAudioEncoderConfiguration,	///< Input parameter
    _trt__AddAudioEncoderConfigurationResponse&trt__AddAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioSourceConfiguration" of service binding "MediaBinding".
This operation adds an AudioSourceConfiguration to an existing media profile. If
a
configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,
    // output parameters:
    _trt__AddAudioSourceConfigurationResponse&trt__AddAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,
    // output parameters:
    _trt__AddAudioSourceConfigurationResponse&trt__AddAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	AddAudioSourceConfiguration document
//gsoap trt  service method-encoding:	AddAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration
//gsoap trt  service method-output-action:	AddAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfigurationResponse
int __trt__AddAudioSourceConfiguration(
    _trt__AddAudioSourceConfiguration*  trt__AddAudioSourceConfiguration,	///< Input parameter
    _trt__AddAudioSourceConfigurationResponse&trt__AddAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddPTZConfiguration                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddPTZConfiguration" of service binding "MediaBinding".
This operation adds a PTZConfiguration to an existing media profile. If a configuration
exists
in the media profile, it will be replaced. The change shall be persistent. Adding
a PTZConfiguration to a media profile means that streams using that media profile
can
contain PTZ status (in the metadata), and that the media profile can be used for
controlling
PTZ movement.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddPTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,
    // output parameters:
    _trt__AddPTZConfigurationResponse  &trt__AddPTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddPTZConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,
    // output parameters:
    _trt__AddPTZConfigurationResponse  &trt__AddPTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddPTZConfiguration SOAP
//gsoap trt  service method-style:	AddPTZConfiguration document
//gsoap trt  service method-encoding:	AddPTZConfiguration literal
//gsoap trt  service method-input-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration
//gsoap trt  service method-output-action:	AddPTZConfiguration http://www.onvif.org/ver10/media/wsdl/AddPTZConfigurationResponse
int __trt__AddPTZConfiguration(
    _trt__AddPTZConfiguration*          trt__AddPTZConfiguration,	///< Input parameter
    _trt__AddPTZConfigurationResponse  &trt__AddPTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation adds a VideoAnalytics configuration to an existing media profile.
If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a VideoAnalyticsConfiguration to a media profile means that
streams using that media
profile can contain video analytics data (in the metadata) as defined by the submitted
configuration reference. A profile containing only a video analytics configuration
but no video source configuration is incomplete. Therefore, a client should first
add a video source configuration to a profile before adding a video analytics configuration.
The device can deny adding of a video analytics
configuration before a video source configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    _trt__AddVideoAnalyticsConfigurationResponse&trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,
    // output parameters:
    _trt__AddVideoAnalyticsConfigurationResponse&trt__AddVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	AddVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	AddVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	AddVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfigurationResponse
int __trt__AddVideoAnalyticsConfiguration(
    _trt__AddVideoAnalyticsConfiguration* trt__AddVideoAnalyticsConfiguration,	///< Input parameter
    _trt__AddVideoAnalyticsConfigurationResponse&trt__AddVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddMetadataConfiguration" of service binding "MediaBinding".
This operation adds a Metadata configuration to an existing media profile. If a
configuration exists in the media profile, it will be replaced. The change shall
be persistent. Adding a MetadataConfiguration to a Profile means that streams using
that profile contain metadata. Metadata can consist of events, PTZ status, and/or
video analytics data.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,
    // output parameters:
    _trt__AddMetadataConfigurationResponse&trt__AddMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,
    // output parameters:
    _trt__AddMetadataConfigurationResponse&trt__AddMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddMetadataConfiguration SOAP
//gsoap trt  service method-style:	AddMetadataConfiguration document
//gsoap trt  service method-encoding:	AddMetadataConfiguration literal
//gsoap trt  service method-input-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration
//gsoap trt  service method-output-action:	AddMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/AddMetadataConfigurationResponse
int __trt__AddMetadataConfiguration(
    _trt__AddMetadataConfiguration*     trt__AddMetadataConfiguration,	///< Input parameter
    _trt__AddMetadataConfigurationResponse&trt__AddMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioOutputConfiguration" of service binding "MediaBinding".
This operation adds an AudioOutputConfiguration to an existing media profile. If
a configuration exists in the media profile, it will be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,
    // output parameters:
    _trt__AddAudioOutputConfigurationResponse&trt__AddAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,
    // output parameters:
    _trt__AddAudioOutputConfigurationResponse&trt__AddAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	AddAudioOutputConfiguration document
//gsoap trt  service method-encoding:	AddAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration
//gsoap trt  service method-output-action:	AddAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfigurationResponse
int __trt__AddAudioOutputConfiguration(
    _trt__AddAudioOutputConfiguration*  trt__AddAudioOutputConfiguration,	///< Input parameter
    _trt__AddAudioOutputConfigurationResponse&trt__AddAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__AddAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__AddAudioDecoderConfiguration" of service binding "MediaBinding".
This operation adds an AudioDecoderConfiguration to an existing media profile. If
a configuration exists in the media profile, it shall be replaced. The change shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    _trt__AddAudioDecoderConfigurationResponse&trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__AddAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,
    // output parameters:
    _trt__AddAudioDecoderConfigurationResponse&trt__AddAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	AddAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	AddAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	AddAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration
//gsoap trt  service method-output-action:	AddAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfigurationResponse
int __trt__AddAudioDecoderConfiguration(
    _trt__AddAudioDecoderConfiguration* trt__AddAudioDecoderConfiguration,	///< Input parameter
    _trt__AddAudioDecoderConfigurationResponse&trt__AddAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoEncoderConfiguration" of service binding "MediaBinding".
This operation removes a VideoEncoderConfiguration from an existing media profile.
If the
media profile does not contain a VideoEncoderConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    _trt__RemoveVideoEncoderConfigurationResponse&trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,
    // output parameters:
    _trt__RemoveVideoEncoderConfigurationResponse&trt__RemoveVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfigurationResponse
int __trt__RemoveVideoEncoderConfiguration(
    _trt__RemoveVideoEncoderConfiguration* trt__RemoveVideoEncoderConfiguration,	///< Input parameter
    _trt__RemoveVideoEncoderConfigurationResponse&trt__RemoveVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoSourceConfiguration" of service binding "MediaBinding".
This operation removes a VideoSourceConfiguration from an existing media profile.
If the
media profile does not contain a VideoSourceConfiguration, the operation has no
effect. The removal shall be persistent. Video source configurations should only
be removed after removing a
VideoEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    _trt__RemoveVideoSourceConfigurationResponse&trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,
    // output parameters:
    _trt__RemoveVideoSourceConfigurationResponse&trt__RemoveVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration
//gsoap trt  service method-output-action:	RemoveVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfigurationResponse
int __trt__RemoveVideoSourceConfiguration(
    _trt__RemoveVideoSourceConfiguration* trt__RemoveVideoSourceConfiguration,	///< Input parameter
    _trt__RemoveVideoSourceConfigurationResponse&trt__RemoveVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioEncoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioEncoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioEncoderConfiguration from an existing media profile.
If the
media profile does not contain an AudioEncoderConfiguration, the operation has
no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    _trt__RemoveAudioEncoderConfigurationResponse&trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,
    // output parameters:
    _trt__RemoveAudioEncoderConfigurationResponse&trt__RemoveAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfigurationResponse
int __trt__RemoveAudioEncoderConfiguration(
    _trt__RemoveAudioEncoderConfiguration* trt__RemoveAudioEncoderConfiguration,	///< Input parameter
    _trt__RemoveAudioEncoderConfigurationResponse&trt__RemoveAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioSourceConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioSourceConfiguration" of service binding "MediaBinding".
This operation removes an AudioSourceConfiguration from an existing media profile.
If the
media profile does not contain an AudioSourceConfiguration, the operation has no
effect. The
removal shall be persistent. Audio source configurations should only be removed
after removing an
AudioEncoderConfiguration from the media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    _trt__RemoveAudioSourceConfigurationResponse&trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,
    // output parameters:
    _trt__RemoveAudioSourceConfigurationResponse&trt__RemoveAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioSourceConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration
//gsoap trt  service method-output-action:	RemoveAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfigurationResponse
int __trt__RemoveAudioSourceConfiguration(
    _trt__RemoveAudioSourceConfiguration* trt__RemoveAudioSourceConfiguration,	///< Input parameter
    _trt__RemoveAudioSourceConfigurationResponse&trt__RemoveAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemovePTZConfiguration                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemovePTZConfiguration" of service binding "MediaBinding".
This operation removes a PTZConfiguration from an existing media profile. If the
media profile
does not contain a PTZConfiguration, the operation has no effect. The removal shall
be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemovePTZConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,
    // output parameters:
    _trt__RemovePTZConfigurationResponse&trt__RemovePTZConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemovePTZConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,
    // output parameters:
    _trt__RemovePTZConfigurationResponse&trt__RemovePTZConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemovePTZConfiguration SOAP
//gsoap trt  service method-style:	RemovePTZConfiguration document
//gsoap trt  service method-encoding:	RemovePTZConfiguration literal
//gsoap trt  service method-input-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration
//gsoap trt  service method-output-action:	RemovePTZConfiguration http://www.onvif.org/ver10/media/wsdl/RemovePTZConfigurationResponse
int __trt__RemovePTZConfiguration(
    _trt__RemovePTZConfiguration*       trt__RemovePTZConfiguration,	///< Input parameter
    _trt__RemovePTZConfigurationResponse&trt__RemovePTZConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveVideoAnalyticsConfiguration                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveVideoAnalyticsConfiguration" of service binding "MediaBinding".
This operation removes a VideoAnalyticsConfiguration from an existing media profile.
If the media profile does not contain a VideoAnalyticsConfiguration, the operation
has no effect.
The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    _trt__RemoveVideoAnalyticsConfigurationResponse&trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,
    // output parameters:
    _trt__RemoveVideoAnalyticsConfigurationResponse&trt__RemoveVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	RemoveVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	RemoveVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	RemoveVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfigurationResponse
int __trt__RemoveVideoAnalyticsConfiguration(
    _trt__RemoveVideoAnalyticsConfiguration* trt__RemoveVideoAnalyticsConfiguration,	///< Input parameter
    _trt__RemoveVideoAnalyticsConfigurationResponse&trt__RemoveVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveMetadataConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveMetadataConfiguration" of service binding "MediaBinding".
This operation removes a MetadataConfiguration from an existing media profile. If
the media profile does not contain a MetadataConfiguration, the operation has no
effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,
    // output parameters:
    _trt__RemoveMetadataConfigurationResponse&trt__RemoveMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,
    // output parameters:
    _trt__RemoveMetadataConfigurationResponse&trt__RemoveMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveMetadataConfiguration SOAP
//gsoap trt  service method-style:	RemoveMetadataConfiguration document
//gsoap trt  service method-encoding:	RemoveMetadataConfiguration literal
//gsoap trt  service method-input-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration
//gsoap trt  service method-output-action:	RemoveMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfigurationResponse
int __trt__RemoveMetadataConfiguration(
    _trt__RemoveMetadataConfiguration*  trt__RemoveMetadataConfiguration,	///< Input parameter
    _trt__RemoveMetadataConfigurationResponse&trt__RemoveMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioOutputConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioOutputConfiguration" of service binding "MediaBinding".
This operation removes an AudioOutputConfiguration from an existing media profile.
If the media profile does not contain an AudioOutputConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    _trt__RemoveAudioOutputConfigurationResponse&trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,
    // output parameters:
    _trt__RemoveAudioOutputConfigurationResponse&trt__RemoveAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioOutputConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration
//gsoap trt  service method-output-action:	RemoveAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfigurationResponse
int __trt__RemoveAudioOutputConfiguration(
    _trt__RemoveAudioOutputConfiguration* trt__RemoveAudioOutputConfiguration,	///< Input parameter
    _trt__RemoveAudioOutputConfigurationResponse&trt__RemoveAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__RemoveAudioDecoderConfiguration                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__RemoveAudioDecoderConfiguration" of service binding "MediaBinding".
This operation removes an AudioDecoderConfiguration from an existing media profile.
If the media profile does not contain an AudioDecoderConfiguration, the operation
has no effect. The removal shall be persistent.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    _trt__RemoveAudioDecoderConfigurationResponse&trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__RemoveAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,
    // output parameters:
    _trt__RemoveAudioDecoderConfigurationResponse&trt__RemoveAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	RemoveAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	RemoveAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	RemoveAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration
//gsoap trt  service method-output-action:	RemoveAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfigurationResponse
int __trt__RemoveAudioDecoderConfiguration(
    _trt__RemoveAudioDecoderConfiguration* trt__RemoveAudioDecoderConfiguration,	///< Input parameter
    _trt__RemoveAudioDecoderConfigurationResponse&trt__RemoveAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteProfile                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteProfile" of service binding "MediaBinding".
This operation deletes a profile. This change shall always be persistent. Deletion
of a profile is only possible for non-fixed profiles

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfile"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteProfile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__DeleteProfile*                trt__DeleteProfile,
    // output parameters:
    _trt__DeleteProfileResponse        &trt__DeleteProfileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteProfile(
    struct soap *soap,
    // input parameters:
    _trt__DeleteProfile*                trt__DeleteProfile,
    // output parameters:
    _trt__DeleteProfileResponse        &trt__DeleteProfileResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	DeleteProfile SOAP
//gsoap trt  service method-style:	DeleteProfile document
//gsoap trt  service method-encoding:	DeleteProfile literal
//gsoap trt  service method-input-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfile
//gsoap trt  service method-output-action:	DeleteProfile http://www.onvif.org/ver10/media/wsdl/DeleteProfileResponse
int __trt__DeleteProfile(
    _trt__DeleteProfile*                trt__DeleteProfile,	///< Input parameter
    _trt__DeleteProfileResponse        &trt__DeleteProfileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing video source configurations for a device. The
client need not know anything about the video source configurations in order to
use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    _trt__GetVideoSourceConfigurationsResponse&trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,
    // output parameters:
    _trt__GetVideoSourceConfigurationsResponse&trt__GetVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationsResponse
int __trt__GetVideoSourceConfigurations(
    _trt__GetVideoSourceConfigurations* trt__GetVideoSourceConfigurations,	///< Input parameter
    _trt__GetVideoSourceConfigurationsResponse&trt__GetVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing video encoder configurations of a device. This
command lists all configured video encoder configurations in a device. The client
need not know anything apriori about the video encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    _trt__GetVideoEncoderConfigurationsResponse&trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,
    // output parameters:
    _trt__GetVideoEncoderConfigurationsResponse&trt__GetVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationsResponse
int __trt__GetVideoEncoderConfigurations(
    _trt__GetVideoEncoderConfigurations* trt__GetVideoEncoderConfigurations,	///< Input parameter
    _trt__GetVideoEncoderConfigurationsResponse&trt__GetVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurations" of service binding "MediaBinding".
This operation lists all existing audio source configurations of a device. This
command lists all audio source configurations in a device. The client need not
know anything apriori about the audio source configurations in order to use the
command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    _trt__GetAudioSourceConfigurationsResponse&trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,
    // output parameters:
    _trt__GetAudioSourceConfigurationsResponse&trt__GetAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/
//gsoap trt  service method-output-action:	GetAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/Response
int __trt__GetAudioSourceConfigurations(
    _trt__GetAudioSourceConfigurations* trt__GetAudioSourceConfigurations,	///< Input parameter
    _trt__GetAudioSourceConfigurationsResponse&trt__GetAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurations" of service binding "MediaBinding".
This operation lists all existing device audio encoder configurations. The client
need not know anything apriori about the audio encoder configurations in order
to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    _trt__GetAudioEncoderConfigurationsResponse&trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,
    // output parameters:
    _trt__GetAudioEncoderConfigurationsResponse&trt__GetAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationsResponse
int __trt__GetAudioEncoderConfigurations(
    _trt__GetAudioEncoderConfigurations* trt__GetAudioEncoderConfigurations,	///< Input parameter
    _trt__GetAudioEncoderConfigurationsResponse&trt__GetAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfigurations                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation lists all video analytics configurations of a device. This command
lists all configured video analytics in a device. The client need not know anything
apriori about the video analytics in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationsResponse&trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationsResponse&trt__GetVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationsResponse
int __trt__GetVideoAnalyticsConfigurations(
    _trt__GetVideoAnalyticsConfigurations* trt__GetVideoAnalyticsConfigurations,	///< Input parameter
    _trt__GetVideoAnalyticsConfigurationsResponse&trt__GetVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurations                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurations" of service binding "MediaBinding".
This operation lists all existing metadata configurations. The client need not know
anything apriori about the metadata in order to use the command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,
    // output parameters:
    _trt__GetMetadataConfigurationsResponse&trt__GetMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,
    // output parameters:
    _trt__GetMetadataConfigurationsResponse&trt__GetMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetMetadataConfigurations document
//gsoap trt  service method-encoding:	GetMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations
//gsoap trt  service method-output-action:	GetMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationsResponse
int __trt__GetMetadataConfigurations(
    _trt__GetMetadataConfigurations*    trt__GetMetadataConfigurations,	///< Input parameter
    _trt__GetMetadataConfigurationsResponse&trt__GetMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurations                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all existing AudioOutputConfigurations of a device. The NVC need
not know anything apriori about the audio configurations to use this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    _trt__GetAudioOutputConfigurationsResponse&trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,
    // output parameters:
    _trt__GetAudioOutputConfigurationsResponse&trt__GetAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationsResponse
int __trt__GetAudioOutputConfigurations(
    _trt__GetAudioOutputConfigurations* trt__GetAudioOutputConfigurations,	///< Input parameter
    _trt__GetAudioOutputConfigurationsResponse&trt__GetAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurations                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurations" of service binding "MediaBinding".
This command lists all existing AudioDecoderConfigurations of a device. The NVC
need not know anything apriori about the audio decoder configurations in order
to
use this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    _trt__GetAudioDecoderConfigurationsResponse&trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,
    // output parameters:
    _trt__GetAudioDecoderConfigurationsResponse&trt__GetAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationsResponse
int __trt__GetAudioDecoderConfigurations(
    _trt__GetAudioDecoderConfigurations* trt__GetAudioDecoderConfigurations,	///< Input parameter
    _trt__GetAudioDecoderConfigurationsResponse&trt__GetAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfiguration" of service binding "MediaBinding".
If the video source configuration token is already known, the video source configuration
can be fetched through the GetVideoSourceConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,
    // output parameters:
    _trt__GetVideoSourceConfigurationResponse&trt__GetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,
    // output parameters:
    _trt__GetVideoSourceConfigurationResponse&trt__GetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	GetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	GetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration
//gsoap trt  service method-output-action:	GetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurationResponse
int __trt__GetVideoSourceConfiguration(
    _trt__GetVideoSourceConfiguration*  trt__GetVideoSourceConfiguration,	///< Input parameter
    _trt__GetVideoSourceConfigurationResponse&trt__GetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfiguration" of service binding "MediaBinding".
If the video encoder configuration token is already known, the encoder configuration
can be fetched through the GetVideoEncoderConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    _trt__GetVideoEncoderConfigurationResponse&trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,
    // output parameters:
    _trt__GetVideoEncoderConfigurationResponse&trt__GetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	GetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	GetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationResponse
int __trt__GetVideoEncoderConfiguration(
    _trt__GetVideoEncoderConfiguration* trt__GetVideoEncoderConfiguration,	///< Input parameter
    _trt__GetVideoEncoderConfigurationResponse&trt__GetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfiguration" of service binding "MediaBinding".
The GetAudioSourceConfiguration command fetches the audio source configurations
if the audio source configuration token is already known. An

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,
    // output parameters:
    _trt__GetAudioSourceConfigurationResponse&trt__GetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,
    // output parameters:
    _trt__GetAudioSourceConfigurationResponse&trt__GetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	GetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	GetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration
//gsoap trt  service method-output-action:	GetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationResponse
int __trt__GetAudioSourceConfiguration(
    _trt__GetAudioSourceConfiguration*  trt__GetAudioSourceConfiguration,	///< Input parameter
    _trt__GetAudioSourceConfigurationResponse&trt__GetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfiguration" of service binding "MediaBinding".
The GetAudioEncoderConfiguration command fetches the encoder configuration if the
audio encoder configuration token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    _trt__GetAudioEncoderConfigurationResponse&trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,
    // output parameters:
    _trt__GetAudioEncoderConfigurationResponse&trt__GetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	GetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationResponse
int __trt__GetAudioEncoderConfiguration(
    _trt__GetAudioEncoderConfiguration* trt__GetAudioEncoderConfiguration,	///< Input parameter
    _trt__GetAudioEncoderConfigurationResponse&trt__GetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoAnalyticsConfiguration" of service binding "MediaBinding".
The GetVideoAnalyticsConfiguration command fetches the video analytics configuration
if the video analytics token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationResponse&trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__GetVideoAnalyticsConfigurationResponse&trt__GetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	GetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	GetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	GetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurationResponse
int __trt__GetVideoAnalyticsConfiguration(
    _trt__GetVideoAnalyticsConfiguration* trt__GetVideoAnalyticsConfiguration,	///< Input parameter
    _trt__GetVideoAnalyticsConfigurationResponse&trt__GetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfiguration" of service binding "MediaBinding".
The GetMetadataConfiguration command fetches the metadata configuration if the metadata
token is known.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,
    // output parameters:
    _trt__GetMetadataConfigurationResponse&trt__GetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,
    // output parameters:
    _trt__GetMetadataConfigurationResponse&trt__GetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfiguration SOAP
//gsoap trt  service method-style:	GetMetadataConfiguration document
//gsoap trt  service method-encoding:	GetMetadataConfiguration literal
//gsoap trt  service method-input-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration
//gsoap trt  service method-output-action:	GetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationResponse
int __trt__GetMetadataConfiguration(
    _trt__GetMetadataConfiguration*     trt__GetMetadataConfiguration,	///< Input parameter
    _trt__GetMetadataConfigurationResponse&trt__GetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfiguration" of service binding "MediaBinding".
If the audio output configuration token is already known, the output configuration
can be fetched through the GetAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,
    // output parameters:
    _trt__GetAudioOutputConfigurationResponse&trt__GetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,
    // output parameters:
    _trt__GetAudioOutputConfigurationResponse&trt__GetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	GetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	GetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration
//gsoap trt  service method-output-action:	GetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationResponse
int __trt__GetAudioOutputConfiguration(
    _trt__GetAudioOutputConfiguration*  trt__GetAudioOutputConfiguration,	///< Input parameter
    _trt__GetAudioOutputConfigurationResponse&trt__GetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfiguration" of service binding "MediaBinding".
If the audio decoder configuration token is already known, the decoder configuration
can be fetched through the GetAudioDecoderConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    _trt__GetAudioDecoderConfigurationResponse&trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,
    // output parameters:
    _trt__GetAudioDecoderConfigurationResponse&trt__GetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	GetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	GetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationResponse
int __trt__GetAudioDecoderConfiguration(
    _trt__GetAudioDecoderConfiguration* trt__GetAudioDecoderConfiguration,	///< Input parameter
    _trt__GetAudioDecoderConfigurationResponse&trt__GetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoEncoderConfigurations" of service binding "MediaBinding".
This operation lists all the video encoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoEncoderConfiguration command on the
media profile. The result will vary depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoEncoderConfigurationsResponse&trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoEncoderConfigurationsResponse&trt__GetCompatibleVideoEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurationsResponse
int __trt__GetCompatibleVideoEncoderConfigurations(
    _trt__GetCompatibleVideoEncoderConfigurations* trt__GetCompatibleVideoEncoderConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoEncoderConfigurationsResponse&trt__GetCompatibleVideoEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoSourceConfigurations" of service binding "MediaBinding".
This operation requests all the video source configurations of the device that are
compatible
with a certain media profile. Each of the returned configurations shall be a valid
input
parameter for the AddVideoSourceConfiguration command on the media profile. The
result
will vary depending on the capabilities, configurations and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoSourceConfigurationsResponse&trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoSourceConfigurationsResponse&trt__GetCompatibleVideoSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurationsResponse
int __trt__GetCompatibleVideoSourceConfigurations(
    _trt__GetCompatibleVideoSourceConfigurations* trt__GetCompatibleVideoSourceConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoSourceConfigurationsResponse&trt__GetCompatibleVideoSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioEncoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioEncoderConfigurations" of service binding "MediaBinding".
This operation requests all audio encoder configurations of a device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioSourceConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioEncoderConfigurationsResponse&trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioEncoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioEncoderConfigurationsResponse&trt__GetCompatibleAudioEncoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioEncoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioEncoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioEncoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioEncoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurationsResponse
int __trt__GetCompatibleAudioEncoderConfigurations(
    _trt__GetCompatibleAudioEncoderConfigurations* trt__GetCompatibleAudioEncoderConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioEncoderConfigurationsResponse&trt__GetCompatibleAudioEncoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioSourceConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioSourceConfigurations" of service binding "MediaBinding".
This operation requests all audio source configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddAudioEncoderConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioSourceConfigurationsResponse&trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioSourceConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioSourceConfigurationsResponse&trt__GetCompatibleAudioSourceConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioSourceConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioSourceConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioSourceConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioSourceConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurationsResponse
int __trt__GetCompatibleAudioSourceConfigurations(
    _trt__GetCompatibleAudioSourceConfigurations* trt__GetCompatibleAudioSourceConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioSourceConfigurationsResponse&trt__GetCompatibleAudioSourceConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleVideoAnalyticsConfigurations                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleVideoAnalyticsConfigurations" of service binding "MediaBinding".
This operation requests all video analytic configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddVideoAnalyticsConfiguration command on the
media profile. The result varies depending on the capabilities, configurations
and settings in the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse&trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleVideoAnalyticsConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,
    // output parameters:
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse&trt__GetCompatibleVideoAnalyticsConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleVideoAnalyticsConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleVideoAnalyticsConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleVideoAnalyticsConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations
//gsoap trt  service method-output-action:	GetCompatibleVideoAnalyticsConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurationsResponse
int __trt__GetCompatibleVideoAnalyticsConfigurations(
    _trt__GetCompatibleVideoAnalyticsConfigurations* trt__GetCompatibleVideoAnalyticsConfigurations,	///< Input parameter
    _trt__GetCompatibleVideoAnalyticsConfigurationsResponse&trt__GetCompatibleVideoAnalyticsConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleMetadataConfigurations                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleMetadataConfigurations" of service binding "MediaBinding".
This operation requests all the metadata configurations of the device that are compatible
with a certain media profile. Each of the returned configurations shall be a valid
input parameter for the AddMetadataConfiguration command on the media profile.
The result varies depending on the capabilities, configurations and settings in
the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    _trt__GetCompatibleMetadataConfigurationsResponse&trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleMetadataConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,
    // output parameters:
    _trt__GetCompatibleMetadataConfigurationsResponse&trt__GetCompatibleMetadataConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleMetadataConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleMetadataConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleMetadataConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations
//gsoap trt  service method-output-action:	GetCompatibleMetadataConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurationsResponse
int __trt__GetCompatibleMetadataConfigurations(
    _trt__GetCompatibleMetadataConfigurations* trt__GetCompatibleMetadataConfigurations,	///< Input parameter
    _trt__GetCompatibleMetadataConfigurationsResponse&trt__GetCompatibleMetadataConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioOutputConfigurations                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioOutputConfigurations" of service binding "MediaBinding".
This command lists all audio output configurations of a device that are compatible
with a certain media profile. Each returned configuration shall be a valid input
for the 
AddAudioOutputConfiguration command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioOutputConfigurationsResponse&trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioOutputConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioOutputConfigurationsResponse&trt__GetCompatibleAudioOutputConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioOutputConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioOutputConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioOutputConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioOutputConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurationsResponse
int __trt__GetCompatibleAudioOutputConfigurations(
    _trt__GetCompatibleAudioOutputConfigurations* trt__GetCompatibleAudioOutputConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioOutputConfigurationsResponse&trt__GetCompatibleAudioOutputConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetCompatibleAudioDecoderConfigurations                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetCompatibleAudioDecoderConfigurations" of service binding "MediaBinding".
This operation lists all the audio decoder configurations of the device that are
compatible with a certain media profile. Each of the returned configurations shall
be a valid input parameter for the AddAudioDecoderConfiguration command on the
media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioDecoderConfigurationsResponse&trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetCompatibleAudioDecoderConfigurations(
    struct soap *soap,
    // input parameters:
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,
    // output parameters:
    _trt__GetCompatibleAudioDecoderConfigurationsResponse&trt__GetCompatibleAudioDecoderConfigurationsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetCompatibleAudioDecoderConfigurations SOAP
//gsoap trt  service method-style:	GetCompatibleAudioDecoderConfigurations document
//gsoap trt  service method-encoding:	GetCompatibleAudioDecoderConfigurations literal
//gsoap trt  service method-input-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations
//gsoap trt  service method-output-action:	GetCompatibleAudioDecoderConfigurations http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurationsResponse
int __trt__GetCompatibleAudioDecoderConfigurations(
    _trt__GetCompatibleAudioDecoderConfigurations* trt__GetCompatibleAudioDecoderConfigurations,	///< Input parameter
    _trt__GetCompatibleAudioDecoderConfigurationsResponse&trt__GetCompatibleAudioDecoderConfigurationsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceConfiguration" of service binding "MediaBinding".
This operation modifies a video source configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Running streams
using this configuration may be immediately updated according to the new settings.
The changes are not guaranteed to take effect unless the client requests a new
stream URI and restarts any affected stream. NVC methods for changing a running
stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,
    // output parameters:
    _trt__SetVideoSourceConfigurationResponse&trt__SetVideoSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,
    // output parameters:
    _trt__SetVideoSourceConfigurationResponse&trt__SetVideoSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoSourceConfiguration SOAP
//gsoap trt  service method-style:	SetVideoSourceConfiguration document
//gsoap trt  service method-encoding:	SetVideoSourceConfiguration literal
//gsoap trt  service method-input-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration
//gsoap trt  service method-output-action:	SetVideoSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfigurationResponse
int __trt__SetVideoSourceConfiguration(
    _trt__SetVideoSourceConfiguration*  trt__SetVideoSourceConfiguration,	///< Input parameter
    _trt__SetVideoSourceConfigurationResponse&trt__SetVideoSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoEncoderConfiguration" of service binding "MediaBinding".
This operation modifies a video encoder configuration. The ForcePersistence flag
indicates if the changes shall remain after reboot of the device. Changes in the
Multicast settings shall always be persistent. Running streams using this configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream. NVC methods for changing a running stream are out of scope for this specification.
<br/>SessionTimeout is provided as a hint for keeping rtsp session by a device.
If necessary the device may adapt parameter values for SessionTimeout elements
without returning an error. For the time between keep alive calls the client shall
adhere to the timeout value signaled via RTSP.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    _trt__SetVideoEncoderConfigurationResponse&trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,
    // output parameters:
    _trt__SetVideoEncoderConfigurationResponse&trt__SetVideoEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetVideoEncoderConfiguration document
//gsoap trt  service method-encoding:	SetVideoEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration
//gsoap trt  service method-output-action:	SetVideoEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfigurationResponse
int __trt__SetVideoEncoderConfiguration(
    _trt__SetVideoEncoderConfiguration* trt__SetVideoEncoderConfiguration,	///< Input parameter
    _trt__SetVideoEncoderConfigurationResponse&trt__SetVideoEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioSourceConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioSourceConfiguration" of service binding "MediaBinding".
This operation modifies an audio source configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration
may be immediately updated according to the new settings. The changes are not guaranteed
to take effect unless the client requests a new stream URI and restarts any affected
stream
NVC methods for changing a running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioSourceConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,
    // output parameters:
    _trt__SetAudioSourceConfigurationResponse&trt__SetAudioSourceConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioSourceConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,
    // output parameters:
    _trt__SetAudioSourceConfigurationResponse&trt__SetAudioSourceConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioSourceConfiguration SOAP
//gsoap trt  service method-style:	SetAudioSourceConfiguration document
//gsoap trt  service method-encoding:	SetAudioSourceConfiguration literal
//gsoap trt  service method-input-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration
//gsoap trt  service method-output-action:	SetAudioSourceConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfigurationResponse
int __trt__SetAudioSourceConfiguration(
    _trt__SetAudioSourceConfiguration*  trt__SetAudioSourceConfiguration,	///< Input parameter
    _trt__SetAudioSourceConfigurationResponse&trt__SetAudioSourceConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioEncoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioEncoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio encoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device. Running streams using this
configuration may be immediately updated
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    _trt__SetAudioEncoderConfigurationResponse&trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioEncoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,
    // output parameters:
    _trt__SetAudioEncoderConfigurationResponse&trt__SetAudioEncoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioEncoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioEncoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioEncoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration
//gsoap trt  service method-output-action:	SetAudioEncoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfigurationResponse
int __trt__SetAudioEncoderConfiguration(
    _trt__SetAudioEncoderConfiguration* trt__SetAudioEncoderConfiguration,	///< Input parameter
    _trt__SetAudioEncoderConfigurationResponse&trt__SetAudioEncoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoAnalyticsConfiguration                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoAnalyticsConfiguration" of service binding "MediaBinding".
A video analytics configuration is modified using this command. The ForcePersistence
flag
indicates if the changes shall remain after reboot of the device or not. Running
streams using
this configuration shall be immediately updated according to the new settings.
Otherwise
inconsistencies can occur between the scene description processed by the rule engine
and
the notifications produced by analytics engine and rule engine which reference
the very same
video analytics configuration token.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__SetVideoAnalyticsConfigurationResponse&trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoAnalyticsConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,
    // output parameters:
    _trt__SetVideoAnalyticsConfigurationResponse&trt__SetVideoAnalyticsConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoAnalyticsConfiguration SOAP
//gsoap trt  service method-style:	SetVideoAnalyticsConfiguration document
//gsoap trt  service method-encoding:	SetVideoAnalyticsConfiguration literal
//gsoap trt  service method-input-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration
//gsoap trt  service method-output-action:	SetVideoAnalyticsConfiguration http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfigurationResponse
int __trt__SetVideoAnalyticsConfiguration(
    _trt__SetVideoAnalyticsConfiguration* trt__SetVideoAnalyticsConfiguration,	///< Input parameter
    _trt__SetVideoAnalyticsConfigurationResponse&trt__SetVideoAnalyticsConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetMetadataConfiguration                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetMetadataConfiguration" of service binding "MediaBinding".
This operation modifies a metadata configuration. The ForcePersistence flag indicates
if the
changes shall remain after reboot of the device. Changes in the Multicast settings
shall
always be persistent. Running streams using this configuration may be updated immediately
according to the new settings. The changes are not guaranteed to take effect unless
the client
requests a new stream URI and restarts any affected streams. NVC methods for changing
a
running stream are out of scope for this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetMetadataConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,
    // output parameters:
    _trt__SetMetadataConfigurationResponse&trt__SetMetadataConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetMetadataConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,
    // output parameters:
    _trt__SetMetadataConfigurationResponse&trt__SetMetadataConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetMetadataConfiguration SOAP
//gsoap trt  service method-style:	SetMetadataConfiguration document
//gsoap trt  service method-encoding:	SetMetadataConfiguration literal
//gsoap trt  service method-input-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration
//gsoap trt  service method-output-action:	SetMetadataConfiguration http://www.onvif.org/ver10/media/wsdl/SetMetadataConfigurationResponse
int __trt__SetMetadataConfiguration(
    _trt__SetMetadataConfiguration*     trt__SetMetadataConfiguration,	///< Input parameter
    _trt__SetMetadataConfigurationResponse&trt__SetMetadataConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioOutputConfiguration                                       *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioOutputConfiguration" of service binding "MediaBinding".
This operation modifies an audio output configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioOutputConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,
    // output parameters:
    _trt__SetAudioOutputConfigurationResponse&trt__SetAudioOutputConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioOutputConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,
    // output parameters:
    _trt__SetAudioOutputConfigurationResponse&trt__SetAudioOutputConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioOutputConfiguration SOAP
//gsoap trt  service method-style:	SetAudioOutputConfiguration document
//gsoap trt  service method-encoding:	SetAudioOutputConfiguration literal
//gsoap trt  service method-input-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration
//gsoap trt  service method-output-action:	SetAudioOutputConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfigurationResponse
int __trt__SetAudioOutputConfiguration(
    _trt__SetAudioOutputConfiguration*  trt__SetAudioOutputConfiguration,	///< Input parameter
    _trt__SetAudioOutputConfigurationResponse&trt__SetAudioOutputConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetAudioDecoderConfiguration                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetAudioDecoderConfiguration" of service binding "MediaBinding".
This operation modifies an audio decoder configuration. The ForcePersistence flag
indicates if
the changes shall remain after reboot of the device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    _trt__SetAudioDecoderConfigurationResponse&trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetAudioDecoderConfiguration(
    struct soap *soap,
    // input parameters:
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,
    // output parameters:
    _trt__SetAudioDecoderConfigurationResponse&trt__SetAudioDecoderConfigurationResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetAudioDecoderConfiguration SOAP
//gsoap trt  service method-style:	SetAudioDecoderConfiguration document
//gsoap trt  service method-encoding:	SetAudioDecoderConfiguration literal
//gsoap trt  service method-input-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration
//gsoap trt  service method-output-action:	SetAudioDecoderConfiguration http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfigurationResponse
int __trt__SetAudioDecoderConfiguration(
    _trt__SetAudioDecoderConfiguration* trt__SetAudioDecoderConfiguration,	///< Input parameter
    _trt__SetAudioDecoderConfigurationResponse&trt__SetAudioDecoderConfigurationResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for video
source configuration parameters) when the video source parameters are
reconfigured If a video source configuration is specified, the options shall concern
that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    _trt__GetVideoSourceConfigurationOptionsResponse&trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,
    // output parameters:
    _trt__GetVideoSourceConfigurationOptionsResponse&trt__GetVideoSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/
//gsoap trt  service method-output-action:	GetVideoSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/Response
int __trt__GetVideoSourceConfigurationOptions(
    _trt__GetVideoSourceConfigurationOptions* trt__GetVideoSourceConfigurationOptions,	///< Input parameter
    _trt__GetVideoSourceConfigurationOptionsResponse&trt__GetVideoSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for video
encoder 
				configuration parameters) when the video encoder
parameters are reconfigured. <br/>
				For JPEG, MPEG4 and H264 extension elements have
been defined that provide additional information. A device must provide the 
				XxxOption information for all encodings supported
and should additionally provide the corresponding XxxOption2 information.<br/>
				This response contains the available video encoder
configuration options. If a video encoder configuration is specified, 
				the options shall concern that particular configuration.
If a media profile is specified, the options shall be 
				compatible with that media profile. If no tokens
are specified, the options shall be considered generic for the device.
			

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    _trt__GetVideoEncoderConfigurationOptionsResponse&trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,
    // output parameters:
    _trt__GetVideoEncoderConfigurationOptionsResponse&trt__GetVideoEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetVideoEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetVideoEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetVideoEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptionsResponse
int __trt__GetVideoEncoderConfigurationOptions(
    _trt__GetVideoEncoderConfigurationOptions* trt__GetVideoEncoderConfigurationOptions,	///< Input parameter
    _trt__GetVideoEncoderConfigurationOptionsResponse&trt__GetVideoEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioSourceConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioSourceConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
source configuration parameters) when the audio source parameters are
reconfigured. If an audio source configuration is specified, the options shall
concern that
particular configuration. If a media profile is specified, the options shall be
compatible with
that media profile.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    _trt__GetAudioSourceConfigurationOptionsResponse&trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioSourceConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,
    // output parameters:
    _trt__GetAudioSourceConfigurationOptionsResponse&trt__GetAudioSourceConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioSourceConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioSourceConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioSourceConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioSourceConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptionsResponse
int __trt__GetAudioSourceConfigurationOptions(
    _trt__GetAudioSourceConfigurationOptions* trt__GetAudioSourceConfigurationOptions,	///< Input parameter
    _trt__GetAudioSourceConfigurationOptionsResponse&trt__GetAudioSourceConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioEncoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioEncoderConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options  (supported values and ranges for audio
encoder configuration parameters) when the audio encoder parameters are
reconfigured.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioEncoderConfigurationOptionsResponse&trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioEncoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioEncoderConfigurationOptionsResponse&trt__GetAudioEncoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioEncoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioEncoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioEncoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioEncoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptionsResponse
int __trt__GetAudioEncoderConfigurationOptions(
    _trt__GetAudioEncoderConfigurationOptions* trt__GetAudioEncoderConfigurationOptions,	///< Input parameter
    _trt__GetAudioEncoderConfigurationOptionsResponse&trt__GetAudioEncoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetMetadataConfigurationOptions                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetMetadataConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for metadata
configuration parameters) for changing the metadata configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    _trt__GetMetadataConfigurationOptionsResponse&trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetMetadataConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,
    // output parameters:
    _trt__GetMetadataConfigurationOptionsResponse&trt__GetMetadataConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetMetadataConfigurationOptions SOAP
//gsoap trt  service method-style:	GetMetadataConfigurationOptions document
//gsoap trt  service method-encoding:	GetMetadataConfigurationOptions literal
//gsoap trt  service method-input-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions
//gsoap trt  service method-output-action:	GetMetadataConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptionsResponse
int __trt__GetMetadataConfigurationOptions(
    _trt__GetMetadataConfigurationOptions* trt__GetMetadataConfigurationOptions,	///< Input parameter
    _trt__GetMetadataConfigurationOptionsResponse&trt__GetMetadataConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioOutputConfigurationOptions                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioOutputConfigurationOptions" of service binding "MediaBinding".
This operation returns the available options (supported values and ranges for audio
output configuration parameters) for configuring an audio output.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    _trt__GetAudioOutputConfigurationOptionsResponse&trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioOutputConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,
    // output parameters:
    _trt__GetAudioOutputConfigurationOptionsResponse&trt__GetAudioOutputConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioOutputConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioOutputConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioOutputConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioOutputConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptionsResponse
int __trt__GetAudioOutputConfigurationOptions(
    _trt__GetAudioOutputConfigurationOptions* trt__GetAudioOutputConfigurationOptions,	///< Input parameter
    _trt__GetAudioOutputConfigurationOptionsResponse&trt__GetAudioOutputConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetAudioDecoderConfigurationOptions                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetAudioDecoderConfigurationOptions" of service binding "MediaBinding".
This command list the audio decoding capabilities for a given profile and configuration
of a
device.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioDecoderConfigurationOptionsResponse&trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetAudioDecoderConfigurationOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,
    // output parameters:
    _trt__GetAudioDecoderConfigurationOptionsResponse&trt__GetAudioDecoderConfigurationOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetAudioDecoderConfigurationOptions SOAP
//gsoap trt  service method-style:	GetAudioDecoderConfigurationOptions document
//gsoap trt  service method-encoding:	GetAudioDecoderConfigurationOptions literal
//gsoap trt  service method-input-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions
//gsoap trt  service method-output-action:	GetAudioDecoderConfigurationOptions http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptionsResponse
int __trt__GetAudioDecoderConfigurationOptions(
    _trt__GetAudioDecoderConfigurationOptions* trt__GetAudioDecoderConfigurationOptions,	///< Input parameter
    _trt__GetAudioDecoderConfigurationOptionsResponse&trt__GetAudioDecoderConfigurationOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetGuaranteedNumberOfVideoEncoderInstances                        *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetGuaranteedNumberOfVideoEncoderInstances" of service binding "MediaBinding".
The GetGuaranteedNumberOfVideoEncoderInstances command can be used to request the
minimum number of guaranteed video encoder instances (applications) per Video Source
Configuration.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse&trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    struct soap *soap,
    // input parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,
    // output parameters:
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse&trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetGuaranteedNumberOfVideoEncoderInstances SOAP
//gsoap trt  service method-style:	GetGuaranteedNumberOfVideoEncoderInstances document
//gsoap trt  service method-encoding:	GetGuaranteedNumberOfVideoEncoderInstances literal
//gsoap trt  service method-input-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances
//gsoap trt  service method-output-action:	GetGuaranteedNumberOfVideoEncoderInstances http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstancesResponse
int __trt__GetGuaranteedNumberOfVideoEncoderInstances(
    _trt__GetGuaranteedNumberOfVideoEncoderInstances* trt__GetGuaranteedNumberOfVideoEncoderInstances,	///< Input parameter
    _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse&trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetStreamUri                                                      *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetStreamUri" of service binding "MediaBinding".
This operation requests a URI that can be used to initiate a live media stream using
RTSP as
the control protocol. The returned URI shall remain valid indefinitely even if
the profile is
changed. The ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be
set
accordingly (ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). <br/>
				The correct syntax for the StreamSetup element for
these media stream setups defined in 5.1.1 of the streaming specification are as
follows:
				<ol>
					<li>RTP unicast over UDP: StreamType = "RTP_unicast",
TransportProtocol = "UDP"</li>
					<li>RTP over RTSP over HTTP over TCP: StreamType
= "RTP_unicast", TransportProtocol = "HTTP"</li>
					<li>RTP over RTSP over TCP: StreamType =
"RTP_unicast", TransportProtocol = "RTSP"</li>
				</ol>
				<br/>
If a multicast stream is requested at least one of VideoEncoderConfiguration, AudioEncoderConfiguration
and MetadataConfiguration shall have a valid multicast setting.<br/>
For full compatibility with other ONVIF services a device should not generate Uris
longer than
128 octets.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetStreamUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetStreamUri*                 trt__GetStreamUri,
    // output parameters:
    _trt__GetStreamUriResponse         &trt__GetStreamUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetStreamUri(
    struct soap *soap,
    // input parameters:
    _trt__GetStreamUri*                 trt__GetStreamUri,
    // output parameters:
    _trt__GetStreamUriResponse         &trt__GetStreamUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetStreamUri SOAP
//gsoap trt  service method-style:	GetStreamUri document
//gsoap trt  service method-encoding:	GetStreamUri literal
//gsoap trt  service method-input-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUri
//gsoap trt  service method-output-action:	GetStreamUri http://www.onvif.org/ver10/media/wsdl/GetStreamUriResponse
int __trt__GetStreamUri(
    _trt__GetStreamUri*                 trt__GetStreamUri,	///< Input parameter
    _trt__GetStreamUriResponse         &trt__GetStreamUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StartMulticastStreaming                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StartMulticastStreaming" of service binding "MediaBinding".
This command starts multicast streaming using a specified media profile of a device.
Streaming continues until StopMulticastStreaming is called for the same Profile.
The
streaming shall continue after a reboot of the device until a StopMulticastStreaming
request is
received. The multicast address, port and TTL are configured in the
VideoEncoderConfiguration, AudioEncoderConfiguration and MetadataConfiguration
respectively.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StartMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,
    // output parameters:
    _trt__StartMulticastStreamingResponse&trt__StartMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StartMulticastStreaming(
    struct soap *soap,
    // input parameters:
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,
    // output parameters:
    _trt__StartMulticastStreamingResponse&trt__StartMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	StartMulticastStreaming SOAP
//gsoap trt  service method-style:	StartMulticastStreaming document
//gsoap trt  service method-encoding:	StartMulticastStreaming literal
//gsoap trt  service method-input-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming
//gsoap trt  service method-output-action:	StartMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StartMulticastStreamingResponse
int __trt__StartMulticastStreaming(
    _trt__StartMulticastStreaming*      trt__StartMulticastStreaming,	///< Input parameter
    _trt__StartMulticastStreamingResponse&trt__StartMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__StopMulticastStreaming                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__StopMulticastStreaming" of service binding "MediaBinding".
This command stop multicast streaming using a specified media profile of a device

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__StopMulticastStreaming(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,
    // output parameters:
    _trt__StopMulticastStreamingResponse&trt__StopMulticastStreamingResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__StopMulticastStreaming(
    struct soap *soap,
    // input parameters:
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,
    // output parameters:
    _trt__StopMulticastStreamingResponse&trt__StopMulticastStreamingResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	StopMulticastStreaming SOAP
//gsoap trt  service method-style:	StopMulticastStreaming document
//gsoap trt  service method-encoding:	StopMulticastStreaming literal
//gsoap trt  service method-input-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming
//gsoap trt  service method-output-action:	StopMulticastStreaming http://www.onvif.org/ver10/media/wsdl/StopMulticastStreamingResponse
int __trt__StopMulticastStreaming(
    _trt__StopMulticastStreaming*       trt__StopMulticastStreaming,	///< Input parameter
    _trt__StopMulticastStreamingResponse&trt__StopMulticastStreamingResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetSynchronizationPoint                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetSynchronizationPoint" of service binding "MediaBinding".
Synchronization points allow clients to decode and correctly use all data after
the
synchronization point.
For example, if a video stream is configured with a large I-frame distance and
a client loses a
single packet, the client does not display video until the next I-frame is transmitted.
In such
cases, the client can request a Synchronization Point which enforces the device
to add an I-Frame as soon as possible. Clients can request Synchronization Points
for profiles. The device
shall add synchronization points for all streams associated with this profile.
Similarly, a synchronization point is used to get an update on full PTZ or event
status through
the metadata stream.
If a video stream is associated with the profile, an I-frame shall be added to
this video stream.
If a PTZ metadata stream is associated to the profile,
the PTZ position shall be repeated within the metadata stream.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetSynchronizationPoint(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,
    // output parameters:
    _trt__SetSynchronizationPointResponse&trt__SetSynchronizationPointResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetSynchronizationPoint(
    struct soap *soap,
    // input parameters:
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,
    // output parameters:
    _trt__SetSynchronizationPointResponse&trt__SetSynchronizationPointResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetSynchronizationPoint SOAP
//gsoap trt  service method-style:	SetSynchronizationPoint document
//gsoap trt  service method-encoding:	SetSynchronizationPoint literal
//gsoap trt  service method-input-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint
//gsoap trt  service method-output-action:	SetSynchronizationPoint http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPointResponse
int __trt__SetSynchronizationPoint(
    _trt__SetSynchronizationPoint*      trt__SetSynchronizationPoint,	///< Input parameter
    _trt__SetSynchronizationPointResponse&trt__SetSynchronizationPointResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetSnapshotUri                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetSnapshotUri" of service binding "MediaBinding".
A client uses the GetSnapshotUri command to obtain a JPEG snapshot from the
device. The returned URI shall remain valid indefinitely even if the profile is
changed. The
ValidUntilConnect, ValidUntilReboot and Timeout Parameter shall be set accordingly
(ValidUntilConnect=false, ValidUntilReboot=false, timeout=PT0S). The URI can be
used for
acquiring a JPEG image through a HTTP GET operation. The image encoding will always
be
JPEG regardless of the encoding setting in the media profile. The Jpeg settings
(like resolution or quality) may be taken from the profile if suitable. The provided
image will be updated automatically and independent from calls to GetSnapshotUri.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetSnapshotUri(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,
    // output parameters:
    _trt__GetSnapshotUriResponse       &trt__GetSnapshotUriResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetSnapshotUri(
    struct soap *soap,
    // input parameters:
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,
    // output parameters:
    _trt__GetSnapshotUriResponse       &trt__GetSnapshotUriResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetSnapshotUri SOAP
//gsoap trt  service method-style:	GetSnapshotUri document
//gsoap trt  service method-encoding:	GetSnapshotUri literal
//gsoap trt  service method-input-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri
//gsoap trt  service method-output-action:	GetSnapshotUri http://www.onvif.org/ver10/media/wsdl/GetSnapshotUriResponse
int __trt__GetSnapshotUri(
    _trt__GetSnapshotUri*               trt__GetSnapshotUri,	///< Input parameter
    _trt__GetSnapshotUriResponse       &trt__GetSnapshotUriResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetVideoSourceModes                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetVideoSourceModes" of service binding "MediaBinding".
A device returns the information for current video source mode and settable video
source modes of specified video source. A device that indicates a capability of
 VideoSourceModes shall support this command.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetVideoSourceModes(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetVideoSourceModes*          trt__GetVideoSourceModes,
    // output parameters:
    _trt__GetVideoSourceModesResponse  &trt__GetVideoSourceModesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetVideoSourceModes(
    struct soap *soap,
    // input parameters:
    _trt__GetVideoSourceModes*          trt__GetVideoSourceModes,
    // output parameters:
    _trt__GetVideoSourceModesResponse  &trt__GetVideoSourceModesResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetVideoSourceModes SOAP
//gsoap trt  service method-style:	GetVideoSourceModes document
//gsoap trt  service method-encoding:	GetVideoSourceModes literal
//gsoap trt  service method-input-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes
//gsoap trt  service method-output-action:	GetVideoSourceModes http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModesResponse
int __trt__GetVideoSourceModes(
    _trt__GetVideoSourceModes*          trt__GetVideoSourceModes,	///< Input parameter
    _trt__GetVideoSourceModesResponse  &trt__GetVideoSourceModesResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetVideoSourceMode                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetVideoSourceMode" of service binding "MediaBinding".
SetVideoSourceMode changes the media profile structure relating to video source
for the specified video source mode. A device that indicates a capability of VideoSourceModes
shall support this command. The behavior after changing the mode is not defined
in this specification.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetVideoSourceMode(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetVideoSourceMode*           trt__SetVideoSourceMode,
    // output parameters:
    _trt__SetVideoSourceModeResponse   &trt__SetVideoSourceModeResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetVideoSourceMode(
    struct soap *soap,
    // input parameters:
    _trt__SetVideoSourceMode*           trt__SetVideoSourceMode,
    // output parameters:
    _trt__SetVideoSourceModeResponse   &trt__SetVideoSourceModeResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetVideoSourceMode SOAP
//gsoap trt  service method-style:	SetVideoSourceMode document
//gsoap trt  service method-encoding:	SetVideoSourceMode literal
//gsoap trt  service method-input-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode
//gsoap trt  service method-output-action:	SetVideoSourceMode http://www.onvif.org/ver10/media/wsdl/SetVideoSourceModeResponse
int __trt__SetVideoSourceMode(
    _trt__SetVideoSourceMode*           trt__SetVideoSourceMode,	///< Input parameter
    _trt__SetVideoSourceModeResponse   &trt__SetVideoSourceModeResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDs                                                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDs" of service binding "MediaBinding".
Get the OSDs.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDs"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDs(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetOSDs*                      trt__GetOSDs,
    // output parameters:
    _trt__GetOSDsResponse              &trt__GetOSDsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDs(
    struct soap *soap,
    // input parameters:
    _trt__GetOSDs*                      trt__GetOSDs,
    // output parameters:
    _trt__GetOSDsResponse              &trt__GetOSDsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetOSDs SOAP
//gsoap trt  service method-style:	GetOSDs document
//gsoap trt  service method-encoding:	GetOSDs literal
//gsoap trt  service method-input-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDs
//gsoap trt  service method-output-action:	GetOSDs http://www.onvif.org/ver10/media/wsdl/GetOSDsResponse
int __trt__GetOSDs(
    _trt__GetOSDs*                      trt__GetOSDs,	///< Input parameter
    _trt__GetOSDsResponse              &trt__GetOSDsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSD" of service binding "MediaBinding".
Get the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetOSD*                       trt__GetOSD,
    // output parameters:
    _trt__GetOSDResponse               &trt__GetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSD(
    struct soap *soap,
    // input parameters:
    _trt__GetOSD*                       trt__GetOSD,
    // output parameters:
    _trt__GetOSDResponse               &trt__GetOSDResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetOSD SOAP
//gsoap trt  service method-style:	GetOSD document
//gsoap trt  service method-encoding:	GetOSD literal
//gsoap trt  service method-input-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSD
//gsoap trt  service method-output-action:	GetOSD http://www.onvif.org/ver10/media/wsdl/GetOSDResponse
int __trt__GetOSD(
    _trt__GetOSD*                       trt__GetOSD,	///< Input parameter
    _trt__GetOSDResponse               &trt__GetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__GetOSDOptions                                                     *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__GetOSDOptions" of service binding "MediaBinding".
Get the OSD Options.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__GetOSDOptions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__GetOSDOptions*                trt__GetOSDOptions,
    // output parameters:
    _trt__GetOSDOptionsResponse        &trt__GetOSDOptionsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__GetOSDOptions(
    struct soap *soap,
    // input parameters:
    _trt__GetOSDOptions*                trt__GetOSDOptions,
    // output parameters:
    _trt__GetOSDOptionsResponse        &trt__GetOSDOptionsResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	GetOSDOptions SOAP
//gsoap trt  service method-style:	GetOSDOptions document
//gsoap trt  service method-encoding:	GetOSDOptions literal
//gsoap trt  service method-input-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptions
//gsoap trt  service method-output-action:	GetOSDOptions http://www.onvif.org/ver10/media/wsdl/GetOSDOptionsResponse
int __trt__GetOSDOptions(
    _trt__GetOSDOptions*                trt__GetOSDOptions,	///< Input parameter
    _trt__GetOSDOptionsResponse        &trt__GetOSDOptionsResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__SetOSD                                                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__SetOSD" of service binding "MediaBinding".
Set the OSD

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/SetOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/SetOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__SetOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__SetOSD*                       trt__SetOSD,
    // output parameters:
    _trt__SetOSDResponse               &trt__SetOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__SetOSD(
    struct soap *soap,
    // input parameters:
    _trt__SetOSD*                       trt__SetOSD,
    // output parameters:
    _trt__SetOSDResponse               &trt__SetOSDResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	SetOSD SOAP
//gsoap trt  service method-style:	SetOSD document
//gsoap trt  service method-encoding:	SetOSD literal
//gsoap trt  service method-input-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSD
//gsoap trt  service method-output-action:	SetOSD http://www.onvif.org/ver10/media/wsdl/SetOSDResponse
int __trt__SetOSD(
    _trt__SetOSD*                       trt__SetOSD,	///< Input parameter
    _trt__SetOSDResponse               &trt__SetOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__CreateOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__CreateOSD" of service binding "MediaBinding".
Create the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/CreateOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__CreateOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__CreateOSD*                    trt__CreateOSD,
    // output parameters:
    _trt__CreateOSDResponse            &trt__CreateOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__CreateOSD(
    struct soap *soap,
    // input parameters:
    _trt__CreateOSD*                    trt__CreateOSD,
    // output parameters:
    _trt__CreateOSDResponse            &trt__CreateOSDResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	CreateOSD SOAP
//gsoap trt  service method-style:	CreateOSD document
//gsoap trt  service method-encoding:	CreateOSD literal
//gsoap trt  service method-input-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSD
//gsoap trt  service method-output-action:	CreateOSD http://www.onvif.org/ver10/media/wsdl/CreateOSDResponse
int __trt__CreateOSD(
    _trt__CreateOSD*                    trt__CreateOSD,	///< Input parameter
    _trt__CreateOSDResponse            &trt__CreateOSDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __trt__DeleteOSD                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__trt__DeleteOSD" of service binding "MediaBinding".
Delete the OSD.

  - SOAP document/literal style messaging

  - Default SOAP action or REST location path:
    - "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing input action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSD"

  - Addressing output action: "http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___trt__DeleteOSD(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _trt__DeleteOSD*                    trt__DeleteOSD,
    // output parameters:
    _trt__DeleteOSDResponse            &trt__DeleteOSDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __trt__DeleteOSD(
    struct soap *soap,
    // input parameters:
    _trt__DeleteOSD*                    trt__DeleteOSD,
    // output parameters:
    _trt__DeleteOSDResponse            &trt__DeleteOSDResponse
  );
@endcode

C++ proxy class (defined in soapMediaBindingProxy.h generated with soapcpp2):
@code
  class MediaBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapMediaBindingService.h generated with soapcpp2):
@code
  class MediaBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap trt  service method-protocol:	DeleteOSD SOAP
//gsoap trt  service method-style:	DeleteOSD document
//gsoap trt  service method-encoding:	DeleteOSD literal
//gsoap trt  service method-input-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSD
//gsoap trt  service method-output-action:	DeleteOSD http://www.onvif.org/ver10/media/wsdl/DeleteOSDResponse
int __trt__DeleteOSD(
    _trt__DeleteOSD*                    trt__DeleteOSD,	///< Input parameter
    _trt__DeleteOSDResponse            &trt__DeleteOSDResponse	///< Output parameter
);

/** @page MediaBinding Binding "MediaBinding"

@section MediaBinding_policy_enablers Policy Enablers of Binding "MediaBinding"

None specified.

*/

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/** @page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings that are contractually bound by WSDLs and
are auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data
bindings are adopted from XML schemas as part of the WSDL types section or when
running wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

@note The following readers and writers are C/C++ data type (de)serializers
auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

@note Data can be read and deserialized from:
  - an int file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = (int)...
  - a C++ stream (istream, stringstream), using soap->is = (istream*)...
  - a C string, using soap->is = (const char*)...
  - any input, using the soap->frecv() callback

@note Data can be serialized and written to:
  - an int file descriptor, using soap->sendfd = (int)...
  - a socket, using soap->socket = (int)...
  - a C++ stream (ostream, stringstream), using soap->os = (ostream*)...
  - a C string, using soap->os = (const char**)...
  - any output, using the soap->fsend() callback

@note The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_set_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_set_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


*/

/**

@section tds Top-level root elements of schema "http://www.onvif.org/ver10/device/wsdl"

  - <tds:GetServices> @ref _tds__GetServices
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServices(struct soap*, _tds__GetServices*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServices(struct soap*, _tds__GetServices*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServices(struct soap*, const char *URL, _tds__GetServices*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServices(struct soap*, const char *URL, _tds__GetServices*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServices(struct soap*, const char *URL, _tds__GetServices*);
    soap_POST_recv__tds__GetServices(struct soap*, _tds__GetServices*);
    @endcode

  - <tds:GetServicesResponse> @ref _tds__GetServicesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServicesResponse(struct soap*, const char *URL, _tds__GetServicesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServicesResponse(struct soap*, const char *URL, _tds__GetServicesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServicesResponse(struct soap*, const char *URL, _tds__GetServicesResponse*);
    soap_POST_recv__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse*);
    @endcode

  - <tds:GetServiceCapabilities> @ref _tds__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilities(struct soap*, const char *URL, _tds__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilities(struct soap*, const char *URL, _tds__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilities(struct soap*, const char *URL, _tds__GetServiceCapabilities*);
    soap_POST_recv__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities*);
    @endcode

  - <tds:GetServiceCapabilitiesResponse> @ref _tds__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tds__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tds__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tds__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse*);
    @endcode

  - <tds:Capabilities> (use wsdl2h option -g to auto-generate type _tds__Capabilities)

  - <tds:GetDeviceInformation> @ref _tds__GetDeviceInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformation(struct soap*, const char *URL, _tds__GetDeviceInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformation(struct soap*, const char *URL, _tds__GetDeviceInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformation(struct soap*, const char *URL, _tds__GetDeviceInformation*);
    soap_POST_recv__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation*);
    @endcode

  - <tds:GetDeviceInformationResponse> @ref _tds__GetDeviceInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDeviceInformationResponse(struct soap*, const char *URL, _tds__GetDeviceInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDeviceInformationResponse(struct soap*, const char *URL, _tds__GetDeviceInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDeviceInformationResponse(struct soap*, const char *URL, _tds__GetDeviceInformationResponse*);
    soap_POST_recv__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse*);
    @endcode

  - <tds:SetSystemDateAndTime> @ref _tds__SetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemDateAndTime(struct soap*, const char *URL, _tds__SetSystemDateAndTime*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemDateAndTime(struct soap*, const char *URL, _tds__SetSystemDateAndTime*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemDateAndTime(struct soap*, const char *URL, _tds__SetSystemDateAndTime*);
    soap_POST_recv__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime*);
    @endcode

  - <tds:SetSystemDateAndTimeResponse> @ref _tds__SetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__SetSystemDateAndTimeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__SetSystemDateAndTimeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__SetSystemDateAndTimeResponse*);
    soap_POST_recv__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse*);
    @endcode

  - <tds:GetSystemDateAndTime> @ref _tds__GetSystemDateAndTime
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemDateAndTime(struct soap*, const char *URL, _tds__GetSystemDateAndTime*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemDateAndTime(struct soap*, const char *URL, _tds__GetSystemDateAndTime*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemDateAndTime(struct soap*, const char *URL, _tds__GetSystemDateAndTime*);
    soap_POST_recv__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime*);
    @endcode

  - <tds:GetSystemDateAndTimeResponse> @ref _tds__GetSystemDateAndTimeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__GetSystemDateAndTimeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__GetSystemDateAndTimeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemDateAndTimeResponse(struct soap*, const char *URL, _tds__GetSystemDateAndTimeResponse*);
    soap_POST_recv__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse*);
    @endcode

  - <tds:SetSystemFactoryDefault> @ref _tds__SetSystemFactoryDefault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemFactoryDefault(struct soap*, const char *URL, _tds__SetSystemFactoryDefault*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemFactoryDefault(struct soap*, const char *URL, _tds__SetSystemFactoryDefault*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemFactoryDefault(struct soap*, const char *URL, _tds__SetSystemFactoryDefault*);
    soap_POST_recv__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault*);
    @endcode

  - <tds:SetSystemFactoryDefaultResponse> @ref _tds__SetSystemFactoryDefaultResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, _tds__SetSystemFactoryDefaultResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, _tds__SetSystemFactoryDefaultResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetSystemFactoryDefaultResponse(struct soap*, const char *URL, _tds__SetSystemFactoryDefaultResponse*);
    soap_POST_recv__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse*);
    @endcode

  - <tds:UpgradeSystemFirmware> @ref _tds__UpgradeSystemFirmware
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__UpgradeSystemFirmware(struct soap*, const char *URL, _tds__UpgradeSystemFirmware*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__UpgradeSystemFirmware(struct soap*, const char *URL, _tds__UpgradeSystemFirmware*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__UpgradeSystemFirmware(struct soap*, const char *URL, _tds__UpgradeSystemFirmware*);
    soap_POST_recv__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware*);
    @endcode

  - <tds:UpgradeSystemFirmwareResponse> @ref _tds__UpgradeSystemFirmwareResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, _tds__UpgradeSystemFirmwareResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, _tds__UpgradeSystemFirmwareResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__UpgradeSystemFirmwareResponse(struct soap*, const char *URL, _tds__UpgradeSystemFirmwareResponse*);
    soap_POST_recv__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse*);
    @endcode

  - <tds:SystemReboot> @ref _tds__SystemReboot
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemReboot(struct soap*, const char *URL, _tds__SystemReboot*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemReboot(struct soap*, const char *URL, _tds__SystemReboot*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemReboot(struct soap*, const char *URL, _tds__SystemReboot*);
    soap_POST_recv__tds__SystemReboot(struct soap*, _tds__SystemReboot*);
    @endcode

  - <tds:SystemRebootResponse> @ref _tds__SystemRebootResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SystemRebootResponse(struct soap*, const char *URL, _tds__SystemRebootResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SystemRebootResponse(struct soap*, const char *URL, _tds__SystemRebootResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SystemRebootResponse(struct soap*, const char *URL, _tds__SystemRebootResponse*);
    soap_POST_recv__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse*);
    @endcode

  - <tds:RestoreSystem> @ref _tds__RestoreSystem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RestoreSystem(struct soap*, const char *URL, _tds__RestoreSystem*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RestoreSystem(struct soap*, const char *URL, _tds__RestoreSystem*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RestoreSystem(struct soap*, const char *URL, _tds__RestoreSystem*);
    soap_POST_recv__tds__RestoreSystem(struct soap*, _tds__RestoreSystem*);
    @endcode

  - <tds:RestoreSystemResponse> @ref _tds__RestoreSystemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RestoreSystemResponse(struct soap*, const char *URL, _tds__RestoreSystemResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RestoreSystemResponse(struct soap*, const char *URL, _tds__RestoreSystemResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RestoreSystemResponse(struct soap*, const char *URL, _tds__RestoreSystemResponse*);
    soap_POST_recv__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse*);
    @endcode

  - <tds:GetSystemBackup> @ref _tds__GetSystemBackup
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemBackup(struct soap*, const char *URL, _tds__GetSystemBackup*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemBackup(struct soap*, const char *URL, _tds__GetSystemBackup*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemBackup(struct soap*, const char *URL, _tds__GetSystemBackup*);
    soap_POST_recv__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup*);
    @endcode

  - <tds:GetSystemBackupResponse> @ref _tds__GetSystemBackupResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemBackupResponse(struct soap*, const char *URL, _tds__GetSystemBackupResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemBackupResponse(struct soap*, const char *URL, _tds__GetSystemBackupResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemBackupResponse(struct soap*, const char *URL, _tds__GetSystemBackupResponse*);
    soap_POST_recv__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse*);
    @endcode

  - <tds:GetSystemSupportInformation> @ref _tds__GetSystemSupportInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemSupportInformation(struct soap*, const char *URL, _tds__GetSystemSupportInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemSupportInformation(struct soap*, const char *URL, _tds__GetSystemSupportInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemSupportInformation(struct soap*, const char *URL, _tds__GetSystemSupportInformation*);
    soap_POST_recv__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation*);
    @endcode

  - <tds:GetSystemSupportInformationResponse> @ref _tds__GetSystemSupportInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, _tds__GetSystemSupportInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, _tds__GetSystemSupportInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemSupportInformationResponse(struct soap*, const char *URL, _tds__GetSystemSupportInformationResponse*);
    soap_POST_recv__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse*);
    @endcode

  - <tds:GetSystemLog> @ref _tds__GetSystemLog
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemLog(struct soap*, const char *URL, _tds__GetSystemLog*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemLog(struct soap*, const char *URL, _tds__GetSystemLog*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemLog(struct soap*, const char *URL, _tds__GetSystemLog*);
    soap_POST_recv__tds__GetSystemLog(struct soap*, _tds__GetSystemLog*);
    @endcode

  - <tds:GetSystemLogResponse> @ref _tds__GetSystemLogResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemLogResponse(struct soap*, const char *URL, _tds__GetSystemLogResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemLogResponse(struct soap*, const char *URL, _tds__GetSystemLogResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemLogResponse(struct soap*, const char *URL, _tds__GetSystemLogResponse*);
    soap_POST_recv__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse*);
    @endcode

  - <tds:GetScopes> @ref _tds__GetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopes(struct soap*, _tds__GetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopes(struct soap*, _tds__GetScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetScopes(struct soap*, const char *URL, _tds__GetScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetScopes(struct soap*, const char *URL, _tds__GetScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetScopes(struct soap*, const char *URL, _tds__GetScopes*);
    soap_POST_recv__tds__GetScopes(struct soap*, _tds__GetScopes*);
    @endcode

  - <tds:GetScopesResponse> @ref _tds__GetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetScopesResponse(struct soap*, const char *URL, _tds__GetScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetScopesResponse(struct soap*, const char *URL, _tds__GetScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetScopesResponse(struct soap*, const char *URL, _tds__GetScopesResponse*);
    soap_POST_recv__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse*);
    @endcode

  - <tds:SetScopes> @ref _tds__SetScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopes(struct soap*, _tds__SetScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopes(struct soap*, _tds__SetScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetScopes(struct soap*, const char *URL, _tds__SetScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetScopes(struct soap*, const char *URL, _tds__SetScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetScopes(struct soap*, const char *URL, _tds__SetScopes*);
    soap_POST_recv__tds__SetScopes(struct soap*, _tds__SetScopes*);
    @endcode

  - <tds:SetScopesResponse> @ref _tds__SetScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetScopesResponse(struct soap*, const char *URL, _tds__SetScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetScopesResponse(struct soap*, const char *URL, _tds__SetScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetScopesResponse(struct soap*, const char *URL, _tds__SetScopesResponse*);
    soap_POST_recv__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse*);
    @endcode

  - <tds:AddScopes> @ref _tds__AddScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopes(struct soap*, _tds__AddScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopes(struct soap*, _tds__AddScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddScopes(struct soap*, const char *URL, _tds__AddScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddScopes(struct soap*, const char *URL, _tds__AddScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddScopes(struct soap*, const char *URL, _tds__AddScopes*);
    soap_POST_recv__tds__AddScopes(struct soap*, _tds__AddScopes*);
    @endcode

  - <tds:AddScopesResponse> @ref _tds__AddScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddScopesResponse(struct soap*, const char *URL, _tds__AddScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddScopesResponse(struct soap*, const char *URL, _tds__AddScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddScopesResponse(struct soap*, const char *URL, _tds__AddScopesResponse*);
    soap_POST_recv__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse*);
    @endcode

  - <tds:RemoveScopes> @ref _tds__RemoveScopes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveScopes(struct soap*, const char *URL, _tds__RemoveScopes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveScopes(struct soap*, const char *URL, _tds__RemoveScopes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveScopes(struct soap*, const char *URL, _tds__RemoveScopes*);
    soap_POST_recv__tds__RemoveScopes(struct soap*, _tds__RemoveScopes*);
    @endcode

  - <tds:RemoveScopesResponse> @ref _tds__RemoveScopesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveScopesResponse(struct soap*, const char *URL, _tds__RemoveScopesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveScopesResponse(struct soap*, const char *URL, _tds__RemoveScopesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveScopesResponse(struct soap*, const char *URL, _tds__RemoveScopesResponse*);
    soap_POST_recv__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse*);
    @endcode

  - <tds:GetDiscoveryMode> @ref _tds__GetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDiscoveryMode(struct soap*, const char *URL, _tds__GetDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDiscoveryMode(struct soap*, const char *URL, _tds__GetDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDiscoveryMode(struct soap*, const char *URL, _tds__GetDiscoveryMode*);
    soap_POST_recv__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode*);
    @endcode

  - <tds:GetDiscoveryModeResponse> @ref _tds__GetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetDiscoveryModeResponse*);
    soap_POST_recv__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse*);
    @endcode

  - <tds:SetDiscoveryMode> @ref _tds__SetDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDiscoveryMode(struct soap*, const char *URL, _tds__SetDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDiscoveryMode(struct soap*, const char *URL, _tds__SetDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDiscoveryMode(struct soap*, const char *URL, _tds__SetDiscoveryMode*);
    soap_POST_recv__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode*);
    @endcode

  - <tds:SetDiscoveryModeResponse> @ref _tds__SetDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetDiscoveryModeResponse*);
    soap_POST_recv__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse*);
    @endcode

  - <tds:GetRemoteDiscoveryMode> @ref _tds__GetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__GetRemoteDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__GetRemoteDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__GetRemoteDiscoveryMode*);
    soap_POST_recv__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode*);
    @endcode

  - <tds:GetRemoteDiscoveryModeResponse> @ref _tds__GetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetRemoteDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetRemoteDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__GetRemoteDiscoveryModeResponse*);
    soap_POST_recv__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:SetRemoteDiscoveryMode> @ref _tds__SetRemoteDiscoveryMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__SetRemoteDiscoveryMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__SetRemoteDiscoveryMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteDiscoveryMode(struct soap*, const char *URL, _tds__SetRemoteDiscoveryMode*);
    soap_POST_recv__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode*);
    @endcode

  - <tds:SetRemoteDiscoveryModeResponse> @ref _tds__SetRemoteDiscoveryModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetRemoteDiscoveryModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetRemoteDiscoveryModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char *URL, _tds__SetRemoteDiscoveryModeResponse*);
    soap_POST_recv__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse*);
    @endcode

  - <tds:GetDPAddresses> @ref _tds__GetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDPAddresses(struct soap*, const char *URL, _tds__GetDPAddresses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDPAddresses(struct soap*, const char *URL, _tds__GetDPAddresses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDPAddresses(struct soap*, const char *URL, _tds__GetDPAddresses*);
    soap_POST_recv__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses*);
    @endcode

  - <tds:GetDPAddressesResponse> @ref _tds__GetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDPAddressesResponse(struct soap*, const char *URL, _tds__GetDPAddressesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDPAddressesResponse(struct soap*, const char *URL, _tds__GetDPAddressesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDPAddressesResponse(struct soap*, const char *URL, _tds__GetDPAddressesResponse*);
    soap_POST_recv__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse*);
    @endcode

  - <tds:SetDPAddresses> @ref _tds__SetDPAddresses
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDPAddresses(struct soap*, const char *URL, _tds__SetDPAddresses*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDPAddresses(struct soap*, const char *URL, _tds__SetDPAddresses*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDPAddresses(struct soap*, const char *URL, _tds__SetDPAddresses*);
    soap_POST_recv__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses*);
    @endcode

  - <tds:SetDPAddressesResponse> @ref _tds__SetDPAddressesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDPAddressesResponse(struct soap*, const char *URL, _tds__SetDPAddressesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDPAddressesResponse(struct soap*, const char *URL, _tds__SetDPAddressesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDPAddressesResponse(struct soap*, const char *URL, _tds__SetDPAddressesResponse*);
    soap_POST_recv__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse*);
    @endcode

  - <tds:GetEndpointReference> @ref _tds__GetEndpointReference
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetEndpointReference(struct soap*, const char *URL, _tds__GetEndpointReference*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetEndpointReference(struct soap*, const char *URL, _tds__GetEndpointReference*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetEndpointReference(struct soap*, const char *URL, _tds__GetEndpointReference*);
    soap_POST_recv__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference*);
    @endcode

  - <tds:GetEndpointReferenceResponse> @ref _tds__GetEndpointReferenceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, _tds__GetEndpointReferenceResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, _tds__GetEndpointReferenceResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetEndpointReferenceResponse(struct soap*, const char *URL, _tds__GetEndpointReferenceResponse*);
    soap_POST_recv__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse*);
    @endcode

  - <tds:GetRemoteUser> @ref _tds__GetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteUser(struct soap*, const char *URL, _tds__GetRemoteUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteUser(struct soap*, const char *URL, _tds__GetRemoteUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteUser(struct soap*, const char *URL, _tds__GetRemoteUser*);
    soap_POST_recv__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser*);
    @endcode

  - <tds:GetRemoteUserResponse> @ref _tds__GetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRemoteUserResponse(struct soap*, const char *URL, _tds__GetRemoteUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRemoteUserResponse(struct soap*, const char *URL, _tds__GetRemoteUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRemoteUserResponse(struct soap*, const char *URL, _tds__GetRemoteUserResponse*);
    soap_POST_recv__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse*);
    @endcode

  - <tds:SetRemoteUser> @ref _tds__SetRemoteUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteUser(struct soap*, const char *URL, _tds__SetRemoteUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteUser(struct soap*, const char *URL, _tds__SetRemoteUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteUser(struct soap*, const char *URL, _tds__SetRemoteUser*);
    soap_POST_recv__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser*);
    @endcode

  - <tds:SetRemoteUserResponse> @ref _tds__SetRemoteUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRemoteUserResponse(struct soap*, const char *URL, _tds__SetRemoteUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRemoteUserResponse(struct soap*, const char *URL, _tds__SetRemoteUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRemoteUserResponse(struct soap*, const char *URL, _tds__SetRemoteUserResponse*);
    soap_POST_recv__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse*);
    @endcode

  - <tds:GetUsers> @ref _tds__GetUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsers(struct soap*, _tds__GetUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsers(struct soap*, _tds__GetUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetUsers(struct soap*, const char *URL, _tds__GetUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetUsers(struct soap*, const char *URL, _tds__GetUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetUsers(struct soap*, const char *URL, _tds__GetUsers*);
    soap_POST_recv__tds__GetUsers(struct soap*, _tds__GetUsers*);
    @endcode

  - <tds:GetUsersResponse> @ref _tds__GetUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetUsersResponse(struct soap*, const char *URL, _tds__GetUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetUsersResponse(struct soap*, const char *URL, _tds__GetUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetUsersResponse(struct soap*, const char *URL, _tds__GetUsersResponse*);
    soap_POST_recv__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse*);
    @endcode

  - <tds:CreateUsers> @ref _tds__CreateUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateUsers(struct soap*, const char *URL, _tds__CreateUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateUsers(struct soap*, const char *URL, _tds__CreateUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateUsers(struct soap*, const char *URL, _tds__CreateUsers*);
    soap_POST_recv__tds__CreateUsers(struct soap*, _tds__CreateUsers*);
    @endcode

  - <tds:CreateUsersResponse> @ref _tds__CreateUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateUsersResponse(struct soap*, const char *URL, _tds__CreateUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateUsersResponse(struct soap*, const char *URL, _tds__CreateUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateUsersResponse(struct soap*, const char *URL, _tds__CreateUsersResponse*);
    soap_POST_recv__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse*);
    @endcode

  - <tds:DeleteUsers> @ref _tds__DeleteUsers
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteUsers(struct soap*, const char *URL, _tds__DeleteUsers*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteUsers(struct soap*, const char *URL, _tds__DeleteUsers*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteUsers(struct soap*, const char *URL, _tds__DeleteUsers*);
    soap_POST_recv__tds__DeleteUsers(struct soap*, _tds__DeleteUsers*);
    @endcode

  - <tds:DeleteUsersResponse> @ref _tds__DeleteUsersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteUsersResponse(struct soap*, const char *URL, _tds__DeleteUsersResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteUsersResponse(struct soap*, const char *URL, _tds__DeleteUsersResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteUsersResponse(struct soap*, const char *URL, _tds__DeleteUsersResponse*);
    soap_POST_recv__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse*);
    @endcode

  - <tds:SetUser> @ref _tds__SetUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUser(struct soap*, _tds__SetUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUser(struct soap*, _tds__SetUser*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetUser(struct soap*, const char *URL, _tds__SetUser*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetUser(struct soap*, const char *URL, _tds__SetUser*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetUser(struct soap*, const char *URL, _tds__SetUser*);
    soap_POST_recv__tds__SetUser(struct soap*, _tds__SetUser*);
    @endcode

  - <tds:SetUserResponse> @ref _tds__SetUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetUserResponse(struct soap*, const char *URL, _tds__SetUserResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetUserResponse(struct soap*, const char *URL, _tds__SetUserResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetUserResponse(struct soap*, const char *URL, _tds__SetUserResponse*);
    soap_POST_recv__tds__SetUserResponse(struct soap*, _tds__SetUserResponse*);
    @endcode

  - <tds:GetWsdlUrl> @ref _tds__GetWsdlUrl
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetWsdlUrl(struct soap*, const char *URL, _tds__GetWsdlUrl*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetWsdlUrl(struct soap*, const char *URL, _tds__GetWsdlUrl*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetWsdlUrl(struct soap*, const char *URL, _tds__GetWsdlUrl*);
    soap_POST_recv__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl*);
    @endcode

  - <tds:GetWsdlUrlResponse> @ref _tds__GetWsdlUrlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetWsdlUrlResponse(struct soap*, const char *URL, _tds__GetWsdlUrlResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetWsdlUrlResponse(struct soap*, const char *URL, _tds__GetWsdlUrlResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetWsdlUrlResponse(struct soap*, const char *URL, _tds__GetWsdlUrlResponse*);
    soap_POST_recv__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse*);
    @endcode

  - <tds:GetCapabilities> @ref _tds__GetCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilities(struct soap*, const char *URL, _tds__GetCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilities(struct soap*, const char *URL, _tds__GetCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilities(struct soap*, const char *URL, _tds__GetCapabilities*);
    soap_POST_recv__tds__GetCapabilities(struct soap*, _tds__GetCapabilities*);
    @endcode

  - <tds:GetCapabilitiesResponse> @ref _tds__GetCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCapabilitiesResponse(struct soap*, const char *URL, _tds__GetCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCapabilitiesResponse(struct soap*, const char *URL, _tds__GetCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCapabilitiesResponse(struct soap*, const char *URL, _tds__GetCapabilitiesResponse*);
    soap_POST_recv__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse*);
    @endcode

  - <tds:GetHostname> @ref _tds__GetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostname(struct soap*, _tds__GetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostname(struct soap*, _tds__GetHostname*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetHostname(struct soap*, const char *URL, _tds__GetHostname*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetHostname(struct soap*, const char *URL, _tds__GetHostname*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetHostname(struct soap*, const char *URL, _tds__GetHostname*);
    soap_POST_recv__tds__GetHostname(struct soap*, _tds__GetHostname*);
    @endcode

  - <tds:GetHostnameResponse> @ref _tds__GetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetHostnameResponse(struct soap*, const char *URL, _tds__GetHostnameResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetHostnameResponse(struct soap*, const char *URL, _tds__GetHostnameResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetHostnameResponse(struct soap*, const char *URL, _tds__GetHostnameResponse*);
    soap_POST_recv__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse*);
    @endcode

  - <tds:SetHostname> @ref _tds__SetHostname
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostname(struct soap*, _tds__SetHostname*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostname(struct soap*, _tds__SetHostname*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostname(struct soap*, const char *URL, _tds__SetHostname*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostname(struct soap*, const char *URL, _tds__SetHostname*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostname(struct soap*, const char *URL, _tds__SetHostname*);
    soap_POST_recv__tds__SetHostname(struct soap*, _tds__SetHostname*);
    @endcode

  - <tds:SetHostnameResponse> @ref _tds__SetHostnameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameResponse(struct soap*, const char *URL, _tds__SetHostnameResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameResponse(struct soap*, const char *URL, _tds__SetHostnameResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameResponse(struct soap*, const char *URL, _tds__SetHostnameResponse*);
    soap_POST_recv__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse*);
    @endcode

  - <tds:SetHostnameFromDHCP> @ref _tds__SetHostnameFromDHCP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameFromDHCP(struct soap*, const char *URL, _tds__SetHostnameFromDHCP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameFromDHCP(struct soap*, const char *URL, _tds__SetHostnameFromDHCP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameFromDHCP(struct soap*, const char *URL, _tds__SetHostnameFromDHCP*);
    soap_POST_recv__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP*);
    @endcode

  - <tds:SetHostnameFromDHCPResponse> @ref _tds__SetHostnameFromDHCPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, _tds__SetHostnameFromDHCPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, _tds__SetHostnameFromDHCPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetHostnameFromDHCPResponse(struct soap*, const char *URL, _tds__SetHostnameFromDHCPResponse*);
    soap_POST_recv__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse*);
    @endcode

  - <tds:GetDNS> @ref _tds__GetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNS(struct soap*, _tds__GetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNS(struct soap*, _tds__GetDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDNS(struct soap*, const char *URL, _tds__GetDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDNS(struct soap*, const char *URL, _tds__GetDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDNS(struct soap*, const char *URL, _tds__GetDNS*);
    soap_POST_recv__tds__GetDNS(struct soap*, _tds__GetDNS*);
    @endcode

  - <tds:GetDNSResponse> @ref _tds__GetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDNSResponse(struct soap*, const char *URL, _tds__GetDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDNSResponse(struct soap*, const char *URL, _tds__GetDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDNSResponse(struct soap*, const char *URL, _tds__GetDNSResponse*);
    soap_POST_recv__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse*);
    @endcode

  - <tds:SetDNS> @ref _tds__SetDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNS(struct soap*, _tds__SetDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNS(struct soap*, _tds__SetDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDNS(struct soap*, const char *URL, _tds__SetDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDNS(struct soap*, const char *URL, _tds__SetDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDNS(struct soap*, const char *URL, _tds__SetDNS*);
    soap_POST_recv__tds__SetDNS(struct soap*, _tds__SetDNS*);
    @endcode

  - <tds:SetDNSResponse> @ref _tds__SetDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDNSResponse(struct soap*, const char *URL, _tds__SetDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDNSResponse(struct soap*, const char *URL, _tds__SetDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDNSResponse(struct soap*, const char *URL, _tds__SetDNSResponse*);
    soap_POST_recv__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse*);
    @endcode

  - <tds:GetNTP> @ref _tds__GetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTP(struct soap*, _tds__GetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTP(struct soap*, _tds__GetNTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNTP(struct soap*, const char *URL, _tds__GetNTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNTP(struct soap*, const char *URL, _tds__GetNTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNTP(struct soap*, const char *URL, _tds__GetNTP*);
    soap_POST_recv__tds__GetNTP(struct soap*, _tds__GetNTP*);
    @endcode

  - <tds:GetNTPResponse> @ref _tds__GetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNTPResponse(struct soap*, const char *URL, _tds__GetNTPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNTPResponse(struct soap*, const char *URL, _tds__GetNTPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNTPResponse(struct soap*, const char *URL, _tds__GetNTPResponse*);
    soap_POST_recv__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse*);
    @endcode

  - <tds:SetNTP> @ref _tds__SetNTP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTP(struct soap*, _tds__SetNTP*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTP(struct soap*, _tds__SetNTP*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNTP(struct soap*, const char *URL, _tds__SetNTP*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNTP(struct soap*, const char *URL, _tds__SetNTP*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNTP(struct soap*, const char *URL, _tds__SetNTP*);
    soap_POST_recv__tds__SetNTP(struct soap*, _tds__SetNTP*);
    @endcode

  - <tds:SetNTPResponse> @ref _tds__SetNTPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNTPResponse(struct soap*, const char *URL, _tds__SetNTPResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNTPResponse(struct soap*, const char *URL, _tds__SetNTPResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNTPResponse(struct soap*, const char *URL, _tds__SetNTPResponse*);
    soap_POST_recv__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse*);
    @endcode

  - <tds:GetDynamicDNS> @ref _tds__GetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDynamicDNS(struct soap*, const char *URL, _tds__GetDynamicDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDynamicDNS(struct soap*, const char *URL, _tds__GetDynamicDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDynamicDNS(struct soap*, const char *URL, _tds__GetDynamicDNS*);
    soap_POST_recv__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS*);
    @endcode

  - <tds:GetDynamicDNSResponse> @ref _tds__GetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDynamicDNSResponse(struct soap*, const char *URL, _tds__GetDynamicDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDynamicDNSResponse(struct soap*, const char *URL, _tds__GetDynamicDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDynamicDNSResponse(struct soap*, const char *URL, _tds__GetDynamicDNSResponse*);
    soap_POST_recv__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse*);
    @endcode

  - <tds:SetDynamicDNS> @ref _tds__SetDynamicDNS
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDynamicDNS(struct soap*, const char *URL, _tds__SetDynamicDNS*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDynamicDNS(struct soap*, const char *URL, _tds__SetDynamicDNS*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDynamicDNS(struct soap*, const char *URL, _tds__SetDynamicDNS*);
    soap_POST_recv__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS*);
    @endcode

  - <tds:SetDynamicDNSResponse> @ref _tds__SetDynamicDNSResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDynamicDNSResponse(struct soap*, const char *URL, _tds__SetDynamicDNSResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDynamicDNSResponse(struct soap*, const char *URL, _tds__SetDynamicDNSResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDynamicDNSResponse(struct soap*, const char *URL, _tds__SetDynamicDNSResponse*);
    soap_POST_recv__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse*);
    @endcode

  - <tds:GetNetworkInterfaces> @ref _tds__GetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkInterfaces(struct soap*, const char *URL, _tds__GetNetworkInterfaces*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkInterfaces(struct soap*, const char *URL, _tds__GetNetworkInterfaces*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkInterfaces(struct soap*, const char *URL, _tds__GetNetworkInterfaces*);
    soap_POST_recv__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces*);
    @endcode

  - <tds:GetNetworkInterfacesResponse> @ref _tds__GetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__GetNetworkInterfacesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__GetNetworkInterfacesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__GetNetworkInterfacesResponse*);
    soap_POST_recv__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse*);
    @endcode

  - <tds:SetNetworkInterfaces> @ref _tds__SetNetworkInterfaces
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkInterfaces(struct soap*, const char *URL, _tds__SetNetworkInterfaces*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkInterfaces(struct soap*, const char *URL, _tds__SetNetworkInterfaces*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkInterfaces(struct soap*, const char *URL, _tds__SetNetworkInterfaces*);
    soap_POST_recv__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces*);
    @endcode

  - <tds:SetNetworkInterfacesResponse> @ref _tds__SetNetworkInterfacesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__SetNetworkInterfacesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__SetNetworkInterfacesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkInterfacesResponse(struct soap*, const char *URL, _tds__SetNetworkInterfacesResponse*);
    soap_POST_recv__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse*);
    @endcode

  - <tds:GetNetworkProtocols> @ref _tds__GetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkProtocols(struct soap*, const char *URL, _tds__GetNetworkProtocols*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkProtocols(struct soap*, const char *URL, _tds__GetNetworkProtocols*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkProtocols(struct soap*, const char *URL, _tds__GetNetworkProtocols*);
    soap_POST_recv__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols*);
    @endcode

  - <tds:GetNetworkProtocolsResponse> @ref _tds__GetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__GetNetworkProtocolsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__GetNetworkProtocolsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__GetNetworkProtocolsResponse*);
    soap_POST_recv__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse*);
    @endcode

  - <tds:SetNetworkProtocols> @ref _tds__SetNetworkProtocols
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkProtocols(struct soap*, const char *URL, _tds__SetNetworkProtocols*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkProtocols(struct soap*, const char *URL, _tds__SetNetworkProtocols*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkProtocols(struct soap*, const char *URL, _tds__SetNetworkProtocols*);
    soap_POST_recv__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols*);
    @endcode

  - <tds:SetNetworkProtocolsResponse> @ref _tds__SetNetworkProtocolsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__SetNetworkProtocolsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__SetNetworkProtocolsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkProtocolsResponse(struct soap*, const char *URL, _tds__SetNetworkProtocolsResponse*);
    soap_POST_recv__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse*);
    @endcode

  - <tds:GetNetworkDefaultGateway> @ref _tds__GetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, _tds__GetNetworkDefaultGateway*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, _tds__GetNetworkDefaultGateway*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkDefaultGateway(struct soap*, const char *URL, _tds__GetNetworkDefaultGateway*);
    soap_POST_recv__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway*);
    @endcode

  - <tds:GetNetworkDefaultGatewayResponse> @ref _tds__GetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__GetNetworkDefaultGatewayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__GetNetworkDefaultGatewayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__GetNetworkDefaultGatewayResponse*);
    soap_POST_recv__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:SetNetworkDefaultGateway> @ref _tds__SetNetworkDefaultGateway
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, _tds__SetNetworkDefaultGateway*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, _tds__SetNetworkDefaultGateway*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkDefaultGateway(struct soap*, const char *URL, _tds__SetNetworkDefaultGateway*);
    soap_POST_recv__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway*);
    @endcode

  - <tds:SetNetworkDefaultGatewayResponse> @ref _tds__SetNetworkDefaultGatewayResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__SetNetworkDefaultGatewayResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__SetNetworkDefaultGatewayResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char *URL, _tds__SetNetworkDefaultGatewayResponse*);
    soap_POST_recv__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse*);
    @endcode

  - <tds:GetZeroConfiguration> @ref _tds__GetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetZeroConfiguration(struct soap*, const char *URL, _tds__GetZeroConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetZeroConfiguration(struct soap*, const char *URL, _tds__GetZeroConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetZeroConfiguration(struct soap*, const char *URL, _tds__GetZeroConfiguration*);
    soap_POST_recv__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration*);
    @endcode

  - <tds:GetZeroConfigurationResponse> @ref _tds__GetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, _tds__GetZeroConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, _tds__GetZeroConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetZeroConfigurationResponse(struct soap*, const char *URL, _tds__GetZeroConfigurationResponse*);
    soap_POST_recv__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse*);
    @endcode

  - <tds:SetZeroConfiguration> @ref _tds__SetZeroConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetZeroConfiguration(struct soap*, const char *URL, _tds__SetZeroConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetZeroConfiguration(struct soap*, const char *URL, _tds__SetZeroConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetZeroConfiguration(struct soap*, const char *URL, _tds__SetZeroConfiguration*);
    soap_POST_recv__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration*);
    @endcode

  - <tds:SetZeroConfigurationResponse> @ref _tds__SetZeroConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, _tds__SetZeroConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, _tds__SetZeroConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetZeroConfigurationResponse(struct soap*, const char *URL, _tds__SetZeroConfigurationResponse*);
    soap_POST_recv__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse*);
    @endcode

  - <tds:GetIPAddressFilter> @ref _tds__GetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetIPAddressFilter(struct soap*, const char *URL, _tds__GetIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetIPAddressFilter(struct soap*, const char *URL, _tds__GetIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetIPAddressFilter(struct soap*, const char *URL, _tds__GetIPAddressFilter*);
    soap_POST_recv__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter*);
    @endcode

  - <tds:GetIPAddressFilterResponse> @ref _tds__GetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, _tds__GetIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, _tds__GetIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetIPAddressFilterResponse(struct soap*, const char *URL, _tds__GetIPAddressFilterResponse*);
    soap_POST_recv__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse*);
    @endcode

  - <tds:SetIPAddressFilter> @ref _tds__SetIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetIPAddressFilter(struct soap*, const char *URL, _tds__SetIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetIPAddressFilter(struct soap*, const char *URL, _tds__SetIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetIPAddressFilter(struct soap*, const char *URL, _tds__SetIPAddressFilter*);
    soap_POST_recv__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter*);
    @endcode

  - <tds:SetIPAddressFilterResponse> @ref _tds__SetIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, _tds__SetIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, _tds__SetIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetIPAddressFilterResponse(struct soap*, const char *URL, _tds__SetIPAddressFilterResponse*);
    soap_POST_recv__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse*);
    @endcode

  - <tds:AddIPAddressFilter> @ref _tds__AddIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddIPAddressFilter(struct soap*, const char *URL, _tds__AddIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddIPAddressFilter(struct soap*, const char *URL, _tds__AddIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddIPAddressFilter(struct soap*, const char *URL, _tds__AddIPAddressFilter*);
    soap_POST_recv__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter*);
    @endcode

  - <tds:AddIPAddressFilterResponse> @ref _tds__AddIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, _tds__AddIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, _tds__AddIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__AddIPAddressFilterResponse(struct soap*, const char *URL, _tds__AddIPAddressFilterResponse*);
    soap_POST_recv__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse*);
    @endcode

  - <tds:RemoveIPAddressFilter> @ref _tds__RemoveIPAddressFilter
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveIPAddressFilter(struct soap*, const char *URL, _tds__RemoveIPAddressFilter*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveIPAddressFilter(struct soap*, const char *URL, _tds__RemoveIPAddressFilter*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveIPAddressFilter(struct soap*, const char *URL, _tds__RemoveIPAddressFilter*);
    soap_POST_recv__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter*);
    @endcode

  - <tds:RemoveIPAddressFilterResponse> @ref _tds__RemoveIPAddressFilterResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, _tds__RemoveIPAddressFilterResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, _tds__RemoveIPAddressFilterResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__RemoveIPAddressFilterResponse(struct soap*, const char *URL, _tds__RemoveIPAddressFilterResponse*);
    soap_POST_recv__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse*);
    @endcode

  - <tds:GetAccessPolicy> @ref _tds__GetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAccessPolicy(struct soap*, const char *URL, _tds__GetAccessPolicy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAccessPolicy(struct soap*, const char *URL, _tds__GetAccessPolicy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAccessPolicy(struct soap*, const char *URL, _tds__GetAccessPolicy*);
    soap_POST_recv__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy*);
    @endcode

  - <tds:GetAccessPolicyResponse> @ref _tds__GetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetAccessPolicyResponse(struct soap*, const char *URL, _tds__GetAccessPolicyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetAccessPolicyResponse(struct soap*, const char *URL, _tds__GetAccessPolicyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetAccessPolicyResponse(struct soap*, const char *URL, _tds__GetAccessPolicyResponse*);
    soap_POST_recv__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse*);
    @endcode

  - <tds:SetAccessPolicy> @ref _tds__SetAccessPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAccessPolicy(struct soap*, const char *URL, _tds__SetAccessPolicy*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAccessPolicy(struct soap*, const char *URL, _tds__SetAccessPolicy*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAccessPolicy(struct soap*, const char *URL, _tds__SetAccessPolicy*);
    soap_POST_recv__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy*);
    @endcode

  - <tds:SetAccessPolicyResponse> @ref _tds__SetAccessPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetAccessPolicyResponse(struct soap*, const char *URL, _tds__SetAccessPolicyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetAccessPolicyResponse(struct soap*, const char *URL, _tds__SetAccessPolicyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetAccessPolicyResponse(struct soap*, const char *URL, _tds__SetAccessPolicyResponse*);
    soap_POST_recv__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse*);
    @endcode

  - <tds:CreateCertificate> @ref _tds__CreateCertificate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateCertificate(struct soap*, const char *URL, _tds__CreateCertificate*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateCertificate(struct soap*, const char *URL, _tds__CreateCertificate*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateCertificate(struct soap*, const char *URL, _tds__CreateCertificate*);
    soap_POST_recv__tds__CreateCertificate(struct soap*, _tds__CreateCertificate*);
    @endcode

  - <tds:CreateCertificateResponse> @ref _tds__CreateCertificateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateCertificateResponse(struct soap*, const char *URL, _tds__CreateCertificateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateCertificateResponse(struct soap*, const char *URL, _tds__CreateCertificateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateCertificateResponse(struct soap*, const char *URL, _tds__CreateCertificateResponse*);
    soap_POST_recv__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse*);
    @endcode

  - <tds:GetCertificates> @ref _tds__GetCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificates(struct soap*, const char *URL, _tds__GetCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificates(struct soap*, const char *URL, _tds__GetCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificates(struct soap*, const char *URL, _tds__GetCertificates*);
    soap_POST_recv__tds__GetCertificates(struct soap*, _tds__GetCertificates*);
    @endcode

  - <tds:GetCertificatesResponse> @ref _tds__GetCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesResponse(struct soap*, const char *URL, _tds__GetCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesResponse(struct soap*, const char *URL, _tds__GetCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesResponse(struct soap*, const char *URL, _tds__GetCertificatesResponse*);
    soap_POST_recv__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse*);
    @endcode

  - <tds:GetCertificatesStatus> @ref _tds__GetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesStatus(struct soap*, const char *URL, _tds__GetCertificatesStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesStatus(struct soap*, const char *URL, _tds__GetCertificatesStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesStatus(struct soap*, const char *URL, _tds__GetCertificatesStatus*);
    soap_POST_recv__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus*);
    @endcode

  - <tds:GetCertificatesStatusResponse> @ref _tds__GetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, _tds__GetCertificatesStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, _tds__GetCertificatesStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificatesStatusResponse(struct soap*, const char *URL, _tds__GetCertificatesStatusResponse*);
    soap_POST_recv__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse*);
    @endcode

  - <tds:SetCertificatesStatus> @ref _tds__SetCertificatesStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetCertificatesStatus(struct soap*, const char *URL, _tds__SetCertificatesStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetCertificatesStatus(struct soap*, const char *URL, _tds__SetCertificatesStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetCertificatesStatus(struct soap*, const char *URL, _tds__SetCertificatesStatus*);
    soap_POST_recv__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus*);
    @endcode

  - <tds:SetCertificatesStatusResponse> @ref _tds__SetCertificatesStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, _tds__SetCertificatesStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, _tds__SetCertificatesStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetCertificatesStatusResponse(struct soap*, const char *URL, _tds__SetCertificatesStatusResponse*);
    soap_POST_recv__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse*);
    @endcode

  - <tds:DeleteCertificates> @ref _tds__DeleteCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteCertificates(struct soap*, const char *URL, _tds__DeleteCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteCertificates(struct soap*, const char *URL, _tds__DeleteCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteCertificates(struct soap*, const char *URL, _tds__DeleteCertificates*);
    soap_POST_recv__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates*);
    @endcode

  - <tds:DeleteCertificatesResponse> @ref _tds__DeleteCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteCertificatesResponse(struct soap*, const char *URL, _tds__DeleteCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteCertificatesResponse(struct soap*, const char *URL, _tds__DeleteCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteCertificatesResponse(struct soap*, const char *URL, _tds__DeleteCertificatesResponse*);
    soap_POST_recv__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse*);
    @endcode

  - <tds:GetPkcs10Request> @ref _tds__GetPkcs10Request
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPkcs10Request(struct soap*, const char *URL, _tds__GetPkcs10Request*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPkcs10Request(struct soap*, const char *URL, _tds__GetPkcs10Request*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPkcs10Request(struct soap*, const char *URL, _tds__GetPkcs10Request*);
    soap_POST_recv__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request*);
    @endcode

  - <tds:GetPkcs10RequestResponse> @ref _tds__GetPkcs10RequestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, _tds__GetPkcs10RequestResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, _tds__GetPkcs10RequestResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetPkcs10RequestResponse(struct soap*, const char *URL, _tds__GetPkcs10RequestResponse*);
    soap_POST_recv__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse*);
    @endcode

  - <tds:LoadCertificates> @ref _tds__LoadCertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificates(struct soap*, const char *URL, _tds__LoadCertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificates(struct soap*, const char *URL, _tds__LoadCertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificates(struct soap*, const char *URL, _tds__LoadCertificates*);
    soap_POST_recv__tds__LoadCertificates(struct soap*, _tds__LoadCertificates*);
    @endcode

  - <tds:LoadCertificatesResponse> @ref _tds__LoadCertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificatesResponse(struct soap*, const char *URL, _tds__LoadCertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificatesResponse(struct soap*, const char *URL, _tds__LoadCertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificatesResponse(struct soap*, const char *URL, _tds__LoadCertificatesResponse*);
    soap_POST_recv__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse*);
    @endcode

  - <tds:GetClientCertificateMode> @ref _tds__GetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetClientCertificateMode(struct soap*, const char *URL, _tds__GetClientCertificateMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetClientCertificateMode(struct soap*, const char *URL, _tds__GetClientCertificateMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetClientCertificateMode(struct soap*, const char *URL, _tds__GetClientCertificateMode*);
    soap_POST_recv__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode*);
    @endcode

  - <tds:GetClientCertificateModeResponse> @ref _tds__GetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, _tds__GetClientCertificateModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, _tds__GetClientCertificateModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetClientCertificateModeResponse(struct soap*, const char *URL, _tds__GetClientCertificateModeResponse*);
    soap_POST_recv__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse*);
    @endcode

  - <tds:SetClientCertificateMode> @ref _tds__SetClientCertificateMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetClientCertificateMode(struct soap*, const char *URL, _tds__SetClientCertificateMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetClientCertificateMode(struct soap*, const char *URL, _tds__SetClientCertificateMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetClientCertificateMode(struct soap*, const char *URL, _tds__SetClientCertificateMode*);
    soap_POST_recv__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode*);
    @endcode

  - <tds:SetClientCertificateModeResponse> @ref _tds__SetClientCertificateModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, _tds__SetClientCertificateModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, _tds__SetClientCertificateModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetClientCertificateModeResponse(struct soap*, const char *URL, _tds__SetClientCertificateModeResponse*);
    soap_POST_recv__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse*);
    @endcode

  - <tds:GetCACertificates> @ref _tds__GetCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCACertificates(struct soap*, const char *URL, _tds__GetCACertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCACertificates(struct soap*, const char *URL, _tds__GetCACertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCACertificates(struct soap*, const char *URL, _tds__GetCACertificates*);
    soap_POST_recv__tds__GetCACertificates(struct soap*, _tds__GetCACertificates*);
    @endcode

  - <tds:GetCACertificatesResponse> @ref _tds__GetCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCACertificatesResponse(struct soap*, const char *URL, _tds__GetCACertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCACertificatesResponse(struct soap*, const char *URL, _tds__GetCACertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCACertificatesResponse(struct soap*, const char *URL, _tds__GetCACertificatesResponse*);
    soap_POST_recv__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse*);
    @endcode

  - <tds:LoadCertificateWithPrivateKey> @ref _tds__LoadCertificateWithPrivateKey
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKey*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKey*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificateWithPrivateKey(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKey*);
    soap_POST_recv__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey*);
    @endcode

  - <tds:LoadCertificateWithPrivateKeyResponse> @ref _tds__LoadCertificateWithPrivateKeyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKeyResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char *URL, _tds__LoadCertificateWithPrivateKeyResponse*);
    soap_POST_recv__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse*);
    @endcode

  - <tds:GetCertificateInformation> @ref _tds__GetCertificateInformation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificateInformation(struct soap*, const char *URL, _tds__GetCertificateInformation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificateInformation(struct soap*, const char *URL, _tds__GetCertificateInformation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificateInformation(struct soap*, const char *URL, _tds__GetCertificateInformation*);
    soap_POST_recv__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation*);
    @endcode

  - <tds:GetCertificateInformationResponse> @ref _tds__GetCertificateInformationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetCertificateInformationResponse(struct soap*, const char *URL, _tds__GetCertificateInformationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetCertificateInformationResponse(struct soap*, const char *URL, _tds__GetCertificateInformationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetCertificateInformationResponse(struct soap*, const char *URL, _tds__GetCertificateInformationResponse*);
    soap_POST_recv__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse*);
    @endcode

  - <tds:LoadCACertificates> @ref _tds__LoadCACertificates
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCACertificates(struct soap*, const char *URL, _tds__LoadCACertificates*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCACertificates(struct soap*, const char *URL, _tds__LoadCACertificates*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCACertificates(struct soap*, const char *URL, _tds__LoadCACertificates*);
    soap_POST_recv__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates*);
    @endcode

  - <tds:LoadCACertificatesResponse> @ref _tds__LoadCACertificatesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__LoadCACertificatesResponse(struct soap*, const char *URL, _tds__LoadCACertificatesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__LoadCACertificatesResponse(struct soap*, const char *URL, _tds__LoadCACertificatesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__LoadCACertificatesResponse(struct soap*, const char *URL, _tds__LoadCACertificatesResponse*);
    soap_POST_recv__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse*);
    @endcode

  - <tds:CreateDot1XConfiguration> @ref _tds__CreateDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateDot1XConfiguration(struct soap*, const char *URL, _tds__CreateDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateDot1XConfiguration(struct soap*, const char *URL, _tds__CreateDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateDot1XConfiguration(struct soap*, const char *URL, _tds__CreateDot1XConfiguration*);
    soap_POST_recv__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration*);
    @endcode

  - <tds:CreateDot1XConfigurationResponse> @ref _tds__CreateDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, _tds__CreateDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, _tds__CreateDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateDot1XConfigurationResponse(struct soap*, const char *URL, _tds__CreateDot1XConfigurationResponse*);
    soap_POST_recv__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse*);
    @endcode

  - <tds:SetDot1XConfiguration> @ref _tds__SetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDot1XConfiguration(struct soap*, const char *URL, _tds__SetDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDot1XConfiguration(struct soap*, const char *URL, _tds__SetDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDot1XConfiguration(struct soap*, const char *URL, _tds__SetDot1XConfiguration*);
    soap_POST_recv__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration*);
    @endcode

  - <tds:SetDot1XConfigurationResponse> @ref _tds__SetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__SetDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__SetDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__SetDot1XConfigurationResponse*);
    soap_POST_recv__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfiguration> @ref _tds__GetDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfiguration(struct soap*, const char *URL, _tds__GetDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfiguration(struct soap*, const char *URL, _tds__GetDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfiguration(struct soap*, const char *URL, _tds__GetDot1XConfiguration*);
    soap_POST_recv__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration*);
    @endcode

  - <tds:GetDot1XConfigurationResponse> @ref _tds__GetDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurationResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationResponse*);
    soap_POST_recv__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse*);
    @endcode

  - <tds:GetDot1XConfigurations> @ref _tds__GetDot1XConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurations(struct soap*, const char *URL, _tds__GetDot1XConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurations(struct soap*, const char *URL, _tds__GetDot1XConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurations(struct soap*, const char *URL, _tds__GetDot1XConfigurations*);
    soap_POST_recv__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations*);
    @endcode

  - <tds:GetDot1XConfigurationsResponse> @ref _tds__GetDot1XConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot1XConfigurationsResponse(struct soap*, const char *URL, _tds__GetDot1XConfigurationsResponse*);
    soap_POST_recv__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse*);
    @endcode

  - <tds:DeleteDot1XConfiguration> @ref _tds__DeleteDot1XConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, _tds__DeleteDot1XConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, _tds__DeleteDot1XConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteDot1XConfiguration(struct soap*, const char *URL, _tds__DeleteDot1XConfiguration*);
    soap_POST_recv__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration*);
    @endcode

  - <tds:DeleteDot1XConfigurationResponse> @ref _tds__DeleteDot1XConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, _tds__DeleteDot1XConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, _tds__DeleteDot1XConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteDot1XConfigurationResponse(struct soap*, const char *URL, _tds__DeleteDot1XConfigurationResponse*);
    soap_POST_recv__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse*);
    @endcode

  - <tds:GetRelayOutputs> @ref _tds__GetRelayOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRelayOutputs(struct soap*, const char *URL, _tds__GetRelayOutputs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRelayOutputs(struct soap*, const char *URL, _tds__GetRelayOutputs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRelayOutputs(struct soap*, const char *URL, _tds__GetRelayOutputs*);
    soap_POST_recv__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs*);
    @endcode

  - <tds:GetRelayOutputsResponse> @ref _tds__GetRelayOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetRelayOutputsResponse(struct soap*, const char *URL, _tds__GetRelayOutputsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetRelayOutputsResponse(struct soap*, const char *URL, _tds__GetRelayOutputsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetRelayOutputsResponse(struct soap*, const char *URL, _tds__GetRelayOutputsResponse*);
    soap_POST_recv__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse*);
    @endcode

  - <tds:SetRelayOutputSettings> @ref _tds__SetRelayOutputSettings
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputSettings(struct soap*, const char *URL, _tds__SetRelayOutputSettings*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputSettings(struct soap*, const char *URL, _tds__SetRelayOutputSettings*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputSettings(struct soap*, const char *URL, _tds__SetRelayOutputSettings*);
    soap_POST_recv__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings*);
    @endcode

  - <tds:SetRelayOutputSettingsResponse> @ref _tds__SetRelayOutputSettingsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, _tds__SetRelayOutputSettingsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, _tds__SetRelayOutputSettingsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputSettingsResponse(struct soap*, const char *URL, _tds__SetRelayOutputSettingsResponse*);
    soap_POST_recv__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse*);
    @endcode

  - <tds:SetRelayOutputState> @ref _tds__SetRelayOutputState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputState(struct soap*, const char *URL, _tds__SetRelayOutputState*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputState(struct soap*, const char *URL, _tds__SetRelayOutputState*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputState(struct soap*, const char *URL, _tds__SetRelayOutputState*);
    soap_POST_recv__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState*);
    @endcode

  - <tds:SetRelayOutputStateResponse> @ref _tds__SetRelayOutputStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, _tds__SetRelayOutputStateResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, _tds__SetRelayOutputStateResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetRelayOutputStateResponse(struct soap*, const char *URL, _tds__SetRelayOutputStateResponse*);
    soap_POST_recv__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse*);
    @endcode

  - <tds:SendAuxiliaryCommand> @ref _tds__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SendAuxiliaryCommand(struct soap*, const char *URL, _tds__SendAuxiliaryCommand*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SendAuxiliaryCommand(struct soap*, const char *URL, _tds__SendAuxiliaryCommand*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SendAuxiliaryCommand(struct soap*, const char *URL, _tds__SendAuxiliaryCommand*);
    soap_POST_recv__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand*);
    @endcode

  - <tds:SendAuxiliaryCommandResponse> @ref _tds__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tds__SendAuxiliaryCommandResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tds__SendAuxiliaryCommandResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tds__SendAuxiliaryCommandResponse*);
    soap_POST_recv__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse*);
    @endcode

  - <tds:GetDot11Capabilities> @ref _tds__GetDot11Capabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11Capabilities(struct soap*, const char *URL, _tds__GetDot11Capabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11Capabilities(struct soap*, const char *URL, _tds__GetDot11Capabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11Capabilities(struct soap*, const char *URL, _tds__GetDot11Capabilities*);
    soap_POST_recv__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities*);
    @endcode

  - <tds:GetDot11CapabilitiesResponse> @ref _tds__GetDot11CapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, _tds__GetDot11CapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, _tds__GetDot11CapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11CapabilitiesResponse(struct soap*, const char *URL, _tds__GetDot11CapabilitiesResponse*);
    soap_POST_recv__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse*);
    @endcode

  - <tds:GetDot11Status> @ref _tds__GetDot11Status
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11Status(struct soap*, const char *URL, _tds__GetDot11Status*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11Status(struct soap*, const char *URL, _tds__GetDot11Status*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11Status(struct soap*, const char *URL, _tds__GetDot11Status*);
    soap_POST_recv__tds__GetDot11Status(struct soap*, _tds__GetDot11Status*);
    @endcode

  - <tds:GetDot11StatusResponse> @ref _tds__GetDot11StatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetDot11StatusResponse(struct soap*, const char *URL, _tds__GetDot11StatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetDot11StatusResponse(struct soap*, const char *URL, _tds__GetDot11StatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetDot11StatusResponse(struct soap*, const char *URL, _tds__GetDot11StatusResponse*);
    soap_POST_recv__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse*);
    @endcode

  - <tds:ScanAvailableDot11Networks> @ref _tds__ScanAvailableDot11Networks
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, _tds__ScanAvailableDot11Networks*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, _tds__ScanAvailableDot11Networks*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__ScanAvailableDot11Networks(struct soap*, const char *URL, _tds__ScanAvailableDot11Networks*);
    soap_POST_recv__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks*);
    @endcode

  - <tds:ScanAvailableDot11NetworksResponse> @ref _tds__ScanAvailableDot11NetworksResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, _tds__ScanAvailableDot11NetworksResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, _tds__ScanAvailableDot11NetworksResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char *URL, _tds__ScanAvailableDot11NetworksResponse*);
    soap_POST_recv__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse*);
    @endcode

  - <tds:GetSystemUris> @ref _tds__GetSystemUris
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemUris(struct soap*, const char *URL, _tds__GetSystemUris*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemUris(struct soap*, const char *URL, _tds__GetSystemUris*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemUris(struct soap*, const char *URL, _tds__GetSystemUris*);
    soap_POST_recv__tds__GetSystemUris(struct soap*, _tds__GetSystemUris*);
    @endcode

  - <tds:GetSystemUrisResponse> @ref _tds__GetSystemUrisResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetSystemUrisResponse(struct soap*, const char *URL, _tds__GetSystemUrisResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetSystemUrisResponse(struct soap*, const char *URL, _tds__GetSystemUrisResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetSystemUrisResponse(struct soap*, const char *URL, _tds__GetSystemUrisResponse*);
    soap_POST_recv__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse*);
    @endcode

  - <tds:StartFirmwareUpgrade> @ref _tds__StartFirmwareUpgrade
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartFirmwareUpgrade(struct soap*, const char *URL, _tds__StartFirmwareUpgrade*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartFirmwareUpgrade(struct soap*, const char *URL, _tds__StartFirmwareUpgrade*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartFirmwareUpgrade(struct soap*, const char *URL, _tds__StartFirmwareUpgrade*);
    soap_POST_recv__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade*);
    @endcode

  - <tds:StartFirmwareUpgradeResponse> @ref _tds__StartFirmwareUpgradeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, _tds__StartFirmwareUpgradeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, _tds__StartFirmwareUpgradeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartFirmwareUpgradeResponse(struct soap*, const char *URL, _tds__StartFirmwareUpgradeResponse*);
    soap_POST_recv__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse*);
    @endcode

  - <tds:StartSystemRestore> @ref _tds__StartSystemRestore
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartSystemRestore(struct soap*, const char *URL, _tds__StartSystemRestore*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartSystemRestore(struct soap*, const char *URL, _tds__StartSystemRestore*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartSystemRestore(struct soap*, const char *URL, _tds__StartSystemRestore*);
    soap_POST_recv__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore*);
    @endcode

  - <tds:StartSystemRestoreResponse> @ref _tds__StartSystemRestoreResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__StartSystemRestoreResponse(struct soap*, const char *URL, _tds__StartSystemRestoreResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__StartSystemRestoreResponse(struct soap*, const char *URL, _tds__StartSystemRestoreResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__StartSystemRestoreResponse(struct soap*, const char *URL, _tds__StartSystemRestoreResponse*);
    soap_POST_recv__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse*);
    @endcode

  - <tds:GetStorageConfigurations> @ref _tds__GetStorageConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurations(struct soap*, const char *URL, _tds__GetStorageConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurations(struct soap*, const char *URL, _tds__GetStorageConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurations(struct soap*, const char *URL, _tds__GetStorageConfigurations*);
    soap_POST_recv__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations*);
    @endcode

  - <tds:GetStorageConfigurationsResponse> @ref _tds__GetStorageConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurationsResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationsResponse*);
    soap_POST_recv__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse*);
    @endcode

  - <tds:CreateStorageConfiguration> @ref _tds__CreateStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateStorageConfiguration(struct soap*, const char *URL, _tds__CreateStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateStorageConfiguration(struct soap*, const char *URL, _tds__CreateStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateStorageConfiguration(struct soap*, const char *URL, _tds__CreateStorageConfiguration*);
    soap_POST_recv__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration*);
    @endcode

  - <tds:CreateStorageConfigurationResponse> @ref _tds__CreateStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, _tds__CreateStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, _tds__CreateStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__CreateStorageConfigurationResponse(struct soap*, const char *URL, _tds__CreateStorageConfigurationResponse*);
    soap_POST_recv__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse*);
    @endcode

  - <tds:GetStorageConfiguration> @ref _tds__GetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfiguration(struct soap*, const char *URL, _tds__GetStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfiguration(struct soap*, const char *URL, _tds__GetStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfiguration(struct soap*, const char *URL, _tds__GetStorageConfiguration*);
    soap_POST_recv__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration*);
    @endcode

  - <tds:GetStorageConfigurationResponse> @ref _tds__GetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetStorageConfigurationResponse(struct soap*, const char *URL, _tds__GetStorageConfigurationResponse*);
    soap_POST_recv__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse*);
    @endcode

  - <tds:SetStorageConfiguration> @ref _tds__SetStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetStorageConfiguration(struct soap*, const char *URL, _tds__SetStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetStorageConfiguration(struct soap*, const char *URL, _tds__SetStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetStorageConfiguration(struct soap*, const char *URL, _tds__SetStorageConfiguration*);
    soap_POST_recv__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration*);
    @endcode

  - <tds:SetStorageConfigurationResponse> @ref _tds__SetStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, _tds__SetStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, _tds__SetStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetStorageConfigurationResponse(struct soap*, const char *URL, _tds__SetStorageConfigurationResponse*);
    soap_POST_recv__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse*);
    @endcode

  - <tds:DeleteStorageConfiguration> @ref _tds__DeleteStorageConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteStorageConfiguration(struct soap*, const char *URL, _tds__DeleteStorageConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteStorageConfiguration(struct soap*, const char *URL, _tds__DeleteStorageConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteStorageConfiguration(struct soap*, const char *URL, _tds__DeleteStorageConfiguration*);
    soap_POST_recv__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration*);
    @endcode

  - <tds:DeleteStorageConfigurationResponse> @ref _tds__DeleteStorageConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, _tds__DeleteStorageConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, _tds__DeleteStorageConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteStorageConfigurationResponse(struct soap*, const char *URL, _tds__DeleteStorageConfigurationResponse*);
    soap_POST_recv__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse*);
    @endcode

  - <tds:GetGeoLocation> @ref _tds__GetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetGeoLocation(struct soap*, const char *URL, _tds__GetGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetGeoLocation(struct soap*, const char *URL, _tds__GetGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetGeoLocation(struct soap*, const char *URL, _tds__GetGeoLocation*);
    soap_POST_recv__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation*);
    @endcode

  - <tds:GetGeoLocationResponse> @ref _tds__GetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__GetGeoLocationResponse(struct soap*, const char *URL, _tds__GetGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__GetGeoLocationResponse(struct soap*, const char *URL, _tds__GetGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__GetGeoLocationResponse(struct soap*, const char *URL, _tds__GetGeoLocationResponse*);
    soap_POST_recv__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse*);
    @endcode

  - <tds:SetGeoLocation> @ref _tds__SetGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetGeoLocation(struct soap*, const char *URL, _tds__SetGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetGeoLocation(struct soap*, const char *URL, _tds__SetGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetGeoLocation(struct soap*, const char *URL, _tds__SetGeoLocation*);
    soap_POST_recv__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation*);
    @endcode

  - <tds:SetGeoLocationResponse> @ref _tds__SetGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__SetGeoLocationResponse(struct soap*, const char *URL, _tds__SetGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__SetGeoLocationResponse(struct soap*, const char *URL, _tds__SetGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__SetGeoLocationResponse(struct soap*, const char *URL, _tds__SetGeoLocationResponse*);
    soap_POST_recv__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse*);
    @endcode

  - <tds:DeleteGeoLocation> @ref _tds__DeleteGeoLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteGeoLocation(struct soap*, const char *URL, _tds__DeleteGeoLocation*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteGeoLocation(struct soap*, const char *URL, _tds__DeleteGeoLocation*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteGeoLocation(struct soap*, const char *URL, _tds__DeleteGeoLocation*);
    soap_POST_recv__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation*);
    @endcode

  - <tds:DeleteGeoLocationResponse> @ref _tds__DeleteGeoLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, _tds__DeleteGeoLocationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, _tds__DeleteGeoLocationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tds__DeleteGeoLocationResponse(struct soap*, const char *URL, _tds__DeleteGeoLocationResponse*);
    soap_POST_recv__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse*);
    @endcode

*/

/**

@section tt Top-level root elements of schema "http://www.onvif.org/ver10/schema"

  - <tt:StringItems> (use wsdl2h option -g to auto-generate type _tt__StringItems)

  - <tt:StringList> (use wsdl2h option -g to auto-generate type _tt__StringList)

  - <tt:IntRange> (use wsdl2h option -g to auto-generate type _tt__IntRange)

  - <tt:IntList> (use wsdl2h option -g to auto-generate type _tt__IntList)

  - <tt:FloatRange> (use wsdl2h option -g to auto-generate type _tt__FloatRange)

  - <tt:FloatList> (use wsdl2h option -g to auto-generate type _tt__FloatList)

  - <tt:DurationRange> (use wsdl2h option -g to auto-generate type _tt__DurationRange)

  - <tt:IntRectangleRange> (use wsdl2h option -g to auto-generate type _tt__IntRectangleRange)

  - <tt:VideoSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoSourceConfiguration)

  - <tt:AudioSourceConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioSourceConfiguration)

  - <tt:VideoEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoEncoderConfiguration)

  - <tt:AudioEncoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioEncoderConfiguration)

  - <tt:VideoAnalyticsConfiguration> (use wsdl2h option -g to auto-generate type _tt__VideoAnalyticsConfiguration)

  - <tt:PTZConfiguration> (use wsdl2h option -g to auto-generate type _tt__PTZConfiguration)

  - <tt:MetadataConfiguration> (use wsdl2h option -g to auto-generate type _tt__MetadataConfiguration)

  - <tt:AudioOutputConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioOutputConfiguration)

  - <tt:AudioDecoderConfiguration> (use wsdl2h option -g to auto-generate type _tt__AudioDecoderConfiguration)

  - <tt:Message> (use wsdl2h option -g to auto-generate type _tt__Message)

  - <tt:Polyline> (use wsdl2h option -g to auto-generate type _tt__Polyline)

  - <tt:PolygonOptions> (use wsdl2h option -g to auto-generate type _tt__PolygonOptions)

  - <tt:Polygon> (use wsdl2h option -g to auto-generate type _tt__Polygon)

*/

/**

@section wsnt Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <wsnt:TopicExpression> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpression)

  - <wsnt:FixedTopicSet> (use wsdl2h option -g to auto-generate type _wsnt__FixedTopicSet)

  - <wsnt:TopicExpressionDialect> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialect)

  - <wsnt:NotificationProducerRP> (use wsdl2h option -g to auto-generate type _wsnt__NotificationProducerRP)

  - <wsnt:ConsumerReference> (use wsdl2h option -g to auto-generate type _wsnt__ConsumerReference)

  - <wsnt:Filter> (use wsdl2h option -g to auto-generate type _wsnt__Filter)

  - <wsnt:SubscriptionPolicy> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionPolicy)

  - <wsnt:CreationTime> (use wsdl2h option -g to auto-generate type _wsnt__CreationTime)

  - <wsnt:SubscriptionManagerRP> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionManagerRP)

  - <wsnt:SubscriptionReference> (use wsdl2h option -g to auto-generate type _wsnt__SubscriptionReference)

  - <wsnt:Topic> (use wsdl2h option -g to auto-generate type _wsnt__Topic)

  - <wsnt:ProducerReference> (use wsdl2h option -g to auto-generate type _wsnt__ProducerReference)

  - <wsnt:NotificationMessage> (use wsdl2h option -g to auto-generate type _wsnt__NotificationMessage)

  - <wsnt:Notify> (use wsdl2h option -g to auto-generate type _wsnt__Notify)

  - <wsnt:CurrentTime> (use wsdl2h option -g to auto-generate type _wsnt__CurrentTime)

  - <wsnt:TerminationTime> (use wsdl2h option -g to auto-generate type _wsnt__TerminationTime)

  - <wsnt:ProducerProperties> (use wsdl2h option -g to auto-generate type _wsnt__ProducerProperties)

  - <wsnt:MessageContent> (use wsdl2h option -g to auto-generate type _wsnt__MessageContent)

  - <wsnt:UseRaw> (use wsdl2h option -g to auto-generate type _wsnt__UseRaw)

  - <wsnt:Subscribe> (use wsdl2h option -g to auto-generate type _wsnt__Subscribe)

  - <wsnt:SubscribeResponse> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeResponse)

  - <wsnt:GetCurrentMessage> (use wsdl2h option -g to auto-generate type _wsnt__GetCurrentMessage)

  - <wsnt:GetCurrentMessageResponse> (use wsdl2h option -g to auto-generate type _wsnt__GetCurrentMessageResponse)

  - <wsnt:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__SubscribeCreationFailedFault)

  - <wsnt:InvalidFilterFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidFilterFault)

  - <wsnt:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicExpressionDialectUnknownFault)

  - <wsnt:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidTopicExpressionFault)

  - <wsnt:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__TopicNotSupportedFault)

  - <wsnt:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate type _wsnt__MultipleTopicsSpecifiedFault)

  - <wsnt:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidProducerPropertiesExpressionFault)

  - <wsnt:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate type _wsnt__InvalidMessageContentExpressionFault)

  - <wsnt:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnrecognizedPolicyRequestFault)

  - <wsnt:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate type _wsnt__UnsupportedPolicyRequestFault)

  - <wsnt:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate type _wsnt__NotifyMessageNotSupportedFault)

  - <wsnt:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableInitialTerminationTimeFault)

  - <wsnt:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate type _wsnt__NoCurrentMessageOnTopicFault)

  - <wsnt:GetMessages> (use wsdl2h option -g to auto-generate type _wsnt__GetMessages)

  - <wsnt:GetMessagesResponse> (use wsdl2h option -g to auto-generate type _wsnt__GetMessagesResponse)

  - <wsnt:DestroyPullPoint> (use wsdl2h option -g to auto-generate type _wsnt__DestroyPullPoint)

  - <wsnt:DestroyPullPointResponse> (use wsdl2h option -g to auto-generate type _wsnt__DestroyPullPointResponse)

  - <wsnt:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToGetMessagesFault)

  - <wsnt:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroyPullPointFault)

  - <wsnt:CreatePullPoint> (use wsdl2h option -g to auto-generate type _wsnt__CreatePullPoint)

  - <wsnt:CreatePullPointResponse> (use wsdl2h option -g to auto-generate type _wsnt__CreatePullPointResponse)

  - <wsnt:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToCreatePullPointFault)

  - <wsnt:Renew> (use wsdl2h option -g to auto-generate type _wsnt__Renew)

  - <wsnt:RenewResponse> (use wsdl2h option -g to auto-generate type _wsnt__RenewResponse)

  - <wsnt:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate type _wsnt__UnacceptableTerminationTimeFault)

  - <wsnt:Unsubscribe> (use wsdl2h option -g to auto-generate type _wsnt__Unsubscribe)

  - <wsnt:UnsubscribeResponse> (use wsdl2h option -g to auto-generate type _wsnt__UnsubscribeResponse)

  - <wsnt:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate type _wsnt__UnableToDestroySubscriptionFault)

  - <wsnt:PauseSubscription> (use wsdl2h option -g to auto-generate type _wsnt__PauseSubscription)

  - <wsnt:PauseSubscriptionResponse> (use wsdl2h option -g to auto-generate type _wsnt__PauseSubscriptionResponse)

  - <wsnt:ResumeSubscription> (use wsdl2h option -g to auto-generate type _wsnt__ResumeSubscription)

  - <wsnt:ResumeSubscriptionResponse> (use wsdl2h option -g to auto-generate type _wsnt__ResumeSubscriptionResponse)

  - <wsnt:PauseFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__PauseFailedFault)

  - <wsnt:ResumeFailedFault> (use wsdl2h option -g to auto-generate type _wsnt__ResumeFailedFault)

*/

/**

@section wsrfbf Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <wsrfbf:BaseFault> (use wsdl2h option -g to auto-generate type _wsrfbf__BaseFault)

*/

/**

@section wstop Top-level root elements of schema "http://docs.oasis-open.org/wsn/t-1"

  - <wstop:TopicNamespace> (use wsdl2h option -g to auto-generate type _wstop__TopicNamespace)

  - <wstop:TopicSet> (use wsdl2h option -g to auto-generate type _wstop__TopicSet)

*/

/**

@section trt Top-level root elements of schema "http://www.onvif.org/ver10/media/wsdl"

  - <trt:GetServiceCapabilities> @ref _trt__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetServiceCapabilities(struct soap*, const char *URL, _trt__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetServiceCapabilities(struct soap*, const char *URL, _trt__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetServiceCapabilities(struct soap*, const char *URL, _trt__GetServiceCapabilities*);
    soap_POST_recv__trt__GetServiceCapabilities(struct soap*, _trt__GetServiceCapabilities*);
    @endcode

  - <trt:GetServiceCapabilitiesResponse> @ref _trt__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _trt__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _trt__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _trt__GetServiceCapabilitiesResponse*);
    soap_POST_recv__trt__GetServiceCapabilitiesResponse(struct soap*, _trt__GetServiceCapabilitiesResponse*);
    @endcode

  - <trt:Capabilities> (use wsdl2h option -g to auto-generate type _trt__Capabilities)

  - <trt:GetVideoSources> @ref _trt__GetVideoSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSources(struct soap*, const char *URL, _trt__GetVideoSources*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSources(struct soap*, const char *URL, _trt__GetVideoSources*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSources(struct soap*, const char *URL, _trt__GetVideoSources*);
    soap_POST_recv__trt__GetVideoSources(struct soap*, _trt__GetVideoSources*);
    @endcode

  - <trt:GetVideoSourcesResponse> @ref _trt__GetVideoSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourcesResponse(struct soap*, const char *URL, _trt__GetVideoSourcesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourcesResponse(struct soap*, const char *URL, _trt__GetVideoSourcesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourcesResponse(struct soap*, const char *URL, _trt__GetVideoSourcesResponse*);
    soap_POST_recv__trt__GetVideoSourcesResponse(struct soap*, _trt__GetVideoSourcesResponse*);
    @endcode

  - <trt:GetAudioSources> @ref _trt__GetAudioSources
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSources(struct soap*, const char *URL, _trt__GetAudioSources*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSources(struct soap*, const char *URL, _trt__GetAudioSources*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSources(struct soap*, const char *URL, _trt__GetAudioSources*);
    soap_POST_recv__trt__GetAudioSources(struct soap*, _trt__GetAudioSources*);
    @endcode

  - <trt:GetAudioSourcesResponse> @ref _trt__GetAudioSourcesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourcesResponse(struct soap*, const char *URL, _trt__GetAudioSourcesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourcesResponse(struct soap*, const char *URL, _trt__GetAudioSourcesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourcesResponse(struct soap*, const char *URL, _trt__GetAudioSourcesResponse*);
    soap_POST_recv__trt__GetAudioSourcesResponse(struct soap*, _trt__GetAudioSourcesResponse*);
    @endcode

  - <trt:GetAudioOutputs> @ref _trt__GetAudioOutputs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputs(struct soap*, const char *URL, _trt__GetAudioOutputs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputs(struct soap*, const char *URL, _trt__GetAudioOutputs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputs(struct soap*, const char *URL, _trt__GetAudioOutputs*);
    soap_POST_recv__trt__GetAudioOutputs(struct soap*, _trt__GetAudioOutputs*);
    @endcode

  - <trt:GetAudioOutputsResponse> @ref _trt__GetAudioOutputsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputsResponse(struct soap*, const char *URL, _trt__GetAudioOutputsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputsResponse(struct soap*, const char *URL, _trt__GetAudioOutputsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputsResponse(struct soap*, const char *URL, _trt__GetAudioOutputsResponse*);
    soap_POST_recv__trt__GetAudioOutputsResponse(struct soap*, _trt__GetAudioOutputsResponse*);
    @endcode

  - <trt:CreateProfile> @ref _trt__CreateProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateProfile(struct soap*, const char *URL, _trt__CreateProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateProfile(struct soap*, const char *URL, _trt__CreateProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateProfile(struct soap*, const char *URL, _trt__CreateProfile*);
    soap_POST_recv__trt__CreateProfile(struct soap*, _trt__CreateProfile*);
    @endcode

  - <trt:CreateProfileResponse> @ref _trt__CreateProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateProfileResponse(struct soap*, const char *URL, _trt__CreateProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateProfileResponse(struct soap*, const char *URL, _trt__CreateProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateProfileResponse(struct soap*, const char *URL, _trt__CreateProfileResponse*);
    soap_POST_recv__trt__CreateProfileResponse(struct soap*, _trt__CreateProfileResponse*);
    @endcode

  - <trt:GetProfile> @ref _trt__GetProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfile(struct soap*, _trt__GetProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfile(struct soap*, _trt__GetProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfile(struct soap*, const char *URL, _trt__GetProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfile(struct soap*, const char *URL, _trt__GetProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfile(struct soap*, const char *URL, _trt__GetProfile*);
    soap_POST_recv__trt__GetProfile(struct soap*, _trt__GetProfile*);
    @endcode

  - <trt:GetProfileResponse> @ref _trt__GetProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfileResponse(struct soap*, const char *URL, _trt__GetProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfileResponse(struct soap*, const char *URL, _trt__GetProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfileResponse(struct soap*, const char *URL, _trt__GetProfileResponse*);
    soap_POST_recv__trt__GetProfileResponse(struct soap*, _trt__GetProfileResponse*);
    @endcode

  - <trt:GetProfiles> @ref _trt__GetProfiles
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfiles(struct soap*, const char *URL, _trt__GetProfiles*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfiles(struct soap*, const char *URL, _trt__GetProfiles*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfiles(struct soap*, const char *URL, _trt__GetProfiles*);
    soap_POST_recv__trt__GetProfiles(struct soap*, _trt__GetProfiles*);
    @endcode

  - <trt:GetProfilesResponse> @ref _trt__GetProfilesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetProfilesResponse(struct soap*, const char *URL, _trt__GetProfilesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetProfilesResponse(struct soap*, const char *URL, _trt__GetProfilesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetProfilesResponse(struct soap*, const char *URL, _trt__GetProfilesResponse*);
    soap_POST_recv__trt__GetProfilesResponse(struct soap*, _trt__GetProfilesResponse*);
    @endcode

  - <trt:AddVideoEncoderConfiguration> @ref _trt__AddVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoEncoderConfiguration(struct soap*, const char *URL, _trt__AddVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoEncoderConfiguration(struct soap*, const char *URL, _trt__AddVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoEncoderConfiguration(struct soap*, const char *URL, _trt__AddVideoEncoderConfiguration*);
    soap_POST_recv__trt__AddVideoEncoderConfiguration(struct soap*, _trt__AddVideoEncoderConfiguration*);
    @endcode

  - <trt:AddVideoEncoderConfigurationResponse> @ref _trt__AddVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoEncoderConfigurationResponse*);
    soap_POST_recv__trt__AddVideoEncoderConfigurationResponse(struct soap*, _trt__AddVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoEncoderConfiguration> @ref _trt__RemoveVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoEncoderConfiguration(struct soap*, const char *URL, _trt__RemoveVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoEncoderConfiguration(struct soap*, const char *URL, _trt__RemoveVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoEncoderConfiguration(struct soap*, const char *URL, _trt__RemoveVideoEncoderConfiguration*);
    soap_POST_recv__trt__RemoveVideoEncoderConfiguration(struct soap*, _trt__RemoveVideoEncoderConfiguration*);
    @endcode

  - <trt:RemoveVideoEncoderConfigurationResponse> @ref _trt__RemoveVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoEncoderConfigurationResponse*);
    soap_POST_recv__trt__RemoveVideoEncoderConfigurationResponse(struct soap*, _trt__RemoveVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:AddVideoSourceConfiguration> @ref _trt__AddVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoSourceConfiguration(struct soap*, const char *URL, _trt__AddVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoSourceConfiguration(struct soap*, const char *URL, _trt__AddVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoSourceConfiguration(struct soap*, const char *URL, _trt__AddVideoSourceConfiguration*);
    soap_POST_recv__trt__AddVideoSourceConfiguration(struct soap*, _trt__AddVideoSourceConfiguration*);
    @endcode

  - <trt:AddVideoSourceConfigurationResponse> @ref _trt__AddVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoSourceConfigurationResponse*);
    soap_POST_recv__trt__AddVideoSourceConfigurationResponse(struct soap*, _trt__AddVideoSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoSourceConfiguration> @ref _trt__RemoveVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoSourceConfiguration(struct soap*, const char *URL, _trt__RemoveVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoSourceConfiguration(struct soap*, const char *URL, _trt__RemoveVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoSourceConfiguration(struct soap*, const char *URL, _trt__RemoveVideoSourceConfiguration*);
    soap_POST_recv__trt__RemoveVideoSourceConfiguration(struct soap*, _trt__RemoveVideoSourceConfiguration*);
    @endcode

  - <trt:RemoveVideoSourceConfigurationResponse> @ref _trt__RemoveVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoSourceConfigurationResponse*);
    soap_POST_recv__trt__RemoveVideoSourceConfigurationResponse(struct soap*, _trt__RemoveVideoSourceConfigurationResponse*);
    @endcode

  - <trt:AddAudioEncoderConfiguration> @ref _trt__AddAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioEncoderConfiguration(struct soap*, const char *URL, _trt__AddAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioEncoderConfiguration(struct soap*, const char *URL, _trt__AddAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioEncoderConfiguration(struct soap*, const char *URL, _trt__AddAudioEncoderConfiguration*);
    soap_POST_recv__trt__AddAudioEncoderConfiguration(struct soap*, _trt__AddAudioEncoderConfiguration*);
    @endcode

  - <trt:AddAudioEncoderConfigurationResponse> @ref _trt__AddAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioEncoderConfigurationResponse*);
    soap_POST_recv__trt__AddAudioEncoderConfigurationResponse(struct soap*, _trt__AddAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioEncoderConfiguration> @ref _trt__RemoveAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioEncoderConfiguration(struct soap*, const char *URL, _trt__RemoveAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioEncoderConfiguration(struct soap*, const char *URL, _trt__RemoveAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioEncoderConfiguration(struct soap*, const char *URL, _trt__RemoveAudioEncoderConfiguration*);
    soap_POST_recv__trt__RemoveAudioEncoderConfiguration(struct soap*, _trt__RemoveAudioEncoderConfiguration*);
    @endcode

  - <trt:RemoveAudioEncoderConfigurationResponse> @ref _trt__RemoveAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioEncoderConfigurationResponse*);
    soap_POST_recv__trt__RemoveAudioEncoderConfigurationResponse(struct soap*, _trt__RemoveAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:AddAudioSourceConfiguration> @ref _trt__AddAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioSourceConfiguration(struct soap*, const char *URL, _trt__AddAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioSourceConfiguration(struct soap*, const char *URL, _trt__AddAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioSourceConfiguration(struct soap*, const char *URL, _trt__AddAudioSourceConfiguration*);
    soap_POST_recv__trt__AddAudioSourceConfiguration(struct soap*, _trt__AddAudioSourceConfiguration*);
    @endcode

  - <trt:AddAudioSourceConfigurationResponse> @ref _trt__AddAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioSourceConfigurationResponse*);
    soap_POST_recv__trt__AddAudioSourceConfigurationResponse(struct soap*, _trt__AddAudioSourceConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioSourceConfiguration> @ref _trt__RemoveAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioSourceConfiguration(struct soap*, const char *URL, _trt__RemoveAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioSourceConfiguration(struct soap*, const char *URL, _trt__RemoveAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioSourceConfiguration(struct soap*, const char *URL, _trt__RemoveAudioSourceConfiguration*);
    soap_POST_recv__trt__RemoveAudioSourceConfiguration(struct soap*, _trt__RemoveAudioSourceConfiguration*);
    @endcode

  - <trt:RemoveAudioSourceConfigurationResponse> @ref _trt__RemoveAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioSourceConfigurationResponse*);
    soap_POST_recv__trt__RemoveAudioSourceConfigurationResponse(struct soap*, _trt__RemoveAudioSourceConfigurationResponse*);
    @endcode

  - <trt:AddPTZConfiguration> @ref _trt__AddPTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddPTZConfiguration(struct soap*, const char *URL, _trt__AddPTZConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddPTZConfiguration(struct soap*, const char *URL, _trt__AddPTZConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddPTZConfiguration(struct soap*, const char *URL, _trt__AddPTZConfiguration*);
    soap_POST_recv__trt__AddPTZConfiguration(struct soap*, _trt__AddPTZConfiguration*);
    @endcode

  - <trt:AddPTZConfigurationResponse> @ref _trt__AddPTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddPTZConfigurationResponse(struct soap*, const char *URL, _trt__AddPTZConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddPTZConfigurationResponse(struct soap*, const char *URL, _trt__AddPTZConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddPTZConfigurationResponse(struct soap*, const char *URL, _trt__AddPTZConfigurationResponse*);
    soap_POST_recv__trt__AddPTZConfigurationResponse(struct soap*, _trt__AddPTZConfigurationResponse*);
    @endcode

  - <trt:RemovePTZConfiguration> @ref _trt__RemovePTZConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemovePTZConfiguration(struct soap*, const char *URL, _trt__RemovePTZConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemovePTZConfiguration(struct soap*, const char *URL, _trt__RemovePTZConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemovePTZConfiguration(struct soap*, const char *URL, _trt__RemovePTZConfiguration*);
    soap_POST_recv__trt__RemovePTZConfiguration(struct soap*, _trt__RemovePTZConfiguration*);
    @endcode

  - <trt:RemovePTZConfigurationResponse> @ref _trt__RemovePTZConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemovePTZConfigurationResponse(struct soap*, const char *URL, _trt__RemovePTZConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemovePTZConfigurationResponse(struct soap*, const char *URL, _trt__RemovePTZConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemovePTZConfigurationResponse(struct soap*, const char *URL, _trt__RemovePTZConfigurationResponse*);
    soap_POST_recv__trt__RemovePTZConfigurationResponse(struct soap*, _trt__RemovePTZConfigurationResponse*);
    @endcode

  - <trt:AddVideoAnalyticsConfiguration> @ref _trt__AddVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__AddVideoAnalyticsConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__AddVideoAnalyticsConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__AddVideoAnalyticsConfiguration*);
    soap_POST_recv__trt__AddVideoAnalyticsConfiguration(struct soap*, _trt__AddVideoAnalyticsConfiguration*);
    @endcode

  - <trt:AddVideoAnalyticsConfigurationResponse> @ref _trt__AddVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoAnalyticsConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoAnalyticsConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__AddVideoAnalyticsConfigurationResponse*);
    soap_POST_recv__trt__AddVideoAnalyticsConfigurationResponse(struct soap*, _trt__AddVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfiguration> @ref _trt__RemoveVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__RemoveVideoAnalyticsConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__RemoveVideoAnalyticsConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__RemoveVideoAnalyticsConfiguration*);
    soap_POST_recv__trt__RemoveVideoAnalyticsConfiguration(struct soap*, _trt__RemoveVideoAnalyticsConfiguration*);
    @endcode

  - <trt:RemoveVideoAnalyticsConfigurationResponse> @ref _trt__RemoveVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    soap_POST_recv__trt__RemoveVideoAnalyticsConfigurationResponse(struct soap*, _trt__RemoveVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:AddMetadataConfiguration> @ref _trt__AddMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddMetadataConfiguration(struct soap*, const char *URL, _trt__AddMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddMetadataConfiguration(struct soap*, const char *URL, _trt__AddMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddMetadataConfiguration(struct soap*, const char *URL, _trt__AddMetadataConfiguration*);
    soap_POST_recv__trt__AddMetadataConfiguration(struct soap*, _trt__AddMetadataConfiguration*);
    @endcode

  - <trt:AddMetadataConfigurationResponse> @ref _trt__AddMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddMetadataConfigurationResponse(struct soap*, const char *URL, _trt__AddMetadataConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddMetadataConfigurationResponse(struct soap*, const char *URL, _trt__AddMetadataConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddMetadataConfigurationResponse(struct soap*, const char *URL, _trt__AddMetadataConfigurationResponse*);
    soap_POST_recv__trt__AddMetadataConfigurationResponse(struct soap*, _trt__AddMetadataConfigurationResponse*);
    @endcode

  - <trt:RemoveMetadataConfiguration> @ref _trt__RemoveMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveMetadataConfiguration(struct soap*, const char *URL, _trt__RemoveMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveMetadataConfiguration(struct soap*, const char *URL, _trt__RemoveMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveMetadataConfiguration(struct soap*, const char *URL, _trt__RemoveMetadataConfiguration*);
    soap_POST_recv__trt__RemoveMetadataConfiguration(struct soap*, _trt__RemoveMetadataConfiguration*);
    @endcode

  - <trt:RemoveMetadataConfigurationResponse> @ref _trt__RemoveMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveMetadataConfigurationResponse(struct soap*, const char *URL, _trt__RemoveMetadataConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveMetadataConfigurationResponse(struct soap*, const char *URL, _trt__RemoveMetadataConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveMetadataConfigurationResponse(struct soap*, const char *URL, _trt__RemoveMetadataConfigurationResponse*);
    soap_POST_recv__trt__RemoveMetadataConfigurationResponse(struct soap*, _trt__RemoveMetadataConfigurationResponse*);
    @endcode

  - <trt:AddAudioOutputConfiguration> @ref _trt__AddAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioOutputConfiguration(struct soap*, const char *URL, _trt__AddAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioOutputConfiguration(struct soap*, const char *URL, _trt__AddAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioOutputConfiguration(struct soap*, const char *URL, _trt__AddAudioOutputConfiguration*);
    soap_POST_recv__trt__AddAudioOutputConfiguration(struct soap*, _trt__AddAudioOutputConfiguration*);
    @endcode

  - <trt:AddAudioOutputConfigurationResponse> @ref _trt__AddAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioOutputConfigurationResponse*);
    soap_POST_recv__trt__AddAudioOutputConfigurationResponse(struct soap*, _trt__AddAudioOutputConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioOutputConfiguration> @ref _trt__RemoveAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioOutputConfiguration(struct soap*, const char *URL, _trt__RemoveAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioOutputConfiguration(struct soap*, const char *URL, _trt__RemoveAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioOutputConfiguration(struct soap*, const char *URL, _trt__RemoveAudioOutputConfiguration*);
    soap_POST_recv__trt__RemoveAudioOutputConfiguration(struct soap*, _trt__RemoveAudioOutputConfiguration*);
    @endcode

  - <trt:RemoveAudioOutputConfigurationResponse> @ref _trt__RemoveAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioOutputConfigurationResponse*);
    soap_POST_recv__trt__RemoveAudioOutputConfigurationResponse(struct soap*, _trt__RemoveAudioOutputConfigurationResponse*);
    @endcode

  - <trt:AddAudioDecoderConfiguration> @ref _trt__AddAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioDecoderConfiguration(struct soap*, const char *URL, _trt__AddAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioDecoderConfiguration(struct soap*, const char *URL, _trt__AddAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioDecoderConfiguration(struct soap*, const char *URL, _trt__AddAudioDecoderConfiguration*);
    soap_POST_recv__trt__AddAudioDecoderConfiguration(struct soap*, _trt__AddAudioDecoderConfiguration*);
    @endcode

  - <trt:AddAudioDecoderConfigurationResponse> @ref _trt__AddAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__AddAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioDecoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__AddAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioDecoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__AddAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__AddAudioDecoderConfigurationResponse*);
    soap_POST_recv__trt__AddAudioDecoderConfigurationResponse(struct soap*, _trt__AddAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:RemoveAudioDecoderConfiguration> @ref _trt__RemoveAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioDecoderConfiguration(struct soap*, const char *URL, _trt__RemoveAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioDecoderConfiguration(struct soap*, const char *URL, _trt__RemoveAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioDecoderConfiguration(struct soap*, const char *URL, _trt__RemoveAudioDecoderConfiguration*);
    soap_POST_recv__trt__RemoveAudioDecoderConfiguration(struct soap*, _trt__RemoveAudioDecoderConfiguration*);
    @endcode

  - <trt:RemoveAudioDecoderConfigurationResponse> @ref _trt__RemoveAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioDecoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioDecoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__RemoveAudioDecoderConfigurationResponse*);
    soap_POST_recv__trt__RemoveAudioDecoderConfigurationResponse(struct soap*, _trt__RemoveAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:DeleteProfile> @ref _trt__DeleteProfile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteProfile(struct soap*, const char *URL, _trt__DeleteProfile*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteProfile(struct soap*, const char *URL, _trt__DeleteProfile*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteProfile(struct soap*, const char *URL, _trt__DeleteProfile*);
    soap_POST_recv__trt__DeleteProfile(struct soap*, _trt__DeleteProfile*);
    @endcode

  - <trt:DeleteProfileResponse> @ref _trt__DeleteProfileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteProfileResponse(struct soap*, const char *URL, _trt__DeleteProfileResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteProfileResponse(struct soap*, const char *URL, _trt__DeleteProfileResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteProfileResponse(struct soap*, const char *URL, _trt__DeleteProfileResponse*);
    soap_POST_recv__trt__DeleteProfileResponse(struct soap*, _trt__DeleteProfileResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurations> @ref _trt__GetVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurations(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurations(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurations(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurations*);
    soap_POST_recv__trt__GetVideoEncoderConfigurations(struct soap*, _trt__GetVideoEncoderConfigurations*);
    @endcode

  - <trt:GetVideoEncoderConfigurationsResponse> @ref _trt__GetVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationsResponse*);
    soap_POST_recv__trt__GetVideoEncoderConfigurationsResponse(struct soap*, _trt__GetVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurations> @ref _trt__GetVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurations(struct soap*, const char *URL, _trt__GetVideoSourceConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurations(struct soap*, const char *URL, _trt__GetVideoSourceConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurations(struct soap*, const char *URL, _trt__GetVideoSourceConfigurations*);
    soap_POST_recv__trt__GetVideoSourceConfigurations(struct soap*, _trt__GetVideoSourceConfigurations*);
    @endcode

  - <trt:GetVideoSourceConfigurationsResponse> @ref _trt__GetVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationsResponse*);
    soap_POST_recv__trt__GetVideoSourceConfigurationsResponse(struct soap*, _trt__GetVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurations> @ref _trt__GetAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurations(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurations(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurations(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurations*);
    soap_POST_recv__trt__GetAudioEncoderConfigurations(struct soap*, _trt__GetAudioEncoderConfigurations*);
    @endcode

  - <trt:GetAudioEncoderConfigurationsResponse> @ref _trt__GetAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationsResponse*);
    soap_POST_recv__trt__GetAudioEncoderConfigurationsResponse(struct soap*, _trt__GetAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurations> @ref _trt__GetAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurations(struct soap*, const char *URL, _trt__GetAudioSourceConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurations(struct soap*, const char *URL, _trt__GetAudioSourceConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurations(struct soap*, const char *URL, _trt__GetAudioSourceConfigurations*);
    soap_POST_recv__trt__GetAudioSourceConfigurations(struct soap*, _trt__GetAudioSourceConfigurations*);
    @endcode

  - <trt:GetAudioSourceConfigurationsResponse> @ref _trt__GetAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationsResponse*);
    soap_POST_recv__trt__GetAudioSourceConfigurationsResponse(struct soap*, _trt__GetAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurations> @ref _trt__GetVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoAnalyticsConfigurations(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoAnalyticsConfigurations(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoAnalyticsConfigurations(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurations*);
    soap_POST_recv__trt__GetVideoAnalyticsConfigurations(struct soap*, _trt__GetVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationsResponse> @ref _trt__GetVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurationsResponse*);
    soap_POST_recv__trt__GetVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetMetadataConfigurations> @ref _trt__GetMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurations(struct soap*, const char *URL, _trt__GetMetadataConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurations(struct soap*, const char *URL, _trt__GetMetadataConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurations(struct soap*, const char *URL, _trt__GetMetadataConfigurations*);
    soap_POST_recv__trt__GetMetadataConfigurations(struct soap*, _trt__GetMetadataConfigurations*);
    @endcode

  - <trt:GetMetadataConfigurationsResponse> @ref _trt__GetMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurationsResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurationsResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurationsResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationsResponse*);
    soap_POST_recv__trt__GetMetadataConfigurationsResponse(struct soap*, _trt__GetMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetAudioOutputConfigurations> @ref _trt__GetAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurations(struct soap*, const char *URL, _trt__GetAudioOutputConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurations(struct soap*, const char *URL, _trt__GetAudioOutputConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurations(struct soap*, const char *URL, _trt__GetAudioOutputConfigurations*);
    soap_POST_recv__trt__GetAudioOutputConfigurations(struct soap*, _trt__GetAudioOutputConfigurations*);
    @endcode

  - <trt:GetAudioOutputConfigurationsResponse> @ref _trt__GetAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationsResponse*);
    soap_POST_recv__trt__GetAudioOutputConfigurationsResponse(struct soap*, _trt__GetAudioOutputConfigurationsResponse*);
    @endcode

  - <trt:GetAudioDecoderConfigurations> @ref _trt__GetAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurations(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurations(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurations(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurations*);
    soap_POST_recv__trt__GetAudioDecoderConfigurations(struct soap*, _trt__GetAudioDecoderConfigurations*);
    @endcode

  - <trt:GetAudioDecoderConfigurationsResponse> @ref _trt__GetAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationsResponse*);
    soap_POST_recv__trt__GetAudioDecoderConfigurationsResponse(struct soap*, _trt__GetAudioDecoderConfigurationsResponse*);
    @endcode

  - <trt:GetVideoSourceConfiguration> @ref _trt__GetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfiguration(struct soap*, const char *URL, _trt__GetVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfiguration(struct soap*, const char *URL, _trt__GetVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfiguration(struct soap*, const char *URL, _trt__GetVideoSourceConfiguration*);
    soap_POST_recv__trt__GetVideoSourceConfiguration(struct soap*, _trt__GetVideoSourceConfiguration*);
    @endcode

  - <trt:GetVideoSourceConfigurationResponse> @ref _trt__GetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationResponse*);
    soap_POST_recv__trt__GetVideoSourceConfigurationResponse(struct soap*, _trt__GetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:GetVideoEncoderConfiguration> @ref _trt__GetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfiguration(struct soap*, const char *URL, _trt__GetVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfiguration(struct soap*, const char *URL, _trt__GetVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfiguration(struct soap*, const char *URL, _trt__GetVideoEncoderConfiguration*);
    soap_POST_recv__trt__GetVideoEncoderConfiguration(struct soap*, _trt__GetVideoEncoderConfiguration*);
    @endcode

  - <trt:GetVideoEncoderConfigurationResponse> @ref _trt__GetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationResponse*);
    soap_POST_recv__trt__GetVideoEncoderConfigurationResponse(struct soap*, _trt__GetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:GetAudioSourceConfiguration> @ref _trt__GetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfiguration(struct soap*, const char *URL, _trt__GetAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfiguration(struct soap*, const char *URL, _trt__GetAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfiguration(struct soap*, const char *URL, _trt__GetAudioSourceConfiguration*);
    soap_POST_recv__trt__GetAudioSourceConfiguration(struct soap*, _trt__GetAudioSourceConfiguration*);
    @endcode

  - <trt:GetAudioSourceConfigurationResponse> @ref _trt__GetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationResponse*);
    soap_POST_recv__trt__GetAudioSourceConfigurationResponse(struct soap*, _trt__GetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:GetAudioEncoderConfiguration> @ref _trt__GetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfiguration(struct soap*, const char *URL, _trt__GetAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfiguration(struct soap*, const char *URL, _trt__GetAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfiguration(struct soap*, const char *URL, _trt__GetAudioEncoderConfiguration*);
    soap_POST_recv__trt__GetAudioEncoderConfiguration(struct soap*, _trt__GetAudioEncoderConfiguration*);
    @endcode

  - <trt:GetAudioEncoderConfigurationResponse> @ref _trt__GetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationResponse*);
    soap_POST_recv__trt__GetAudioEncoderConfigurationResponse(struct soap*, _trt__GetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoAnalyticsConfiguration> @ref _trt__GetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfiguration*);
    soap_POST_recv__trt__GetVideoAnalyticsConfiguration(struct soap*, _trt__GetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:GetVideoAnalyticsConfigurationResponse> @ref _trt__GetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__GetVideoAnalyticsConfigurationResponse*);
    soap_POST_recv__trt__GetVideoAnalyticsConfigurationResponse(struct soap*, _trt__GetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:GetMetadataConfiguration> @ref _trt__GetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfiguration(struct soap*, const char *URL, _trt__GetMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfiguration(struct soap*, const char *URL, _trt__GetMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfiguration(struct soap*, const char *URL, _trt__GetMetadataConfiguration*);
    soap_POST_recv__trt__GetMetadataConfiguration(struct soap*, _trt__GetMetadataConfiguration*);
    @endcode

  - <trt:GetMetadataConfigurationResponse> @ref _trt__GetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurationResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurationResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurationResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationResponse*);
    soap_POST_recv__trt__GetMetadataConfigurationResponse(struct soap*, _trt__GetMetadataConfigurationResponse*);
    @endcode

  - <trt:GetAudioOutputConfiguration> @ref _trt__GetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfiguration(struct soap*, const char *URL, _trt__GetAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfiguration(struct soap*, const char *URL, _trt__GetAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfiguration(struct soap*, const char *URL, _trt__GetAudioOutputConfiguration*);
    soap_POST_recv__trt__GetAudioOutputConfiguration(struct soap*, _trt__GetAudioOutputConfiguration*);
    @endcode

  - <trt:GetAudioOutputConfigurationResponse> @ref _trt__GetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationResponse*);
    soap_POST_recv__trt__GetAudioOutputConfigurationResponse(struct soap*, _trt__GetAudioOutputConfigurationResponse*);
    @endcode

  - <trt:GetAudioDecoderConfiguration> @ref _trt__GetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfiguration(struct soap*, const char *URL, _trt__GetAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfiguration(struct soap*, const char *URL, _trt__GetAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfiguration(struct soap*, const char *URL, _trt__GetAudioDecoderConfiguration*);
    soap_POST_recv__trt__GetAudioDecoderConfiguration(struct soap*, _trt__GetAudioDecoderConfiguration*);
    @endcode

  - <trt:GetAudioDecoderConfigurationResponse> @ref _trt__GetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationResponse*);
    soap_POST_recv__trt__GetAudioDecoderConfigurationResponse(struct soap*, _trt__GetAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurations> @ref _trt__GetCompatibleVideoEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoEncoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoEncoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoEncoderConfigurations*);
    soap_POST_recv__trt__GetCompatibleVideoEncoderConfigurations(struct soap*, _trt__GetCompatibleVideoEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoEncoderConfigurationsResponse> @ref _trt__GetCompatibleVideoEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleVideoEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurations> @ref _trt__GetCompatibleVideoSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoSourceConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoSourceConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoSourceConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoSourceConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoSourceConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoSourceConfigurations*);
    soap_POST_recv__trt__GetCompatibleVideoSourceConfigurations(struct soap*, _trt__GetCompatibleVideoSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoSourceConfigurationsResponse> @ref _trt__GetCompatibleVideoSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleVideoSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurations> @ref _trt__GetCompatibleAudioEncoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioEncoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioEncoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioEncoderConfigurations*);
    soap_POST_recv__trt__GetCompatibleAudioEncoderConfigurations(struct soap*, _trt__GetCompatibleAudioEncoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioEncoderConfigurationsResponse> @ref _trt__GetCompatibleAudioEncoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleAudioEncoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioEncoderConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurations> @ref _trt__GetCompatibleAudioSourceConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioSourceConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioSourceConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioSourceConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioSourceConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioSourceConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioSourceConfigurations*);
    soap_POST_recv__trt__GetCompatibleAudioSourceConfigurations(struct soap*, _trt__GetCompatibleAudioSourceConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioSourceConfigurationsResponse> @ref _trt__GetCompatibleAudioSourceConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleAudioSourceConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioSourceConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurations> @ref _trt__GetCompatibleVideoAnalyticsConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, const char *URL, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    soap_POST_recv__trt__GetCompatibleVideoAnalyticsConfigurations(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurations*);
    @endcode

  - <trt:GetCompatibleVideoAnalyticsConfigurationsResponse> @ref _trt__GetCompatibleVideoAnalyticsConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleVideoAnalyticsConfigurationsResponse(struct soap*, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurations> @ref _trt__GetCompatibleMetadataConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleMetadataConfigurations(struct soap*, const char *URL, _trt__GetCompatibleMetadataConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleMetadataConfigurations(struct soap*, const char *URL, _trt__GetCompatibleMetadataConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleMetadataConfigurations(struct soap*, const char *URL, _trt__GetCompatibleMetadataConfigurations*);
    soap_POST_recv__trt__GetCompatibleMetadataConfigurations(struct soap*, _trt__GetCompatibleMetadataConfigurations*);
    @endcode

  - <trt:GetCompatibleMetadataConfigurationsResponse> @ref _trt__GetCompatibleMetadataConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleMetadataConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleMetadataConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleMetadataConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleMetadataConfigurationsResponse(struct soap*, _trt__GetCompatibleMetadataConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioOutputConfigurations> @ref _trt__GetCompatibleAudioOutputConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioOutputConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioOutputConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioOutputConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioOutputConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioOutputConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioOutputConfigurations*);
    soap_POST_recv__trt__GetCompatibleAudioOutputConfigurations(struct soap*, _trt__GetCompatibleAudioOutputConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioOutputConfigurationsResponse> @ref _trt__GetCompatibleAudioOutputConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleAudioOutputConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioOutputConfigurationsResponse*);
    @endcode

  - <trt:GetCompatibleAudioDecoderConfigurations> @ref _trt__GetCompatibleAudioDecoderConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioDecoderConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioDecoderConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, const char *URL, _trt__GetCompatibleAudioDecoderConfigurations*);
    soap_POST_recv__trt__GetCompatibleAudioDecoderConfigurations(struct soap*, _trt__GetCompatibleAudioDecoderConfigurations*);
    @endcode

  - <trt:GetCompatibleAudioDecoderConfigurationsResponse> @ref _trt__GetCompatibleAudioDecoderConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, const char *URL, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    soap_POST_recv__trt__GetCompatibleAudioDecoderConfigurationsResponse(struct soap*, _trt__GetCompatibleAudioDecoderConfigurationsResponse*);
    @endcode

  - <trt:SetVideoEncoderConfiguration> @ref _trt__SetVideoEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoEncoderConfiguration(struct soap*, const char *URL, _trt__SetVideoEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoEncoderConfiguration(struct soap*, const char *URL, _trt__SetVideoEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoEncoderConfiguration(struct soap*, const char *URL, _trt__SetVideoEncoderConfiguration*);
    soap_POST_recv__trt__SetVideoEncoderConfiguration(struct soap*, _trt__SetVideoEncoderConfiguration*);
    @endcode

  - <trt:SetVideoEncoderConfigurationResponse> @ref _trt__SetVideoEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoEncoderConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoEncoderConfigurationResponse*);
    soap_POST_recv__trt__SetVideoEncoderConfigurationResponse(struct soap*, _trt__SetVideoEncoderConfigurationResponse*);
    @endcode

  - <trt:SetVideoSourceConfiguration> @ref _trt__SetVideoSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoSourceConfiguration(struct soap*, const char *URL, _trt__SetVideoSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoSourceConfiguration(struct soap*, const char *URL, _trt__SetVideoSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoSourceConfiguration(struct soap*, const char *URL, _trt__SetVideoSourceConfiguration*);
    soap_POST_recv__trt__SetVideoSourceConfiguration(struct soap*, _trt__SetVideoSourceConfiguration*);
    @endcode

  - <trt:SetVideoSourceConfigurationResponse> @ref _trt__SetVideoSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoSourceConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoSourceConfigurationResponse*);
    soap_POST_recv__trt__SetVideoSourceConfigurationResponse(struct soap*, _trt__SetVideoSourceConfigurationResponse*);
    @endcode

  - <trt:SetAudioEncoderConfiguration> @ref _trt__SetAudioEncoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioEncoderConfiguration(struct soap*, const char *URL, _trt__SetAudioEncoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioEncoderConfiguration(struct soap*, const char *URL, _trt__SetAudioEncoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioEncoderConfiguration(struct soap*, const char *URL, _trt__SetAudioEncoderConfiguration*);
    soap_POST_recv__trt__SetAudioEncoderConfiguration(struct soap*, _trt__SetAudioEncoderConfiguration*);
    @endcode

  - <trt:SetAudioEncoderConfigurationResponse> @ref _trt__SetAudioEncoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioEncoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioEncoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioEncoderConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioEncoderConfigurationResponse*);
    soap_POST_recv__trt__SetAudioEncoderConfigurationResponse(struct soap*, _trt__SetAudioEncoderConfigurationResponse*);
    @endcode

  - <trt:SetAudioSourceConfiguration> @ref _trt__SetAudioSourceConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioSourceConfiguration(struct soap*, const char *URL, _trt__SetAudioSourceConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioSourceConfiguration(struct soap*, const char *URL, _trt__SetAudioSourceConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioSourceConfiguration(struct soap*, const char *URL, _trt__SetAudioSourceConfiguration*);
    soap_POST_recv__trt__SetAudioSourceConfiguration(struct soap*, _trt__SetAudioSourceConfiguration*);
    @endcode

  - <trt:SetAudioSourceConfigurationResponse> @ref _trt__SetAudioSourceConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioSourceConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioSourceConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioSourceConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioSourceConfigurationResponse*);
    soap_POST_recv__trt__SetAudioSourceConfigurationResponse(struct soap*, _trt__SetAudioSourceConfigurationResponse*);
    @endcode

  - <trt:SetVideoAnalyticsConfiguration> @ref _trt__SetVideoAnalyticsConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__SetVideoAnalyticsConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__SetVideoAnalyticsConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoAnalyticsConfiguration(struct soap*, const char *URL, _trt__SetVideoAnalyticsConfiguration*);
    soap_POST_recv__trt__SetVideoAnalyticsConfiguration(struct soap*, _trt__SetVideoAnalyticsConfiguration*);
    @endcode

  - <trt:SetVideoAnalyticsConfigurationResponse> @ref _trt__SetVideoAnalyticsConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoAnalyticsConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoAnalyticsConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, const char *URL, _trt__SetVideoAnalyticsConfigurationResponse*);
    soap_POST_recv__trt__SetVideoAnalyticsConfigurationResponse(struct soap*, _trt__SetVideoAnalyticsConfigurationResponse*);
    @endcode

  - <trt:SetMetadataConfiguration> @ref _trt__SetMetadataConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetMetadataConfiguration(struct soap*, const char *URL, _trt__SetMetadataConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetMetadataConfiguration(struct soap*, const char *URL, _trt__SetMetadataConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetMetadataConfiguration(struct soap*, const char *URL, _trt__SetMetadataConfiguration*);
    soap_POST_recv__trt__SetMetadataConfiguration(struct soap*, _trt__SetMetadataConfiguration*);
    @endcode

  - <trt:SetMetadataConfigurationResponse> @ref _trt__SetMetadataConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetMetadataConfigurationResponse(struct soap*, const char *URL, _trt__SetMetadataConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetMetadataConfigurationResponse(struct soap*, const char *URL, _trt__SetMetadataConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetMetadataConfigurationResponse(struct soap*, const char *URL, _trt__SetMetadataConfigurationResponse*);
    soap_POST_recv__trt__SetMetadataConfigurationResponse(struct soap*, _trt__SetMetadataConfigurationResponse*);
    @endcode

  - <trt:SetAudioOutputConfiguration> @ref _trt__SetAudioOutputConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioOutputConfiguration(struct soap*, const char *URL, _trt__SetAudioOutputConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioOutputConfiguration(struct soap*, const char *URL, _trt__SetAudioOutputConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioOutputConfiguration(struct soap*, const char *URL, _trt__SetAudioOutputConfiguration*);
    soap_POST_recv__trt__SetAudioOutputConfiguration(struct soap*, _trt__SetAudioOutputConfiguration*);
    @endcode

  - <trt:SetAudioOutputConfigurationResponse> @ref _trt__SetAudioOutputConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioOutputConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioOutputConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioOutputConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioOutputConfigurationResponse*);
    soap_POST_recv__trt__SetAudioOutputConfigurationResponse(struct soap*, _trt__SetAudioOutputConfigurationResponse*);
    @endcode

  - <trt:SetAudioDecoderConfiguration> @ref _trt__SetAudioDecoderConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioDecoderConfiguration(struct soap*, const char *URL, _trt__SetAudioDecoderConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioDecoderConfiguration(struct soap*, const char *URL, _trt__SetAudioDecoderConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioDecoderConfiguration(struct soap*, const char *URL, _trt__SetAudioDecoderConfiguration*);
    soap_POST_recv__trt__SetAudioDecoderConfiguration(struct soap*, _trt__SetAudioDecoderConfiguration*);
    @endcode

  - <trt:SetAudioDecoderConfigurationResponse> @ref _trt__SetAudioDecoderConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioDecoderConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioDecoderConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetAudioDecoderConfigurationResponse(struct soap*, const char *URL, _trt__SetAudioDecoderConfigurationResponse*);
    soap_POST_recv__trt__SetAudioDecoderConfigurationResponse(struct soap*, _trt__SetAudioDecoderConfigurationResponse*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptions> @ref _trt__GetVideoSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurationOptions(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationOptions*);
    soap_POST_recv__trt__GetVideoSourceConfigurationOptions(struct soap*, _trt__GetVideoSourceConfigurationOptions*);
    @endcode

  - <trt:GetVideoSourceConfigurationOptionsResponse> @ref _trt__GetVideoSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetVideoSourceConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetVideoSourceConfigurationOptionsResponse(struct soap*, _trt__GetVideoSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptions> @ref _trt__GetVideoEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurationOptions(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurationOptions(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurationOptions(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationOptions*);
    soap_POST_recv__trt__GetVideoEncoderConfigurationOptions(struct soap*, _trt__GetVideoEncoderConfigurationOptions*);
    @endcode

  - <trt:GetVideoEncoderConfigurationOptionsResponse> @ref _trt__GetVideoEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetVideoEncoderConfigurationOptionsResponse(struct soap*, _trt__GetVideoEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptions> @ref _trt__GetAudioSourceConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationOptions*);
    soap_POST_recv__trt__GetAudioSourceConfigurationOptions(struct soap*, _trt__GetAudioSourceConfigurationOptions*);
    @endcode

  - <trt:GetAudioSourceConfigurationOptionsResponse> @ref _trt__GetAudioSourceConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioSourceConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetAudioSourceConfigurationOptionsResponse(struct soap*, _trt__GetAudioSourceConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptions> @ref _trt__GetAudioEncoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationOptions*);
    soap_POST_recv__trt__GetAudioEncoderConfigurationOptions(struct soap*, _trt__GetAudioEncoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioEncoderConfigurationOptionsResponse> @ref _trt__GetAudioEncoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetAudioEncoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioEncoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetMetadataConfigurationOptions> @ref _trt__GetMetadataConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurationOptions(struct soap*, const char *URL, _trt__GetMetadataConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurationOptions(struct soap*, const char *URL, _trt__GetMetadataConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurationOptions(struct soap*, const char *URL, _trt__GetMetadataConfigurationOptions*);
    soap_POST_recv__trt__GetMetadataConfigurationOptions(struct soap*, _trt__GetMetadataConfigurationOptions*);
    @endcode

  - <trt:GetMetadataConfigurationOptionsResponse> @ref _trt__GetMetadataConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetMetadataConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetMetadataConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetMetadataConfigurationOptionsResponse(struct soap*, _trt__GetMetadataConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioOutputConfigurationOptions> @ref _trt__GetAudioOutputConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationOptions*);
    soap_POST_recv__trt__GetAudioOutputConfigurationOptions(struct soap*, _trt__GetAudioOutputConfigurationOptions*);
    @endcode

  - <trt:GetAudioOutputConfigurationOptionsResponse> @ref _trt__GetAudioOutputConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioOutputConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetAudioOutputConfigurationOptionsResponse(struct soap*, _trt__GetAudioOutputConfigurationOptionsResponse*);
    @endcode

  - <trt:GetAudioDecoderConfigurationOptions> @ref _trt__GetAudioDecoderConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurationOptions(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationOptions*);
    soap_POST_recv__trt__GetAudioDecoderConfigurationOptions(struct soap*, _trt__GetAudioDecoderConfigurationOptions*);
    @endcode

  - <trt:GetAudioDecoderConfigurationOptionsResponse> @ref _trt__GetAudioDecoderConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, const char *URL, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    soap_POST_recv__trt__GetAudioDecoderConfigurationOptionsResponse(struct soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstances> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstances
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, const char *URL, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, const char *URL, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, const char *URL, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    soap_POST_recv__trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*);
    @endcode

  - <trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse> @ref _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, const char *URL, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, const char *URL, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, const char *URL, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    soap_POST_recv__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(struct soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*);
    @endcode

  - <trt:GetStreamUri> @ref _trt__GetStreamUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetStreamUri(struct soap*, const char *URL, _trt__GetStreamUri*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetStreamUri(struct soap*, const char *URL, _trt__GetStreamUri*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetStreamUri(struct soap*, const char *URL, _trt__GetStreamUri*);
    soap_POST_recv__trt__GetStreamUri(struct soap*, _trt__GetStreamUri*);
    @endcode

  - <trt:GetStreamUriResponse> @ref _trt__GetStreamUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetStreamUriResponse(struct soap*, const char *URL, _trt__GetStreamUriResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetStreamUriResponse(struct soap*, const char *URL, _trt__GetStreamUriResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetStreamUriResponse(struct soap*, const char *URL, _trt__GetStreamUriResponse*);
    soap_POST_recv__trt__GetStreamUriResponse(struct soap*, _trt__GetStreamUriResponse*);
    @endcode

  - <trt:StartMulticastStreaming> @ref _trt__StartMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__StartMulticastStreaming(struct soap*, const char *URL, _trt__StartMulticastStreaming*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__StartMulticastStreaming(struct soap*, const char *URL, _trt__StartMulticastStreaming*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__StartMulticastStreaming(struct soap*, const char *URL, _trt__StartMulticastStreaming*);
    soap_POST_recv__trt__StartMulticastStreaming(struct soap*, _trt__StartMulticastStreaming*);
    @endcode

  - <trt:StartMulticastStreamingResponse> @ref _trt__StartMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__StartMulticastStreamingResponse(struct soap*, const char *URL, _trt__StartMulticastStreamingResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__StartMulticastStreamingResponse(struct soap*, const char *URL, _trt__StartMulticastStreamingResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__StartMulticastStreamingResponse(struct soap*, const char *URL, _trt__StartMulticastStreamingResponse*);
    soap_POST_recv__trt__StartMulticastStreamingResponse(struct soap*, _trt__StartMulticastStreamingResponse*);
    @endcode

  - <trt:StopMulticastStreaming> @ref _trt__StopMulticastStreaming
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__StopMulticastStreaming(struct soap*, const char *URL, _trt__StopMulticastStreaming*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__StopMulticastStreaming(struct soap*, const char *URL, _trt__StopMulticastStreaming*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__StopMulticastStreaming(struct soap*, const char *URL, _trt__StopMulticastStreaming*);
    soap_POST_recv__trt__StopMulticastStreaming(struct soap*, _trt__StopMulticastStreaming*);
    @endcode

  - <trt:StopMulticastStreamingResponse> @ref _trt__StopMulticastStreamingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__StopMulticastStreamingResponse(struct soap*, const char *URL, _trt__StopMulticastStreamingResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__StopMulticastStreamingResponse(struct soap*, const char *URL, _trt__StopMulticastStreamingResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__StopMulticastStreamingResponse(struct soap*, const char *URL, _trt__StopMulticastStreamingResponse*);
    soap_POST_recv__trt__StopMulticastStreamingResponse(struct soap*, _trt__StopMulticastStreamingResponse*);
    @endcode

  - <trt:SetSynchronizationPoint> @ref _trt__SetSynchronizationPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetSynchronizationPoint(struct soap*, const char *URL, _trt__SetSynchronizationPoint*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetSynchronizationPoint(struct soap*, const char *URL, _trt__SetSynchronizationPoint*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetSynchronizationPoint(struct soap*, const char *URL, _trt__SetSynchronizationPoint*);
    soap_POST_recv__trt__SetSynchronizationPoint(struct soap*, _trt__SetSynchronizationPoint*);
    @endcode

  - <trt:SetSynchronizationPointResponse> @ref _trt__SetSynchronizationPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetSynchronizationPointResponse(struct soap*, const char *URL, _trt__SetSynchronizationPointResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetSynchronizationPointResponse(struct soap*, const char *URL, _trt__SetSynchronizationPointResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetSynchronizationPointResponse(struct soap*, const char *URL, _trt__SetSynchronizationPointResponse*);
    soap_POST_recv__trt__SetSynchronizationPointResponse(struct soap*, _trt__SetSynchronizationPointResponse*);
    @endcode

  - <trt:GetSnapshotUri> @ref _trt__GetSnapshotUri
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetSnapshotUri(struct soap*, const char *URL, _trt__GetSnapshotUri*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetSnapshotUri(struct soap*, const char *URL, _trt__GetSnapshotUri*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetSnapshotUri(struct soap*, const char *URL, _trt__GetSnapshotUri*);
    soap_POST_recv__trt__GetSnapshotUri(struct soap*, _trt__GetSnapshotUri*);
    @endcode

  - <trt:GetSnapshotUriResponse> @ref _trt__GetSnapshotUriResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetSnapshotUriResponse(struct soap*, const char *URL, _trt__GetSnapshotUriResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetSnapshotUriResponse(struct soap*, const char *URL, _trt__GetSnapshotUriResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetSnapshotUriResponse(struct soap*, const char *URL, _trt__GetSnapshotUriResponse*);
    soap_POST_recv__trt__GetSnapshotUriResponse(struct soap*, _trt__GetSnapshotUriResponse*);
    @endcode

  - <trt:GetVideoSourceModes> @ref _trt__GetVideoSourceModes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceModes(struct soap*, const char *URL, _trt__GetVideoSourceModes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceModes(struct soap*, const char *URL, _trt__GetVideoSourceModes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceModes(struct soap*, const char *URL, _trt__GetVideoSourceModes*);
    soap_POST_recv__trt__GetVideoSourceModes(struct soap*, _trt__GetVideoSourceModes*);
    @endcode

  - <trt:GetVideoSourceModesResponse> @ref _trt__GetVideoSourceModesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetVideoSourceModesResponse(struct soap*, const char *URL, _trt__GetVideoSourceModesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetVideoSourceModesResponse(struct soap*, const char *URL, _trt__GetVideoSourceModesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetVideoSourceModesResponse(struct soap*, const char *URL, _trt__GetVideoSourceModesResponse*);
    soap_POST_recv__trt__GetVideoSourceModesResponse(struct soap*, _trt__GetVideoSourceModesResponse*);
    @endcode

  - <trt:SetVideoSourceMode> @ref _trt__SetVideoSourceMode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoSourceMode(struct soap*, const char *URL, _trt__SetVideoSourceMode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoSourceMode(struct soap*, const char *URL, _trt__SetVideoSourceMode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoSourceMode(struct soap*, const char *URL, _trt__SetVideoSourceMode*);
    soap_POST_recv__trt__SetVideoSourceMode(struct soap*, _trt__SetVideoSourceMode*);
    @endcode

  - <trt:SetVideoSourceModeResponse> @ref _trt__SetVideoSourceModeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetVideoSourceModeResponse(struct soap*, const char *URL, _trt__SetVideoSourceModeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetVideoSourceModeResponse(struct soap*, const char *URL, _trt__SetVideoSourceModeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetVideoSourceModeResponse(struct soap*, const char *URL, _trt__SetVideoSourceModeResponse*);
    soap_POST_recv__trt__SetVideoSourceModeResponse(struct soap*, _trt__SetVideoSourceModeResponse*);
    @endcode

  - <trt:GetOSDs> @ref _trt__GetOSDs
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDs(struct soap*, _trt__GetOSDs*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDs(struct soap*, _trt__GetOSDs*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDs(struct soap*, const char *URL, _trt__GetOSDs*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDs(struct soap*, const char *URL, _trt__GetOSDs*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDs(struct soap*, const char *URL, _trt__GetOSDs*);
    soap_POST_recv__trt__GetOSDs(struct soap*, _trt__GetOSDs*);
    @endcode

  - <trt:GetOSDsResponse> @ref _trt__GetOSDsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDsResponse(struct soap*, const char *URL, _trt__GetOSDsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDsResponse(struct soap*, const char *URL, _trt__GetOSDsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDsResponse(struct soap*, const char *URL, _trt__GetOSDsResponse*);
    soap_POST_recv__trt__GetOSDsResponse(struct soap*, _trt__GetOSDsResponse*);
    @endcode

  - <trt:GetOSD> @ref _trt__GetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSD(struct soap*, _trt__GetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSD(struct soap*, _trt__GetOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSD(struct soap*, const char *URL, _trt__GetOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSD(struct soap*, const char *URL, _trt__GetOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSD(struct soap*, const char *URL, _trt__GetOSD*);
    soap_POST_recv__trt__GetOSD(struct soap*, _trt__GetOSD*);
    @endcode

  - <trt:GetOSDResponse> @ref _trt__GetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDResponse(struct soap*, const char *URL, _trt__GetOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDResponse(struct soap*, const char *URL, _trt__GetOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDResponse(struct soap*, const char *URL, _trt__GetOSDResponse*);
    soap_POST_recv__trt__GetOSDResponse(struct soap*, _trt__GetOSDResponse*);
    @endcode

  - <trt:SetOSD> @ref _trt__SetOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSD(struct soap*, _trt__SetOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSD(struct soap*, _trt__SetOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetOSD(struct soap*, const char *URL, _trt__SetOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetOSD(struct soap*, const char *URL, _trt__SetOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetOSD(struct soap*, const char *URL, _trt__SetOSD*);
    soap_POST_recv__trt__SetOSD(struct soap*, _trt__SetOSD*);
    @endcode

  - <trt:SetOSDResponse> @ref _trt__SetOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__SetOSDResponse(struct soap*, const char *URL, _trt__SetOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__SetOSDResponse(struct soap*, const char *URL, _trt__SetOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__SetOSDResponse(struct soap*, const char *URL, _trt__SetOSDResponse*);
    soap_POST_recv__trt__SetOSDResponse(struct soap*, _trt__SetOSDResponse*);
    @endcode

  - <trt:GetOSDOptions> @ref _trt__GetOSDOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDOptions(struct soap*, const char *URL, _trt__GetOSDOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDOptions(struct soap*, const char *URL, _trt__GetOSDOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDOptions(struct soap*, const char *URL, _trt__GetOSDOptions*);
    soap_POST_recv__trt__GetOSDOptions(struct soap*, _trt__GetOSDOptions*);
    @endcode

  - <trt:GetOSDOptionsResponse> @ref _trt__GetOSDOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__GetOSDOptionsResponse(struct soap*, const char *URL, _trt__GetOSDOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__GetOSDOptionsResponse(struct soap*, const char *URL, _trt__GetOSDOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__GetOSDOptionsResponse(struct soap*, const char *URL, _trt__GetOSDOptionsResponse*);
    soap_POST_recv__trt__GetOSDOptionsResponse(struct soap*, _trt__GetOSDOptionsResponse*);
    @endcode

  - <trt:CreateOSD> @ref _trt__CreateOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSD(struct soap*, _trt__CreateOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSD(struct soap*, _trt__CreateOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateOSD(struct soap*, const char *URL, _trt__CreateOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateOSD(struct soap*, const char *URL, _trt__CreateOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateOSD(struct soap*, const char *URL, _trt__CreateOSD*);
    soap_POST_recv__trt__CreateOSD(struct soap*, _trt__CreateOSD*);
    @endcode

  - <trt:CreateOSDResponse> @ref _trt__CreateOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__CreateOSDResponse(struct soap*, const char *URL, _trt__CreateOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__CreateOSDResponse(struct soap*, const char *URL, _trt__CreateOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__CreateOSDResponse(struct soap*, const char *URL, _trt__CreateOSDResponse*);
    soap_POST_recv__trt__CreateOSDResponse(struct soap*, _trt__CreateOSDResponse*);
    @endcode

  - <trt:DeleteOSD> @ref _trt__DeleteOSD
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSD(struct soap*, _trt__DeleteOSD*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSD(struct soap*, _trt__DeleteOSD*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteOSD(struct soap*, const char *URL, _trt__DeleteOSD*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteOSD(struct soap*, const char *URL, _trt__DeleteOSD*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteOSD(struct soap*, const char *URL, _trt__DeleteOSD*);
    soap_POST_recv__trt__DeleteOSD(struct soap*, _trt__DeleteOSD*);
    @endcode

  - <trt:DeleteOSDResponse> @ref _trt__DeleteOSDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__trt__DeleteOSDResponse(struct soap*, const char *URL, _trt__DeleteOSDResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__trt__DeleteOSDResponse(struct soap*, const char *URL, _trt__DeleteOSDResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__trt__DeleteOSDResponse(struct soap*, const char *URL, _trt__DeleteOSDResponse*);
    soap_POST_recv__trt__DeleteOSDResponse(struct soap*, _trt__DeleteOSDResponse*);
    @endcode

*/

/**

@section tptz Top-level root elements of schema "http://www.onvif.org/ver20/ptz/wsdl"

  - <tptz:GetServiceCapabilities> @ref _tptz__GetServiceCapabilities
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetServiceCapabilities(struct soap*, const char *URL, _tptz__GetServiceCapabilities*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetServiceCapabilities(struct soap*, const char *URL, _tptz__GetServiceCapabilities*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetServiceCapabilities(struct soap*, const char *URL, _tptz__GetServiceCapabilities*);
    soap_POST_recv__tptz__GetServiceCapabilities(struct soap*, _tptz__GetServiceCapabilities*);
    @endcode

  - <tptz:GetServiceCapabilitiesResponse> @ref _tptz__GetServiceCapabilitiesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tptz__GetServiceCapabilitiesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tptz__GetServiceCapabilitiesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetServiceCapabilitiesResponse(struct soap*, const char *URL, _tptz__GetServiceCapabilitiesResponse*);
    soap_POST_recv__tptz__GetServiceCapabilitiesResponse(struct soap*, _tptz__GetServiceCapabilitiesResponse*);
    @endcode

  - <tptz:Capabilities> (use wsdl2h option -g to auto-generate type _tptz__Capabilities)

  - <tptz:GetNodes> @ref _tptz__GetNodes
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodes(struct soap*, const char *URL, _tptz__GetNodes*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodes(struct soap*, const char *URL, _tptz__GetNodes*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodes(struct soap*, const char *URL, _tptz__GetNodes*);
    soap_POST_recv__tptz__GetNodes(struct soap*, _tptz__GetNodes*);
    @endcode

  - <tptz:GetNodesResponse> @ref _tptz__GetNodesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodesResponse(struct soap*, const char *URL, _tptz__GetNodesResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodesResponse(struct soap*, const char *URL, _tptz__GetNodesResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodesResponse(struct soap*, const char *URL, _tptz__GetNodesResponse*);
    soap_POST_recv__tptz__GetNodesResponse(struct soap*, _tptz__GetNodesResponse*);
    @endcode

  - <tptz:GetNode> @ref _tptz__GetNode
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNode(struct soap*, _tptz__GetNode*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNode(struct soap*, _tptz__GetNode*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNode(struct soap*, const char *URL, _tptz__GetNode*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNode(struct soap*, const char *URL, _tptz__GetNode*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNode(struct soap*, const char *URL, _tptz__GetNode*);
    soap_POST_recv__tptz__GetNode(struct soap*, _tptz__GetNode*);
    @endcode

  - <tptz:GetNodeResponse> @ref _tptz__GetNodeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetNodeResponse(struct soap*, const char *URL, _tptz__GetNodeResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetNodeResponse(struct soap*, const char *URL, _tptz__GetNodeResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetNodeResponse(struct soap*, const char *URL, _tptz__GetNodeResponse*);
    soap_POST_recv__tptz__GetNodeResponse(struct soap*, _tptz__GetNodeResponse*);
    @endcode

  - <tptz:GetConfigurations> @ref _tptz__GetConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurations(struct soap*, const char *URL, _tptz__GetConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurations(struct soap*, const char *URL, _tptz__GetConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurations(struct soap*, const char *URL, _tptz__GetConfigurations*);
    soap_POST_recv__tptz__GetConfigurations(struct soap*, _tptz__GetConfigurations*);
    @endcode

  - <tptz:GetConfigurationsResponse> @ref _tptz__GetConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationsResponse(struct soap*, const char *URL, _tptz__GetConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationsResponse(struct soap*, const char *URL, _tptz__GetConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationsResponse(struct soap*, const char *URL, _tptz__GetConfigurationsResponse*);
    soap_POST_recv__tptz__GetConfigurationsResponse(struct soap*, _tptz__GetConfigurationsResponse*);
    @endcode

  - <tptz:GetConfiguration> @ref _tptz__GetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfiguration(struct soap*, const char *URL, _tptz__GetConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfiguration(struct soap*, const char *URL, _tptz__GetConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfiguration(struct soap*, const char *URL, _tptz__GetConfiguration*);
    soap_POST_recv__tptz__GetConfiguration(struct soap*, _tptz__GetConfiguration*);
    @endcode

  - <tptz:GetConfigurationResponse> @ref _tptz__GetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationResponse(struct soap*, const char *URL, _tptz__GetConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationResponse(struct soap*, const char *URL, _tptz__GetConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationResponse(struct soap*, const char *URL, _tptz__GetConfigurationResponse*);
    soap_POST_recv__tptz__GetConfigurationResponse(struct soap*, _tptz__GetConfigurationResponse*);
    @endcode

  - <tptz:SetConfiguration> @ref _tptz__SetConfiguration
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetConfiguration(struct soap*, const char *URL, _tptz__SetConfiguration*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetConfiguration(struct soap*, const char *URL, _tptz__SetConfiguration*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetConfiguration(struct soap*, const char *URL, _tptz__SetConfiguration*);
    soap_POST_recv__tptz__SetConfiguration(struct soap*, _tptz__SetConfiguration*);
    @endcode

  - <tptz:SetConfigurationResponse> @ref _tptz__SetConfigurationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetConfigurationResponse(struct soap*, const char *URL, _tptz__SetConfigurationResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetConfigurationResponse(struct soap*, const char *URL, _tptz__SetConfigurationResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetConfigurationResponse(struct soap*, const char *URL, _tptz__SetConfigurationResponse*);
    soap_POST_recv__tptz__SetConfigurationResponse(struct soap*, _tptz__SetConfigurationResponse*);
    @endcode

  - <tptz:GetConfigurationOptions> @ref _tptz__GetConfigurationOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationOptions(struct soap*, const char *URL, _tptz__GetConfigurationOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationOptions(struct soap*, const char *URL, _tptz__GetConfigurationOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationOptions(struct soap*, const char *URL, _tptz__GetConfigurationOptions*);
    soap_POST_recv__tptz__GetConfigurationOptions(struct soap*, _tptz__GetConfigurationOptions*);
    @endcode

  - <tptz:GetConfigurationOptionsResponse> @ref _tptz__GetConfigurationOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, _tptz__GetConfigurationOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, _tptz__GetConfigurationOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetConfigurationOptionsResponse(struct soap*, const char *URL, _tptz__GetConfigurationOptionsResponse*);
    soap_POST_recv__tptz__GetConfigurationOptionsResponse(struct soap*, _tptz__GetConfigurationOptionsResponse*);
    @endcode

  - <tptz:SendAuxiliaryCommand> @ref _tptz__SendAuxiliaryCommand
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, _tptz__SendAuxiliaryCommand*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, _tptz__SendAuxiliaryCommand*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SendAuxiliaryCommand(struct soap*, const char *URL, _tptz__SendAuxiliaryCommand*);
    soap_POST_recv__tptz__SendAuxiliaryCommand(struct soap*, _tptz__SendAuxiliaryCommand*);
    @endcode

  - <tptz:SendAuxiliaryCommandResponse> @ref _tptz__SendAuxiliaryCommandResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tptz__SendAuxiliaryCommandResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tptz__SendAuxiliaryCommandResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SendAuxiliaryCommandResponse(struct soap*, const char *URL, _tptz__SendAuxiliaryCommandResponse*);
    soap_POST_recv__tptz__SendAuxiliaryCommandResponse(struct soap*, _tptz__SendAuxiliaryCommandResponse*);
    @endcode

  - <tptz:GetPresets> @ref _tptz__GetPresets
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresets(struct soap*, const char *URL, _tptz__GetPresets*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresets(struct soap*, const char *URL, _tptz__GetPresets*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresets(struct soap*, const char *URL, _tptz__GetPresets*);
    soap_POST_recv__tptz__GetPresets(struct soap*, _tptz__GetPresets*);
    @endcode

  - <tptz:GetPresetsResponse> @ref _tptz__GetPresetsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetsResponse(struct soap*, const char *URL, _tptz__GetPresetsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetsResponse(struct soap*, const char *URL, _tptz__GetPresetsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetsResponse(struct soap*, const char *URL, _tptz__GetPresetsResponse*);
    soap_POST_recv__tptz__GetPresetsResponse(struct soap*, _tptz__GetPresetsResponse*);
    @endcode

  - <tptz:SetPreset> @ref _tptz__SetPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetPreset(struct soap*, const char *URL, _tptz__SetPreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetPreset(struct soap*, const char *URL, _tptz__SetPreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetPreset(struct soap*, const char *URL, _tptz__SetPreset*);
    soap_POST_recv__tptz__SetPreset(struct soap*, _tptz__SetPreset*);
    @endcode

  - <tptz:SetPresetResponse> @ref _tptz__SetPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetPresetResponse(struct soap*, const char *URL, _tptz__SetPresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetPresetResponse(struct soap*, const char *URL, _tptz__SetPresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetPresetResponse(struct soap*, const char *URL, _tptz__SetPresetResponse*);
    soap_POST_recv__tptz__SetPresetResponse(struct soap*, _tptz__SetPresetResponse*);
    @endcode

  - <tptz:RemovePreset> @ref _tptz__RemovePreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePreset(struct soap*, const char *URL, _tptz__RemovePreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePreset(struct soap*, const char *URL, _tptz__RemovePreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePreset(struct soap*, const char *URL, _tptz__RemovePreset*);
    soap_POST_recv__tptz__RemovePreset(struct soap*, _tptz__RemovePreset*);
    @endcode

  - <tptz:RemovePresetResponse> @ref _tptz__RemovePresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetResponse(struct soap*, const char *URL, _tptz__RemovePresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetResponse(struct soap*, const char *URL, _tptz__RemovePresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetResponse(struct soap*, const char *URL, _tptz__RemovePresetResponse*);
    soap_POST_recv__tptz__RemovePresetResponse(struct soap*, _tptz__RemovePresetResponse*);
    @endcode

  - <tptz:GotoPreset> @ref _tptz__GotoPreset
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoPreset(struct soap*, const char *URL, _tptz__GotoPreset*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoPreset(struct soap*, const char *URL, _tptz__GotoPreset*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoPreset(struct soap*, const char *URL, _tptz__GotoPreset*);
    soap_POST_recv__tptz__GotoPreset(struct soap*, _tptz__GotoPreset*);
    @endcode

  - <tptz:GotoPresetResponse> @ref _tptz__GotoPresetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoPresetResponse(struct soap*, const char *URL, _tptz__GotoPresetResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoPresetResponse(struct soap*, const char *URL, _tptz__GotoPresetResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoPresetResponse(struct soap*, const char *URL, _tptz__GotoPresetResponse*);
    soap_POST_recv__tptz__GotoPresetResponse(struct soap*, _tptz__GotoPresetResponse*);
    @endcode

  - <tptz:GetStatus> @ref _tptz__GetStatus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetStatus(struct soap*, const char *URL, _tptz__GetStatus*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetStatus(struct soap*, const char *URL, _tptz__GetStatus*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetStatus(struct soap*, const char *URL, _tptz__GetStatus*);
    soap_POST_recv__tptz__GetStatus(struct soap*, _tptz__GetStatus*);
    @endcode

  - <tptz:GetStatusResponse> @ref _tptz__GetStatusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetStatusResponse(struct soap*, const char *URL, _tptz__GetStatusResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetStatusResponse(struct soap*, const char *URL, _tptz__GetStatusResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetStatusResponse(struct soap*, const char *URL, _tptz__GetStatusResponse*);
    soap_POST_recv__tptz__GetStatusResponse(struct soap*, _tptz__GetStatusResponse*);
    @endcode

  - <tptz:GotoHomePosition> @ref _tptz__GotoHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoHomePosition(struct soap*, const char *URL, _tptz__GotoHomePosition*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoHomePosition(struct soap*, const char *URL, _tptz__GotoHomePosition*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoHomePosition(struct soap*, const char *URL, _tptz__GotoHomePosition*);
    soap_POST_recv__tptz__GotoHomePosition(struct soap*, _tptz__GotoHomePosition*);
    @endcode

  - <tptz:GotoHomePositionResponse> @ref _tptz__GotoHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GotoHomePositionResponse(struct soap*, const char *URL, _tptz__GotoHomePositionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GotoHomePositionResponse(struct soap*, const char *URL, _tptz__GotoHomePositionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GotoHomePositionResponse(struct soap*, const char *URL, _tptz__GotoHomePositionResponse*);
    soap_POST_recv__tptz__GotoHomePositionResponse(struct soap*, _tptz__GotoHomePositionResponse*);
    @endcode

  - <tptz:SetHomePosition> @ref _tptz__SetHomePosition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetHomePosition(struct soap*, const char *URL, _tptz__SetHomePosition*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetHomePosition(struct soap*, const char *URL, _tptz__SetHomePosition*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetHomePosition(struct soap*, const char *URL, _tptz__SetHomePosition*);
    soap_POST_recv__tptz__SetHomePosition(struct soap*, _tptz__SetHomePosition*);
    @endcode

  - <tptz:SetHomePositionResponse> @ref _tptz__SetHomePositionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__SetHomePositionResponse(struct soap*, const char *URL, _tptz__SetHomePositionResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__SetHomePositionResponse(struct soap*, const char *URL, _tptz__SetHomePositionResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__SetHomePositionResponse(struct soap*, const char *URL, _tptz__SetHomePositionResponse*);
    soap_POST_recv__tptz__SetHomePositionResponse(struct soap*, _tptz__SetHomePositionResponse*);
    @endcode

  - <tptz:ContinuousMove> @ref _tptz__ContinuousMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ContinuousMove(struct soap*, const char *URL, _tptz__ContinuousMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ContinuousMove(struct soap*, const char *URL, _tptz__ContinuousMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ContinuousMove(struct soap*, const char *URL, _tptz__ContinuousMove*);
    soap_POST_recv__tptz__ContinuousMove(struct soap*, _tptz__ContinuousMove*);
    @endcode

  - <tptz:ContinuousMoveResponse> @ref _tptz__ContinuousMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ContinuousMoveResponse(struct soap*, const char *URL, _tptz__ContinuousMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ContinuousMoveResponse(struct soap*, const char *URL, _tptz__ContinuousMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ContinuousMoveResponse(struct soap*, const char *URL, _tptz__ContinuousMoveResponse*);
    soap_POST_recv__tptz__ContinuousMoveResponse(struct soap*, _tptz__ContinuousMoveResponse*);
    @endcode

  - <tptz:RelativeMove> @ref _tptz__RelativeMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RelativeMove(struct soap*, const char *URL, _tptz__RelativeMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RelativeMove(struct soap*, const char *URL, _tptz__RelativeMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RelativeMove(struct soap*, const char *URL, _tptz__RelativeMove*);
    soap_POST_recv__tptz__RelativeMove(struct soap*, _tptz__RelativeMove*);
    @endcode

  - <tptz:RelativeMoveResponse> @ref _tptz__RelativeMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RelativeMoveResponse(struct soap*, const char *URL, _tptz__RelativeMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RelativeMoveResponse(struct soap*, const char *URL, _tptz__RelativeMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RelativeMoveResponse(struct soap*, const char *URL, _tptz__RelativeMoveResponse*);
    soap_POST_recv__tptz__RelativeMoveResponse(struct soap*, _tptz__RelativeMoveResponse*);
    @endcode

  - <tptz:AbsoluteMove> @ref _tptz__AbsoluteMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__AbsoluteMove(struct soap*, const char *URL, _tptz__AbsoluteMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__AbsoluteMove(struct soap*, const char *URL, _tptz__AbsoluteMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__AbsoluteMove(struct soap*, const char *URL, _tptz__AbsoluteMove*);
    soap_POST_recv__tptz__AbsoluteMove(struct soap*, _tptz__AbsoluteMove*);
    @endcode

  - <tptz:AbsoluteMoveResponse> @ref _tptz__AbsoluteMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, _tptz__AbsoluteMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, _tptz__AbsoluteMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__AbsoluteMoveResponse(struct soap*, const char *URL, _tptz__AbsoluteMoveResponse*);
    soap_POST_recv__tptz__AbsoluteMoveResponse(struct soap*, _tptz__AbsoluteMoveResponse*);
    @endcode

  - <tptz:GeoMove> @ref _tptz__GeoMove
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GeoMove(struct soap*, _tptz__GeoMove*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GeoMove(struct soap*, _tptz__GeoMove*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GeoMove(struct soap*, const char *URL, _tptz__GeoMove*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GeoMove(struct soap*, const char *URL, _tptz__GeoMove*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GeoMove(struct soap*, const char *URL, _tptz__GeoMove*);
    soap_POST_recv__tptz__GeoMove(struct soap*, _tptz__GeoMove*);
    @endcode

  - <tptz:GeoMoveResponse> @ref _tptz__GeoMoveResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GeoMoveResponse(struct soap*, const char *URL, _tptz__GeoMoveResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GeoMoveResponse(struct soap*, const char *URL, _tptz__GeoMoveResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GeoMoveResponse(struct soap*, const char *URL, _tptz__GeoMoveResponse*);
    soap_POST_recv__tptz__GeoMoveResponse(struct soap*, _tptz__GeoMoveResponse*);
    @endcode

  - <tptz:Stop> @ref _tptz__Stop
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__Stop(struct soap*, _tptz__Stop*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__Stop(struct soap*, _tptz__Stop*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__Stop(struct soap*, const char *URL, _tptz__Stop*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__Stop(struct soap*, const char *URL, _tptz__Stop*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__Stop(struct soap*, const char *URL, _tptz__Stop*);
    soap_POST_recv__tptz__Stop(struct soap*, _tptz__Stop*);
    @endcode

  - <tptz:StopResponse> @ref _tptz__StopResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__StopResponse(struct soap*, const char *URL, _tptz__StopResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__StopResponse(struct soap*, const char *URL, _tptz__StopResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__StopResponse(struct soap*, const char *URL, _tptz__StopResponse*);
    soap_POST_recv__tptz__StopResponse(struct soap*, _tptz__StopResponse*);
    @endcode

  - <tptz:GetPresetTours> @ref _tptz__GetPresetTours
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTours(struct soap*, const char *URL, _tptz__GetPresetTours*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTours(struct soap*, const char *URL, _tptz__GetPresetTours*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTours(struct soap*, const char *URL, _tptz__GetPresetTours*);
    soap_POST_recv__tptz__GetPresetTours(struct soap*, _tptz__GetPresetTours*);
    @endcode

  - <tptz:GetPresetToursResponse> @ref _tptz__GetPresetToursResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetToursResponse(struct soap*, const char *URL, _tptz__GetPresetToursResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetToursResponse(struct soap*, const char *URL, _tptz__GetPresetToursResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetToursResponse(struct soap*, const char *URL, _tptz__GetPresetToursResponse*);
    soap_POST_recv__tptz__GetPresetToursResponse(struct soap*, _tptz__GetPresetToursResponse*);
    @endcode

  - <tptz:GetPresetTour> @ref _tptz__GetPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTour(struct soap*, const char *URL, _tptz__GetPresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTour(struct soap*, const char *URL, _tptz__GetPresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTour(struct soap*, const char *URL, _tptz__GetPresetTour*);
    soap_POST_recv__tptz__GetPresetTour(struct soap*, _tptz__GetPresetTour*);
    @endcode

  - <tptz:GetPresetTourResponse> @ref _tptz__GetPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourResponse(struct soap*, const char *URL, _tptz__GetPresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourResponse(struct soap*, const char *URL, _tptz__GetPresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourResponse(struct soap*, const char *URL, _tptz__GetPresetTourResponse*);
    soap_POST_recv__tptz__GetPresetTourResponse(struct soap*, _tptz__GetPresetTourResponse*);
    @endcode

  - <tptz:GetPresetTourOptions> @ref _tptz__GetPresetTourOptions
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourOptions(struct soap*, const char *URL, _tptz__GetPresetTourOptions*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourOptions(struct soap*, const char *URL, _tptz__GetPresetTourOptions*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourOptions(struct soap*, const char *URL, _tptz__GetPresetTourOptions*);
    soap_POST_recv__tptz__GetPresetTourOptions(struct soap*, _tptz__GetPresetTourOptions*);
    @endcode

  - <tptz:GetPresetTourOptionsResponse> @ref _tptz__GetPresetTourOptionsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, _tptz__GetPresetTourOptionsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, _tptz__GetPresetTourOptionsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetPresetTourOptionsResponse(struct soap*, const char *URL, _tptz__GetPresetTourOptionsResponse*);
    soap_POST_recv__tptz__GetPresetTourOptionsResponse(struct soap*, _tptz__GetPresetTourOptionsResponse*);
    @endcode

  - <tptz:CreatePresetTour> @ref _tptz__CreatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__CreatePresetTour(struct soap*, const char *URL, _tptz__CreatePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__CreatePresetTour(struct soap*, const char *URL, _tptz__CreatePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__CreatePresetTour(struct soap*, const char *URL, _tptz__CreatePresetTour*);
    soap_POST_recv__tptz__CreatePresetTour(struct soap*, _tptz__CreatePresetTour*);
    @endcode

  - <tptz:CreatePresetTourResponse> @ref _tptz__CreatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__CreatePresetTourResponse(struct soap*, const char *URL, _tptz__CreatePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__CreatePresetTourResponse(struct soap*, const char *URL, _tptz__CreatePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__CreatePresetTourResponse(struct soap*, const char *URL, _tptz__CreatePresetTourResponse*);
    soap_POST_recv__tptz__CreatePresetTourResponse(struct soap*, _tptz__CreatePresetTourResponse*);
    @endcode

  - <tptz:ModifyPresetTour> @ref _tptz__ModifyPresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ModifyPresetTour(struct soap*, const char *URL, _tptz__ModifyPresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ModifyPresetTour(struct soap*, const char *URL, _tptz__ModifyPresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ModifyPresetTour(struct soap*, const char *URL, _tptz__ModifyPresetTour*);
    soap_POST_recv__tptz__ModifyPresetTour(struct soap*, _tptz__ModifyPresetTour*);
    @endcode

  - <tptz:ModifyPresetTourResponse> @ref _tptz__ModifyPresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, _tptz__ModifyPresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, _tptz__ModifyPresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__ModifyPresetTourResponse(struct soap*, const char *URL, _tptz__ModifyPresetTourResponse*);
    soap_POST_recv__tptz__ModifyPresetTourResponse(struct soap*, _tptz__ModifyPresetTourResponse*);
    @endcode

  - <tptz:OperatePresetTour> @ref _tptz__OperatePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__OperatePresetTour(struct soap*, const char *URL, _tptz__OperatePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__OperatePresetTour(struct soap*, const char *URL, _tptz__OperatePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__OperatePresetTour(struct soap*, const char *URL, _tptz__OperatePresetTour*);
    soap_POST_recv__tptz__OperatePresetTour(struct soap*, _tptz__OperatePresetTour*);
    @endcode

  - <tptz:OperatePresetTourResponse> @ref _tptz__OperatePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__OperatePresetTourResponse(struct soap*, const char *URL, _tptz__OperatePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__OperatePresetTourResponse(struct soap*, const char *URL, _tptz__OperatePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__OperatePresetTourResponse(struct soap*, const char *URL, _tptz__OperatePresetTourResponse*);
    soap_POST_recv__tptz__OperatePresetTourResponse(struct soap*, _tptz__OperatePresetTourResponse*);
    @endcode

  - <tptz:RemovePresetTour> @ref _tptz__RemovePresetTour
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetTour(struct soap*, const char *URL, _tptz__RemovePresetTour*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetTour(struct soap*, const char *URL, _tptz__RemovePresetTour*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetTour(struct soap*, const char *URL, _tptz__RemovePresetTour*);
    soap_POST_recv__tptz__RemovePresetTour(struct soap*, _tptz__RemovePresetTour*);
    @endcode

  - <tptz:RemovePresetTourResponse> @ref _tptz__RemovePresetTourResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__RemovePresetTourResponse(struct soap*, const char *URL, _tptz__RemovePresetTourResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__RemovePresetTourResponse(struct soap*, const char *URL, _tptz__RemovePresetTourResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__RemovePresetTourResponse(struct soap*, const char *URL, _tptz__RemovePresetTourResponse*);
    soap_POST_recv__tptz__RemovePresetTourResponse(struct soap*, _tptz__RemovePresetTourResponse*);
    @endcode

  - <tptz:GetCompatibleConfigurations> @ref _tptz__GetCompatibleConfigurations
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, _tptz__GetCompatibleConfigurations*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, _tptz__GetCompatibleConfigurations*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetCompatibleConfigurations(struct soap*, const char *URL, _tptz__GetCompatibleConfigurations*);
    soap_POST_recv__tptz__GetCompatibleConfigurations(struct soap*, _tptz__GetCompatibleConfigurations*);
    @endcode

  - <tptz:GetCompatibleConfigurationsResponse> @ref _tptz__GetCompatibleConfigurationsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, _tptz__GetCompatibleConfigurationsResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, _tptz__GetCompatibleConfigurationsResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__GetCompatibleConfigurationsResponse(struct soap*, const char *URL, _tptz__GetCompatibleConfigurationsResponse*);
    soap_POST_recv__tptz__GetCompatibleConfigurationsResponse(struct soap*, _tptz__GetCompatibleConfigurationsResponse*);
    @endcode

  - <tptz:MoveAndStartTracking> @ref _tptz__MoveAndStartTracking
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__MoveAndStartTracking(struct soap*, _tptz__MoveAndStartTracking*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__MoveAndStartTracking(struct soap*, _tptz__MoveAndStartTracking*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__MoveAndStartTracking(struct soap*, const char *URL, _tptz__MoveAndStartTracking*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__MoveAndStartTracking(struct soap*, const char *URL, _tptz__MoveAndStartTracking*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__MoveAndStartTracking(struct soap*, const char *URL, _tptz__MoveAndStartTracking*);
    soap_POST_recv__tptz__MoveAndStartTracking(struct soap*, _tptz__MoveAndStartTracking*);
    @endcode

  - <tptz:MoveAndStartTrackingResponse> @ref _tptz__MoveAndStartTrackingResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tptz__MoveAndStartTrackingResponse(struct soap*, _tptz__MoveAndStartTrackingResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tptz__MoveAndStartTrackingResponse(struct soap*, _tptz__MoveAndStartTrackingResponse*);
    // REST GET (returns SOAP_OK on success):
    soap_GET__tptz__MoveAndStartTrackingResponse(struct soap*, const char *URL, _tptz__MoveAndStartTrackingResponse*);
    // REST PUT (returns SOAP_OK on success):
    soap_PUT__tptz__MoveAndStartTrackingResponse(struct soap*, const char *URL, _tptz__MoveAndStartTrackingResponse*);
    // REST POST (returns SOAP_OK on success):
    soap_POST_send__tptz__MoveAndStartTrackingResponse(struct soap*, const char *URL, _tptz__MoveAndStartTrackingResponse*);
    soap_POST_recv__tptz__MoveAndStartTrackingResponse(struct soap*, _tptz__MoveAndStartTrackingResponse*);
    @endcode

*/

/* End of onvif.h */
