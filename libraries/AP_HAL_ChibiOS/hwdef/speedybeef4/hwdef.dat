# hw definition file for SpeedyBee F4 hardware
# tested on the Speedybee F4 board
# with thanks to betaflight for pinout

# MCU class and specific type
MCU STM32F4xx STM32F405xx

# board ID for firmware load
APJ_BOARD_ID 134

# crystal frequency
OSCILLATOR_HZ 8000000
STM32_PLLM_VALUE 8

define STM32_ST_USE_TIMER 5
#define CH_CFG_ST_RESOLUTION 16

FLASH_SIZE_KB 1024

# board voltage
STM32_VDD 330U

# only one I2C bus
I2C_ORDER I2C1

# order of UARTs (and USB)
UART_ORDER OTG1 USART3 USART1 UART4 UART5

# LEDs
PB9 LED_BLUE OUTPUT LOW GPIO(0)
PA14 LED_GREEN OUTPUT LOW GPIO(1)

define HAL_GPIO_A_LED_PIN 0
define HAL_GPIO_B_LED_PIN 1

# buzzer
PC13 BUZZER OUTPUT GPIO(80) LOW
define HAL_BUZZER_PIN 80
define HAL_BUZZER_ON 1
define HAL_BUZZER_OFF 0

# spi1 bus for IMU
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

# spi2 for OSD
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2
PB10 MAX7456_CS CS

# spi3 for sdcard and onboard flash
PB3 SPI3_SCK SPI3
PB4 SPI3_MISO SPI3
PB5 SPI3_MOSI SPI3
PC0 FLASH_CS CS

PB11 MPU6000_CS CS

# only one I2C bus in normal config
PB6 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# analog pins
PC2 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC1 BATT_CURRENT_SENS ADC1 SCALE(1)
PC3 RSSI_ADC_PIN ADC1 SCALE(1)

# define default battery setup
define HAL_BATT_VOLT_PIN 12
define HAL_BATT_CURR_PIN 11
define HAL_BATT_VOLT_SCALE 11
define HAL_BATT_CURR_SCALE 30.2

#analog rssi pin (also could be used as analog airspeed input)
# PB1 - ADC12_CH9
define BOARD_RSSI_ANA_PIN 13

# USART1
PA9 USART1_TX USART1
PA10 USART1_RX USART1

# USART2 (RCIN)
#PA2 USART3_TX USART3
#PA3 USART3_RX USART3

# rcinput 
PA3 TIM9_CH2 TIM9 RCININT FLOAT LOW

# USART3
PC10 USART3_TX USART3
PC11 USART3_RX USART3

# UART4
PA0 UART4_TX UART4
PA1 UART4_RX UART4

# UART5
PD2  UART5_RX UART5
PC12 UART5_TX UART5

# PA10 IO-debug-console
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# USB detection
PB12 VBUS INPUT OPENDRAIN

# PWM out pins. Note that channel order follows the ArduPilot motor
# order conventions
PC6  TIM8_CH1 TIM8 PWM(1) GPIO(50)
PC7  TIM8_CH2 TIM8 PWM(2) GPIO(51)
PC8  TIM8_CH3 TIM8 PWM(3) GPIO(52)
PC9  TIM8_CH4 TIM8 PWM(4) GPIO(53)
PA15 TIM2_CH1 TIM2 PWM(5) GPIO(54)
PA8  TIM1_CH1 TIM1 PWM(6) GPIO(55)

define HAL_STORAGE_SIZE 15360
define STORAGE_FLASH_PAGE 2

# reserve 32k for bootloader and 32k for flash storage
FLASH_RESERVE_START_KB 64

define HAL_INS_DEFAULT HAL_INS_MPU60XX_SPI
define HAL_INS_DEFAULT_ROTATION ROTATION_YAW_270

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 1
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

define HAL_PROBE_EXTERNAL_I2C_BAROS
define HAL_BARO_ALLOW_INIT_NO_BARO
define HAL_BARO_DEFAULT HAL_BARO_BMP085
define HAL_BARO_BMP085_BUS 0
define HAL_BARO_BMP085_I2C_ADDR 0x77

# SPI devices
SPIDEV mpu6000   SPI1 DEVID1 MPU6000_CS MODE3 1*MHZ 8*MHZ 
SPIDEV osd       SPI2 DEVID1 MAX7456_CS MODE0 10*MHZ 10*MHZ
SPIDEV dataflash SPI3 DEVID1 FLASH_CS    MODE3 32*MHZ 32*MHZ

# enable logging to dataflash
define HAL_LOGGING_DATAFLASH


# 8 PWM available by default
define BOARD_PWM_COUNT_DEFAULT 8

# uncomment the lines below to enable strict API
# checking in ChibiOS
#define CH_DBG_ENABLE_ASSERTS TRUE
#define CH_DBG_ENABLE_CHECKS TRUE
#define CH_DBG_SYSTEM_STATE_CHECK TRUE
#define CH_DBG_ENABLE_STACK_CHECK TRUE

# setup for OSD
define OSD_ENABLED ENABLED
define HAL_OSD_TYPE_DEFAULT 1
ROMFS_WILDCARD libraries/AP_OSD/fonts/font*.bin
