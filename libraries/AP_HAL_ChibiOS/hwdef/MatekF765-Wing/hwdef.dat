# hw definition file for processing by chibios_pins.py
# for Matek F765-Wing

# MCU class and specific type
MCU STM32F7xx STM32F767xx

# board ID for firmware load
APJ_BOARD_ID 143

# crystal frequency, setup to use external oscillator
OSCILLATOR_HZ 8000000

define STM32_LSECLK   32768U
define STM32_LSEDRV   (3U << 3U)

define STM32_PLLSRC     STM32_PLLSRC_HSE
define STM32_PLLM_VALUE 8
define STM32_PLLN_VALUE 432
define STM32_PLLP_VALUE 2
define STM32_PLLQ_VALUE 9

FLASH_SIZE_KB 2048

# leave 2 sectors free
FLASH_RESERVE_START_KB 96

# board voltage
STM32_VDD 330U

STM32_ST_USE_TIMER 12
define CH_CFG_ST_RESOLUTION 16

# two I2C bus
I2C_ORDER I2C2 I2C1

# order of UARTs (and USB)
UART_ORDER OTG1 USART2 UART7 USART1 USART3 UART8 UART4

# tonealarm support
PB9 TIM11_CH1 TIM11 GPIO(32) ALARM

# PA10 IO-debug-console
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 for IMU1 (MPU6000)
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1
PC4 IMU1_CS CS

# SPI2 for MAX7456 OSD
PB12 MAX7456_CS CS
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2

# SPI3 for IMU2 (ICM20602)
PB3 SPI3_SCK SPI3
PB4 SPI3_MISO SPI3
PB5 SPI3_MOSI SPI3
PD7 IMU2_CS CS

# SPI4
PE11 SPARE_CS CS
PE12 SPI4_SCK SPI4
PE13 SPI4_MISO SPI4
PE14 SPI4_MOSI SPI4

# I2C1
PB6 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# I2C2
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

PC2 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC3 BATT_CURRENT_SENS ADC1 SCALE(1)

PA4 BATT_VOLTAGE_SENS2 ADC1 SCALE(1) # analog pin4
PC5 BATT_CURRENT_SENS2 ADC1 SCALE(1) # analog pin15

PC0 PRESSURE_SENS ADC1 SCALE(2)
define HAL_DEFAULT_AIRSPEED_PIN 10

# define default battery setup
define HAL_BATT_VOLT_PIN 12
define HAL_BATT_CURR_PIN 13
define HAL_BATT_VOLT_SCALE 10.1
define HAL_BATT_CURR_SCALE 17.0

# analog RSSI
PC1 RSSI_ADC ADC1
define BOARD_RSSI_ANA_PIN 11

PD10 LED0 OUTPUT LOW GPIO(90) # blue
PD11 LED1 OUTPUT LOW GPIO(91) # green
define HAL_GPIO_A_LED_PIN 91
define HAL_GPIO_B_LED_PIN 90
define HAL_GPIO_LED_OFF 1

# USART1 (telem2)
PA10 USART1_RX USART1
PA9  USART1_TX USART1

# USART2 (GPS1)
PD5 USART2_TX USART2 NODMA
PD6 USART2_RX USART2 NODMA

# USART3 (GPS2)
PD9 USART3_RX USART3 NODMA
PD8 USART3_TX USART3 NODMA

# UART4 (disable if used for CAN)
PD1 UART4_TX UART4 NODMA
PD0 UART4_RX UART4 NODMA

# UART5 (RX only, for ESC telem), disabled for now until we add uartH support
# PB8 UART5_RX UART5 NODMA

# USART6 (RC input)
PC7 TIM3_CH2 TIM3 RCININT FLOAT LOW
PC6 USART6_TX USART6 NODMA LOW

# UART7 (telem1)
PE7 UART7_RX UART7
PE8 UART7_TX UART7
PE10 UART7_CTS UART7
PE9  UART7_RTS UART7

# UART8 (spare)
PE0 UART8_RX UART8 NODMA
PE1 UART8_TX UART8 NODMA

# CAN bus (disabled as used for UART4)
#PD1 CAN1_TX CAN1
#PD0 CAN1_RX CAN1

# Motors
PA0 TIM2_CH1 TIM2 PWM(1) GPIO(50)
PA1 TIM2_CH2 TIM2 PWM(2) GPIO(51)
PA2 TIM5_CH3 TIM5 PWM(3) GPIO(52)
PA3 TIM5_CH4 TIM5 PWM(4) GPIO(53)
PB0 TIM8_CH2N TIM8 PWM(5) GPIO(54)
PB1 TIM8_CH3N TIM8 PWM(6) GPIO(55)
PD12 TIM4_CH1 TIM4 PWM(7) GPIO(56)
PD13 TIM4_CH2 TIM4 PWM(8) GPIO(57)
PD14 TIM4_CH3 TIM4 PWM(9) GPIO(58)
PD15 TIM4_CH4 TIM4 PWM(10) GPIO(59)
PE5 TIM9_CH1 TIM9 PWM(11) GPIO(60) NODMA
PE6 TIM9_CH2 TIM9 PWM(12) GPIO(61) NODMA
PA8 TIM1_CH1 TIM1 PWM(13) GPIO(62) # for WS2812 LED

# microSD support
PC8 SDMMC_D0 SDMMC1
PC9 SDMMC_D1 SDMMC1
PC10 SDMMC_D2 SDMMC1
PC11 SDMMC_D3 SDMMC1
PC12 SDMMC_CK SDMMC1
PD2 SDMMC_CMD SDMMC1

# GPIOs
PE4  PINIO1 OUTPUT GPIO(81) LOW
PE15 PINIO2 OUTPUT GPIO(82) LOW

DMA_PRIORITY S*

define HAL_STORAGE_SIZE 16384
define STORAGE_FLASH_PAGE 1

# spi devices
SPIDEV mpu6000  SPI1 DEVID1 IMU1_CS MODE3  1*MHZ  4*MHZ
SPIDEV icm20602 SPI3 DEVID1 IMU2_CS MODE3  1*MHZ  4*MHZ
SPIDEV osd      SPI2 DEVID4 MAX7456_CS  MODE0 10*MHZ 10*MHZ

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 1
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# two IMUs. We put icm20602 first as we can sample accel at 4kHz
IMU Invensense SPI:icm20602 ROTATION_PITCH_180
IMU Invensense SPI:mpu6000 ROTATION_ROLL_180
define HAL_DEFAULT_INS_FAST_SAMPLE 1

# one BARO, multiple possible choices for different
# board varients
BARO BMP280 I2C:0:0x76
BARO BMP388 I2C:0:0x76
BARO MS56XX I2C:0:0x77

define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# setup for OSD
define OSD_ENABLED ENABLED
define HAL_OSD_TYPE_DEFAULT 1
ROMFS_WILDCARD libraries/AP_OSD/fonts/font*.bin

define BOARD_PWM_COUNT_DEFAULT 13


