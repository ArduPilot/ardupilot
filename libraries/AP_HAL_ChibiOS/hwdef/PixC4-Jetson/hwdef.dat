# HW Definition for Horizon31 PixC4-Jetson
# The PixC4-Jetson combines an FMUv5 with an Nvidia Jetson companion computer
# STM32H743 with STM32F103 IOMCU
# Horizon31, LLC

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 16000000

define HAL_CHIBIOS_ARCH_FMUV5 1

# board ID for firmware load
APJ_BOARD_ID 1032

# bootloader takes first sector
FLASH_RESERVE_START_KB 128

# board voltage
STM32_VDD 330U

# flash size
FLASH_SIZE_KB 2048

env OPTIMIZE -O2

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART2 USART3 USART1 UART4 USART6 UART7

STDOUT_SERIAL SD7
STDOUT_BAUDRATE 57600

# USB setup
USB_STRING_MANUFACTURER "Horizon31"

# default the 2nd interface to MAVLink2 until MissionPlanner updates drivers
define HAL_OTG2_PROTOCOL SerialProtocol_MAVLink2

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 - Internal IMU sensors
PG11 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PD7 SPI1_MOSI SPI1

# SPI2 - FRAM
PI1 SPI2_SCK SPI2
PI2 SPI2_MISO SPI2
PI3 SPI2_MOSI SPI2

# SPI4 - sensors2
PE2 SPI4_SCK SPI4
PE13 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# SPI5 - external1 (disabled to save DMA channels)
# PF7 SPI5_SCK SPI5
# PF8 SPI5_MISO SPI5
# PF9 SPI5_MOSI SPI5

# SPI6 
PG13 SPI6_SCK SPI6
PG12 SPI6_MISO SPI6
PB5 SPI6_MOSI SPI6

# sensor CS
PF10 BARO_CS CS
PF2  ICM42688_CS CS SPEED_VERYLOW
PF3  ICM20602_CS CS SPEED_VERYLOW
PG10 ICM20602_CS2 CS SPEED_VERYLOW
PF5  FRAM_CS CS SPEED_VERYLOW
PI4  EXTERNAL1_CS1 CS
PI10 EXTERNAL1_CS2 CS

# unusued CS pins
PF4  SPARE_CS CS
PF11 SPARE_CS2 CS
PH5  SPARE_CS3 CS
PI11 SPARE_CS4 CS
PI6  SPARE_CS5 CS
PI7  SPARE_CS6 CS
PI8  SPARE_CS7 CS

# I2C buses

PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1

PF1 I2C2_SCL I2C2
PF0 I2C2_SDA I2C2

PH7 I2C3_SCL I2C3
PH8 I2C3_SDA I2C3

PF14 I2C4_SCL I2C4
PF15 I2C4_SDA I2C4

# order of I2C buses
I2C_ORDER I2C3 I2C1 I2C2 I2C4

# enable pins
PE3 VDD_3V3_SENSORS_EN OUTPUT HIGH

# start peripheral power off, then enable after init
# this prevents a problem with radios that use RTS for
# bootloader hold
PF12 nVDD_5V_HIPOWER_EN OUTPUT HIGH
PG4  nVDD_5V_PERIPH_EN OUTPUT HIGH
PG5  VDD_5V_RC_EN OUTPUT HIGH
PG6  VDD_5V_WIFI_EN OUTPUT HIGH
PG7  VDD_3V3_SD_CARD_EN OUTPUT HIGH

# drdy pins
PB4  DRDY1_ICM42688 INPUT
PB15 DRDY3_ICM20602_2 INPUT
PC5  DRDY4_ICM20602 INPUT

#unused drdy pins
PC13 DRDY_SPARE1 INPUT
PD10 DRDY_SPARE2 INPUT
PD15 DRDY_SPARE3 INPUT

# Spektrum Power is Active High
define HAL_SPEKTRUM_PWR_ENABLED 1

# UARTs

# USART2 is telem1
PD6 USART2_RX USART2
PD5 USART2_TX USART2
PD3 USART2_CTS USART2
PD4 USART2_RTS USART2

# USART1 is GPS1
PB7 USART1_RX USART1 NODMA
PB6 USART1_TX USART1 NODMA

# USART3 is telem2
PD9 USART3_RX USART3
PD8 USART3_TX USART3
PD11 USART3_CTS USART3
PD12 USART3_RTS USART3

# UART4 GPS2
PD0 UART4_RX UART4 NODMA
PD1 UART4_TX UART4 NODMA

# USART6 is telem3
PG9 USART6_RX USART6 NODMA
# we leave PG14 as an input to prevent it acting as a pullup
# on the IOMCU SBUS input
# PG14 USART6_TX USART6 NODMA
PG15 USART6_CTS USART6
PG8 USART6_RTS USART6

# UART7 is debug
PF6 UART7_RX UART7 NODMA
PE8 UART7_TX UART7 NODMA

# UART8 is for IOMCU
PE0 UART8_RX UART8
PE1 UART8_TX UART8

# UART for IOMCU
IOMCU_UART UART8

# enable RTSCTS support
define AP_FEATURE_RTSCTS 1

# enable SBUS_OUT on IOMCU (if you have an IOMCU)
define AP_FEATURE_SBUS_OUT 1

# PWM AUX channels
PE14 TIM1_CH4 TIM1 PWM(1) GPIO(50)
PA10 TIM1_CH3 TIM1 PWM(2) GPIO(51)
PE11 TIM1_CH2 TIM1 PWM(3) GPIO(52)
PE9  TIM1_CH1 TIM1 PWM(4) GPIO(53)
PD13 TIM4_CH2 TIM4 PWM(5) GPIO(54)
PD14 TIM4_CH3 TIM4 PWM(6) GPIO(55)
# we need to disable DMA on the last 2 FMU channels
# as timer 12 doesn't have a TIMn_UP DMA option
PH6  TIM12_CH1 TIM12 PWM(7) GPIO(56) NODMA
PH9  TIM12_CH2 TIM12 PWM(8) GPIO(57) NODMA

define BOARD_PWM_COUNT_DEFAULT 8

# PWM output for buzzer
PE5 TIM15_CH1 TIM15 GPIO(77) ALARM

# analog in
PA0 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PA1 BATT_CURRENT_SENS ADC1 SCALE(1)

PA2 BATT2_VOLTAGE_SENS ADC1 SCALE(1)
PA3 BATT2_CURRENT_SENS ADC1 SCALE(1)

PC4 SPARE1_ADC1 ADC1 SCALE(1)
PA4 SPARE2_ADC1 ADC1 SCALE(1)

PB0 RSSI_IN ADC1 SCALE(1)

PC0 VDD_5V_SENS ADC1 SCALE(2)
PC1 SCALED_V3V3 ADC1 SCALE(2)

# setup scaling defaults
define HAL_BATT_VOLT_SCALE 18.0
define HAL_BATT_CURR_SCALE 24.0
define HAL_BATT_VOLT_PIN 0
define HAL_BATT_CURR_PIN 1
define HAL_BATT2_VOLT_PIN 2
define HAL_BATT2_CURR_PIN 3

# CAN bus
PI9  CAN1_RX CAN1
PH13 CAN1_TX CAN1

PB12 CAN2_RX CAN2
PB13 CAN2_TX CAN2

PH2 GPIO_CAN1_SILENT OUTPUT PUSHPULL SPEED_LOW LOW GPIO(70)
PH3 GPIO_CAN2_SILENT OUTPUT PUSHPULL SPEED_LOW LOW GPIO(71)
PH4 GPIO_CAN3_SILENT OUTPUT PUSHPULL SPEED_LOW LOW GPIO(72)

# GPIOs
PA7 HEATER_EN OUTPUT LOW GPIO(80)
define HAL_HEATER_GPIO_PIN 80

PG1 VDD_BRICK_VALID INPUT PULLUP
PG2 VDD_BRICK2_VALID INPUT PULLUP
PG3 nVBUS INPUT PULLDOWN
PA9 VBUS INPUT
PF13 VDD_5V_HIPOWER_OC INPUT PULLUP
PE15 VDD_5V_PERIPH_OC INPUT PULLUP

# capture pins
PA5 FMU_CAP1 INPUT  GPIO(58)
PB3 FMU_CAP2 INPUT  GPIO(59)
PB11 FMU_CAP3 INPUT GPIO(60)
PI0 FMU_SPARE_4 INPUT GPIO(61)

# SPI devices
SPIDEV ms5611	       SPI4 DEVID5  BARO_CS    MODE3  5*MHZ  5*MHZ
SPIDEV icm42688        SPI1 DEVID3  ICM42688_CS  MODE3  2*MHZ  8*MHZ
SPIDEV icm20602        SPI1 DEVID1  ICM20602_CS  MODE3  2*MHZ  8*MHZ
SPIDEV icm20602_2      SPI1 DEVID2  ICM20602_CS2  MODE3  2*MHZ  8*MHZ
SPIDEV ramtron         SPI2 DEVID1  FRAM_CS      MODE3  8*MHZ  8*MHZ 

# 3 IMUs
IMU Invensensev3 SPI:icm42688 ROTATION_PITCH_180
IMU Invensense SPI:icm20602 ROTATION_YAW_90
IMU Invensense SPI:icm20602_2 ROTATION_YAW_90

define HAL_DEFAULT_INS_FAST_SAMPLE 7

# probe external I2C compasses plus some internal IST8310
# we also probe some external IST8310 with a non-standard orientation
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
COMPASS RM3100 I2C:0:0x20 false ROTATION_NONE

# baro
BARO MS56XX      SPI:ms5611

# microSD support
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1

# red LED marked as B/E
PB1 LED_RED OUTPUT OPENDRAIN GPIO(90)

# green LED of FMU RGB LED
PC6 LED_GREEN OUTPUT GPIO(91) LOW

# blue LED of FMU RGB LED
PC7 LED_BLUE OUTPUT GPIO(92) HIGH

# setup for Board LEDs
define HAL_GPIO_A_LED_PIN 90
define HAL_GPIO_B_LED_PIN 92
define HAL_GPIO_LED_ON 0

# enable RAMTROM parameter storage
define HAL_STORAGE_SIZE 32768
define HAL_WITH_RAMTRON 1

# allow to have have a dedicated safety switch pin
define HAL_HAVE_SAFETY_SWITCH 1

define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# don't share IOMCU DMA
DMA_NOSHARE UART8* SPI1* TIM*UP*

DMA_PRIORITY SDMMC* UART8* ADC* SPI1* TIM*

# enable FAT filesystem support (needs a microSD defined via SDMMC)
define HAL_OS_FATFS_IO 1

define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

ROMFS io_firmware.bin Tools/IO_Firmware/iofirmware_f103_8MHz_lowpolh.bin




