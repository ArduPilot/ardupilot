# hw definition file for processing by chibios_pins.py
# for mini-pix hardware from RadioLink

# MCU class and specific type
MCU STM32F4xx STM32F405xx

# board ID for firmware load
APJ_BOARD_ID 8003

# crystal frequency
OSCILLATOR_HZ 24000000

# This is the STM32 timer that ChibiOS will use for the low level
# driver. This must be a 32 bit timer. We currently only support
# timers 2, 3, 4, 5 and 21. See hal_st_lld.c in ChibiOS for details.

# ChibiOS system timer
STM32_ST_USE_TIMER 5

FLASH_SIZE_KB 1024

USB_STRING_MANUFACTURER "Orion"

# use USB for stdout, so no STDOUT_SERIAL
# STDOUT_SERIAL SD2
# STDOUT_BAUDRATE 57600

# only one I2C bus
I2C_ORDER I2C2 I2C1

# The normal usage of this ordering is:
# 1) SERIAL0: console (primary mavlink, usually USB)
# 2) SERIAL1: telem1
# 3) SERIAL2: telem2
# 4) SERIAL3: primary GPS
# 5) SERIAL4: GPS2
# 6) SERIAL5: extra UART (usually RTOS debug console)

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART3 USART2 UART4 EMPTY USART6

# UART4 serial GPS
PA0 UART4_TX UART4
PA1 UART4_RX UART4
#PA2 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PA2 LED_SAFETY OUTPUT
#PA3 BATT_CURRENT_SENS ADC1 SCALE(1)
#PA3 TIM5_CH4 TIM5 PWM(12) GPIO(61)
PA3 TIM2_CH4 TIM2 GPIO(61) ALARM
#PA4 VDD_5V_SENS ADC1 SCALE(2)

PA4 ICM42688_CS CS

#SPI for MPU6500
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

PA8 VBUS INPUT OPENDRAIN
#PA9 VBUS INPUT OPENDRAIN
PA9 ICM42688_DRDY INPUT

PA10 SD_PWR_EN OUTPUT LOW

PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

#PA15 TIM2_CH1 TIM2 GPIO(77) ALARM
PA15 SD_DETECT INPUT

#PB0 TIM3_CH3 TIM3 PPMIN # RC Input PPM
PB0 TIM3_CH3 TIM3 PWM(5) GPIO(54)
PB1 TIM3_CH4 TIM3 PWM(6) GPIO(55)

PB2 BOOT1 INPUT

#PB5 VDD_BRICK_VALID INPUT PULLDOWN
define AP_NOTIFY_GPIO_LED_RGB_ENABLED 1
PB3 LED_RED OUTPUT GPIO(0)
PB4 LED_GREEN OUTPUT GPIO(1)
PB5 LED_BLUE OUTPUT GPIO(2)

define AP_NOTIFY_GPIO_LED_RGB_RED_PIN 0
define AP_NOTIFY_GPIO_LED_RGB_GREEN_PIN 1
define AP_NOTIFY_GPIO_LED_RGB_BLUE_PIN 2


PB6 TIM4_CH1 TIM4 PPMIN
PB7 TIM4_CH2 TIM4 RCININT
PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1

PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2
PB12 SPL06_CS CS
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2

#PC0 VBUS_VALID INPUT PULLDOWN
#PC1 RSSI_IN ADC1

#PC2 LPS22HB_CS CS
#PC2 SPL06_CS CS
#PC3 LED_SAFETY OUTPUT
#PC4 SAFETY_IN INPUT

PC0 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC1 BATT_CURRENT_SENS ADC1 SCALE(1)
#PC2 SERVORAIL_VCC_SENS ADC1 SCALE(2)
#PC3 SPARE1_ADC1 ADC1 SCALE(1)
#PC4 SPARE2_ADC1 ADC1 SCALE(1)
PC2 SERVORAIL_VCC_SENS ADC1 SCALE(5.7)
PC3 SPARE1_ADC1 ADC1 SCALE(2)
PC4 SPARE2_ADC1 ADC1 SCALE(5.7)

# setup for power brick
define BATT_MONITOR 3
define HAL_BATT_VOLT_PIN 1
define HAL_BATT_CURR_PIN 1
define HAL_BATT_VOLT_SCALE 21
define HAL_BATT_CURR_SCALE 40

PC5 SAFETY_IN INPUT PULLUP
# default to RCIN using timer capture
#PC7 TIM8_CH2 TIM8 RCININT PULLDOWN
PC6 USART6_TX USART6
PC7 USART6_RX USART6

PC8 SDIO_D0 SDIO
PC9 SDIO_D1 SDIO
PC10 SDIO_D2 SDIO
PC11 SDIO_D3 SDIO
PC12 SDIO_CK SDIO

#PC13 SBUS_INV OUTPUT
#PC14 MPU6500_DRDY INPUT
#PC15 MPU6500_CS CS
#PC14 ICM42688_DRDY INPUT
#PC15 ICM42688_CS CS

PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1

PD2 SDIO_CMD SDIO

# USART2 serial2 telem2
PD3 USART2_CTS USART2
PD4 USART2_RTS USART2
PD5 USART2_TX USART2
PD6 USART2_RX USART2

# USART3 serial3 telem1
PD8 USART3_TX USART3
PD9 USART3_RX USART3
PD10 FRAM_CS CS
PD11 USART3_CTS USART3
PD12 USART3_RTS USART3

#PWM11 IMU Heating
PD13 TIM4_CH2 TIM4 PWM(11) GPIO(60)

PD14 TIM4_CH3 TIM4 PWM(2) GPIO(51)
#new PWM startd
PD15 TIM4_CH4 TIM4 PWM(1) GPIO(50)
#PD15 LPS22HB_DRDY INPUT

#PE3 VDD_SENSORS_EN OUTPUT HIGH

#PE5 TIM9_CH1 TIM9 PWM(3) GPIO(52)
#PE6 TIM9_CH2 TIM9 PWM(4) GPIO(53)
#Error:Unknown peripheral function TIM9_UP in DMA map for STM32F405xx
#new PWM ended

PE9 TIM1_CH1 TIM1 PWM(7) GPIO(56)
PE11 TIM1_CH2 TIM1 PWM(8) GPIO(57)
PE13 TIM1_CH3 TIM1 PWM(9) GPIO(58)
PE14 TIM1_CH4 TIM1 PWM(10) GPIO(59)

# SPI devices
#SPIDEV mpu6000 SPI1 DEVID1 MPU6500_CS MODE3 1*MHZ 8*MHZ 
#SPIDEV lps22h  SPI2 DEVID3 LPS22HB_CS MODE3 1*MHZ 10*MHZ
SPIDEV icm42688 SPI1 DEVID1 ICM42688_CS MODE3 1*MHZ 8*MHZ 
SPIDEV spl06  SPI2 DEVID2 SPL06_CS MODE3 1*MHZ 10*MHZ
SPIDEV ramtron SPI2 DEVID4 FRAM_CS    MODE3 8*MHZ 8*MHZ

# one baro
#BARO LPS2XH SPI:lps22h
BARO SPL06 SPI:spl06

# one IMU
#IMU Invensense SPI:mpu6000 ROTATION_PITCH_180
IMU Invensensev3 SPI:icm42688 ROTATION_YAW_180

# one internal compass, plus external probe
COMPASS QMC5883L I2C:0:0x0D false ROTATION_PITCH_180_YAW_270
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 1

define HAL_STORAGE_SIZE        16384

# enable RAMTROM parameter storage
define HAL_WITH_RAMTRON 1

# Setup for the possibility of an IMU heater since the pixhawk2 cube has
# an IMU heater.
define HAL_HAVE_IMU_HEATER 1

# enable FAT filesystem
define HAL_OS_FATFS_IO 1

# LED setup is similar to PixRacer
#define AP_NOTIFY_GPIO_LED_RGB_ENABLED 1
#PB1 LED_RED OUTPUT GPIO(0)
#PC5 LED_GREEN OUTPUT GPIO(1)
#PE12 LED_BLUE OUTPUT GPIO(2)

#define AP_NOTIFY_GPIO_LED_RGB_RED_PIN 0
#define AP_NOTIFY_GPIO_LED_RGB_GREEN_PIN 1
#define AP_NOTIFY_GPIO_LED_RGB_BLUE_PIN 2

define AP_SIM_LP5562_ENABLED

include ../include/minimize_features.inc

