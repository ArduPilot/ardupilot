# hw definition file for processing by chibios_hwdef.py

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 16000000

define CONFIG_HAL_BOARD_SUBTYPE HAL_BOARD_SUBTYPE_CHIBIOS_FMUV5
define HAL_CHIBIOS_ARCH_FMUV5 1


# board ID for firmware load
APJ_BOARD_ID 1039

FLASH_RESERVE_START_KB 128


# flash size
FLASH_SIZE_KB 2048

env OPTIMIZE -O2

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART2 USART3 USART1 UART5 USART6 UART7

# default the 2nd interface to MAVLink2 until MissionPlanner updates drivers
define HAL_OTG2_PROTOCOL SerialProtocol_MAVLink2

# now we define the pins that USB is connected on
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# these are the pins for SWD debugging with a STlinkv2 or black-magic probe
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 - internal sensors
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

# SPI2 - FRAM
PB3 SPI3_SCK SPI3
PB4 SPI3_MISO SPI3
PB5 SPI3_MOSI SPI3
PA15 FRAM_CS CS SPEED_VERYLOW

# SPI4 - sensors2
PE2 SPI4_SCK SPI4
PE13 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# sensor CS
PF10 MS5611_CS CS
PE10  ICM20689_CS CS SPEED_VERYLOW
PF3  ICM20602_CS CS SPEED_VERYLOW
PF4  BMI055_G_CS CS
PG10 BMI055_A_CS CS

# unusued CS pins
PF11 SPARE_CS CS
PH5  AUXMEM_CS CS
PI4  EXTERNAL1_CS1 CS
PI10 EXTERNAL1_CS2 CS
PI11 EXTERNAL1_CS3 CS
PI6  EXTERNAL2_CS1 CS
PI7  EXTERNAL2_CS2 CS
PI8  EXTERNAL2_CS3 CS

# I2C buses

PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1

PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2


PD12 I2C4_SCL I2C4
PD13 I2C4_SDA I2C4

# order of I2C buses
I2C_ORDER I2C1 I2C2 I2C4


# enable pins
PE3 VDD_3V3_SENSORS_EN OUTPUT HIGH

#Power Button
PC4 KEY_AD_GPIO INPUT PULLUP GPIO(60)
PC5 POWER_CONTROL_GPIO OUTPUT  PUSHPULL HIGH GPIO(61)
define HAL_PWR_AD_KEY_GPIO 60
define HAL_POWER_CONTROL_GPIO 61


# UARTs
#USART1
# USART1 is GPS1
PB7 USART1_RX USART1 NODMA
PB6 USART1_TX USART1 NODMA

# USART2 FC P1
PD6 USART2_RX USART2
PD5 USART2_TX USART2
PD3 USART2_CTS USART2
PD4 USART2_RTS USART2

# USART3 FC P2
PD9 USART3_RX USART3
PD8 USART3_TX USART3

# UART4 CAN P4
PD0 UART4_RX UART4 NODMA
PD1 UART4_TX UART4 NODMA

# UART5 ESC
PB12 UART5_RX UART5 NODMA
PB13 UART5_TX UART5 NODMA

# USART6 IO
PC7 USART6_RX USART6
PC6 USART6_TX USART6


# UART7 is debug
PE7 UART7_RX UART7 NODMA
PE8 UART7_TX UART7 NODMA

define BOARD_PWM_COUNT_DEFAULT 4

# analog in
#PA0 FMU_SERVORAIL_VCC_SENS ADC1 SCALE(1)
PA0 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC0 VDD_5V_SENS ADC1 SCALE(2)
define HAL_USE_ADC TRUE


# setup scaling defaults for PixHackV5 power brick
define HAL_BATT_VOLT_SCALE 18.0
define HAL_BATT_CURR_SCALE 24.0
define HAL_BATT_VOLT_PIN 1
define HAL_BATT_CURR_PIN 0
define HAL_BATT2_VOLT_PIN 2
define HAL_BATT2_CURR_PIN 3

#ESC MUX select
PC1 ESC_MUX_SELECT0 OUTPUT  PUSHPULL SPEED_LOW LOW GPIO(92)
PC2 ESC_MUX_SELECT1 OUTPUT  PUSHPULL SPEED_LOW LOW GPIO(93)
PC3 ESC_MUX_SELECT2 OUTPUT  PUSHPULL SPEED_LOW LOW GPIO(94)

define HAL_ESC_SELECT0_GPIO_PIN 92
define HAL_ESC_SELECT1_GPIO_PIN 93
define HAL_ESC_SELECT2_GPIO_PIN 94


# SPI devices
SPIDEV icm20689       SPI1 DEVID1  ICM20689_CS  MODE3  2*MHZ  8*MHZ
SPIDEV ramtron        SPI3 DEVID2  FRAM_CS      MODE3  8*MHZ  8*MHZ

# up to 1 IMUs
IMU Invensense SPI:icm20689 ROTATION_PITCH_180_YAW_270

define HAL_DEFAULT_INS_FAST_SAMPLE 1

# probe external I2C compasses plus some internal IST8310
# we also probe some external IST8310 with a non-standard orientation
# define HAL_PROBE_EXTERNAL_I2C_COMPASSES
# COMPASS IST8310 I2C:ALL_EXTERNAL:0x0E true  ROTATION_ROLL_180_YAW_90
# COMPASS IST8310 I2C:ALL_INTERNAL:0x0E false ROTATION_ROLL_180_YAW_90
# The F9P Gps
COMPASS IST8310 I2C:0:0x0F false ROTATION_ROLL_180_YAW_90
# The YUN gps
# COMPASS IST8310 I2C:0:0x0E false ROTATION_ROLL_180_YAW_90

# one baro
# BARO MS56XX SPI:ms5611
BARO BMP388 I2C:2:0x77
BARO BMP388 I2C:2:0x76

# IOMCU_UART USART6

# we can't share IO UART (USART6)
DMA_PRIORITY USART6*

# microSD support
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1

# red LED marked as B/E
PB1 LED_RED OUTPUT OPENDRAIN GPIO(90)

# green LED marked as PWR. We leave this solid on, but allow
# for it to be controlled as a relay if needed

# blue LED marked as ACT

# setup for BoardLED2
define HAL_GPIO_A_LED_PIN 90
define HAL_GPIO_B_LED_PIN 92
define HAL_GPIO_LED_ON 0

# enable RAMTROM parameter storage
define HAL_STORAGE_SIZE 16384
define HAL_WITH_RAMTRON 1


define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

DMA_PRIORITY SDMMC* UART8* ADC* SPI* TIM*

# define HAL_SPI_CHECK_CLOCK_FREQ 1

# enable FAT filesystem support (needs a microSD defined via SDMMC)
define HAL_OS_FATFS_IO 1

define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

define HAL_BATT_MONITOR_DEFAULT 3
define HAL_POWER_BUTTON_ENABLE 1
define HAL_CODEV_ESC_ENABLE 1
define BEACON_ENABLED 1
define LOG_MOTOR_STATUS 1
define HAL_ESC_NUM 4

# ROMFS io_firmware.bin Tools/IO_Firmware/iofirmware_lowpolh.bin


# select tallonA3 drone
env DEFAULT_PARAMETERS Tools/Frame_params/AQUILA-3F.param
