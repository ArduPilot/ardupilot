# hw definition file for processing by chibios_pins.py
# for Aocoda-RC-H743Dual: MPU6000/BMI270x2

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# board ID for firmware load
APJ_BOARD_ID AP_HW_AOCODA-RC-H743DUAL

# crystal frequency, setup to use external oscillator
OSCILLATOR_HZ 8000000

# flash size
FLASH_SIZE_KB 2048

env OPTIMIZE -Os

# bootloader takes first sector
FLASH_RESERVE_START_KB 128

# ChibiOS system timer
STM32_ST_USE_TIMER 12
define CH_CFG_ST_RESOLUTION 16

# USB setup
USB_STRING_MANUFACTURER "Aocoda-RC-H743Dual"

# Now we define the pins that USB is connected on.
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

# OTG USB VBUS
PE2 VBUS INPUT

# These are the pins for SWD debugging with a STlinkv2 or black-magic probe.
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 for IMU1 (BMI270/MPU6000)
PC15 IMU1_CS CS
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PD7 SPI1_MOSI SPI1

# SPI2 for MAX7456 OSD
PB12 MAX7456_CS CS
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2

# SPI3 for SPI flash - W25N01GV
PD3 FLASH_CS CS
PB3 SPI3_SCK SPI3
PB4 SPI3_MISO SPI3
PB5 SPI3_MOSI SPI3

# SPI4 for IMU2 (BMI270)
PE11 IMU2_CS CS
PE12 SPI4_SCK SPI4
PE13 SPI4_MISO SPI4
PE14 SPI4_MOSI SPI4

# two I2C bus, order of I2C buses
I2C_ORDER I2C2 I2C1

# I2C1
PB6 I2C1_SCL I2C1
PB7 I2C1_SDA I2C1

# I2C2
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

# ADC for Power
PC0 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PC1 BATT_CURRENT_SENS ADC1 SCALE(1)
PA4 BATT2_VOLTAGE_SENS ADC1 SCALE(1)
PA7 BATT2_CURRENT_SENS ADC1 SCALE(1)

define HAL_BATT_MONITOR_DEFAULT 4
define HAL_BATT_VOLT_PIN 10
define HAL_BATT_CURR_PIN 11
define HAL_BATT2_VOLT_PIN 18
define HAL_BATT2_CURR_PIN 7

define HAL_BATT_VOLT_SCALE 11.0
define HAL_BATT_CURR_SCALE 40.0
define HAL_BATT2_VOLT_SCALE 11.0

# ADC for airspeed
PC4 PRESSURE_SENS ADC1 SCALE(2)
define HAL_DEFAULT_AIRSPEED_PIN 4

# ADC for rssi
PC5 RSSI_ADC ADC1
define BOARD_RSSI_ANA_PIN 8

# Define LEDs
# blue LED0 marked as ACT
# green LED1 marked as B/E
PE3 LED0 OUTPUT LOW GPIO(90) # blue
PE4 LED1 OUTPUT LOW GPIO(91) # orange
define HAL_GPIO_A_LED_PIN 91
define HAL_GPIO_B_LED_PIN 90

# The normal usage of this ordering is:
# 1) SERIAL0: console (primary mavlink, usually USB)
# 2) SERIAL1: RC input
# 3) SERIAL2: GPS
# 4) SERIAL3: VTX
# 5) SERIAL4: spare
# 6) SERIAL6: ESC Telemetry
# 7) SERIAL7: spare
# 8) SERIAL8: spare

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART1 USART2 USART3 UART4 EMPTY USART6 UART7 UART8

# USART1 (RC input), SERIAL1
PA9  USART1_TX USART1
PA10 USART1_RX USART1
define DEFAULT_SERIAL1_PROTOCOL SerialProtocol_RCIN

# USART2 (GPS), SERIAL2
PD5 USART2_TX USART2
PD6 USART2_RX USART2
define DEFAULT_SERIAL2_PROTOCOL SerialProtocol_GPS

# USART3 (VTX), SERIAL3
PD8 USART3_TX USART3
PD9 USART3_RX USART3
define DEFAULT_SERIAL3_PROTOCOL SerialProtocol_DJI_FPV

# UART4 (Telemetry), SERIAL4
PB8 UART4_RX UART4
PB9 UART4_TX UART4
define DEFAULT_SERIAL4_PROTOCOL SerialProtocol_None

# USART6 (ESC Telemetry), SERIAL6
PC6 USART6_TX USART6 NODMA
PC7 USART6_RX USART6 NODMA
define DEFAULT_SERIAL6_PROTOCOL SerialProtocol_ESCTelemetry

# UART7 (spare), SERIA7
PE7 UART7_RX UART7
PE8 UART7_TX UART7

# UART8 (Optical Flow), SERIAL8
PE0 UART8_RX UART8
PE1 UART8_TX UART8

# Motors
PB0  TIM3_CH3 TIM3  PWM(1)  GPIO(50) BIDIR   //S1
PB1  TIM3_CH4 TIM3  PWM(2)  GPIO(51)         //S2
PA0  TIM2_CH1 TIM2  PWM(3)  GPIO(52) BIDIR   //S3
PA1  TIM2_CH2 TIM2  PWM(4)  GPIO(53)         //S4
PA2  TIM5_CH3 TIM5  PWM(8)  GPIO(54) BIDIR   //S8
PA3  TIM5_CH4 TIM5  PWM(7)  GPIO(55)         //S7
PD12 TIM4_CH1 TIM4  PWM(6)  GPIO(56) BIDIR   //S6
PD13 TIM4_CH2 TIM4  PWM(5)  GPIO(57)         //S5
PD14 TIM4_CH3  TIM4  PWM(9)  GPIO(58) BIDIR  //S9
PD15 TIM4_CH4  TIM4  PWM(10) GPIO(59)        //S10

# Servos
PE5  TIM15_CH1 TIM15 PWM(11) GPIO(60) NODMA  //SE1
PE6  TIM15_CH2 TIM15 PWM(12) GPIO(61) NODMA  //SE2

# LED stripe
PA8  TIM1_CH1 TIM1  PWM(13) GPIO(62)

# PWM output for buzzer/Beeper
PA15 BUZZER OUTPUT LOW PULLDOWN GPIO(80)
define HAL_BUZZER_PIN 80

# GPIOs for 9V DCDC control (HIGH:on; LOW:off)
PD10  PINIO1 OUTPUT GPIO(81) HIGH

# GPIOs for pinio // not used
#PD11  PINIO2 OUTPUT GPIO(82) LOW

# DMA Priority
DMA_PRIORITY S* TIM3* TIM2*
DMA_NOSHARE SPI1* SPI4* TIM3* TIM2*

# use last 2 pages for flash storage
# H743 has 16 pages of 128k each
STORAGE_FLASH_PAGE 14
define HAL_STORAGE_SIZE 32768

# spi devices
SPIDEV mpu6000       SPI1 DEVID1 IMU1_CS      MODE3   1*MHZ   8*MHZ
SPIDEV bmi270_1      SPI1 DEVID1 IMU1_CS      MODE3  10*MHZ  10*MHZ
SPIDEV bmi270_2      SPI4 DEVID1 IMU2_CS      MODE3  10*MHZ  10*MHZ
SPIDEV dataflash     SPI3 DEVID1 FLASH_CS     MODE3 104*MHZ 104*MHZ
SPIDEV osd           SPI2 DEVID4 MAX7456_CS   MODE0  10*MHZ  10*MHZ

# two BMI270 or one MPU6000 IMU
IMU Invensense SPI:mpu6000 ROTATION_YAW_270
IMU BMI270 SPI:bmi270_1 ROTATION_ROLL_180_YAW_90
IMU BMI270 SPI:bmi270_2 ROTATION_PITCH_180

# DPS310 integrated on I2C2 bus, multiple possible choices for external barometer
BARO MS56XX I2C:0:0x77
BARO DPS310 I2C:0:0x76
BARO BMP280 I2C:0:0x76

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 1
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# setup for OSD
define OSD_ENABLED 1
define HAL_OSD_TYPE_DEFAULT 1
ROMFS_WILDCARD libraries/AP_OSD/fonts/font*.bin

# enable logging to dataflash
define HAL_LOGGING_DATAFLASH_ENABLED 1
define HAL_LOGGING_DATAFLASH_DRIVER AP_Logger_W25NXX


