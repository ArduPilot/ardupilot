# hw definition file for processing by chibios_hwdef.py
# for Sierra-F1 autopilot

# MCU class and specific type
MCU STM32H7xx STM32H743xx

# crystal frequency
OSCILLATOR_HZ 24000000

# board ID for firmware load
APJ_BOARD_ID 1087

# USB setup
USB_STRING_MANUFACTURER "Sierra Aerospace"
USB_STRING_PRODUCT "Sierra-F1"

FLASH_SIZE_KB 2048

# bootloader is installed at zero offset
FLASH_RESERVE_START_KB 128

# the location where the bootloader will put the firmware
FLASH_BOOTLOADER_LOAD_KB 128

# LEDs
PD10 LED_BLUE OUTPUT GPIO(90)
define HAL_GPIO_B_LED_PIN 90

# Enable FAT filesystem support (needs a microSD defined via SDMMC).
define HAL_OS_FATFS_IO 1

# ChibiOS system timer
# STM32_ST_USE_TIMER 2
STM32_ST_USE_TIMER 12
define CH_CFG_ST_RESOLUTION 16
STORAGE_FLASH_PAGE 14
define HAL_STORAGE_SIZE 32768

# ADC setup
# PC3 VDD_5V_SENS ADC3 SCALE(2) ANALOG(18)
# define STM32_ADC_USE_ADC12 FALSE
define HAL_USE_ADC FALSE

# CAN1
PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1
PD2 GPIO_CAN1_SILENT OUTPUT PUSHPULL SPEED_LOW LOW

# CAN2
PB5 CAN2_RX CAN2
PB6 CAN2_TX CAN2
PB7 GPIO_CAN2_SILENT OUTPUT PUSHPULL SPEED_LOW LOW

# ICM42688 on SPI1
PA4 ICM42688_CS CS
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PD7 SPI1_MOSI SPI1
#PC8 ICM42688_FSYNC
PE10 ICM42688_DRDY INPUT

# BMI088 and DPS310 on SPI4
PC13 BMI088_A_CS CS
PE3 BMI088_G_CS CS
PE4 DPS310_CS CS
PE12 SPI4_SCK SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# ICM42688+DPS310 on SPI3 (daugter board)
PA10 DPS310ext_CS CS
PA15 ICM42688ext_CS CS
PC10 SPI3_SCK SPI3
PC11 SPI3_MISO SPI3
PC12 SPI3_MOSI SPI3

# Sensors
SPIDEV bmi088_g SPI4 DEVID1  BMI088_G_CS  MODE3 10*MHZ 10*MHZ
SPIDEV bmi088_a SPI4 DEVID2  BMI088_A_CS  MODE3 10*MHZ 10*MHZ
SPIDEV icm42688 SPI1 DEVID1  ICM42688_CS MODE3  2*MHZ  8*MHZ
SPIDEV DPS310 SPI4 DEVID3  DPS310_CS MODE3 20*MHZ 20*MHZ

# Sensors in daughter board
SPIDEV icm42688_ext SPI3 DEVID1  ICM42688ext_CS MODE3  2*MHZ  8*MHZ
SPIDEV DPS310_ext SPI3 DEVID2  DPS310ext_CS MODE3 20*MHZ 20*MHZ

IMU Invensensev3 SPI:icm42688 ROTATION_ROLL_180
IMU BMI088 SPI:bmi088_a SPI:bmi088_g ROTATION_ROLL_180
BARO DPS310 SPI:DPS310 

IMU Invensensev3 SPI:icm42688_ext ROTATION_YAW_270
BARO DPS310 SPI:DPS310_ext

# I2Cs on PWR1 and PWR2
PC9    I2C3_SDA    I2C3
PA8    I2C3_SCL    I2C3
PB8    I2C4_SCL    I2C4
PB9    I2C4_SDA    I2C4
I2C_ORDER I2C3 I2C4
define HAL_I2C_INTERNAL_MASK 1

# Ethernet
PC1  ETH_MDC            ETH1
PA2  ETH_MDIO           ETH1
PC4  ETH_RMII_RXD0      ETH1
PC5  ETH_RMII_RXD1      ETH1
PB12 ETH_RMII_TXD0      ETH1
PB13 ETH_RMII_TXD1      ETH1
PB11 ETH_RMII_TX_EN     ETH1
PA7  ETH_RMII_CRS_DV    ETH1
PA1  ETH_RMII_REF_CLK   ETH1

define BOARD_PHY_ID  MII_LAN8742A_ID
define BOARD_PHY_RMII
define AP_NETWORKING_DEFAULT_MAC_ADDR "A8:B0:28:00:00:00"

PD8 GPIO_ETH_ENABLE OUTPUT HIGH GPIO(113)
define HAL_GPIO_ETH_ENABLE 113

# QSPI Flash
PD11 QUADSPI_BK1_IO0 QUADSPI1
PD12 QUADSPI_BK1_IO1 QUADSPI1
PE2  QUADSPI_BK1_IO2 QUADSPI1
PD13 QUADSPI_BK1_IO3 QUADSPI1
PB10 QUADSPI_BK1_NCS QUADSPI1
PB2  QUADSPI_CLK QUADSPI1

# microSD support
PD6  SDMMC2_CK SDMMC2
PA0  SDMMC2_CMD SDMMC2
PB14 SDMMC2_D0 SDMMC2
PB15 SDMMC2_D1 SDMMC2
PB3  SDMMC2_D2 SDMMC2
PB4  SDMMC2_D3 SDMMC2
define FATFS_HAL_DEVICE SDCD2

# USB
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PA9 VBUS INPUT OPENDRAIN

# pins for SWD debugging
PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# PowerMux input status pin
# PC2 VDD_BRICK_nVALID INPUT PULLUP

# Sensors LDO Enable and ETH LDO enable
PC14 VDD_3V3_SENSORS_EN OUTPUT HIGH
PC15 EXT_LDO_EN OUTPUT HIGH

# PWM channels
PE9  TIM1_CH1 TIM1 PWM(1) GPIO(50)
PE11 TIM1_CH2 TIM1 PWM(2) GPIO(51)
PE13 TIM1_CH3 TIM1 PWM(3) GPIO(52)
PE14 TIM1_CH4 TIM1 PWM(4) GPIO(53)
PB0  TIM3_CH3 TIM3 PWM(5) GPIO(54)
PB1  TIM3_CH4 TIM3 PWM(6) GPIO(55)

# telem1 on UART2
PD5 USART2_TX USART2
PA3 USART2_RX USART2
PD4 USART2_RTS USART2
PD3 USART2_CTS USART2

# telem2 on UART8
PD15 UART8_RTS UART8
PD14 UART8_CTS UART8
PE0 UART8_RX UART8
PE1 UART8_TX UART8

# GPS on UART7
PE7 UART7_RX UART7 NODMA
PE8 UART7_TX UART7 NODMA

# USART6 (RC input), SERIAL7
PC7 TIM8_CH2 TIM8 RCININT PULLDOWN LOW
PC6 USART6_TX USART6

# as an alternative config setup the RX6 pin as a uart. This allows
# for bi-directional UART based receiver protocols such as FPort
# without any extra hardware
PC7 USART6_RX USART6 ALT(1)

# order of UARTs (and USB)
SERIAL_ORDER OTG1 USART2 UART8 USART6 UART7 OTG2

EXT_FLASH_SIZE_MB 32
INT_FLASH_PRIMARY 1

# INA226 battery monitor
define HAL_BATTMON_INA2XX_BUS 1
define HAL_BATTMON_INA2XX_ADDR 0
define HAL_BATT_MONITOR_DEFAULT 21

# Spare GPIO
#PC0
#PD9

