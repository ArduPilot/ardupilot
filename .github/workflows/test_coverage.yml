name: test coverage

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # every sunday at midnight
# paths:
# - "*"
# - "!README.md" <-- don't rebuild on doc change
concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    container:
      image: ardupilot/ardupilot-dev-coverage:latest
      options: --privileged
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        toolchain: [
            base,  # GCC
        ]
        config: [
            coverage,
            sitltest-can,
        ]
    steps:
      # git checkout the PR
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Put ccache into github cache for faster build
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: |
          NOW=$(date -u +"%F-%T")
          echo "::set-output name=timestamp::${NOW}"
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{github.workflow}}-ccache-${{ matrix.toolchain }}-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{github.workflow}}-ccache-${{ matrix.toolchain }}-  # restore ccache from either previous build on this branch or on master
      - name: setup ccache
        run: |
          . .github/workflows/ccache.env
      - name: Configure CAN
        if: ${{ matrix.config == 'sitltest-can'}}
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -y gcc-multilib g++-multilib
          sudo apt -y install can-utils iproute2 linux-modules-extra-$(uname -r)
          sudo modprobe vcan
          sudo ip link add dev vcan0 type vcan
          sudo ip link set up vcan0
      - name: test ${{matrix.config}} ${{ matrix.toolchain }}
        env:
          CI_BUILD_TARGET: ${{matrix.config}}
          TERM: xterm
        shell: 'script -q -e -c "bash {0}"'
        run: |
          PATH="/github/home/.local/bin:$PATH"
          python -m pip install --user mavproxy
          python -m pip uninstall -y pymavlink
          git submodule update --init --recursive
          (cd modules/mavlink/pymavlink && DISABLE_MAVNATIVE=True MDEF="$PWD/../message_definitions" python -m pip install --user .)
          if [[ ${{ matrix.config }} == "coverage" ]]; then
            Tools/scripts/run_coverage.py -f
          else
            Tools/scripts/run_coverage.py -i
            ./waf configure --board sitl_periph_gps --debug --coverage
            ./waf build --target bin/AP_Periph
            Tools/scripts/run_coverage.py -i
            Tools/autotest/autotest.py test.CAN --debug --coverage
            Tools/scripts/run_coverage.py -u
          fi

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./reports/lcov-report/lcov.info
          flag-name: run-${{matrix.config}}
          parallel: true


  finish:
    if: always()
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
