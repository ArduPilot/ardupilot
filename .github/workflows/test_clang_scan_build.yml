name: test clang-scan-build

on:
  push:
    paths-ignore:
      # remove non SITL HAL
      - 'libraries/AP_HAL_ChibiOS/**'
      - 'libraries/AP_HAL_ESP32/**'
      - 'libraries/AP_HAL_Linux/**'
      - 'libraries/AP_HAL_QURT/**'
      # remove non SITL directories
      - 'Tools/AP_Bootloader/**'
      - 'Tools/AP_Periph/**'
      - 'Tools/bootloaders/**'
      - 'Tools/CHDK-Script/**'
      - 'Tools/CodeStyle/**'
      - 'Tools/completion/**'
      - 'Tools/CPUInfo/**'
      - 'Tools/debug/**'
      - 'Tools/environment_install/**'
      - 'Tools/FilterTestTool/**'
      - 'Tools/Frame_params/**'
      - 'Tools/geotag/**'
      - 'Tools/GIT_Test/**'
      - 'Tools/gittools/**'
      - 'Tools/Hello/**'
      - 'Tools/IO_Firmware/**'
      - 'Tools/Linux_HAL_Essentials/**'
      - 'Tools/Pozyx/**'
      - 'Tools/PrintVersion.py'
      - 'Tools/Replay/**'
      - 'Tools/simulink/**'
      - 'Tools/UDP_Proxy/**'
      - 'Tools/vagrant/**'
      - 'Tools/Vicon/**'
      # Discard python file from Tools/scripts as not used
      - 'Tools/scripts/build_sizes/**'
      - 'Tools/scripts/build_tests/**'
      - 'Tools/scripts/CAN/**'
      - 'Tools/scripts/signing/**'
      # Remove  autotest
      - 'Tools/autotest/antennatracker.py'
      - 'Tools/autotest/arducopter.py'
      - 'Tools/autotest/arduplane.py'
      - 'Tools/autotest/ardusub.py'
      - 'Tools/autotest/helicopter.py'
      - 'Tools/autotest/rover.py'
      - 'Tools/autotest/location.txt'
      - 'Tools/autotest/quadplane.py'
      - 'Tools/autotest/swarminit.txt'
      # Remove markdown files as irrelevant
      - '**.md'
      # Remove dotfile at root directory
      - './.dir-locals.el'
      - './.dockerignore'
      - './.editorconfig'
      - './.flake8'
      - './.gitattributes'
      - './.github'
      - './.gitignore'
      - './.pre-commit-config.yaml'
      - './.pydevproject'
      - './.valgrind-suppressions'
      - './.valgrindrc'
      - 'Dockerfile'
      - 'Vagrantfile'
      - 'Makefile'
      # Remove some directories check
      - '.vscode/**'
      - '.github/ISSUE_TEMPLATE/**'
      # Remove change on other workflows
      - '.github/workflows/test_environment.yml'


  pull_request:
    paths-ignore:
      # remove non SITL HAL
      - 'libraries/AP_HAL_QURT/**'
      - 'libraries/AP_HAL_Linux/**'
      - 'libraries/AP_HAL_ChibiOS/**'
      - 'libraries/AP_HAL_ESP32/**'
      # remove non SITL directories
      - 'Tools/AP_Bootloader/**'
      - 'Tools/AP_Periph/**'
      - 'Tools/bootloaders/**'
      - 'Tools/CHDK-Script/**'
      - 'Tools/CodeStyle/**'
      - 'Tools/completion/**'
      - 'Tools/CPUInfo/**'
      - 'Tools/debug/**'
      - 'Tools/environment_install/**'
      - 'Tools/FilterTestTool/**'
      - 'Tools/Frame_params/**'
      - 'Tools/geotag/**'
      - 'Tools/GIT_Test/**'
      - 'Tools/gittools/**'
      - 'Tools/Hello/**'
      - 'Tools/IO_Firmware/**'
      - 'Tools/Linux_HAL_Essentials/**'
      - 'Tools/LogAnalyzer/**'
      - 'Tools/Pozyx/**'
      - 'Tools/PrintVersion.py'
      - 'Tools/Replay/**'
      - 'Tools/simulink/**'
      - 'Tools/UDP_Proxy/**'
      - 'Tools/vagrant/**'
      - 'Tools/Vicon/**'
      # Discard python file from Tools/scripts as not used
      - 'Tools/scripts/build_sizes/**'
      - 'Tools/scripts/build_tests/**'
      - 'Tools/scripts/CAN/**'
      - 'Tools/scripts/signing/**'
      # Remove other vehicles autotest
      - 'Tools/autotest/antennatracker.py'
      - 'Tools/autotest/arducopter.py'
      - 'Tools/autotest/arduplane.py'
      - 'Tools/autotest/ardusub.py'
      - 'Tools/autotest/helicopter.py'
      - 'Tools/autotest/location.txt'
      - 'Tools/autotest/quadplane.py'
      - 'Tools/autotest/rover.py'
      - 'Tools/autotest/swarminit.txt'
      # Remove markdown files as irrelevant
      - '**.md'
      # Remove dotfile at root directory
      - './.dir-locals.el'
      - './.dockerignore'
      - './.editorconfig'
      - './.flake8'
      - './.gitattributes'
      - './.github'
      - './.gitignore'
      - './.pre-commit-config.yaml'
      - './.pydevproject'
      - './.valgrind-suppressions'
      - './.valgrindrc'
      - 'Dockerfile'
      - 'Vagrantfile'
      - 'Makefile'
      # Remove some directories check
      - '.vscode/**'
      - '.github/ISSUE_TEMPLATE/**'
      # Remove change on other workflows
      - '.github/workflows/test_environment.yml'

  workflow_dispatch:

concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: ardupilot/ardupilot-dev-base:v0.1.3
      options: --privileged --cap-add=SYS_PTRACE --security-opt apparmor=unconfined --security-opt seccomp=unconfined
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails (get archives!)
    steps:
      # git checkout the PR
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      # Put ccache into github cache for faster build
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: |
          NOW=$(date -u +"%F-%T")
          echo "timestamp=${NOW}" >> $GITHUB_OUTPUT
      - name: ccache cache files
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{github.workflow}}-ccache-clang-scan-build-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{github.workflow}}-ccache-clang-scan-build-  # restore ccache from either previous build on this branch or on master
      - name: setup ccache
        run: |
          . .github/workflows/ccache.env
      - name: Install MAVProxy
        run: |
          # Install this specific version just to prevent rolling updates.
          # See the latest available at https://pypi.org/project/MAVProxy
          python3 -m pip install MAVProxy==1.8.71
      - name: Install local pymavlink
        working-directory: modules/mavlink/pymavlink
        run: |
          python3 -m pip install . --upgrade --user
      - name: run clang-scan-build
        shell: bash
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          sudo apt update
          sudo apt-get -y install clang-tools
          ls /usr/bin/clang-scan*
          mkdir -p $HOME/bin
          ln -s /usr/bin/scan-build-py-18 $HOME/bin/scan-build
          export PATH="$HOME/bin:/github/home/.local/bin:$PATH"
          mkdir -p /__w/ardupilot/ardupilot/tmp
          CI_BUILD_TARGET="clang_scan_build" Tools/scripts/build_ci.sh  >$HOME/scan-build-stdout.txt

          ccache -s
          ccache -z

          # this renames the scan-build output directory to a fixed
          #          name so we can archive it
          ./Tools/autotest/process_scan_build_output.py $HOME/scan-build-stdout.txt

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
           name: clang-scan-build
           path: /__w/ardupilot/ardupilot/tmp/scan-build
           retention-days: 7

