name: test copter

on: [push, pull_request, workflow_dispatch]
# paths:
# - "*"
# - "!README.md" <-- don't rebuild on doc change

jobs:
  build:
    runs-on: ubuntu-20.04
    container: ardupilot/ardupilot-dev-${{ matrix.toolchain }}:latest
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        toolchain: [
            base,  # GCC
            clang,
        ]
    steps:
      # git checkout the PR
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Put ccache into github cache for faster build
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: |
          NOW=$(date -u +"%F-%T")
          echo "::set-output name=timestamp::${NOW}"
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{github.workflow}}-ccache-${{ matrix.toolchain }}-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{github.workflow}}-ccache-${{ matrix.toolchain }}-  # restore ccache from either previous build on this branch or on master
      - name: setup ccache
        run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          echo "max_size = 400M" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z
      - name: build copter ${{ matrix.toolchain }}
        shell: bash
        run: |
          if [[ ${{ matrix.toolchain }} = "clang" ]]; then
            export CC=clang-7
            export CXX=clang++-7
          fi
          PATH="/github/home/.local/bin:$PATH"
          ./waf configure --board sitl
          ./waf build --target bin/arducopter
          ccache -s
          ccache -z

  autotest:
    needs: build  # don't try to launch the tests matrix if it doesn't build first, profit from caching for fast build
    runs-on: ubuntu-20.04
    container: ardupilot/ardupilot-dev-base:latest
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        config: [
            sitltest-copter-tests1a,
            sitltest-copter-tests1b,
            sitltest-copter-tests1c,
            sitltest-copter-tests1d,
            sitltest-copter-tests1e,
            sitltest-copter-tests2a,
            sitltest-copter-tests2b,
        ]

    steps:
      # git checkout the PR
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Put ccache into github cache for faster build
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: |
          NOW=$(date -u +"%F-%T")
          echo "::set-output name=timestamp::${NOW}"
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{github.workflow}}-ccache-base-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{github.workflow}}-ccache-base-  # restore ccache from either previous build on this branch or on master
      - name: setup ccache
        run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          echo "max_size = 400M" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z
      - name: test ${{matrix.config}}
        env:
          CI_BUILD_TARGET: ${{matrix.config}}
        shell: bash
        run: |
          PATH="/github/home/.local/bin:$PATH"
          Tools/scripts/build_ci.sh

      - name: Archive buildlog artifacts
        uses: actions/upload-artifact@v2
        with:
           name: buildlogs-for-${{matrix.config}}
           path: /tmp/buildlogs
           retention-days: 14

      - name: Archive .bin artifacts
        uses: actions/upload-artifact@v2
        with:
           name: BIN-files-for-${{matrix.config}}
           path: /__w/ardupilot/ardupilot/logs
           retention-days: 7


  build-gcc-heli:
    needs: build  # don't try to launch the tests matrix if it doesn't build first, profit from caching for fast build
    runs-on: ubuntu-20.04
    container: ardupilot/ardupilot-dev-base:latest
    steps:
      # git checkout the PR
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Put ccache into github cache for faster build
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: |
          NOW=$(date -u +"%F-%T")
          echo "::set-output name=timestamp::${NOW}"
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{github.workflow}}-ccache-base-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{github.workflow}}-ccache-base-  # restore ccache from either previous build on this branch or on master
      - name: setup ccache
        run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          echo "max_size = 400M" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z
      - name: build heli
        shell: bash
        run: |
          PATH="/github/home/.local/bin:$PATH"
          ./waf configure --board sitl
          ./waf build --target bin/arducopter-heli
          ccache -s
          ccache -z

  autotest-heli:
    needs: build-gcc-heli  # don't try to launch the tests matrix if it doesn't build first, profit from caching for fast build
    runs-on: ubuntu-20.04
    container: ardupilot/ardupilot-dev-base:latest
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        config: [
            sitltest-heli,
        ]

    steps:
      # git checkout the PR
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Put ccache into github cache for faster build
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: |
          NOW=$(date -u +"%F-%T")
          echo "::set-output name=timestamp::${NOW}"
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{github.workflow}}-ccache-base-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{github.workflow}}-ccache-base-  # restore ccache from either previous build on this branch or on master
      - name: setup ccache
        run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          echo "max_size = 400M" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z
      - name: test ${{matrix.config}}
        env:
          CI_BUILD_TARGET: ${{matrix.config}}
        shell: bash
        run: |
          PATH="/github/home/.local/bin:$PATH"
          Tools/scripts/build_ci.sh

      - name: Archive buildlog artifacts
        uses: actions/upload-artifact@v2
        with:
           name: buildlogs-for-${{matrix.config}}
           path: /tmp/buildlogs
           retention-days: 14

      - name: Archive .bin artifacts
        uses: actions/upload-artifact@v2
        with:
           name: BIN-files-for-${{matrix.config}}
           path: /__w/ardupilot/ardupilot/logs
           retention-days: 7
