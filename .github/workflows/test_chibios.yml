name: test chibios

on: [push, pull_request, workflow_dispatch]

# paths:
# - "*"
# - "!README.md" <-- don't rebuild on doc change
concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-20.04
    container: ardupilot/ardupilot-dev-${{ matrix.toolchain }}:latest
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        config: [
            stm32f7,
            stm32h7,
            fmuv2-plane,
            periph-build,
            iofirmware,
            CubeOrange-bootloader,
            fmuv3-bootloader,
            revo-bootloader,
            stm32h7-debug,
            fmuv3,
            revo-mini,
            MatekF405-Wing,
            CubeOrange-ODID,
            configure-all,
            build-options-defaults-test,
            signing
        ]
        toolchain: [
            chibios,  # GCC-6
            #chibios-clang,
        ]
        gcc: [6, 10]
        exclude:
          - gcc: 10
            toolchain: chibios-clang
          - gcc: 6
            config: fmuv2-plane
          - gcc: 6
            config: revo-mini
          - gcc: 6
            config: MatekF405-Wing
          - gcc: 6
            config: periph-build
          - gcc: 6
            config: CubeOrange-ODID
          - gcc: 6
            config: signing
          - gcc: 6
            config: fmuv3-bootloader
        include:
          - config: stm32h7
            toolchain: chibios-py2

    steps:
      # git checkout the PR
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      # Put ccache into github cache for faster build
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        run: |
          NOW=$(date -u +"%F-%T")
          echo "::set-output name=timestamp::${NOW}"
      - name: ccache cache files
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{github.workflow}}-ccache-${{matrix.config}}-${{ matrix.toolchain }}-${{ matrix.gcc }}-${{steps.ccache_cache_timestamp.outputs.timestamp}}
          restore-keys: ${{github.workflow}}-ccache-${{matrix.config}}-${{ matrix.toolchain }}-${{ matrix.gcc }}  # restore ccache from either previous build on this branch or on master
      - name: setup ccache
        run: |
          . .github/workflows/ccache.env
      - name: test ${{matrix.config}} ${{ matrix.toolchain }} gcc-${{matrix.gcc}}
        env:
          CI_BUILD_TARGET: ${{matrix.config}}
        shell: bash
        run: |
          if [[ ${{ matrix.toolchain }} == "chibios-clang" ]]; then
            export CC=clang
            export CXX=clang++
          fi
          PATH="/usr/lib/ccache:/opt/gcc-arm-none-eabi-${{matrix.gcc}}/bin:$PATH"
          PATH="/github/home/.local/bin:$PATH"
          Tools/scripts/build_ci.sh
          ccache -s
          ccache -z
